<haxe>
	<abstract path="Any" params="" file="/usr/share/haxe/std/Any.hx">
		<from><icast field="__cast"><c path="__cast.T"/></icast></from>
		<this><d/></this>
		<to><icast field="__promote"><c path="__promote.T"/></icast></to>
		<haxe_doc>`Any` is a type that is compatible with any other in both ways.

	This means that a value of any type can be assigned to `Any`, and
	vice-versa, a value of `Any` type can be assigned to any other type.

	It's a more type-safe alternative to `Dynamic`, because it doesn't
	support field access or operators and it's bound to monomorphs. So,
	to work with the actual value, it needs to be explicitly promoted
	to another type.</haxe_doc>
		<impl><class path="_Any.Any_Impl_" params="" file="/usr/share/haxe/std/Any.hx" private="1" module="Any"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="Array" params="T" file="/usr/share/haxe/std/Array.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` Array.</haxe_doc>
		</length>
		<concat public="1" set="method">
			<f a="a">
				<c path="Array"><c path="Array.T"/></c>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Returns a new Array by appending the elements of `a` to the elements of
		`this` Array.

		This operation does not modify `this` Array.

		If `a` is the empty Array `[]`, a copy of `this` Array is returned.

		The length of the returned Array is equal to the sum of `this.length`
		and `a.length`.

		If `a` is `null`, the result is unspecified.</haxe_doc>
		</concat>
		<join public="1" set="method">
			<f a="sep">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a string representation of `this` Array, with `sep` separating
		each element.

		The result of this operation is equal to `Std.string(this[0]) + sep +
		Std.string(this[1]) + sep + ... + sep + Std.string(this[this.length-1])`

		If `this` is the empty Array `[]`, the result is the empty String `""`.
		If `this` has exactly one element, the result is equal to a call to
		`Std.string(this[0])`.

		If `sep` is null, the result is unspecified.</haxe_doc>
		</join>
		<pop public="1" set="method">
			<f a=""><t path="Null"><c path="Array.T"/></t></f>
			<haxe_doc>Removes the last element of `this` Array and returns it.

		This operation modifies `this` Array in place.

		If `this` has at least one element, `this.length` will decrease by 1.

		If `this` is the empty Array `[]`, null is returned and the length
		remains 0.</haxe_doc>
		</pop>
		<push public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Adds the element `x` at the end of `this` Array and returns the new
		length of `this` Array.

		This operation modifies `this` Array in place.

		`this.length` increases by 1.</haxe_doc>
		</push>
		<reverse public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[Reverse the order of elements of `this` Array.

		This operation modifies `this` Array in place.

		If `this.length < 2`, `this` remains unchanged.]]></haxe_doc>
		</reverse>
		<shift public="1" set="method">
			<f a=""><t path="Null"><c path="Array.T"/></t></f>
			<haxe_doc>Removes the first element of `this` Array and returns it.

		This operation modifies `this` Array in place.

		If `this` has at least one element, `this`.length and the index of each
		remaining element is decreased by 1.

		If `this` is the empty Array `[]`, `null` is returned and the length
		remains 0.</haxe_doc>
		</shift>
		<slice public="1" set="method">
			<f a="pos:?end">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Creates a shallow copy of the range of `this` Array, starting at and
		including `pos`, up to but not including `end`.

		This operation does not modify `this` Array.

		The elements are not copied and retain their identity.

		If `end` is omitted or exceeds `this.length`, it defaults to the end of
		`this` Array.

		If `pos` or `end` are negative, their offsets are calculated from the
		end of `this` Array by `this.length + pos` and `this.length + end`
		respectively. If this yields a negative value, 0 is used instead.

		If `pos` exceeds `this.length` or if `end` is less than or equals
		`pos`, the result is `[]`.</haxe_doc>
		</slice>
		<sort public="1" set="method">
			<f a="f">
				<f a=":">
					<c path="Array.T"/>
					<c path="Array.T"/>
					<x path="Int"/>
				</f>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[Sorts `this` Array according to the comparison function `f`, where
		`f(x,y)` returns 0 if x == y, a positive Int if x > y and a
		negative Int if x < y.

		This operation modifies `this` Array in place.

		The sort operation is not guaranteed to be stable, which means that the
		order of equal elements may not be retained. For a stable Array sorting
		algorithm, `haxe.ds.ArraySort.sort()` can be used instead.

		If `f` is null, the result is unspecified.]]></haxe_doc>
		</sort>
		<splice public="1" set="method">
			<f a="pos:len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc><![CDATA[Removes `len` elements from `this` Array, starting at and including
		`pos`, an returns them.

		This operation modifies `this` Array in place.

		If `len` is < 0 or `pos` exceeds `this`.length, an empty Array [] is 
		returned and `this` Array is unchanged.

		If `pos` is negative, its value is calculated from the end	of `this`
		Array by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the sum of the resulting values for `len` and `pos` exceed
		`this.length`, this operation will affect the elements from `pos` to the
		end of `this` Array.

		The length of the returned Array is equal to the new length of `this`
		Array subtracted from the original length of `this` Array. In other
		words, each element of the original `this` Array either remains in
		`this` Array or becomes an element of the returned Array.]]></haxe_doc>
		</splice>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representation of `this` Array.

		The result will include the individual elements' String representations
		separated by comma. The enclosing [ ] may be missing on some platforms,
		use `Std.string()` to get a String representation that is consistent
		across platforms.</haxe_doc>
		</toString>
		<unshift public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds the element `x` at the start of `this` Array.

		This operation modifies `this` Array in place.

		`this.length` and the index of each Array element increases by 1.</haxe_doc>
		</unshift>
		<insert public="1" set="method">
			<f a="pos:x">
				<x path="Int"/>
				<c path="Array.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Inserts the element `x` at the position `pos`.

		This operation modifies `this` Array in place.

		The offset is calculated like so:

		- If `pos` exceeds `this.length`, the offset is `this.length`.
		- If `pos` is negative, the offset is calculated from the end of `this`
		  Array, i.e. `this.length + pos`. If this yields a negative value, the
		  offset is 0.
		- Otherwise, the offset is `pos`.

		If the resulting offset does not exceed `this.length`, all elements from
		and including that offset to the end of `this` Array are moved one index
		ahead.</haxe_doc>
		</insert>
		<remove public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Removes the first occurrence of `x` in `this` Array.

		This operation modifies `this` Array in place.

		If `x` is found by checking standard equality, it is removed from `this`
		Array and all following elements are reindexed accordingly. The function
		then returns true.

		If `x` is not found, `this` Array is not changed and the function
		returns false.</haxe_doc>
		</remove>
		<indexOf public="1" set="method">
			<f a="x:?fromIndex">
				<c path="Array.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns position of the first occurrence of `x` in `this` Array, searching front to back.

		If `x` is found by checking standard equality, the function returns its index.

		If `x` is not found, the function returns -1.

		If `fromIndex` is specified, it will be used as the starting index to search from,
		otherwise search starts with zero index. If it is negative, it will be taken as the
		offset from the end of `this` Array to compute the starting index. If given or computed
		starting index is less than 0, the whole array will be searched, if it is greater than
		or equal to the length of `this` Array, the function returns -1.</haxe_doc>
		</indexOf>
		<lastIndexOf public="1" set="method">
			<f a="x:?fromIndex">
				<c path="Array.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns position of the last occurrence of `x` in `this` Array, searching back to front.

		If `x` is found by checking standard equality, the function returns its index.

		If `x` is not found, the function returns -1.

		If `fromIndex` is specified, it will be used as the starting index to search from,
		otherwise search starts with the last element index. If it is negative, it will be
		taken as the offset from the end of `this` Array to compute the starting index. If
		given or computed starting index is greater than or equal to the length of `this` Array,
		the whole array will be searched, if it is less than 0, the function returns -1.</haxe_doc>
		</lastIndexOf>
		<copy public="1" set="method">
			<f a=""><c path="Array"><c path="Array.T"/></c></f>
			<haxe_doc>Returns a shallow copy of `this` Array.

		The elements are not copied and retain their identity, so
		`a[i] == a.copy()[i]` is true for any valid `i`. However,
		`a == a.copy()` is always false.</haxe_doc>
		</copy>
		<iterator public="1" set="method">
			<f a=""><t path="Iterator"><c path="Array.T"/></t></f>
			<haxe_doc>Returns an iterator of the Array values.</haxe_doc>
		</iterator>
		<map public="1" params="S" set="method">
			<f a="f">
				<f a="">
					<c path="Array.T"/>
					<c path="map.S"/>
				</f>
				<c path="Array"><c path="map.S"/></c>
			</f>
			<haxe_doc>Creates a new Array by applying function `f` to all elements of `this`.

		The order of elements is preserved.

		If `f` is null, the result is unspecified.</haxe_doc>
		</map>
		<filter public="1" set="method">
			<f a="f">
				<f a="">
					<c path="Array.T"/>
					<x path="Bool"/>
				</f>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Returns an Array containing those elements of `this` for which `f`
		returned true.

		The individual elements are not duplicated and retain their identity.

		If `f` is null, the result is unspecified.</haxe_doc>
		</filter>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Array.</haxe_doc>
		</new>
		<haxe_doc>An Array is a storage for values. You can access it using indexes or
	with its API.

	@see https://haxe.org/manual/std-Array.html
	@see https://haxe.org/manual/lf-array-comprehension.html</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="Class" params="T" file="/usr/share/haxe/std/Class.hx">
		<this><x path="Class"><c path="Class.T"/></x></this>
		<haxe_doc>An abstract type that represents a Class.

	See `Type` for the Haxe Reflection API.

	@see https://haxe.org/manual/types-class-instance.html</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<class path="Date" params="" file="/usr/share/haxe/std/Date.hx" extern="1">
		<now public="1" set="method" static="1">
			<f a=""><c path="Date"/></f>
			<haxe_doc>Returns a Date representing the current local time.</haxe_doc>
		</now>
		<fromTime public="1" set="method" static="1">
			<f a="t">
				<x path="Float"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from timestamp `t`.</haxe_doc>
		</fromTime>
		<fromString public="1" set="method" static="1">
			<f a="s">
				<c path="String"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from a formated string `s`, with the following accepted
		formats:

		- `"YYYY-MM-DD hh:mm:ss"`
		- `"YYYY-MM-DD"`
		- `"hh:mm:ss"`

		The first two formats are expressed in local time, the third in UTC
		Epoch.</haxe_doc>
		</fromString>
		<getTime public="1" set="method">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns the timestamp (in milliseconds) of the date. It might
		only have a per-second precision depending on the platforms.</haxe_doc>
		</getTime>
		<getHours public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the hours of `this` Date (0-23 range).</haxe_doc>
		</getHours>
		<getMinutes public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the minutes of `this` Date (0-59 range).</haxe_doc>
		</getMinutes>
		<getSeconds public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the seconds of `this` Date (0-59 range).</haxe_doc>
		</getSeconds>
		<getFullYear public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the full year of `this` Date (4-digits).</haxe_doc>
		</getFullYear>
		<getMonth public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the month of `this` Date (0-11 range).</haxe_doc>
		</getMonth>
		<getDate public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of `this` Date (1-31 range).</haxe_doc>
		</getDate>
		<getDay public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of the week of `this` Date (0-6 range) where `0` is Sunday.</haxe_doc>
		</getDay>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representation of `this` Date, by using the
		standard format [YYYY-MM-DD HH:MM:SS]. See `DateTools.format` for
		other formating rules.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="year:month:day:hour:min:sec">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new date object from the given arguments.

		The behaviour of a Date instance is only consistent across platforms if
		the the arguments describe a valid date.

		- month: 0 to 11
		- day: 1 to 31
		- hour: 0 to 23
		- min: 0 to 59
		- sec: 0 to 59</haxe_doc>
		</new>
		<haxe_doc>The Date class provides a basic structure for date and time related
	information. Date instances can be created by

	- `new Date()` for a specific date,
	- `Date.now()` to obtain information about the current time,
	- `Date.fromTime()` with a given timestamp or
	- `Date.fromString()` by parsing from a String.

	There are some extra functions available in the `DateTools` class.

	In the context of Haxe dates, a timestamp is defined as the number of
	milliseconds elapsed since 1st January 1970.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="EReg" params="" file="/usr/share/haxe/std/flash/_std/EReg.hx">
		<r><c path="flash.utils.RegExp"/></r>
		<result><d/></result>
		<match public="1" set="method" line="31">
			<f a="s">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `this` regular expression matches String `s`.

		This method modifies the internal state.

		If `s` is `null`, the result is unspecified.</haxe_doc>
		</match>
		<matched public="1" set="method" line="37">
			<f a="n">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the matched sub-group `n` of `this` EReg.

		This method should only be called after `this.match` or
		`this.matchSub`, and then operates on the String of that operation.

		The index `n` corresponds to the n-th set of parentheses in the pattern
		of `this` EReg. If no such sub-group exists, an exception is thrown.

		If `n` equals 0, the whole matched substring is returned.</haxe_doc>
		</matched>
		<matchedRight public="1" set="method" line="47">
			<f a=""><c path="String"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the part to the right of the last matched substring.

		If the most recent call to `this.match` or `this.matchSub` did not
		match anything, the result is unspecified.

		If the global g modifier was in place for the matching, only the
		substring to the right of the leftmost match is returned.

		The result does not include the matched part.</haxe_doc>
		</matchedRight>
		<matchedPos public="1" set="method" line="54">
			<f a=""><a>
	<pos><x path="Int"/></pos>
	<len><x path="Int"/></len>
</a></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the position and length of the last matched substring, within
		the String which was last used as argument to `this.match` or
		`this.matchSub`.

		If the most recent call to `this.match` or `this.matchSub` did not
		match anything, the result is unspecified.

		If the global g modifier was in place for the matching, the position and
		length of the leftmost substring is returned.</haxe_doc>
		</matchedPos>
		<new public="1" set="method" line="27">
			<f a="r:opt">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new regular expression with pattern `r` and modifiers `opt`.

		This is equivalent to the shorthand syntax `~/r/opt`

		If `r` or `opt` are null, the result is unspecified.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The EReg class represents regular expressions.

	While basic usage and patterns consistently work across platforms, some more
	complex operations may yield different results. This is a necessary trade-
	off to retain a certain level of performance.

	EReg instances can be created by calling the constructor, or with the
	special syntax `~/pattern/modifier`

	EReg instances maintain an internal state, which is affected by several of
	its methods.

	A detailed explanation of the supported operations is available at
	<https://haxe.org/manual/std-regex.html>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Enum" params="T" file="/usr/share/haxe/std/Enum.hx">
		<this><x path="Enum"><c path="Enum.T"/></x></this>
		<haxe_doc>An abstract type that represents an Enum type.

	The corresponding enum instance type is `EnumValue`.

	See `Type` for the Haxe Reflection API.

	@see https://haxe.org/manual/types-enum-instance.html</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="EnumValue" params="" file="/usr/share/haxe/std/EnumValue.hx">
		<this><x path="EnumValue"/></this>
		<haxe_doc>An abstract type that represents any enum value.
	See `Type` for the Haxe Reflection API.

	@see https://haxe.org/manual/types-enum-instance.html</haxe_doc>
		<meta><m n=":coreType"/></meta>
	</abstract>
	<class path="List" params="T" file="/usr/share/haxe/std/List.hx">
		<h><c path="_List.ListNode"><c path="List.T"/></c></h>
		<q><c path="_List.ListNode"><c path="List.T"/></c></q>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` List.</haxe_doc>
		</length>
		<add public="1" set="method" line="52">
			<f a="item">
				<c path="List.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds element `item` at the end of `this` List.

		`this.length` increases by 1.</haxe_doc>
		</add>
		<push public="1" set="method" line="67">
			<f a="item">
				<c path="List.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds element `item` at the beginning of `this` List.

		`this.length` increases by 1.</haxe_doc>
		</push>
		<first public="1" set="method" line="80">
			<f a=""><t path="Null"><c path="List.T"/></t></f>
			<haxe_doc>Returns the first element of `this` List, or null if no elements exist.

		This function does not modify `this` List.</haxe_doc>
		</first>
		<pop public="1" set="method" line="99">
			<f a=""><t path="Null"><c path="List.T"/></t></f>
			<haxe_doc>Returns the first element of `this` List, or null if no elements exist.

		The element is removed from `this` List.</haxe_doc>
		</pop>
		<isEmpty public="1" set="method" line="113">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>Tells if `this` List is empty.</haxe_doc>
		</isEmpty>
		<clear public="1" set="method" line="123">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Empties `this` List.

		This function does not traverse the elements, but simply sets the
		internal references to null and `this.length` to 0.</haxe_doc>
		</clear>
		<remove public="1" set="method" line="137">
			<f a="v">
				<c path="List.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Removes the first occurrence of `v` in `this` List.

		If `v` is found by checking standard equality, it is removed from `this`
		List and the function returns true.

		Otherwise, false is returned.</haxe_doc>
		</remove>
		<iterator public="1" get="inline" set="null" line="160">
			<f a=""><c path="_List.ListIterator"><c path="List.T"/></c></f>
			<haxe_doc>Returns an iterator on the elements of the list.</haxe_doc>
		</iterator>
		<new public="1" set="method" line="43">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new empty list.</haxe_doc>
		</new>
		<haxe_doc>A linked-list of elements. The list is composed of element container objects
	that are chained together. It is optimized so that adding or removing an
	element does not imply copying the whole list content every time.

	@see https://haxe.org/manual/std-List.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="_List.ListNode" params="T" file="/usr/share/haxe/std/List.hx" private="1" module="List">
		<item public="1"><c path="_List.ListNode.T"/></item>
		<next public="1"><c path="_List.ListNode"><c path="_List.ListNode.T"/></c></next>
		<new public="1" set="method" line="255"><f a="item:next">
	<c path="_List.ListNode.T"/>
	<c path="_List.ListNode"><c path="_List.ListNode.T"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="_List.ListIterator" params="T" file="/usr/share/haxe/std/List.hx" private="1" module="List">
		<head><c path="_List.ListNode"><c path="_List.ListIterator.T"/></c></head>
		<hasNext public="1" get="inline" set="null" line="272"><f a=""><x path="Bool"/></f></hasNext>
		<next public="1" get="inline" set="null" line="276"><f a=""><c path="_List.ListIterator.T"/></f></next>
		<new public="1" get="inline" set="null" line="268"><f a="head">
	<c path="_List.ListNode"><c path="_List.ListIterator.T"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<abstract path="Map" params="K:V" file="/usr/share/haxe/std/Map.hx">
		<from>
			<icast field="fromStringMap"><c path="haxe.ds.StringMap"><c path="fromStringMap.V"/></c></icast>
			<icast field="fromIntMap"><c path="haxe.ds.IntMap"><c path="fromIntMap.V"/></c></icast>
			<icast field="fromObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="fromObjectMap.K"/>
	<c path="fromObjectMap.V"/>
</c></icast>
		</from>
		<this><t path="IMap">
	<c path="Map.K"/>
	<c path="Map.V"/>
</t></this>
		<to>
			<icast field="toStringMap"><c path="haxe.ds.StringMap"><c path="toStringMap.V"/></c></icast>
			<icast field="toIntMap"><c path="haxe.ds.IntMap"><c path="toIntMap.V"/></c></icast>
			<icast field="toEnumValueMapMap"><c path="haxe.ds.EnumValueMap">
	<c path="toEnumValueMapMap.K"/>
	<c path="toEnumValueMapMap.V"/>
</c></icast>
			<icast field="toObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="toObjectMap.K"/>
	<c path="toObjectMap.V"/>
</c></icast>
		</to>
		<haxe_doc><![CDATA[Map allows key to value mapping for arbitrary value types, and many key
	types.

	This is a multi-type abstract, it is instantiated as one of its
	specialization types depending on its type parameters.

	A Map can be instantiated without explicit type parameters. Type inference
	will then determine the type parameters from the usage.

	Maps can also be created with `key1 => value1, key2 => value2` syntax.

	Map is an abstract type, it is not available at runtime.

	@see https://haxe.org/manual/std-Map.html]]></haxe_doc>
		<meta><m n=":multiType"><e>@:followWithAbstracts K</e></m></meta>
		<impl><class path="_Map.Map_Impl_" params="" file="/usr/share/haxe/std/Map.hx" private="1" module="Map"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<typedef path="IMap" params="K:V" file="/usr/share/haxe/std/Map.hx" module="Map">
		<c path="haxe.IMap">
			<c path="IMap.K"/>
			<c path="IMap.V"/>
		</c>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":deprecated"/>
		</meta>
	</typedef>
	<class path="Math" params="" file="/usr/share/haxe/std/Math.hx" extern="1">
		<PI public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>Represents the ratio of the circumference of a circle to its diameter,
		specified by the constant, π. `PI` is approximately 3.141592653589793.</haxe_doc>
		</PI>
		<NEGATIVE_INFINITY public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special `Float` constant which denotes negative infinity.

		For example, this is the result of -1.0 / 0.0.

		Operations with `NEGATIVE_INFINITY` as an operand may result in
		`NEGATIVE_INFINITY`, `POSITIVE_INFINITY` or `NaN`.

		If this constant is converted to an `Int`, e.g. through `Std.int()`, the
		result is unspecified.</haxe_doc>
		</NEGATIVE_INFINITY>
		<POSITIVE_INFINITY public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special `Float` constant which denotes positive infinity.

		For example, this is the result of 1.0 / 0.0.

		Operations with `POSITIVE_INFINITY` as an operand may result in
		`NEGATIVE_INFINITY`, `POSITIVE_INFINITY` or `NaN`.

		If this constant is converted to an `Int`, e.g. through `Std.int()`, the
		result is unspecified.</haxe_doc>
		</POSITIVE_INFINITY>
		<NaN public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[A special `Float` constant which denotes an invalid number.

		NaN stands for "Not a Number". It occurs when a mathematically incorrect
		operation is executed, such as taking the square root of a negative
		number: Math.sqrt(-1).

		All further operations with `NaN` as an operand will result in `NaN`.

		If this constant is converted to an `Int`, e.g. through `Std.int()`, the
		result is unspecified.

		In order to test if a value is `NaN`, you should use `Math.isNaN()` function.

		@php In PHP versions prior to 5.3.1 VC 9 there may be unexpected
		results when performing arithmetic operations with `NaN` on Windows,
		see <https://bugs.php.net/bug.php?id=42143>]]></haxe_doc>
		</NaN>
		<abs public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the absolute value of `v`.

		If `v` is positive or 0, the result is unchanged. Otherwise the result
		is -`v`.

		If `v` is `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`, the result is
		`POSITIVE_INFINITY`.

		If `v` is `NaN`, the result is `NaN`.</haxe_doc>
		</abs>
		<min public="1" set="method" static="1">
			<f a="a:b">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the smaller of values `a` and `b`.

		If `a` or `b` are `NaN`, the result is `NaN`.
		If `a` or `b` are `NEGATIVE_INFINITY`, the result is `NEGATIVE_INFINITY`.
		If `a` and `b` are `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.</haxe_doc>
		</min>
		<max public="1" set="method" static="1">
			<f a="a:b">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the greater of values `a` and `b`.

		If `a` or `b` are `NaN`, the result is `NaN`.
		If `a` or `b` are `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.
		If `a` and `b` are `NEGATIVE_INFINITY`, the result is `NEGATIVE_INFINITY`.</haxe_doc>
		</max>
		<sin public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric sine of the specified angle `v`, in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</sin>
		<cos public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric cosine of the specified angle `v`, in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</cos>
		<tan public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric tangent of the specified angle `v`, in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</tan>
		<asin public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc of the specified angle `v`, in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</asin>
		<acos public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc cosine of the specified angle `v`,
		in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</acos>
		<atan public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc tangent of the specified angle `v`,
		in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</atan>
		<atan2 public="1" set="method" static="1">
			<f a="y:x">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc tangent whose tangent is the quotient of
		two specified numbers, in radians.

		If parameter `x` or `y`  is `NaN`, `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`,
		the result is `NaN`.</haxe_doc>
		</atan2>
		<exp public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns Euler's number, raised to the power of `v`.

		exp(1.0) is approximately 2.718281828459.

		If `v` is `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.
		If `v` is `NEGATIVE_INFINITY`, the result is `0.0`.
		If `v` is `NaN`, the result is `NaN`.</haxe_doc>
		</exp>
		<log public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the natural logarithm of `v`.

		This is the mathematical inverse operation of exp,
		i.e. `log(exp(v)) == v` always holds.

		If `v` is negative (including `NEGATIVE_INFINITY`) or `NaN`, the result
		is `NaN`.
		If `v` is `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.
		If `v` is `0.0`, the result is `NEGATIVE_INFINITY`.</haxe_doc>
		</log>
		<pow public="1" set="method" static="1">
			<f a="v:exp">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns a specified base `v` raised to the specified power `exp`.</haxe_doc>
		</pow>
		<sqrt public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the square root of `v`.

		If `v` is negative (including `NEGATIVE_INFINITY`) or `NaN`, the result
		is `NaN`.
		If `v` is `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.
		If `v` is `0.0`, the result is `0.0`.</haxe_doc>
		</sqrt>
		<round public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Rounds `v` to the nearest integer value.

		Ties are rounded up, so that `0.5` becomes `1` and `-0.5` becomes `0`.

		If `v` is outside of the signed `Int32` range, or is `NaN`, `NEGATIVE_INFINITY`
		or `POSITIVE_INFINITY`, the result is unspecified.</haxe_doc>
		</round>
		<floor public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the largest integer value that is not greater than `v`.

		If `v` is outside of the signed `Int32` range, or is `NaN`, `NEGATIVE_INFINITY`
		or `POSITIVE_INFINITY`, the result is unspecified.</haxe_doc>
		</floor>
		<ceil public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the smallest integer value that is not less than `v`.

		If `v` is outside of the signed `Int32` range, or is `NaN`, `NEGATIVE_INFINITY`
		or `POSITIVE_INFINITY`, the result is unspecified.</haxe_doc>
		</ceil>
		<random public="1" set="method" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns a pseudo-random number which is greater than or equal to 0.0,
		and less than 1.0.</haxe_doc>
		</random>
		<ffloor public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the largest integer value that is not greater than `v`, as a `Float`.

		If `v` is is `NaN`, `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`,
		the result is unspecified.</haxe_doc>
		</ffloor>
		<fceil public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the smallest integer value that is not less than `v`, as a `Float`.

		If `v` is is `NaN`, `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`,
		the result is unspecified.</haxe_doc>
		</fceil>
		<fround public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Rounds `v` to the nearest integer value, as a Float.

		Ties are rounded up, so that `0.5` becomes `1` and `-0.5` becomes `0`.

		If `v` is is `NaN`, `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`,
		the result is unspecified.</haxe_doc>
		</fround>
		<isFinite public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `f` is a finite number.

		If `f` is `POSITIVE_INFINITY`, `NEGATIVE_INFINITY` or `NaN`, the result
		is `false`, otherwise the result is `true`.</haxe_doc>
		</isFinite>
		<isNaN public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `f` is not a valid number.

		If `f` is `NaN`, the result is `true`, otherwise the result is `false`.
		In particular, both `POSITIVE_INFINITY` and `NEGATIVE_INFINITY` are
		not considered `NaN`.</haxe_doc>
		</isNaN>
		<haxe_doc>This class defines mathematical functions and constants.

	@see https://haxe.org/manual/std-math.html</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="Reflect" params="" file="/usr/share/haxe/std/flash/_std/Reflect.hx">
		<hasField public="1" set="method" line="24" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Tells if structure `o` has a field named `field`.

		This is only guaranteed to work for anonymous structures. Refer to
		`Type.getInstanceFields` for a function supporting class instances.

		If `o` or `field` are null, the result is unspecified.</haxe_doc>
		</hasField>
		<field public="1" set="method" line="28" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the value of the field named `field` on object `o`.

		If `o` is not an object or has no field named `field`, the result is
		null.

		If the field is defined as a property, its accessors are ignored. Refer
		to `Reflect.getProperty` for a function supporting property accessors.

		If `field` is null, the result is unspecified.

		(As3) If used on a property field, the getter will be invoked. It is
		not possible to obtain the value directly.</haxe_doc>
		</field>
		<getProperty public="1" set="method" line="37" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the value of the field named `field` on object `o`, taking
		property getter functions into account.

		If the field is not a property, this function behaves like
		`Reflect.field`, but might be slower.

		If `o` or `field` are null, the result is unspecified.</haxe_doc>
		</getProperty>
		<fields public="1" set="method" line="59" static="1">
			<f a="o">
				<d/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the fields of structure `o`.

		This method is only guaranteed to work on anonymous structures. Refer to
		`Type.getInstanceFields` for a function supporting class instances.

		If `o` is null, the result is unspecified.</haxe_doc>
		</fields>
		<isFunction public="1" set="method" line="82" static="1">
			<f a="f">
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns true if `f` is a function, false otherwise.

		If `f` is null, the result is false.</haxe_doc>
		</isFunction>
		<compare public="1" params="T" set="method" line="86" static="1">
			<f a="a:b">
				<c path="compare.T"/>
				<c path="compare.T"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Compares `a` and `b`.

		If `a` is less than `b`, the result is negative. If `b` is less than
		`a`, the result is positive. If `a` and `b` are equal, the result is 0.

		This function is only defined if `a` and `b` are of the same type.

		If that type is a function, the result is unspecified and
		`Reflect.compareMethods` should be used instead.

		For all other types, the result is 0 if `a` and `b` are equal. If they
		are not equal, the result depends on the type and is negative if:

		- Numeric types: a is less than b
		- String: a is lexicographically less than b
		- Other: unspecified

		If `a` and `b` are null, the result is 0. If only one of them is null,
		the result is unspecified.</haxe_doc>
		</compare>
		<compareMethods public="1" set="method" line="92" static="1">
			<f a="f1:f2">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Compares the functions `f1` and `f2`.

		If `f1` or `f2` are not functions, the result is unspecified.

		Otherwise the result is true if `f1` and the `f2` are physically equal,
		false otherwise.</haxe_doc>
		</compareMethods>
		<isEnumValue public="1" set="method" line="106" static="1">
			<f a="v">
				<d/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `v` is an enum value.

		The result is true if `v` is of type EnumValue, i.e. an enum
		constructor.

		Otherwise, including if `v` is null, the result is false.</haxe_doc>
		</isEnumValue>
		<makeVarArgs public="1" set="method" line="128" static="1">
			<f a="f">
				<f a="">
					<c path="Array"><d/></c>
					<d/>
				</f>
				<d/>
			</f>
			<haxe_doc>Transform a function taking an array of arguments into a function that can
		be called with any number of arguments.</haxe_doc>
			<overloads><makeVarArgs public="1" set="method"><f a="f">
	<f a="">
		<c path="Array"><d/></c>
		<x path="Void"/>
	</f>
	<d/>
</f></makeVarArgs></overloads>
		</makeVarArgs>
		<haxe_doc>The Reflect API is a way to manipulate values dynamically through an
	abstract interface in an untyped manner. Use with care.

	@see https://haxe.org/manual/std-reflection.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="Std" params="" file="/usr/share/haxe/std/flash/_std/Std.hx">
		<is public="1" set="method" line="26" static="1">
			<f a="v:t">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Tells if a value `v` is of the type `t`. Returns `false` if `v` or `t` are null.</haxe_doc>
		</is>
		<string public="1" set="method" line="34" static="1">
			<f a="s">
				<d/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Converts any value to a String.

		If `s` is of `String`, `Int`, `Float` or `Bool`, its value is returned.

		If `s` is an instance of a class and that class or one of its parent classes has
		a `toString` method, that method is called. If no such method is present, the result
		is unspecified.

		If `s` is an enum constructor without argument, the constructor's name is returned. If
		arguments exists, the constructor's name followed by the String representations of
		the arguments is returned.

		If `s` is a structure, the field names along with their values are returned. The field order
		and the operator separating field names and values are unspecified.

		If s is null, "null" is returned.</haxe_doc>
		</string>
		<parseInt public="1" set="method" line="42" static="1">
			<f a="x">
				<c path="String"/>
				<t path="Null"><x path="Int"/></t>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Converts a `String` to an `Int`.

		Leading whitespaces are ignored.

		If `x` starts with 0x or 0X, hexadecimal notation is recognized where the following digits may
		contain 0-9 and A-F.

		Otherwise `x` is read as decimal number with 0-9 being allowed characters. `x` may also start with
		a - to denote a negative value.

		In decimal mode, parsing continues until an invalid character is detected, in which case the
		result up to that point is returned. For hexadecimal notation, the effect of invalid characters
		is unspecified.

		Leading 0s that are not part of the 0x/0X hexadecimal notation are ignored, which means octal
		notation is not supported.

		If the input cannot be recognized, the result is `null`.</haxe_doc>
		</parseInt>
		<parseFloat public="1" set="method" line="49" static="1">
			<f a="x">
				<c path="String"/>
				<x path="Float"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Converts a `String` to a `Float`.

		The parsing rules for `parseInt` apply here as well, with the exception of invalid input
		resulting in a `NaN` value instead of null.

		Additionally, decimal notation may contain a single `.` to denote the start of the fractions.</haxe_doc>
		</parseFloat>
		<haxe_doc>The Std class provides standard methods for manipulating basic types.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Void" params="" file="/usr/share/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Void"/></this>
		<haxe_doc>The standard `Void` type. Only `null` values can be of the type `Void`.

	@see https://haxe.org/manual/types-void.html</haxe_doc>
		<meta><m n=":coreType"/></meta>
	</abstract>
	<abstract path="Float" params="" file="/usr/share/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Float"/></this>
		<haxe_doc><![CDATA[The standard `Float` type, this is a double-precision IEEE 64bit float.

	On static targets, `null` cannot be assigned to Float. If this is necessary,
	`Null<Float>` can be used instead.

	`Std.int` converts a `Float` to an `Int`, rounded towards 0.
	`Std.parseFloat` converts a `String` to a `Float`.

	@see https://haxe.org/manual/types-basic-types.html
	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Int" params="" file="/usr/share/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Int"/></this>
		<to><icast><x path="Float"/></icast></to>
		<haxe_doc><![CDATA[The standard `Int` type. Its precision depends on the platform.

	On static targets, `null` cannot be assigned to `Int`. If this is necessary,
	`Null<Int>` can be used instead.

	`Std.int` converts a `Float` to an `Int`, rounded towards 0.
	`Std.parseInt` converts a `String` to an `Int`.

	@see https://haxe.org/manual/types-basic-types.html
	@see https://haxe.org/manual/std-math-integer-math.html
	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<typedef path="Null" params="T" file="/usr/share/haxe/std/StdTypes.hx" module="StdTypes">
		<c path="Null.T"/>
		<haxe_doc>`Null` can be useful in two cases. In order to document some methods
	that accept or can return a `null` value, or for the Flash compiler and AS3
	generator to distinguish between base values that can be `null` and others that
	can't.

	@see https://haxe.org/manual/types-nullability.html</haxe_doc>
	</typedef>
	<abstract path="Bool" params="" file="/usr/share/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Bool"/></this>
		<haxe_doc><![CDATA[The standard Boolean type, which can either be `true` or `false`.

	On static targets, `null` cannot be assigned to `Bool`. If this is necessary,
	`Null<Bool>` can be used instead.

	@see https://haxe.org/manual/types-bool.html
	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Dynamic" params="T" file="/usr/share/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Dynamic"><c path="Dynamic.T"/></x></this>
		<haxe_doc>`Dynamic` is a special type which is compatible with all other types.

	Use of `Dynamic` should be minimized as it prevents several compiler
	checks and optimizations. See `Any` type for a safer alternative for
	representing values of any type.

	@see https://haxe.org/manual/types-dynamic.html</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<typedef path="Iterator" params="T" file="/usr/share/haxe/std/StdTypes.hx" module="StdTypes">
		<a>
			<next set="method">
				<f a=""><c path="Iterator.T"/></f>
				<haxe_doc>Returns the current item of the `Iterator` and advances to the next one.

		This method is not required to check `hasNext()` first. A call to this
		method while `hasNext()` is `false` yields unspecified behavior.

		On the other hand, iterators should not require a call to `hasNext()`
		before the first call to `next()` if an element is available.</haxe_doc>
			</next>
			<hasNext set="method">
				<f a=""><x path="Bool"/></f>
				<haxe_doc>Returns `false` if the iteration is complete, `true` otherwise.

		Usually iteration is considered to be complete if all elements of the
		underlying data structure were handled through calls to `next()`. However,
		in custom iterators any logic may be used to determine the completion
		state.</haxe_doc>
			</hasNext>
		</a>
		<haxe_doc>An `Iterator` is a structure that permits iteration over elements of type `T`.

	Any class with matching `hasNext()` and `next()` fields is considered an `Iterator`
	and can then be used e.g. in `for`-loops. This makes it easy to implement
	custom iterators.

	@see https://haxe.org/manual/lf-iterators.html</haxe_doc>
	</typedef>
	<typedef path="Iterable" params="T" file="/usr/share/haxe/std/StdTypes.hx" module="StdTypes">
		<a><iterator set="method"><f a=""><t path="Iterator"><c path="Iterable.T"/></t></f></iterator></a>
		<haxe_doc>An `Iterable` is a data structure which has an `iterator()` method.
	See `Lambda` for generic functions on iterable structures.

	@see https://haxe.org/manual/lf-iterators.html</haxe_doc>
	</typedef>
	<class path="ArrayAccess" params="T" file="/usr/share/haxe/std/StdTypes.hx" module="StdTypes" extern="1" interface="1"><haxe_doc>`ArrayAccess` is used to indicate a class that can be accessed using brackets.
	The type parameter represents the type of the elements stored.

	This interface should be used for externs only. Haxe does not support custom
	array access on classes. However, array access can be implemented for
	abstract types.

	@see https://haxe.org/manual/types-abstract-array-access.html</haxe_doc></class>
	<class path="String" params="" file="/usr/share/haxe/std/String.hx" extern="1">
		<fromCharCode public="1" set="method" static="1">
			<f a="code">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the String corresponding to the character code `code`.

		If `code` is negative or has another invalid value, the result is
		unspecified.</haxe_doc>
		</fromCharCode>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of characters in `this` String.</haxe_doc>
		</length>
		<toUpperCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are upper case.

		Affects the characters `a-z`. Other characters remain unchanged.</haxe_doc>
		</toUpperCase>
		<toLowerCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are lower case.

		Affects the characters `A-Z`. Other characters remain unchanged.</haxe_doc>
		</toLowerCase>
		<charAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the character at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, the empty String `""`
		is returned.</haxe_doc>
		</charAt>
		<charCodeAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<t path="Null"><x path="Int"/></t>
			</f>
			<haxe_doc>Returns the character code at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, `null` is returned.

		To obtain the character code of a single character, `"x".code` can be
		used instead to inline the character code at compile time. Note that
		this only works on String literals of length 1.</haxe_doc>
		</charCodeAt>
		<indexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the leftmost occurrence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String starting from `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</indexOf>
		<lastIndexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the rightmost occurrence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String from 0 to `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</lastIndexOf>
		<split public="1" set="method">
			<f a="delimiter">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Splits `this` String at each occurrence of `delimiter`.

		If `this` String is the empty String `""`, the result is not consistent
		across targets and may either be `[]` (on Js, Cpp) or `[""]`.

		If `delimiter` is the empty String `""`, `this` String is split into an
		Array of `this.length` elements, where the elements correspond to the
		characters of `this` String.

		If `delimiter` is not found within `this` String, the result is an Array
		with one element, which equals `this` String.

		If `delimiter` is null, the result is unspecified.

		Otherwise, `this` String is split into parts at each occurrence of
		`delimiter`. If `this` String starts (or ends) with `delimiter`, the
		result `Array` contains a leading (or trailing) empty String `""` element.
		Two subsequent delimiters also result in an empty String `""` element.</haxe_doc>
		</split>
		<substr public="1" set="method">
			<f a="pos:?len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns `len` characters of `this` String, starting at position `pos`.

		If `len` is omitted, all characters from position `pos` to the end of
		`this` String are included.

		If `pos` is negative, its value is calculated from the end of `this`
		String by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the calculated position + `len` exceeds `this.length`, the characters
		from that position to the end of `this` String are returned.

		If `len` is negative, the result is unspecified.</haxe_doc>
		</substr>
		<substring public="1" set="method">
			<f a="startIndex:?endIndex">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the part of `this` String from `startIndex` to but not including `endIndex`.

		If `startIndex` or `endIndex` are negative, 0 is used instead.

		If `startIndex` exceeds `endIndex`, they are swapped.

		If the (possibly swapped) `endIndex` is omitted or exceeds
		`this.length`, `this.length` is used instead.

		If the (possibly swapped) `startIndex` exceeds `this.length`, the empty
		String `""` is returned.</haxe_doc>
		</substring>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the String itself.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="string">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a copy from a given String.</haxe_doc>
		</new>
		<haxe_doc>The basic String class.

	A Haxe String is immutable, it is not possible to modify individual
	characters. No method of this class changes the state of `this` String.

	Strings can be constructed using the String literal syntax `"string value"`.

	String can be concatenated by using the `+` operator. If an operand is not a
	String, it is passed through `Std.string()` first.
	
	@see https://haxe.org/manual/std-String.html</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="StringBuf" params="" file="/usr/share/haxe/std/StringBuf.hx">
		<b><c path="String"/></b>
		<length public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` StringBuf in characters.</haxe_doc>
		</length>
		<new public="1" get="inline" set="null" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new StringBuf instance.

		This may involve initialization of the internal buffer.</haxe_doc>
		</new>
		<haxe_doc>A String buffer is an efficient way to build a big string by appending small
	elements together.

	Its cross-platform implementation uses String concatenation internally, but
	StringBuf may be optimized for different targets.

	Unlike String, an instance of StringBuf is not immutable in the sense that
	it can be passed as argument to functions which modify it by appending more
	values. However, the internal buffer cannot be modified.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="StringTools" params="" file="/usr/share/haxe/std/StringTools.hx">
		<startsWith public="1" set="method" line="183" static="1">
			<f a="s:start">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if the string `s` starts with the string `start`.

		If `start` is `null`, the result is unspecified.

		If `start` is the empty String `""`, the result is true.</haxe_doc>
		</startsWith>
		<endsWith public="1" set="method" line="211" static="1">
			<f a="s:end">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if the string `s` ends with the string `end`.

		If `end` is `null`, the result is unspecified.

		If `end` is the empty String `""`, the result is true.</haxe_doc>
		</endsWith>
		<replace public="1" set="method" line="374" static="1">
			<f a="s:sub:by">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Replace all occurrences of the String `sub` in the String `s` by the
		String `by`.

		If `sub` is the empty String `""`, `by` is inserted after each character
		of `s`. If `by` is also the empty String `""`, `s` remains unchanged.

		This is a convenience function for `s.split(sub).join(by)`.

		If `sub` or `by` are null, the result is unspecified.</haxe_doc>
		</replace>
		<hex public="1" set="method" line="396" static="1">
			<f a="n:?digits">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Encodes `n` into a hexadecimal representation.

		If `digits` is specified, the resulting String is padded with "0" until
		its `length` equals `digits`.</haxe_doc>
		</hex>
		<haxe_doc>This class provides advanced methods on Strings. It is ideally used with
	`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)
	to the `String` class.

	If the first argument to any of the methods is null, the result is
	unspecified.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="Sys" params="" file="/usr/share/haxe/std/Sys.hx" extern="1">
		<print public="1" static="1">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Print any value on the standard output.</haxe_doc>
		</print>
		<println public="1" static="1">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Print any value on the standard output, followed by a newline.</haxe_doc>
		</println>
		<args public="1" static="1">
			<f a=""><c path="Array"><c path="String"/></c></f>
			<haxe_doc>Returns all the arguments that were passed by the command line.</haxe_doc>
		</args>
		<getEnv public="1" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the value of the given environment variable.</haxe_doc>
		</getEnv>
		<putEnv public="1" static="1">
			<f a="s:v">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Set the value of the given environment variable.</haxe_doc>
		</putEnv>
		<environment public="1" static="1">
			<f a=""><x path="Map">
	<c path="String"/>
	<c path="String"/>
</x></f>
			<haxe_doc>Returns all environment variables.</haxe_doc>
		</environment>
		<sleep public="1" static="1">
			<f a="seconds">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Suspend the current execution for the given time (in seconds).</haxe_doc>
		</sleep>
		<setTimeLocale public="1" static="1">
			<f a="loc">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Change the current time locale, which will affect `DateTools.format` date formating.
		Returns true if the locale was successfully changed</haxe_doc>
		</setTimeLocale>
		<getCwd public="1" static="1">
			<f a=""><c path="String"/></f>
			<haxe_doc>Get the current working directory (usually the one in which the program was started)</haxe_doc>
		</getCwd>
		<setCwd public="1" static="1">
			<f a="s">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Change the current working directory.</haxe_doc>
		</setCwd>
		<systemName public="1" static="1">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the name of the system you are running on. For instance :
			"Windows", "Linux", "BSD" and "Mac" depending on your desktop OS.</haxe_doc>
		</systemName>
		<command public="1" static="1">
			<f a="cmd:?args">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
				<x path="Int"/>
			</f>
			<haxe_doc>Run the given command. The command output will be printed on the same output as the current process.
		The current process will block until the command terminates and it will return the command result (0 if there was no error).

		Command arguments can be passed in two ways: 1. using `args`, 2. appending to `cmd` and leaving `args` as `null`.

		 1. When using `args` to pass command arguments, each argument will be automatically quoted, and shell meta-characters will be escaped if needed.
		`cmd` should be an executable name that can be located in the `PATH` environment variable, or a path to an executable.

		 2. When `args` is not given or is `null`, command arguments can be appended to `cmd`. No automatic quoting/escaping will be performed. `cmd` should be formatted exactly as it would be when typed at the command line.
		It can run executables, as well as shell commands that are not executables (e.g. on Windows: `dir`, `cd`, `echo` etc).

		Read the `sys.io.Process` api for a more complete way to start background processes.</haxe_doc>
		</command>
		<exit public="1" static="1">
			<f a="code">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Exit the current process with the given error code.</haxe_doc>
		</exit>
		<time public="1" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Gives the most precise timestamp value (in seconds).</haxe_doc>
		</time>
		<cpuTime public="1" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Gives the most precise timestamp value (in seconds) but only account for the actual time spent running on the CPU for the current thread/process.</haxe_doc>
		</cpuTime>
		<executablePath public="1" static="1">
			<f a=""><c path="String"/></f>
			<meta><m n=":deprecated"><e>"Use programPath instead"</e></m></meta>
			<haxe_doc>Returns the path to the current executable that we are running.</haxe_doc>
		</executablePath>
		<programPath public="1" static="1">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the absolute path to the current program file that we are running.
		Concretely, for an executable binary, it returns the path to the binary.
		For a script (e.g. a PHP file), it returns the path to the script.</haxe_doc>
		</programPath>
		<getChar public="1" static="1">
			<f a="echo">
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Read a single input character from the standard input (without blocking) and returns it. Setting `echo` to true will also display it on the output.</haxe_doc>
		</getChar>
		<stdin public="1" static="1">
			<f a=""><c path="haxe.io.Input"/></f>
			<haxe_doc>Returns the process standard input, from which you can read what user enters. Usually it will block until the user send a full input line. See `getChar` for an alternative.</haxe_doc>
		</stdin>
		<stdout public="1" static="1">
			<f a=""><c path="haxe.io.Output"/></f>
			<haxe_doc>Returns the process standard output on which you can write.</haxe_doc>
		</stdout>
		<stderr public="1" static="1">
			<f a=""><c path="haxe.io.Output"/></f>
			<haxe_doc>Returns the process standard error on which you can write.</haxe_doc>
		</stderr>
		<haxe_doc>This class gives you access to many base functionalities of system platforms. Looks in `sys` sub packages for more system APIs.</haxe_doc>
		<meta><m n=":require"><e>sys</e></m></meta>
	</class>
	<enum path="ValueType" params="" file="/usr/share/haxe/std/flash/_std/Type.hx" module="Type">
		<TNull/>
		<TInt/>
		<TFloat/>
		<TBool/>
		<TObject/>
		<TFunction/>
		<TClass a="c"><x path="Class"><d/></x></TClass>
		<TEnum a="e"><x path="Enum"><d/></x></TEnum>
		<TUnknown/>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="Type" params="" file="/usr/share/haxe/std/flash/_std/Type.hx">
		<getClass public="1" params="T" set="method" line="37" static="1">
			<f a="o">
				<c path="getClass.T"/>
				<x path="Class"><c path="getClass.T"/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the class of `o`, if `o` is a class instance.

		If `o` is null or of a different type, null is returned.

		In general, type parameter information cannot be obtained at runtime.</haxe_doc>
		</getClass>
		<getSuperClass public="1" set="method" line="63" static="1">
			<f a="c">
				<x path="Class"><d/></x>
				<x path="Class"><d/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the super-class of class `c`.

		If `c` has no super class, null is returned.

		If `c` is null, the result is unspecified.

		In general, type parameter information cannot be obtained at runtime.</haxe_doc>
		</getSuperClass>
		<getClassName public="1" set="method" line="70" static="1">
			<f a="c">
				<x path="Class"><d/></x>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the name of class `c`, including its path.

		If `c` is inside a package, the package structure is returned dot-
		separated, with another dot separating the class name:
		`pack1.pack2.(...).packN.ClassName`
		If `c` is a sub-type of a Haxe module, that module is not part of the
		package structure.

		If `c` has no package, the class name is returned.

		If `c` is null, the result is unspecified.

		The class name does not include any type parameters.</haxe_doc>
		</getClassName>
		<getEnumName public="1" set="method" line="86" static="1">
			<f a="e">
				<x path="Enum"><d/></x>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the name of enum `e`, including its path.

		If `e` is inside a package, the package structure is returned dot-
		separated, with another dot separating the enum name:
		`pack1.pack2.(...).packN.EnumName`
		If `e` is a sub-type of a Haxe module, that module is not part of the
		package structure.

		If `e` has no package, the enum name is returned.

		If `e` is null, the result is unspecified.

		The enum name does not include any type parameters.</haxe_doc>
		</getEnumName>
		<resolveClass public="1" set="method" line="90" static="1">
			<f a="name">
				<c path="String"/>
				<x path="Class"><d/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Resolves a class by name.

		If `name` is the path of an existing class, that class is returned.

		Otherwise null is returned.

		If `name` is null or the path to a different type, the result is
		unspecified.

		The class name must not include any type parameters.</haxe_doc>
		</resolveClass>
		<resolveEnum public="1" set="method" line="114" static="1">
			<f a="name">
				<c path="String"/>
				<x path="Enum"><d/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Resolves an enum by name.

		If `name` is the path of an existing enum, that enum is returned.

		Otherwise null is returned.

		If `name` is null the result is unspecified.

		If `name` is the path to a different type, null is returned.

		The enum name must not include any type parameters.</haxe_doc>
		</resolveEnum>
		<createInstance public="1" params="T" set="method" line="131" static="1">
			<f a="cl:args">
				<x path="Class"><c path="createInstance.T"/></x>
				<c path="Array"><d/></c>
				<c path="createInstance.T"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates an instance of class `cl`, using `args` as arguments to the
		class constructor.

		This function guarantees that the class constructor is called.

		Default values of constructors arguments are not guaranteed to be
		taken into account.

		If `cl` or `args` are null, or if the number of elements in `args` does
		not match the expected number of constructor arguments, or if any
		argument has an invalid type,  or if `cl` has no own constructor, the
		result is unspecified.

		In particular, default values of constructor arguments are not
		guaranteed to be taken into account.</haxe_doc>
		</createInstance>
		<createEmptyInstance public="1" params="T" set="method" line="152" static="1">
			<f a="cl">
				<x path="Class"><c path="createEmptyInstance.T"/></x>
				<c path="createEmptyInstance.T"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates an instance of class `cl`.

		This function guarantees that the class constructor is not called.

		If `cl` is null, the result is unspecified.</haxe_doc>
		</createEmptyInstance>
		<createEnum public="1" params="T" set="method" line="165" static="1">
			<f a="e:constr:?params">
				<x path="Enum"><c path="createEnum.T"/></x>
				<c path="String"/>
				<c path="Array"><d/></c>
				<c path="createEnum.T"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor `constr` with
		arguments `params`.

		If `e` or `constr` is null, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createEnum>
		<getEnumConstructs public="1" set="method" line="211" static="1">
			<f a="e">
				<x path="Enum"><d/></x>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns a list of the names of all constructors of enum `e`.

		The order of the constructor names in the returned Array is preserved
		from the original syntax.

		If `c` is null, the result is unspecified.</haxe_doc>
		</getEnumConstructs>
		<typeof public="1" set="method" line="216" static="1">
			<f a="v">
				<d/>
				<e path="ValueType"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the runtime type of value `v`.

		The result corresponds to the type `v` has at runtime, which may vary
		per platform. Assumptions regarding this should be minimized to avoid
		surprises.</haxe_doc>
		</typeof>
		<enumParameters public="1" set="method" line="269" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="Array"><d/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns a list of the constructor arguments of enum instance `e`.

		If `e` has no arguments, the result is [].

		Otherwise the result are the values that were used as arguments to `e`,
		in the order of their declaration.

		If `e` is null, the result is unspecified.</haxe_doc>
		</enumParameters>
		<haxe_doc>The Haxe Reflection API allows retrieval of type information at runtime.

	This class complements the more lightweight Reflect class, with a focus on
	class and enum instances.

	@see https://haxe.org/manual/types.html
	@see https://haxe.org/manual/std-reflection.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="UInt" params="" file="/usr/share/haxe/std/UInt.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="Int"/></icast>
			<icast field="toFloat"><x path="Float"/></icast>
		</to>
		<haxe_doc>The unsigned `Int` type is only defined for Flash and C#.
	Simulate it for other platforms.

	@see https://haxe.org/manual/types-basic-types.html</haxe_doc>
		<impl><class path="_UInt.UInt_Impl_" params="" file="/usr/share/haxe/std/UInt.hx" private="1" module="UInt"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<abstract path="XmlType" params="" file="/usr/share/haxe/std/Xml.hx" module="Xml">
		<this><x path="Int"/></this>
		<haxe_doc>Xml node types.

	@see https://haxe.org/manual/std-Xml.html</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="_Xml.XmlType_Impl_" params="" file="/usr/share/haxe/std/Xml.hx" private="1" module="Xml"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="openfl.events.IEventDispatcher" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/IEventDispatcher.hx" extern="1" interface="1">
		<addEventListener public="1" set="method">
			<f a="type:listener:?useCapture:?priority:?useWeakReference" v="::false:0:false">
				<c path="String"/>
				<f a="">
					<d/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ useWeakReference : false, priority : 0, useCapture : false }</e></m></meta>
		</addEventListener>
		<dispatchEvent public="1" set="method"><f a="event">
	<c path="openfl.events.Event"/>
	<x path="Bool"/>
</f></dispatchEvent>
		<hasEventListener public="1" set="method"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasEventListener>
		<removeEventListener public="1" set="method">
			<f a="type:listener:?useCapture" v="::false">
				<c path="String"/>
				<f a="">
					<d/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ useCapture : false }</e></m></meta>
		</removeEventListener>
		<willTrigger public="1" set="method"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></willTrigger>
		<meta><m n=":native"><e>"flash.events.IEventDispatcher"</e></m></meta>
	</class>
	<class path="openfl.events.EventDispatcher" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/EventDispatcher.hx" extern="1">
		<implements path="openfl.events.IEventDispatcher"/>
		<addEventListener public="1" set="method">
			<f a="type:listener:?useCapture:?priority:?useWeakReference" v="::false:0:false">
				<c path="String"/>
				<f a="">
					<d/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ useWeakReference : false, priority : 0, useCapture : false }</e></m></meta>
			<haxe_doc>* Registers an event listener object with an EventDispatcher object so that
	 * the listener receives notification of an event. You can register event
	 * listeners on all nodes in the display list for a specific type of event,
	 * phase, and priority.
	 *
	 * After you successfully register an event listener, you cannot change
	 * its priority through additional calls to `addEventListener()`.
	 * To change a listener's priority, you must first call
	 * `removeListener()`. Then you can register the listener again
	 * with the new priority level. 
	 *
	 * Keep in mind that after the listener is registered, subsequent calls to
	 * `addEventListener()` with a different `type` or
	 * `useCapture` value result in the creation of a separate
	 * listener registration. For example, if you first register a listener with
	 * `useCapture` set to `true`, it listens only during
	 * the capture phase. If you call `addEventListener()` again using
	 * the same listener object, but with `useCapture` set to
	 * `false`, you have two separate listeners: one that listens
	 * during the capture phase and another that listens during the target and
	 * bubbling phases. 
	 *
	 * You cannot register an event listener for only the target phase or the
	 * bubbling phase. Those phases are coupled during registration because
	 * bubbling applies only to the ancestors of the target node.
	 *
	 * If you no longer need an event listener, remove it by calling
	 * `removeEventListener()`, or memory problems could result. Event
	 * listeners are not automatically removed from memory because the garbage
	 * collector does not remove the listener as long as the dispatching object
	 * exists(unless the `useWeakReference` parameter is set to
	 * `true`).
	 *
	 * Copying an EventDispatcher instance does not copy the event listeners
	 * attached to it.(If your newly created node needs an event listener, you
	 * must attach the listener after creating the node.) However, if you move an
	 * EventDispatcher instance, the event listeners attached to it move along
	 * with it.
	 *
	 * If the event listener is being registered on a node while an event is
	 * being processed on this node, the event listener is not triggered during
	 * the current phase but can be triggered during a later phase in the event
	 * flow, such as the bubbling phase.
	 *
	 * If an event listener is removed from a node while an event is being
	 * processed on the node, it is still triggered by the current actions. After
	 * it is removed, the event listener is never invoked again(unless
	 * registered again for future processing). 
	 * 
	 * @param type             The type of event.
	 * @param useCapture       Determines whether the listener works in the
	 *                         capture phase or the target and bubbling phases.
	 *                         If `useCapture` is set to
	 *                         `true`, the listener processes the
	 *                         event only during the capture phase and not in the
	 *                         target or bubbling phase. If
	 *                         `useCapture` is `false`, the
	 *                         listener processes the event only during the
	 *                         target or bubbling phase. To listen for the event
	 *                         in all three phases, call
	 *                         `addEventListener` twice, once with
	 *                         `useCapture` set to `true`,
	 *                         then again with `useCapture` set to
	 *                         `false`.
	 * @param priority         The priority level of the event listener. The
	 *                         priority is designated by a signed 32-bit integer.
	 *                         The higher the number, the higher the priority.
	 *                         All listeners with priority _n_ are processed
	 *                         before listeners of priority _n_-1. If two or
	 *                         more listeners share the same priority, they are
	 *                         processed in the order in which they were added.
	 *                         The default priority is 0.
	 * @param useWeakReference Determines whether the reference to the listener
	 *                         is strong or weak. A strong reference(the
	 *                         default) prevents your listener from being
	 *                         garbage-collected. A weak reference does not.
	 *
	 *                         Class-level member functions are not subject to
	 *                         garbage collection, so you can set
	 *                         `useWeakReference` to `true`
	 *                         for class-level member functions without
	 *                         subjecting them to garbage collection. If you set
	 *                         `useWeakReference` to `true`
	 *                         for a listener that is a nested inner function,
	 *                         the function will be garbage-collected and no
	 *                         longer persistent. If you create references to the
	 *                         inner function(save it in another variable) then
	 *                         it is not garbage-collected and stays
	 *                         persistent.
	 * @throws ArgumentError The `listener` specified is not a
	 *                       function.</haxe_doc>
		</addEventListener>
		<dispatchEvent public="1" set="method">
			<f a="event">
				<c path="openfl.events.Event"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Dispatches an event into the event flow. The event target is the
	 * EventDispatcher object upon which the `dispatchEvent()` method
	 * is called.
	 * 
	 * @param event The Event object that is dispatched into the event flow. If
	 *              the event is being redispatched, a clone of the event is
	 *              created automatically. After an event is dispatched, its
	 *              `target` property cannot be changed, so you must
	 *              create a new copy of the event for redispatching to work.
	 * @return A value of `true` if the event was successfully
	 *         dispatched. A value of `false` indicates failure or
	 *         that `preventDefault()` was called on the event.
	 * @throws Error The event dispatch recursion limit has been reached.</haxe_doc>
		</dispatchEvent>
		<hasEventListener public="1" set="method">
			<f a="type">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Checks whether the EventDispatcher object has any listeners registered for
	 * a specific type of event. This allows you to determine where an
	 * EventDispatcher object has altered handling of an event type in the event
	 * flow hierarchy. To determine whether a specific event type actually
	 * triggers an event listener, use `willTrigger()`.
	 *
	 * The difference between `hasEventListener()` and
	 * `willTrigger()` is that `hasEventListener()`
	 * examines only the object to which it belongs, whereas
	 * `willTrigger()` examines the entire event flow for the event
	 * specified by the `type` parameter. 
	 *
	 * When `hasEventListener()` is called from a LoaderInfo
	 * object, only the listeners that the caller can access are considered.
	 * 
	 * @param type The type of event.
	 * @return A value of `true` if a listener of the specified type
	 *         is registered; `false` otherwise.</haxe_doc>
		</hasEventListener>
		<removeEventListener public="1" set="method">
			<f a="type:listener:?useCapture" v="::false">
				<c path="String"/>
				<f a="">
					<d/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ useCapture : false }</e></m></meta>
			<haxe_doc>* Removes a listener from the EventDispatcher object. If there is no
	 * matching listener registered with the EventDispatcher object, a call to
	 * this method has no effect.
	 * 
	 * @param type       The type of event.
	 * @param useCapture Specifies whether the listener was registered for the
	 *                   capture phase or the target and bubbling phases. If the
	 *                   listener was registered for both the capture phase and
	 *                   the target and bubbling phases, two calls to
	 *                   `removeEventListener()` are required to
	 *                   remove both, one call with `useCapture()` set
	 *                   to `true`, and another call with
	 *                   `useCapture()` set to `false`.</haxe_doc>
		</removeEventListener>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<willTrigger public="1" set="method">
			<f a="type">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Checks whether an event listener is registered with this EventDispatcher
	 * object or any of its ancestors for the specified event type. This method
	 * returns `true` if an event listener is triggered during any
	 * phase of the event flow when an event of the specified type is dispatched
	 * to this EventDispatcher object or any of its descendants.
	 *
	 * The difference between the `hasEventListener()` and the
	 * `willTrigger()` methods is that `hasEventListener()`
	 * examines only the object to which it belongs, whereas the
	 * `willTrigger()` method examines the entire event flow for the
	 * event specified by the `type` parameter. 
	 *
	 * When `willTrigger()` is called from a LoaderInfo object,
	 * only the listeners that the caller can access are considered.
	 * 
	 * @param type The type of event.
	 * @return A value of `true` if a listener of the specified type
	 *         will be triggered; `false` otherwise.</haxe_doc>
		</willTrigger>
		<new public="1" set="method">
			<f a="?target" v="null">
				<c path="openfl.events.IEventDispatcher"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ target : null }</e></m></meta>
			<haxe_doc>* Aggregates an instance of the EventDispatcher class.
	 *
	 * The EventDispatcher class is generally used as a base class, which
	 * means that most developers do not need to use this constructor function.
	 * However, advanced developers who are implementing the IEventDispatcher
	 * interface need to use this constructor. If you are unable to extend the
	 * EventDispatcher class and must instead implement the IEventDispatcher
	 * interface, use this constructor to aggregate an instance of the
	 * EventDispatcher class.
	 * 
	 * @param target The target object for events dispatched to the
	 *               EventDispatcher object. This parameter is used when the
	 *               EventDispatcher instance is aggregated by a class that
	 *               implements IEventDispatcher; it is necessary so that the
	 *               containing object can be the target for events. Do not use
	 *               this parameter in simple cases in which a class extends
	 *               EventDispatcher.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[* The EventDispatcher class is the base class for all classes that dispatch
 * events. The EventDispatcher class implements the IEventDispatcher interface
 * and is the base class for the DisplayObject class. The EventDispatcher
 * class allows any object on the display list to be an event target and as
 * such, to use the methods of the IEventDispatcher interface.
 *
 * Event targets are an important part of the Flash<sup>®</sup> Player and
 * Adobe<sup>®</sup> AIR<sup>®</sup> event model. The event target serves as
 * the focal point for how events flow through the display list hierarchy.
 * When an event such as a mouse click or a keypress occurs, Flash Player or
 * the AIR application dispatches an event object into the event flow from the
 * root of the display list. The event object then makes its way through the
 * display list until it reaches the event target, at which point it begins
 * its return trip through the display list. This round-trip journey to the
 * event target is conceptually divided into three phases: the capture phase
 * comprises the journey from the root to the last node before the event
 * target's node, the target phase comprises only the event target node, and
 * the bubbling phase comprises any subsequent nodes encountered on the return
 * trip to the root of the display list.
 *
 * In general, the easiest way for a user-defined class to gain event
 * dispatching capabilities is to extend EventDispatcher. If this is
 * impossible(that is, if the class is already extending another class), you
 * can instead implement the IEventDispatcher interface, create an
 * EventDispatcher member, and write simple hooks to route calls into the
 * aggregated EventDispatcher.
 * 
 * @event activate   [broadcast event] Dispatched when the Flash Player or AIR
 *                   application gains operating system focus and becomes
 *                   active. This event is a broadcast event, which means that
 *                   it is dispatched by all EventDispatcher objects with a
 *                   listener registered for this event. For more information
 *                   about broadcast events, see the DisplayObject class.
 * @event deactivate [broadcast event] Dispatched when the Flash Player or AIR
 *                   application operating loses system focus and is becoming
 *                   inactive. This event is a broadcast event, which means
 *                   that it is dispatched by all EventDispatcher objects with
 *                   a listener registered for this event. For more
 *                   information about broadcast events, see the DisplayObject
 *                   class.]]></haxe_doc>
	</class>
	<class path="openfl.display.IBitmapDrawable" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/IBitmapDrawable.hx" extern="1" interface="1"><meta><m n=":native"><e>"flash.display.IBitmapDrawable"</e></m></meta></class>
	<class path="openfl.display.DisplayObject" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/DisplayObject.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<implements path="openfl.display.IBitmapDrawable"/>
		<accessibilityProperties public="1">
			<c path="flash.accessibility.AccessibilityProperties"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</accessibilityProperties>
		<alpha public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the alpha transparency value of the object specified. Valid
	 * values are 0(fully transparent) to 1(fully opaque). The default value is
	 * 1. Display objects with `alpha` set to 0 _are_ active,
	 * even though they are invisible.</haxe_doc>
		</alpha>
		<blendMode public="1" set="null">
			<x path="openfl.display.BlendMode"/>
			<haxe_doc>* A value from the BlendMode class that specifies which blend mode to use. A
	 * bitmap can be drawn internally in two ways. If you have a blend mode
	 * enabled or an external clipping mask, the bitmap is drawn by adding a
	 * bitmap-filled square shape to the vector render. If you attempt to set
	 * this property to an invalid value, Flash runtimes set the value to
	 * `BlendMode.NORMAL`.
	 *
	 * The `blendMode` property affects each pixel of the display
	 * object. Each pixel is composed of three constituent colors(red, green,
	 * and blue), and each constituent color has a value between 0x00 and 0xFF.
	 * Flash Player or Adobe AIR compares each constituent color of one pixel in
	 * the movie clip with the corresponding color of the pixel in the
	 * background. For example, if `blendMode` is set to
	 * `BlendMode.LIGHTEN`, Flash Player or Adobe AIR compares the red
	 * value of the display object with the red value of the background, and uses
	 * the lighter of the two as the value for the red component of the displayed
	 * color.
	 *
	 * The following table describes the `blendMode` settings. The
	 * BlendMode class defines string values you can use. The illustrations in
	 * the table show `blendMode` values applied to a circular display
	 * object(2) superimposed on another display object(1).</haxe_doc>
		</blendMode>
		<blendShader public="1" get="null">
			<c path="openfl.display.Shader"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</blendShader>
		<cacheAsBitmap public="1" get="null" set="null">
			<x path="Bool"/>
			<haxe_doc>* All vector data for a display object that has a cached bitmap is drawn
	 * to the bitmap instead of the main display. If
	 * `cacheAsBitmapMatrix` is null or unsupported, the bitmap is
	 * then copied to the main display as unstretched, unrotated pixels snapped
	 * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent
	 * object. If the bounds of the bitmap change, the bitmap is recreated
	 * instead of being stretched.
	 *
	 * If `cacheAsBitmapMatrix` is non-null and supported, the
	 * object is drawn to the off-screen bitmap using that matrix and the
	 * stretched and/or rotated results of that rendering are used to draw the
	 * object to the main display.
	 *
	 * No internal bitmap is created unless the `cacheAsBitmap`
	 * property is set to `true`.
	 *
	 * After you set the `cacheAsBitmap` property to
	 * `true`, the rendering does not change, however the display
	 * object performs pixel snapping automatically. The animation speed can be
	 * significantly faster depending on the complexity of the vector content.
	 * 
	 *
	 * The `cacheAsBitmap` property is automatically set to
	 * `true` whenever you apply a filter to a display object(when
	 * its `filter` array is not empty), and if a display object has a
	 * filter applied to it, `cacheAsBitmap` is reported as
	 * `true` for that display object, even if you set the property to
	 * `false`. If you clear all filters for a display object, the
	 * `cacheAsBitmap` setting changes to what it was last set to.
	 *
	 * A display object does not use a bitmap even if the
	 * `cacheAsBitmap` property is set to `true` and
	 * instead renders from vector data in the following cases:
	 *
	 * 
	 *  * The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum
	 * size for a bitmap image is 8,191 pixels in width or height, and the total
	 * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image
	 * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9
	 * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels
	 * in width.
	 *  * The bitmap fails to allocate(out of memory error). 
	 * 
	 *
	 * The `cacheAsBitmap` property is best used with movie clips
	 * that have mostly static content and that do not scale and rotate
	 * frequently. With such movie clips, `cacheAsBitmap` can lead to
	 * performance increases when the movie clip is translated(when its _x_
	 * and _y_ position is changed).</haxe_doc>
		</cacheAsBitmap>
		<filters public="1" get="null" set="null">
			<c path="Array"><c path="openfl.filters.BitmapFilter"/></c>
			<haxe_doc><![CDATA[* An indexed array that contains each filter object currently associated
	 * with the display object. The openfl.filters package contains several
	 * classes that define specific filters you can use.
	 *
	 * Filters can be applied in Flash Professional at design time, or at run
	 * time by using ActionScript code. To apply a filter by using ActionScript,
	 * you must make a temporary copy of the entire `filters` array,
	 * modify the temporary array, then assign the value of the temporary array
	 * back to the `filters` array. You cannot directly add a new
	 * filter object to the `filters` array.
	 *
	 * To add a filter by using ActionScript, perform the following steps
	 * (assume that the target display object is named
	 * `myDisplayObject`):
	 *
	 *  1. Create a new filter object by using the constructor method of your
	 * chosen filter class.
	 *  2. Assign the value of the `myDisplayObject.filters` array
	 * to a temporary array, such as one named `myFilters`.
	 *  3. Add the new filter object to the `myFilters` temporary
	 * array.
	 *  4. Assign the value of the temporary array to the
	 * `myDisplayObject.filters` array.
	 *
	 * If the `filters` array is undefined, you do not need to use
	 * a temporary array. Instead, you can directly assign an array literal that
	 * contains one or more filter objects that you create. The first example in
	 * the Examples section adds a drop shadow filter by using code that handles
	 * both defined and undefined `filters` arrays.
	 *
	 * To modify an existing filter object, you must use the technique of
	 * modifying a copy of the `filters` array:
	 *
	 *  1. Assign the value of the `filters` array to a temporary
	 * array, such as one named `myFilters`.
	 *  2. Modify the property by using the temporary array,
	 * `myFilters`. For example, to set the quality property of the
	 * first filter in the array, you could use the following code:
	 * `myFilters[0].quality = 1;`
	 *  3. Assign the value of the temporary array to the `filters`
	 * array.
	 *
	 * At load time, if a display object has an associated filter, it is
	 * marked to cache itself as a transparent bitmap. From this point forward,
	 * as long as the display object has a valid filter list, the player caches
	 * the display object as a bitmap. This source bitmap is used as a source
	 * image for the filter effects. Each display object usually has two bitmaps:
	 * one with the original unfiltered source display object and another for the
	 * final image after filtering. The final image is used when rendering. As
	 * long as the display object does not change, the final image does not need
	 * updating.
	 *
	 * The openfl.filters package includes classes for filters. For example, to
	 * create a DropShadow filter, you would write:
	 * 
	 * @throws ArgumentError When `filters` includes a ShaderFilter
	 *                       and the shader output type is not compatible with
	 *                       this operation(the shader must specify a
	 *                       `pixel4` output).
	 * @throws ArgumentError When `filters` includes a ShaderFilter
	 *                       and the shader doesn't specify any image input or
	 *                       the first input is not an `image4` input.
	 * @throws ArgumentError When `filters` includes a ShaderFilter
	 *                       and the shader specifies an image input that isn't
	 *                       provided.
	 * @throws ArgumentError When `filters` includes a ShaderFilter, a
	 *                       ByteArray or Vector.<Number> instance as a shader
	 *                       input, and the `width` and
	 *                       `height` properties aren't specified for
	 *                       the ShaderInput object, or the specified values
	 *                       don't match the amount of data in the input data.
	 *                       See the `ShaderInput.input` property for
	 *                       more information.]]></haxe_doc>
		</filters>
		<height public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the height of the display object, in pixels. The height is
	 * calculated based on the bounds of the content of the display object. When
	 * you set the `height` property, the `scaleY` property
	 * is adjusted accordingly, as shown in the following code:
	 *
	 * Except for TextField and Video objects, a display object with no
	 * content(such as an empty sprite) has a height of 0, even if you try to
	 * set `height` to a different value.</haxe_doc>
		</height>
		<loaderInfo public="1" get="null" set="null">
			<c path="openfl.display.LoaderInfo"/>
			<haxe_doc>* Returns a LoaderInfo object containing information about loading the file
	 * to which this display object belongs. The `loaderInfo` property
	 * is defined only for the root display object of a SWF file or for a loaded
	 * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the
	 * `loaderInfo` object associated with the SWF file that contains
	 * a display object named `myDisplayObject`, use
	 * `myDisplayObject.root.loaderInfo`.
	 *
	 * A large SWF file can monitor its download by calling
	 * `this.root.loaderInfo.addEventListener(Event.COMPLETE,
	 * func)`.</haxe_doc>
		</loaderInfo>
		<mask public="1" get="null" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc>* The calling display object is masked by the specified `mask`
	 * object. To ensure that masking works when the Stage is scaled, the
	 * `mask` display object must be in an active part of the display
	 * list. The `mask` object itself is not drawn. Set
	 * `mask` to `null` to remove the mask.
	 *
	 * To be able to scale a mask object, it must be on the display list. To
	 * be able to drag a mask Sprite object(by calling its
	 * `startDrag()` method), it must be on the display list. To call
	 * the `startDrag()` method for a mask sprite based on a
	 * `mouseDown` event being dispatched by the sprite, set the
	 * sprite's `buttonMode` property to `true`.
	 *
	 * When display objects are cached by setting the
	 * `cacheAsBitmap` property to `true` an the
	 * `cacheAsBitmapMatrix` property to a Matrix object, both the
	 * mask and the display object being masked must be part of the same cached
	 * bitmap. Thus, if the display object is cached, then the mask must be a
	 * child of the display object. If an ancestor of the display object on the
	 * display list is cached, then the mask must be a child of that ancestor or
	 * one of its descendents. If more than one ancestor of the masked object is
	 * cached, then the mask must be a descendent of the cached container closest
	 * to the masked object in the display list.
	 *
	 * **Note:** A single `mask` object cannot be used to mask
	 * more than one calling display object. When the `mask` is
	 * assigned to a second display object, it is removed as the mask of the
	 * first object, and that object's `mask` property becomes
	 * `null`.</haxe_doc>
		</mask>
		<mouseX public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the x coordinate of the mouse or user input device position, in
	 * pixels.
	 *
	 * **Note**: For a DisplayObject that has been rotated, the returned x
	 * coordinate will reflect the non-rotated object.</haxe_doc>
		</mouseX>
		<mouseY public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the y coordinate of the mouse or user input device position, in
	 * pixels.
	 *
	 * **Note**: For a DisplayObject that has been rotated, the returned y
	 * coordinate will reflect the non-rotated object.</haxe_doc>
		</mouseY>
		<name public="1" get="null" set="null">
			<c path="String"/>
			<haxe_doc>* Indicates the instance name of the DisplayObject. The object can be
	 * identified in the child list of its parent display object container by
	 * calling the `getChildByName()` method of the display object
	 * container.
	 * 
	 * @throws IllegalOperationError If you are attempting to set this property
	 *                               on an object that was placed on the timeline
	 *                               in the Flash authoring tool.</haxe_doc>
		</name>
		<opaqueBackground public="1">
			<t path="Null"><x path="UInt"/></t>
			<haxe_doc>* Specifies whether the display object is opaque with a certain background
	 * color. A transparent bitmap contains alpha channel data and is drawn
	 * transparently. An opaque bitmap has no alpha channel(and renders faster
	 * than a transparent bitmap). If the bitmap is opaque, you specify its own
	 * background color to use.
	 *
	 * If set to a number value, the surface is opaque(not transparent) with
	 * the RGB background color that the number specifies. If set to
	 * `null`(the default value), the display object has a
	 * transparent background.
	 *
	 * The `opaqueBackground` property is intended mainly for use
	 * with the `cacheAsBitmap` property, for rendering optimization.
	 * For display objects in which the `cacheAsBitmap` property is
	 * set to true, setting `opaqueBackground` can improve rendering
	 * performance.
	 *
	 * The opaque background region is _not_ matched when calling the
	 * `hitTestPoint()` method with the `shapeFlag`
	 * parameter set to `true`.
	 *
	 * The opaque background region does not respond to mouse events.</haxe_doc>
		</opaqueBackground>
		<parent public="1" set="null">
			<c path="openfl.display.DisplayObjectContainer"/>
			<haxe_doc>* Indicates the DisplayObjectContainer object that contains this display
	 * object. Use the `parent` property to specify a relative path to
	 * display objects that are above the current display object in the display
	 * list hierarchy.
	 *
	 * You can use `parent` to move up multiple levels in the
	 * display list as in the following:
	 * 
	 * @throws SecurityError The parent display object belongs to a security
	 *                       sandbox to which you do not have access. You can
	 *                       avoid this situation by having the parent movie call
	 *                       the `Security.allowDomain()` method.</haxe_doc>
		</parent>
		<root public="1" get="null" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc>* For a display object in a loaded SWF file, the `root` property
	 * is the top-most display object in the portion of the display list's tree
	 * structure represented by that SWF file. For a Bitmap object representing a
	 * loaded image file, the `root` property is the Bitmap object
	 * itself. For the instance of the main class of the first SWF file loaded,
	 * the `root` property is the display object itself. The
	 * `root` property of the Stage object is the Stage object itself.
	 * The `root` property is set to `null` for any display
	 * object that has not been added to the display list, unless it has been
	 * added to a display object container that is off the display list but that
	 * is a child of the top-most display object in a loaded SWF file.
	 *
	 * For example, if you create a new Sprite object by calling the
	 * `Sprite()` constructor method, its `root` property
	 * is `null` until you add it to the display list(or to a display
	 * object container that is off the display list but that is a child of the
	 * top-most display object in a SWF file).
	 *
	 * For a loaded SWF file, even though the Loader object used to load the
	 * file may not be on the display list, the top-most display object in the
	 * SWF file has its `root` property set to itself. The Loader
	 * object does not have its `root` property set until it is added
	 * as a child of a display object for which the `root` property is
	 * set.</haxe_doc>
		</root>
		<rotation public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the rotation of the DisplayObject instance, in degrees, from its
	 * original orientation. Values from 0 to 180 represent clockwise rotation;
	 * values from 0 to -180 represent counterclockwise rotation. Values outside
	 * this range are added to or subtracted from 360 to obtain a value within
	 * the range. For example, the statement `my_video.rotation = 450`
	 * is the same as ` my_video.rotation = 90`.</haxe_doc>
		</rotation>
		<rotationX public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</rotationX>
		<rotationY public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</rotationY>
		<rotationZ public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</rotationZ>
		<scale9Grid public="1">
			<c path="openfl.geom.Rectangle"/>
			<haxe_doc>* The current scaling grid that is in effect. If set to `null`,
	 * the entire display object is scaled normally when any scale transformation
	 * is applied.
	 *
	 * When you define the `scale9Grid` property, the display
	 * object is divided into a grid with nine regions based on the
	 * `scale9Grid` rectangle, which defines the center region of the
	 * grid. The eight other regions of the grid are the following areas: 
	 *
	 * 
	 *  * The upper-left corner outside of the rectangle
	 *  * The area above the rectangle 
	 *  * The upper-right corner outside of the rectangle
	 *  * The area to the left of the rectangle
	 *  * The area to the right of the rectangle
	 *  * The lower-left corner outside of the rectangle
	 *  * The area below the rectangle
	 *  * The lower-right corner outside of the rectangle
	 * 
	 *
	 * You can think of the eight regions outside of the center(defined by
	 * the rectangle) as being like a picture frame that has special rules
	 * applied to it when scaled.
	 *
	 * When the `scale9Grid` property is set and a display object
	 * is scaled, all text and gradients are scaled normally; however, for other
	 * types of objects the following rules apply:
	 *
	 * 
	 *  * Content in the center region is scaled normally. 
	 *  * Content in the corners is not scaled. 
	 *  * Content in the top and bottom regions is scaled horizontally only.
	 * Content in the left and right regions is scaled vertically only.
	 *  * All fills(including bitmaps, video, and gradients) are stretched to
	 * fit their shapes.
	 * 
	 *
	 * If a display object is rotated, all subsequent scaling is normal(and
	 * the `scale9Grid` property is ignored).
	 *
	 * For example, consider the following display object and a rectangle that
	 * is applied as the display object's `scale9Grid`:
	 *
	 * A common use for setting `scale9Grid` is to set up a display
	 * object to be used as a component, in which edge regions retain the same
	 * width when the component is scaled.
	 * 
	 * @throws ArgumentError If you pass an invalid argument to the method.</haxe_doc>
		</scale9Grid>
		<scaleX public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the horizontal scale(percentage) of the object as applied from
	 * the registration point. The default registration point is(0,0). 1.0
	 * equals 100% scale.
	 *
	 * Scaling the local coordinate system changes the `x` and
	 * `y` property values, which are defined in whole pixels.</haxe_doc>
		</scaleX>
		<scaleY public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the vertical scale(percentage) of an object as applied from the
	 * registration point of the object. The default registration point is(0,0).
	 * 1.0 is 100% scale.
	 *
	 * Scaling the local coordinate system changes the `x` and
	 * `y` property values, which are defined in whole pixels.</haxe_doc>
		</scaleY>
		<scaleZ public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</scaleZ>
		<scrollRect public="1" get="null" set="null">
			<c path="openfl.geom.Rectangle"/>
			<haxe_doc>* The scroll rectangle bounds of the display object. The display object is
	 * cropped to the size defined by the rectangle, and it scrolls within the
	 * rectangle when you change the `x` and `y` properties
	 * of the `scrollRect` object.
	 *
	 * The properties of the `scrollRect` Rectangle object use the
	 * display object's coordinate space and are scaled just like the overall
	 * display object. The corner bounds of the cropped window on the scrolling
	 * display object are the origin of the display object(0,0) and the point
	 * defined by the width and height of the rectangle. They are not centered
	 * around the origin, but use the origin to define the upper-left corner of
	 * the area. A scrolled display object always scrolls in whole pixel
	 * increments. 
	 *
	 * You can scroll an object left and right by setting the `x`
	 * property of the `scrollRect` Rectangle object. You can scroll
	 * an object up and down by setting the `y` property of the
	 * `scrollRect` Rectangle object. If the display object is rotated
	 * 90° and you scroll it left and right, the display object actually scrolls
	 * up and down.</haxe_doc>
		</scrollRect>
		<stage public="1" set="null">
			<c path="openfl.display.Stage"/>
			<haxe_doc>* The Stage of the display object. A Flash runtime application has only one
	 * Stage object. For example, you can create and load multiple display
	 * objects into the display list, and the `stage` property of each
	 * display object refers to the same Stage object(even if the display object
	 * belongs to a loaded SWF file).
	 *
	 * If a display object is not added to the display list, its
	 * `stage` property is set to `null`.</haxe_doc>
		</stage>
		<transform public="1" get="null" set="null">
			<c path="openfl.geom.Transform"/>
			<haxe_doc>* An object with properties pertaining to a display object's matrix, color
	 * transform, and pixel bounds. The specific properties  -  matrix,
	 * colorTransform, and three read-only properties
	 * (`concatenatedMatrix`, `concatenatedColorTransform`,
	 * and `pixelBounds`)  -  are described in the entry for the
	 * Transform class.
	 *
	 * Each of the transform object's properties is itself an object. This
	 * concept is important because the only way to set new values for the matrix
	 * or colorTransform objects is to create a new object and copy that object
	 * into the transform.matrix or transform.colorTransform property.
	 *
	 * For example, to increase the `tx` value of a display
	 * object's matrix, you must make a copy of the entire matrix object, then
	 * copy the new object into the matrix property of the transform object:
	 * ` var myMatrix:Matrix =
	 * myDisplayObject.transform.matrix; myMatrix.tx += 10;
	 * myDisplayObject.transform.matrix = myMatrix; `
	 *
	 * You cannot directly set the `tx` property. The following
	 * code has no effect on `myDisplayObject`: 
	 * ` myDisplayObject.transform.matrix.tx +=
	 * 10; `
	 *
	 * You can also copy an entire transform object and assign it to another
	 * display object's transform property. For example, the following code
	 * copies the entire transform object from `myOldDisplayObj` to
	 * `myNewDisplayObj`:
	 * `myNewDisplayObj.transform = myOldDisplayObj.transform;`
	 *
	 * The resulting display object, `myNewDisplayObj`, now has the
	 * same values for its matrix, color transform, and pixel bounds as the old
	 * display object, `myOldDisplayObj`.
	 *
	 * Note that AIR for TV devices use hardware acceleration, if it is
	 * available, for color transforms.</haxe_doc>
		</transform>
		<visible public="1" get="null" set="null">
			<x path="Bool"/>
			<haxe_doc>* Whether or not the display object is visible. Display objects that are not
	 * visible are disabled. For example, if `visible=false` for an
	 * InteractiveObject instance, it cannot be clicked.</haxe_doc>
		</visible>
		<width public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the width of the display object, in pixels. The width is
	 * calculated based on the bounds of the content of the display object. When
	 * you set the `width` property, the `scaleX` property
	 * is adjusted accordingly, as shown in the following code:
	 *
	 * Except for TextField and Video objects, a display object with no
	 * content(such as an empty sprite) has a width of 0, even if you try to set
	 * `width` to a different value.</haxe_doc>
		</width>
		<x public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the _x_ coordinate of the DisplayObject instance relative
	 * to the local coordinates of the parent DisplayObjectContainer. If the
	 * object is inside a DisplayObjectContainer that has transformations, it is
	 * in the local coordinate system of the enclosing DisplayObjectContainer.
	 * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the
	 * DisplayObjectContainer's children inherit a coordinate system that is
	 * rotated 90° counterclockwise. The object's coordinates refer to the
	 * registration point position.</haxe_doc>
		</x>
		<y public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Indicates the _y_ coordinate of the DisplayObject instance relative
	 * to the local coordinates of the parent DisplayObjectContainer. If the
	 * object is inside a DisplayObjectContainer that has transformations, it is
	 * in the local coordinate system of the enclosing DisplayObjectContainer.
	 * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the
	 * DisplayObjectContainer's children inherit a coordinate system that is
	 * rotated 90° counterclockwise. The object's coordinates refer to the
	 * registration point position.</haxe_doc>
		</y>
		<z public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</z>
		<getBounds public="1" set="method">
			<f a="targetCoordinateSpace">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc>* Returns a rectangle that defines the area of the display object relative
	 * to the coordinate system of the `targetCoordinateSpace` object.
	 * Consider the following code, which shows how the rectangle returned can
	 * vary depending on the `targetCoordinateSpace` parameter that
	 * you pass to the method:
	 *
	 * **Note:** Use the `localToGlobal()` and
	 * `globalToLocal()` methods to convert the display object's local
	 * coordinates to display coordinates, or display coordinates to local
	 * coordinates, respectively.
	 *
	 * The `getBounds()` method is similar to the
	 * `getRect()` method; however, the Rectangle returned by the
	 * `getBounds()` method includes any strokes on shapes, whereas
	 * the Rectangle returned by the `getRect()` method does not. For
	 * an example, see the description of the `getRect()` method.
	 * 
	 * @param targetCoordinateSpace The display object that defines the
	 *                              coordinate system to use.
	 * @return The rectangle that defines the area of the display object relative
	 *         to the `targetCoordinateSpace` object's coordinate
	 *         system.</haxe_doc>
		</getBounds>
		<getRect public="1" set="method">
			<f a="targetCoordinateSpace">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc>* Returns a rectangle that defines the boundary of the display object, based
	 * on the coordinate system defined by the `targetCoordinateSpace`
	 * parameter, excluding any strokes on shapes. The values that the
	 * `getRect()` method returns are the same or smaller than those
	 * returned by the `getBounds()` method.
	 *
	 * **Note:** Use `localToGlobal()` and
	 * `globalToLocal()` methods to convert the display object's local
	 * coordinates to Stage coordinates, or Stage coordinates to local
	 * coordinates, respectively.
	 * 
	 * @param targetCoordinateSpace The display object that defines the
	 *                              coordinate system to use.
	 * @return The rectangle that defines the area of the display object relative
	 *         to the `targetCoordinateSpace` object's coordinate
	 *         system.</haxe_doc>
		</getRect>
		<globalToLocal public="1" set="method">
			<f a="pos">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc>* Converts the `point` object from the Stage(global) coordinates
	 * to the display object's(local) coordinates.
	 *
	 * To use this method, first create an instance of the Point class. The
	 * _x_ and _y_ values that you assign represent global coordinates
	 * because they relate to the origin(0,0) of the main display area. Then
	 * pass the Point instance as the parameter to the
	 * `globalToLocal()` method. The method returns a new Point object
	 * with _x_ and _y_ values that relate to the origin of the display
	 * object instead of the origin of the Stage.
	 * 
	 * @param point An object created with the Point class. The Point object
	 *              specifies the _x_ and _y_ coordinates as
	 *              properties.
	 * @return A Point object with coordinates relative to the display object.</haxe_doc>
		</globalToLocal>
		<globalToLocal3D public="1" set="method">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Vector3D"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</globalToLocal3D>
		<hitTestObject public="1" set="method">
			<f a="obj">
				<c path="openfl.display.DisplayObject"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Evaluates the bounding box of the display object to see if it overlaps or
	 * intersects with the bounding box of the `obj` display object.
	 * 
	 * @param obj The display object to test against.
	 * @return `true` if the bounding boxes of the display objects
	 *         intersect; `false` if not.</haxe_doc>
		</hitTestObject>
		<hitTestPoint public="1" set="method">
			<f a="x:y:?shapeFlag" v="::false">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ shapeFlag : false }</e></m></meta>
			<haxe_doc>* Evaluates the display object to see if it overlaps or intersects with the
	 * point specified by the `x` and `y` parameters. The
	 * `x` and `y` parameters specify a point in the
	 * coordinate space of the Stage, not the display object container that
	 * contains the display object(unless that display object container is the
	 * Stage).
	 * 
	 * @param x         The _x_ coordinate to test against this object.
	 * @param y         The _y_ coordinate to test against this object.
	 * @param shapeFlag Whether to check against the actual pixels of the object
	 *                 (`true`) or the bounding box
	 *                 (`false`).
	 * @return `true` if the display object overlaps or intersects
	 *         with the specified point; `false` otherwise.</haxe_doc>
		</hitTestPoint>
		<localToGlobal public="1" set="method">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc>* Converts the `point` object from the display object's(local)
	 * coordinates to the Stage(global) coordinates.
	 *
	 * This method allows you to convert any given _x_ and _y_
	 * coordinates from values that are relative to the origin(0,0) of a
	 * specific display object(local coordinates) to values that are relative to
	 * the origin of the Stage(global coordinates).
	 *
	 * To use this method, first create an instance of the Point class. The
	 * _x_ and _y_ values that you assign represent local coordinates
	 * because they relate to the origin of the display object.
	 *
	 * You then pass the Point instance that you created as the parameter to
	 * the `localToGlobal()` method. The method returns a new Point
	 * object with _x_ and _y_ values that relate to the origin of the
	 * Stage instead of the origin of the display object.
	 * 
	 * @param point The name or identifier of a point created with the Point
	 *              class, specifying the _x_ and _y_ coordinates as
	 *              properties.
	 * @return A Point object with coordinates relative to the Stage.</haxe_doc>
		</localToGlobal>
		<local3DToGlobal public="1" set="method">
			<f a="point3d">
				<c path="openfl.geom.Vector3D"/>
				<c path="openfl.geom.Point"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</local3DToGlobal>
		<haxe_doc>* The DisplayObject class is the base class for all objects that can be
 * placed on the display list. The display list manages all objects displayed
 * in openfl. Use the DisplayObjectContainer class to arrange the
 * display objects in the display list. DisplayObjectContainer objects can
 * have child display objects, while other display objects, such as Shape and
 * TextField objects, are "leaf" nodes that have only parents and siblings, no
 * children.
 *
 * The DisplayObject class supports basic functionality like the _x_
 * and _y_ position of an object, as well as more advanced properties of
 * the object such as its transformation matrix. 
 *
 * DisplayObject is an abstract base class; therefore, you cannot call
 * DisplayObject directly. Invoking `new DisplayObject()` throws an
 * `ArgumentError` exception. 
 *
 * All display objects inherit from the DisplayObject class.
 *
 * The DisplayObject class itself does not include any APIs for rendering
 * content onscreen. For that reason, if you want create a custom subclass of
 * the DisplayObject class, you will want to extend one of its subclasses that
 * do have APIs for rendering content onscreen, such as the Shape, Sprite,
 * Bitmap, SimpleButton, TextField, or MovieClip class.
 *
 * The DisplayObject class contains several broadcast events. Normally, the
 * target of any particular event is a specific DisplayObject instance. For
 * example, the target of an `added` event is the specific
 * DisplayObject instance that was added to the display list. Having a single
 * target restricts the placement of event listeners to that target and in
 * some cases the target's ancestors on the display list. With broadcast
 * events, however, the target is not a specific DisplayObject instance, but
 * rather all DisplayObject instances, including those that are not on the
 * display list. This means that you can add a listener to any DisplayObject
 * instance to listen for broadcast events. In addition to the broadcast
 * events listed in the DisplayObject class's Events table, the DisplayObject
 * class also inherits two broadcast events from the EventDispatcher class:
 * `activate` and `deactivate`.
 *
 * Some properties previously used in the ActionScript 1.0 and 2.0
 * MovieClip, TextField, and Button classes(such as `_alpha`,
 * `_height`, `_name`, `_width`,
 * `_x`, `_y`, and others) have equivalents in the
 * ActionScript 3.0 DisplayObject class that are renamed so that they no
 * longer begin with the underscore(_) character.
 *
 * For more information, see the "Display Programming" chapter of the
 * _ActionScript 3.0 Developer's Guide_.
 * 
 * @event added            Dispatched when a display object is added to the
 *                         display list. The following methods trigger this
 *                         event:
 *                         `DisplayObjectContainer.addChild()`,
 *                         `DisplayObjectContainer.addChildAt()`.
 * @event addedToStage     Dispatched when a display object is added to the on
 *                         stage display list, either directly or through the
 *                         addition of a sub tree in which the display object
 *                         is contained. The following methods trigger this
 *                         event:
 *                         `DisplayObjectContainer.addChild()`,
 *                         `DisplayObjectContainer.addChildAt()`.
 * @event enterFrame       [broadcast event] Dispatched when the playhead is
 *                         entering a new frame. If the playhead is not
 *                         moving, or if there is only one frame, this event
 *                         is dispatched continuously in conjunction with the
 *                         frame rate. This event is a broadcast event, which
 *                         means that it is dispatched by all display objects
 *                         with a listener registered for this event.
 * @event exitFrame        [broadcast event] Dispatched when the playhead is
 *                         exiting the current frame. All frame scripts have
 *                         been run. If the playhead is not moving, or if
 *                         there is only one frame, this event is dispatched
 *                         continuously in conjunction with the frame rate.
 *                         This event is a broadcast event, which means that
 *                         it is dispatched by all display objects with a
 *                         listener registered for this event.
 * @event frameConstructed [broadcast event] Dispatched after the constructors
 *                         of frame display objects have run but before frame
 *                         scripts have run. If the playhead is not moving, or
 *                         if there is only one frame, this event is
 *                         dispatched continuously in conjunction with the
 *                         frame rate. This event is a broadcast event, which
 *                         means that it is dispatched by all display objects
 *                         with a listener registered for this event.
 * @event removed          Dispatched when a display object is about to be
 *                         removed from the display list. Two methods of the
 *                         DisplayObjectContainer class generate this event:
 *                         `removeChild()` and
 *                         `removeChildAt()`.
 *
 *                         The following methods of a
 *                         DisplayObjectContainer object also generate this
 *                         event if an object must be removed to make room for
 *                         the new object: `addChild()`,
 *                         `addChildAt()`, and
 *                         `setChildIndex()`. 
 * @event removedFromStage Dispatched when a display object is about to be
 *                         removed from the display list, either directly or
 *                         through the removal of a sub tree in which the
 *                         display object is contained. Two methods of the
 *                         DisplayObjectContainer class generate this event:
 *                         `removeChild()` and
 *                         `removeChildAt()`.
 *
 *                         The following methods of a
 *                         DisplayObjectContainer object also generate this
 *                         event if an object must be removed to make room for
 *                         the new object: `addChild()`,
 *                         `addChildAt()`, and
 *                         `setChildIndex()`. 
 * @event render           [broadcast event] Dispatched when the display list
 *                         is about to be updated and rendered. This event
 *                         provides the last opportunity for objects listening
 *                         for this event to make changes before the display
 *                         list is rendered. You must call the
 *                         `invalidate()` method of the Stage
 *                         object each time you want a `render`
 *                         event to be dispatched. `Render` events
 *                         are dispatched to an object only if there is mutual
 *                         trust between it and the object that called
 *                         `Stage.invalidate()`. This event is a
 *                         broadcast event, which means that it is dispatched
 *                         by all display objects with a listener registered
 *                         for this event.
 *
 *                         **Note: **This event is not dispatched if the
 *                         display is not rendering. This is the case when the
 *                         content is either minimized or obscured.</haxe_doc>
	</class>
	<class path="openfl.display.InteractiveObject" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/InteractiveObject.hx" extern="1">
		<extends path="openfl.display.DisplayObject"/>
		<accessibilityImplementation public="1">
			<c path="flash.accessibility.AccessibilityImplementation"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</accessibilityImplementation>
		<contextMenu public="1">
			<c path="flash.ui.ContextMenu"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</contextMenu>
		<doubleClickEnabled public="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the object receives `doubleClick` events. The
	 * default value is `false`, which means that by default an
	 * InteractiveObject instance does not receive `doubleClick`
	 * events. If the `doubleClickEnabled` property is set to
	 * `true`, the instance receives `doubleClick` events
	 * within its bounds. The `mouseEnabled` property of the
	 * InteractiveObject instance must also be set to `true` for the
	 * object to receive `doubleClick` events.
	 *
	 * No event is dispatched by setting this property. You must use the
	 * `addEventListener()` method to add an event listener for the
	 * `doubleClick` event.</haxe_doc>
		</doubleClickEnabled>
		<focusRect public="1"><t path="Null"><x path="Bool"/></t></focusRect>
		<mouseEnabled public="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether this object receives mouse, or other user input,
	 * messages. The default value is `true`, which means that by
	 * default any InteractiveObject instance that is on the display list
	 * receives mouse events or other user input events. If
	 * `mouseEnabled` is set to `false`, the instance does
	 * not receive any mouse events(or other user input events like keyboard
	 * events). Any children of this instance on the display list are not
	 * affected. To change the `mouseEnabled` behavior for all
	 * children of an object on the display list, use
	 * `openfl.display.DisplayObjectContainer.mouseChildren`.
	 *
	 *  No event is dispatched by setting this property. You must use the
	 * `addEventListener()` method to create interactive
	 * functionality.</haxe_doc>
		</mouseEnabled>
		<needsSoftKeyboard public="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether a virtual keyboard(an on-screen, software keyboard)
	 * should display when this InteractiveObject instance receives focus.
	 *
	 * By default, the value is `false` and focusing an
	 * InteractiveObject instance does not raise a soft keyboard. If the
	 * `needsSoftKeyboard` property is set to `true`, the
	 * runtime raises a soft keyboard when the InteractiveObject instance is
	 * ready to accept user input. An InteractiveObject instance is ready to
	 * accept user input after a programmatic call to set the Stage
	 * `focus` property or a user interaction, such as a "tap." If the
	 * client system has a hardware keyboard available or does not support
	 * virtual keyboards, then the soft keyboard is not raised.
	 *
	 * The InteractiveObject instance dispatches
	 * `softKeyboardActivating`, `softKeyboardActivate`,
	 * and `softKeyboardDeactivate` events when the soft keyboard
	 * raises and lowers.
	 *
	 * **Note:** This property is not supported in AIR applications on
	 * iOS.</haxe_doc>
		</needsSoftKeyboard>
		<softKeyboardInputAreaOfInterest public="1"><c path="openfl.geom.Rectangle"/></softKeyboardInputAreaOfInterest>
		<tabEnabled public="1" get="null" set="null"><x path="Bool"/></tabEnabled>
		<tabIndex public="1" get="null" set="null"><x path="Int"/></tabIndex>
		<requestSoftKeyboard public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>* Raises a virtual keyboard.
	 *
	 * Calling this method focuses the InteractiveObject instance and raises
	 * the soft keyboard, if necessary. The `needsSoftKeyboard` must
	 * also be `true`. A keyboard is not raised if a hardware keyboard
	 * is available, or if the client system does not support virtual
	 * keyboards.
	 *
	 * **Note:** This method is not supported in AIR applications on
	 * iOS.
	 * 
	 * @return A value of `true` means that the soft keyboard request
	 *         was granted; `false` means that the soft keyboard was
	 *         not raised.</haxe_doc>
		</requestSoftKeyboard>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Calling the `new InteractiveObject()` constructor throws an
	 * `ArgumentError` exception. You can, however, call constructors
	 * for the following subclasses of InteractiveObject:
	 * 
	 *  * `new SimpleButton()`
	 *  * `new TextField()`
	 *  * `new Loader()`
	 *  * `new Sprite()`
	 *  * `new MovieClip()`
	 *</haxe_doc>
		</new>
		<haxe_doc>* The InteractiveObject class is the abstract base class for all display
 * objects with which the user can interact, using the mouse, keyboard, or
 * other user input device.
 *
 * You cannot instantiate the InteractiveObject class directly. A call to
 * the `new InteractiveObject()` constructor throws an
 * `ArgumentError` exception.
 *
 * The InteractiveObject class itself does not include any APIs for
 * rendering content onscreen. To create a custom subclass of the
 * InteractiveObject class, extend one of the subclasses that do have APIs for
 * rendering content onscreen, such as the Sprite, SimpleButton, TextField, or
 * MovieClip classes.
 * 
 * @event clear                  Dispatched when the user selects 'Clear'(or
 *                               'Delete') from the text context menu. This
 *                               event is dispatched to the object that
 *                               currently has focus. If the object that
 *                               currently has focus is a TextField, the
 *                               default behavior of this event is to cause
 *                               any currently selected text in the text field
 *                               to be deleted.
 * @event click                  Dispatched when a user presses and releases
 *                               the main button of the user's pointing device
 *                               over the same InteractiveObject. For a click
 *                               event to occur, it must always follow this
 *                               series of events in the order of occurrence:
 *                               mouseDown event, then mouseUp. The target
 *                               object must be identical for both of these
 *                               events; otherwise the `click`
 *                               event does not occur. Any number of other
 *                               mouse events can occur at any time between
 *                               the `mouseDown` or
 *                               `mouseUp` events; the
 *                               `click` event still occurs.
 * @event contextMenu            Dispatched when a user gesture triggers the
 *                               context menu associated with this interactive
 *                               object in an AIR application.
 * @event copy                   Dispatched when the user activates the
 *                               platform-specific accelerator key combination
 *                               for a copy operation or selects 'Copy' from
 *                               the text context menu. This event is
 *                               dispatched to the object that currently has
 *                               focus. If the object that currently has focus
 *                               is a TextField, the default behavior of this
 *                               event is to cause any currently selected text
 *                               in the text field to be copied to the
 *                               clipboard.
 * @event cut                    Dispatched when the user activates the
 *                               platform-specific accelerator key combination
 *                               for a cut operation or selects 'Cut' from the
 *                               text context menu. This event is dispatched
 *                               to the object that currently has focus. If
 *                               the object that currently has focus is a
 *                               TextField, the default behavior of this event
 *                               is to cause any currently selected text in
 *                               the text field to be cut to the clipboard.
 * @event doubleClick            Dispatched when a user presses and releases
 *                               the main button of a pointing device twice in
 *                               rapid succession over the same
 *                               InteractiveObject when that object's
 *                               `doubleClickEnabled` flag is set
 *                               to `true`. For a
 *                               `doubleClick` event to occur, it
 *                               must immediately follow the following series
 *                               of events: `mouseDown`,
 *                               `mouseUp`, `click`,
 *                               `mouseDown`, `mouseUp`.
 *                               All of these events must share the same
 *                               target as the `doubleClick` event.
 *                               The second click, represented by the second
 *                               `mouseDown` and
 *                               `mouseUp` events, must occur
 *                               within a specific period of time after the
 *                               `click` event. The allowable
 *                               length of this period varies by operating
 *                               system and can often be configured by the
 *                               user. If the target is a selectable text
 *                               field, the word under the pointer is selected
 *                               as the default behavior. If the target
 *                               InteractiveObject does not have its
 *                               `doubleClickEnabled` flag set to
 *                               `true` it receives two
 *                               `click` events.
 *
 *                               The `doubleClickEnabled`
 *                               property defaults to `false`. 
 *
 *                               The double-click text selection behavior
 *                               of a TextField object is not related to the
 *                               `doubleClick` event. Use
 *                               `TextField.doubleClickEnabled` to
 *                               control TextField selections.
 * @event focusIn                Dispatched _after_ a display object
 *                               gains focus. This situation happens when a
 *                               user highlights the object with a pointing
 *                               device or keyboard navigation. The recipient
 *                               of such focus is called the target object of
 *                               this event, while the corresponding
 *                               InteractiveObject instance that lost focus
 *                               because of this change is called the related
 *                               object. A reference to the related object is
 *                               stored in the receiving object's
 *                               `relatedObject` property. The
 *                               `shiftKey` property is not used.
 *                               This event follows the dispatch of the
 *                               previous object's `focusOut`
 *                               event.
 * @event focusOut               Dispatched _after_ a display object
 *                               loses focus. This happens when a user
 *                               highlights a different object with a pointing
 *                               device or keyboard navigation. The object
 *                               that loses focus is called the target object
 *                               of this event, while the corresponding
 *                               InteractiveObject instance that receives
 *                               focus is called the related object. A
 *                               reference to the related object is stored in
 *                               the target object's
 *                               `relatedObject` property. The
 *                               `shiftKey` property is not used.
 *                               This event precedes the dispatch of the
 *                               `focusIn` event by the related
 *                               object.
 * @event gesturePan             Dispatched when the user moves a point of
 *                               contact over the InteractiveObject instance
 *                               on a touch-enabled device(such as moving a
 *                               finger from left to right over a display
 *                               object on a mobile phone or tablet with a
 *                               touch screen). Some devices might also
 *                               interpret this contact as a
 *                               `mouseOver` event and as a
 *                               `touchOver` event.
 *
 *                               Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               `mouseOver` event or a
 *                               `touchOver` event or a
 *                               `gesturePan` event, or all if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               `mouseOver` event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               `gesturePan` event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event gesturePressAndTap     Dispatched when the user creates a point of
 *                               contact with an InteractiveObject instance,
 *                               then taps on a touch-enabled device(such as
 *                               placing several fingers over a display object
 *                               to open a menu and then taps one finger to
 *                               select a menu item on a mobile phone or
 *                               tablet with a touch screen). Some devices
 *                               might also interpret this contact as a
 *                               combination of several mouse events, as well.
 *
 *
 *                               Specifically, if a user moves a finger
 *                               over an InteractiveObject, and then provides
 *                               a secondary tap, the InteractiveObject
 *                               instance can dispatch a
 *                               `mouseOver` event and a
 *                               `click` event(among others) as
 *                               well as the `gesturePressAndTap`
 *                               event, or all if the current environment
 *                               supports it. Choose how you want to handle
 *                               the user interaction. Use the
 *                               openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               `mouseOver` event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               `gesturePressAndTap` event, you
 *                               can design your event handler to respond to
 *                               the specific needs of a touch-enabled
 *                               environment and provide users with a richer
 *                               touch-enabled experience. You can also handle
 *                               both events, separately, to provide a
 *                               different response for a touch event than a
 *                               mouse event.
 *
 *                               When handling the properties of the event
 *                               object, note that the `localX` and
 *                               `localY` properties are set to the
 *                               primary point of contact(the "push"). The
 *                               `offsetX` and `offsetY`
 *                               properties are the distance to the secondary
 *                               point of contact(the "tap").
 * @event gestureRotate          Dispatched when the user performs a rotation
 *                               gesture at a point of contact with an
 *                               InteractiveObject instance(such as touching
 *                               two fingers and rotating them over a display
 *                               object on a mobile phone or tablet with a
 *                               touch screen). Two-finger rotation is a
 *                               common rotation gesture, but each device and
 *                               operating system can have its own
 *                               requirements to indicate rotation. Some
 *                               devices might also interpret this contact as
 *                               a combination of several mouse events, as
 *                               well.
 *
 *                               Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               `mouseOver` event and a
 *                               `click` event(among others), in
 *                               addition to the `gestureRotate`
 *                               event, or all if the current environment
 *                               supports it. Choose how you want to handle
 *                               the user interaction. Use the
 *                               openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               `mouseOver` event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               `gestureRotate` event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               When handling the properties of the event
 *                               object, note that the `localX` and
 *                               `localY` properties are set to the
 *                               primary point of contact. The
 *                               `offsetX` and `offsetY`
 *                               properties are the distance to the point of
 *                               contact where the rotation gesture is
 *                               complete.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event gestureSwipe           Dispatched when the user performs a swipe
 *                               gesture at a point of contact with an
 *                               InteractiveObject instance(such as touching
 *                               three fingers to a screen and then moving
 *                               them in parallel over a display object on a
 *                               mobile phone or tablet with a touch screen).
 *                               Moving several fingers in parallel is a
 *                               common swipe gesture, but each device and
 *                               operating system can have its own
 *                               requirements for a swipe. Some devices might
 *                               also interpret this contact as a combination
 *                               of several mouse events, as well.
 *
 *                               Specifically, if a user moves a finger
 *                               over an InteractiveObject, and then moves the
 *                               fingers together, the InteractiveObject
 *                               instance can dispatch a `rollOver`
 *                               event and a `rollOut` event(among
 *                               others), in addition to the
 *                               `gestureSwipe` event, or all if
 *                               the current environment supports it. Choose
 *                               how you want to handle the user interaction.
 *                               If you choose to handle the
 *                               `rollOver` event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               `gestureSwipe` event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               When handling the properties of the event
 *                               object, note that the `localX` and
 *                               `localY` properties are set to the
 *                               primary point of contact. The
 *                               `offsetX` and `offsetY`
 *                               properties are the distance to the point of
 *                               contact where the swipe gesture is
 *                               complete.
 *
 *                               **Note:** While some devices using the
 *                               Mac OS operating system can interpret a
 *                               four-finger swipe, this API only supports a
 *                               three-finger swipe.
 * @event gestureTwoFingerTap    Dispatched when the user presses two points
 *                               of contact over the same InteractiveObject
 *                               instance on a touch-enabled device(such as
 *                               presses and releases two fingers over a
 *                               display object on a mobile phone or tablet
 *                               with a touch screen). Some devices might also
 *                               interpret this contact as a
 *                               `doubleClick` event.
 *
 *                               Specifically, if a user taps two fingers
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               `doubleClick` event or a
 *                               `gestureTwoFingerTap` event, or
 *                               both if the current environment supports it.
 *                               Choose how you want to handle the user
 *                               interaction. Use the openfl.ui.Multitouch
 *                               class to manage touch event handling(enable
 *                               touch gesture event handling, simple touch
 *                               point event handling, or disable touch events
 *                               so only mouse events are dispatched). If you
 *                               choose to handle the `doubleClick`
 *                               event, then the same event handler will run
 *                               on a touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               `gestureTwoFingerTap` event, you
 *                               can design your event handler to respond to
 *                               the specific needs of a touch-enabled
 *                               environment and provide users with a richer
 *                               touch-enabled experience. You can also handle
 *                               both events, separately, to provide a
 *                               different response for a touch event than a
 *                               mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event gestureZoom            Dispatched when the user performs a zoom
 *                               gesture at a point of contact with an
 *                               InteractiveObject instance(such as touching
 *                               two fingers to a screen and then quickly
 *                               spreading the fingers apart over a display
 *                               object on a mobile phone or tablet with a
 *                               touch screen). Moving fingers apart is a
 *                               common zoom gesture, but each device and
 *                               operating system can have its own
 *                               requirements to indicate zoom. Some devices
 *                               might also interpret this contact as a
 *                               combination of several mouse events, as well.
 *
 *
 *                               Specifically, if a user moves a finger
 *                               over an InteractiveObject, and then moves the
 *                               fingers apart, the InteractiveObject instance
 *                               can dispatch a `mouseOver` event
 *                               and a `click` event(among
 *                               others), in addition to the
 *                               `gestureZoom` event, or all if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               `mouseOver` event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               `gestureZoom` event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               When handling the properties of the event
 *                               object, note that the `localX` and
 *                               `localY` properties are set to the
 *                               primary point of contact. The
 *                               `offsetX` and `offsetY`
 *                               properties are the distance to the point of
 *                               contact where the zoom gesture is
 *                               complete.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event imeStartComposition    This event is dispatched to any client app
 *                               that supports inline input with an IME
 * @event keyDown                Dispatched when the user presses a key.
 *                               Mappings between keys and specific characters
 *                               vary by device and operating system. This
 *                               event type is generated after such a mapping
 *                               occurs but before the processing of an input
 *                               method editor(IME). IMEs are used to enter
 *                               characters, such as Chinese ideographs, that
 *                               the standard QWERTY keyboard is ill-equipped
 *                               to produce. This event occurs before the
 *                               `keyUp` event.
 *
 *                               In AIR, canceling this event prevents the
 *                               character from being entered into a text
 *                               field.
 * @event keyFocusChange         Dispatched when the user attempts to change
 *                               focus by using keyboard navigation. The
 *                               default behavior of this event is to change
 *                               the focus and dispatch the corresponding
 *                               `focusIn` and
 *                               `focusOut` events.
 *
 *                               This event is dispatched to the object
 *                               that currently has focus. The related object
 *                               for this event is the InteractiveObject
 *                               instance that receives focus if you do not
 *                               prevent the default behavior. You can prevent
 *                               the change in focus by calling the
 *                               `preventDefault()` method in an
 *                               event listener that is properly registered
 *                               with the target object. Focus changes and
 *                               `focusIn` and
 *                               `focusOut` events are dispatched
 *                               by default.
 * @event keyUp                  Dispatched when the user releases a key.
 *                               Mappings between keys and specific characters
 *                               vary by device and operating system. This
 *                               event type is generated after such a mapping
 *                               occurs but before the processing of an input
 *                               method editor(IME). IMEs are used to enter
 *                               characters, such as Chinese ideographs, that
 *                               the standard QWERTY keyboard is ill-equipped
 *                               to produce. This event occurs after a
 *                               `keyDown` event and has the
 *                               following characteristics:
 * @event middleClick            Dispatched when a user presses and releases
 *                               the middle button of the user's pointing
 *                               device over the same InteractiveObject. For a
 *                               `middleClick` event to occur, it
 *                               must always follow this series of events in
 *                               the order of occurrence:
 *                               `middleMouseDown` event, then
 *                               `middleMouseUp`. The target object
 *                               must be identical for both of these events;
 *                               otherwise the `middleClick` event
 *                               does not occur. Any number of other mouse
 *                               events can occur at any time between the
 *                               `middleMouseDown` or
 *                               `middleMouseUp` events; the
 *                               `middleClick` event still occurs.
 * @event middleMouseDown        Dispatched when a user presses the middle
 *                               pointing device button over an
 *                               InteractiveObject instance.
 * @event middleMouseUp          Dispatched when a user releases the pointing
 *                               device button over an InteractiveObject
 *                               instance.
 * @event mouseDown              Dispatched when a user presses the pointing
 *                               device button over an InteractiveObject
 *                               instance. If the target is a SimpleButton
 *                               instance, the SimpleButton instance displays
 *                               the `downState` display object as
 *                               the default behavior. If the target is a
 *                               selectable text field, the text field begins
 *                               selection as the default behavior.
 * @event mouseFocusChange       Dispatched when the user attempts to change
 *                               focus by using a pointer device. The default
 *                               behavior of this event is to change the focus
 *                               and dispatch the corresponding
 *                               `focusIn` and
 *                               `focusOut` events.
 *
 *                               This event is dispatched to the object
 *                               that currently has focus. The related object
 *                               for this event is the InteractiveObject
 *                               instance that receives focus if you do not
 *                               prevent the default behavior. You can prevent
 *                               the change in focus by calling
 *                               `preventDefault()` in an event
 *                               listener that is properly registered with the
 *                               target object. The `shiftKey`
 *                               property is not used. Focus changes and
 *                               `focusIn` and
 *                               `focusOut` events are dispatched
 *                               by default.
 * @event mouseMove              Dispatched when a user moves the pointing
 *                               device while it is over an InteractiveObject.
 *                               If the target is a text field that the user
 *                               is selecting, the selection is updated as the
 *                               default behavior.
 * @event mouseOut               Dispatched when the user moves a pointing
 *                               device away from an InteractiveObject
 *                               instance. The event target is the object
 *                               previously under the pointing device. The
 *                               `relatedObject` is the object the
 *                               pointing device has moved to. If the target
 *                               is a SimpleButton instance, the button
 *                               displays the `upState` display
 *                               object as the default behavior.
 *
 *                               The `mouseOut` event is
 *                               dispatched each time the mouse leaves the
 *                               area of any child object of the display
 *                               object container, even if the mouse remains
 *                               over another child object of the display
 *                               object container. This is different behavior
 *                               than the purpose of the `rollOut`
 *                               event, which is to simplify the coding of
 *                               rollover behaviors for display object
 *                               containers with children. When the mouse
 *                               leaves the area of a display object or the
 *                               area of any of its children to go to an
 *                               object that is not one of its children, the
 *                               display object dispatches the
 *                               `rollOut` event.The
 *                               `rollOut` events are dispatched
 *                               consecutively up the parent chain of the
 *                               object, starting with the object and ending
 *                               with the highest parent that is neither the
 *                               root nor an ancestor of the
 *                               `relatedObject`.
 * @event mouseOver              Dispatched when the user moves a pointing
 *                               device over an InteractiveObject instance.
 *                               The `relatedObject` is the object
 *                               that was previously under the pointing
 *                               device. If the target is a SimpleButton
 *                               instance, the object displays the
 *                               `overState` or
 *                               `upState` display object,
 *                               depending on whether the mouse button is
 *                               down, as the default behavior.
 *
 *                               The `mouseOver` event is
 *                               dispatched each time the mouse enters the
 *                               area of any child object of the display
 *                               object container, even if the mouse was
 *                               already over another child object of the
 *                               display object container. This is different
 *                               behavior than the purpose of the
 *                               `rollOver` event, which is to
 *                               simplify the coding of rollout behaviors for
 *                               display object containers with children. When
 *                               the mouse enters the area of a display object
 *                               or the area of any of its children from an
 *                               object that is not one of its children, the
 *                               display object dispatches the
 *                               `rollOver` event. The
 *                               `rollOver` events are dispatched
 *                               consecutively down the parent chain of the
 *                               object, starting with the highest parent that
 *                               is neither the root nor an ancestor of the
 *                               `relatedObject` and ending with
 *                               the object.
 * @event mouseUp                Dispatched when a user releases the pointing
 *                               device button over an InteractiveObject
 *                               instance. If the target is a SimpleButton
 *                               instance, the object displays the
 *                               `upState` display object. If the
 *                               target is a selectable text field, the text
 *                               field ends selection as the default behavior.
 * @event mouseWheel             Dispatched when a mouse wheel is spun over an
 *                               InteractiveObject instance. If the target is
 *                               a text field, the text scrolls as the default
 *                               behavior. Only available on Microsoft Windows
 *                               operating systems.
 * @event nativeDragComplete     Dispatched by the drag initiator
 *                               InteractiveObject when the user releases the
 *                               drag gesture.
 *
 *                               The event's dropAction property indicates
 *                               the action set by the drag target object; a
 *                               value of "none"
 *                              (`DragActions.NONE`) indicates
 *                               that the drop was canceled or was not
 *                               accepted.
 *
 *                               The `nativeDragComplete` event
 *                               handler is a convenient place to update the
 *                               state of the initiating display object, for
 *                               example, by removing an item from a list(on
 *                               a drag action of "move"), or by changing the
 *                               visual properties.
 * @event nativeDragDrop         Dispatched by the target InteractiveObject
 *                               when a dragged object is dropped on it and
 *                               the drop has been accepted with a call to
 *                               DragManager.acceptDragDrop().
 *
 *                               Access the dropped data using the event
 *                               object `clipboard` property.
 *
 *                               The handler for this event should set the
 *                               `DragManager.dropAction` property
 *                               to provide feedback to the initiator object
 *                               about which drag action was taken. If no
 *                               value is set, the DragManager will select a
 *                               default value from the list of allowed
 *                               actions.
 * @event nativeDragEnter        Dispatched by an InteractiveObject when a
 *                               drag gesture enters its boundary.
 *
 *                               Handle either the
 *                               `nativeDragEnter` or
 *                               `nativeDragOver` events to allow
 *                               the display object to become the drop
 *                               target.
 *
 *                               To determine whether the dispatching
 *                               display object can accept the drop, check the
 *                               suitability of the data in
 *                               `clipboard` property of the event
 *                               object, and the allowed drag actions in the
 *                               `allowedActions` property.
 * @event nativeDragExit         Dispatched by an InteractiveObject when a
 *                               drag gesture leaves its boundary.
 * @event nativeDragOver         Dispatched by an InteractiveObject
 *                               continually while a drag gesture remains
 *                               within its boundary.
 *
 *                               `nativeDragOver` events are
 *                               dispatched whenever the mouse is moved. On
 *                               Windows and Mac, they are also dispatched on
 *                               a short timer interval even when the mouse
 *                               has not moved.
 *
 *                               Handle either the
 *                               `nativeDragOver` or
 *                               `nativeDragEnter` events to allow
 *                               the display object to become the drop
 *                               target.
 *
 *                               To determine whether the dispatching
 *                               display object can accept the drop, check the
 *                               suitability of the data in
 *                               `clipboard` property of the event
 *                               object, and the allowed drag actions in the
 *                               `allowedActions` property.
 * @event nativeDragStart        Dispatched at the beginning of a drag
 *                               operation by the InteractiveObject that is
 *                               specified as the drag initiator in the
 *                               DragManager.doDrag() call.
 * @event nativeDragUpdate       Dispatched during a drag operation by the
 *                               InteractiveObject that is specified as the
 *                               drag initiator in the DragManager.doDrag()
 *                               call.
 *
 *                               `nativeDragUpdate` events are
 *                               not dispatched on Linux.
 * @event paste                  Dispatched when the user activates the
 *                               platform-specific accelerator key combination
 *                               for a paste operation or selects 'Paste' from
 *                               the text context menu. This event is
 *                               dispatched to the object that currently has
 *                               focus. If the object that currently has focus
 *                               is a TextField, the default behavior of this
 *                               event is to cause the contents of the
 *                               clipboard to be pasted into the text field at
 *                               the current insertion point replacing any
 *                               currently selected text in the text field.
 * @event rightClick             Dispatched when a user presses and releases
 *                               the right button of the user's pointing
 *                               device over the same InteractiveObject. For a
 *                               `rightClick` event to occur, it
 *                               must always follow this series of events in
 *                               the order of occurrence:
 *                               `rightMouseDown` event, then
 *                               `rightMouseUp`. The target object
 *                               must be identical for both of these events;
 *                               otherwise the `rightClick` event
 *                               does not occur. Any number of other mouse
 *                               events can occur at any time between the
 *                               `rightMouseDown` or
 *                               `rightMouseUp` events; the
 *                               `rightClick` event still occurs.
 * @event rightMouseDown         Dispatched when a user presses the pointing
 *                               device button over an InteractiveObject
 *                               instance.
 * @event rightMouseUp           Dispatched when a user releases the pointing
 *                               device button over an InteractiveObject
 *                               instance.
 * @event rollOut                Dispatched when the user moves a pointing
 *                               device away from an InteractiveObject
 *                               instance. The event target is the object
 *                               previously under the pointing device or a
 *                               parent of that object. The
 *                               `relatedObject` is the object that
 *                               the pointing device has moved to. The
 *                               `rollOut` events are dispatched
 *                               consecutively up the parent chain of the
 *                               object, starting with the object and ending
 *                               with the highest parent that is neither the
 *                               root nor an ancestor of the
 *                               `relatedObject`.
 *
 *                               The purpose of the `rollOut`
 *                               event is to simplify the coding of rollover
 *                               behaviors for display object containers with
 *                               children. When the mouse leaves the area of a
 *                               display object or the area of any of its
 *                               children to go to an object that is not one
 *                               of its children, the display object
 *                               dispatches the `rollOut` event.
 *                               This is different behavior than that of the
 *                               `mouseOut` event, which is
 *                               dispatched each time the mouse leaves the
 *                               area of any child object of the display
 *                               object container, even if the mouse remains
 *                               over another child object of the display
 *                               object container.
 * @event rollOver               Dispatched when the user moves a pointing
 *                               device over an InteractiveObject instance.
 *                               The event target is the object under the
 *                               pointing device or a parent of that object.
 *                               The `relatedObject` is the object
 *                               that was previously under the pointing
 *                               device. The `rollOver` events are
 *                               dispatched consecutively down the parent
 *                               chain of the object, starting with the
 *                               highest parent that is neither the root nor
 *                               an ancestor of the `relatedObject`
 *                               and ending with the object.
 *
 *                               The purpose of the `rollOver`
 *                               event is to simplify the coding of rollout
 *                               behaviors for display object containers with
 *                               children. When the mouse enters the area of a
 *                               display object or the area of any of its
 *                               children from an object that is not one of
 *                               its children, the display object dispatches
 *                               the `rollOver` event. This is
 *                               different behavior than that of the
 *                               `mouseOver` event, which is
 *                               dispatched each time the mouse enters the
 *                               area of any child object of the display
 *                               object container, even if the mouse was
 *                               already over another child object of the
 *                               display object container. 
 * @event selectAll              Dispatched when the user activates the
 *                               platform-specific accelerator key combination
 *                               for a select all operation or selects 'Select
 *                               All' from the text context menu. This event
 *                               is dispatched to the object that currently
 *                               has focus. If the object that currently has
 *                               focus is a TextField, the default behavior of
 *                               this event is to cause all the contents of
 *                               the text field to be selected.
 * @event softKeyboardActivate   Dispatched immediately after the soft
 *                               keyboard is raised.
 * @event softKeyboardActivating Dispatched immediately before the soft
 *                               keyboard is raised.
 * @event softKeyboardDeactivate Dispatched immediately after the soft
 *                               keyboard is lowered.
 * @event tabChildrenChange      Dispatched when the value of the object's
 *                               `tabChildren` flag changes.
 * @event tabEnabledChange       Dispatched when the object's
 *                               `tabEnabled` flag changes.
 * @event tabIndexChange         Dispatched when the value of the object's
 *                               `tabIndex` property changes.
 * @event textInput              Dispatched when a user enters one or more
 *                               characters of text. Various text input
 *                               methods can generate this event, including
 *                               standard keyboards, input method editors
 *                              (IMEs), voice or speech recognition systems,
 *                               and even the act of pasting plain text with
 *                               no formatting or style information.
 * @event touchBegin             Dispatched when the user first contacts a
 *                               touch-enabled device(such as touches a
 *                               finger to a mobile phone or tablet with a
 *                               touch screen). Some devices might also
 *                               interpret this contact as a
 *                               `mouseDown` event.
 *
 *                               Specifically, if a user touches a finger
 *                               to a touch screen, the InteractiveObject
 *                               instance can dispatch a
 *                               `mouseDown` event or a
 *                               `touchBegin` event, or both if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               `mouseDown` event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               `touchBegin` event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event touchEnd               Dispatched when the user removes contact with
 *                               a touch-enabled device(such as lifts a
 *                               finger off a mobile phone or tablet with a
 *                               touch screen). Some devices might also
 *                               interpret this contact as a
 *                               `mouseUp` event.
 *
 *                               Specifically, if a user lifts a finger
 *                               from a touch screen, the InteractiveObject
 *                               instance can dispatch a `mouseUp`
 *                               event or a `touchEnd` event, or
 *                               both if the current environment supports it.
 *                               Choose how you want to handle the user
 *                               interaction. Use the openfl.ui.Multitouch
 *                               class to manage touch event handling(enable
 *                               touch gesture event handling, simple touch
 *                               point event handling, or disable touch events
 *                               so only mouse events are dispatched). If you
 *                               choose to handle the `mouseUp`
 *                               event, then the same event handler will run
 *                               on a touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               `touchEnd` event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event touchMove              Dispatched when the user moves the point of
 *                               contact with a touch-enabled device(such as
 *                               drags a finger across a mobile phone or
 *                               tablet with a touch screen). Some devices
 *                               might also interpret this contact as a
 *                               `mouseMove` event.
 *
 *                               Specifically, if a user moves a finger
 *                               across a touch screen, the InteractiveObject
 *                               instance can dispatch a
 *                               `mouseMove` event or a
 *                               `touchMove` event, or both if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               `mouseMove` event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               `touchMove` event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event touchOut               Dispatched when the user moves the point of
 *                               contact away from InteractiveObject instance
 *                               on a touch-enabled device(such as drags a
 *                               finger from one display object to another on
 *                               a mobile phone or tablet with a touch
 *                               screen). Some devices might also interpret
 *                               this contact as a `mouseOut`
 *                               event.
 *
 *                               Specifically, if a user moves a finger
 *                               across a touch screen, the InteractiveObject
 *                               instance can dispatch a `mouseOut`
 *                               event or a `touchOut` event, or
 *                               both if the current environment supports it.
 *                               Choose how you want to handle the user
 *                               interaction. Use the openfl.ui.Multitouch
 *                               class to manage touch event handling(enable
 *                               touch gesture event handling, simple touch
 *                               point event handling, or disable touch events
 *                               so only mouse events are dispatched). If you
 *                               choose to handle the `mouseOut`
 *                               event, then the same event handler will run
 *                               on a touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               `touchOut` event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event touchOver              Dispatched when the user moves the point of
 *                               contact over an InteractiveObject instance on
 *                               a touch-enabled device(such as drags a
 *                               finger from a point outside a display object
 *                               to a point over a display object on a mobile
 *                               phone or tablet with a touch screen). Some
 *                               devices might also interpret this contact as
 *                               a `mouseOver` event.
 *
 *                               Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               `mouseOver` event or a
 *                               `touchOver` event, or both if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               `mouseOver` event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               `touchOver` event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event touchRollOut           Dispatched when the user moves the point of
 *                               contact away from an InteractiveObject
 *                               instance on a touch-enabled device(such as
 *                               drags a finger from over a display object to
 *                               a point outside the display object on a
 *                               mobile phone or tablet with a touch screen).
 *                               Some devices might also interpret this
 *                               contact as a `rollOut` event.
 *
 *                               Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               `rollOut` event or a
 *                               `touchRollOut` event, or both if
 *                               the current environment supports it. Choose
 *                               how you want to handle the user interaction.
 *                               Use the openfl.ui.Multitouch class to manage
 *                               touch event handling(enable touch gesture
 *                               event handling, simple touch point event
 *                               handling, or disable touch events so only
 *                               mouse events are dispatched). If you choose
 *                               to handle the `rollOut` event,
 *                               then the same event handler will run on a
 *                               touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               `touchRollOut` event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event touchRollOver          Dispatched when the user moves the point of
 *                               contact over an InteractiveObject instance on
 *                               a touch-enabled device(such as drags a
 *                               finger from a point outside a display object
 *                               to a point over a display object on a mobile
 *                               phone or tablet with a touch screen). Some
 *                               devices might also interpret this contact as
 *                               a `rollOver` event.
 *
 *                               Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               `rollOver` event or a
 *                               `touchRollOver` event, or both if
 *                               the current environment supports it. Choose
 *                               how you want to handle the user interaction.
 *                               Use the openfl.ui.Multitouch class to manage
 *                               touch event handling(enable touch gesture
 *                               event handling, simple touch point event
 *                               handling, or disable touch events so only
 *                               mouse events are dispatched). If you choose
 *                               to handle the `rollOver` event,
 *                               then the same event handler will run on a
 *                               touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               `touchRollOver` event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.
 * @event touchTap               Dispatched when the user lifts the point of
 *                               contact over the same InteractiveObject
 *                               instance on which the contact was initiated
 *                               on a touch-enabled device(such as presses
 *                               and releases a finger from a single point
 *                               over a display object on a mobile phone or
 *                               tablet with a touch screen). Some devices
 *                               might also interpret this contact as a
 *                               `click` event.
 *
 *                               Specifically, if a user taps a finger over
 *                               an InteractiveObject, the InteractiveObject
 *                               instance can dispatch a `click`
 *                               event or a `touchTap` event, or
 *                               both if the current environment supports it.
 *                               Choose how you want to handle the user
 *                               interaction. Use the openfl.ui.Multitouch
 *                               class to manage touch event handling(enable
 *                               touch gesture event handling, simple touch
 *                               point event handling, or disable touch events
 *                               so only mouse events are dispatched). If you
 *                               choose to handle the `click`
 *                               event, then the same event handler will run
 *                               on a touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               `touchTap` event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.
 *
 *                               **Note:** See the Multitouch class for
 *                               environment compatibility information.</haxe_doc>
	</class>
	<class path="openfl.display.DisplayObjectContainer" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/DisplayObjectContainer.hx" extern="1">
		<extends path="openfl.display.InteractiveObject"/>
		<mouseChildren public="1">
			<x path="Bool"/>
			<haxe_doc>* Determines whether or not the children of the object are mouse, or user
	 * input device, enabled. If an object is enabled, a user can interact with
	 * it by using a mouse or user input device. The default is
	 * `true`.
	 *
	 * This property is useful when you create a button with an instance of
	 * the Sprite class(instead of using the SimpleButton class). When you use a
	 * Sprite instance to create a button, you can choose to decorate the button
	 * by using the `addChild()` method to add additional Sprite
	 * instances. This process can cause unexpected behavior with mouse events
	 * because the Sprite instances you add as children can become the target
	 * object of a mouse event when you expect the parent instance to be the
	 * target object. To ensure that the parent instance serves as the target
	 * objects for mouse events, you can set the `mouseChildren`
	 * property of the parent instance to `false`.
	 *
	 *  No event is dispatched by setting this property. You must use the
	 * `addEventListener()` method to create interactive
	 * functionality.</haxe_doc>
		</mouseChildren>
		<numChildren public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* Returns the number of children of this object.</haxe_doc>
		</numChildren>
		<tabChildren public="1">
			<x path="Bool"/>
			<haxe_doc>* Determines whether the children of the object are tab enabled. Enables or
	 * disables tabbing for the children of the object. The default is
	 * `true`.
	 *
	 * **Note:** Do not use the `tabChildren` property with
	 * Flex. Instead, use the
	 * `mx.core.UIComponent.hasFocusableChildren` property.
	 * 
	 * @throws IllegalOperationError Calling this property of the Stage object
	 *                               throws an exception. The Stage object does
	 *                               not implement this property.</haxe_doc>
		</tabChildren>
		<textSnapshot public="1" set="null">
			<c path="flash.text.TextSnapshot"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</textSnapshot>
		<addChild public="1" set="method">
			<f a="child">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc>* Adds a child DisplayObject instance to this DisplayObjectContainer
	 * instance. The child is added to the front(top) of all other children in
	 * this DisplayObjectContainer instance.(To add a child to a specific index
	 * position, use the `addChildAt()` method.)
	 *
	 * If you add a child object that already has a different display object
	 * container as a parent, the object is removed from the child list of the
	 * other display object container. 
	 *
	 * **Note:** The command `stage.addChild()` can cause
	 * problems with a published SWF file, including security problems and
	 * conflicts with other loaded SWF files. There is only one Stage within a
	 * Flash runtime instance, no matter how many SWF files you load into the
	 * runtime. So, generally, objects should not be added to the Stage,
	 * directly, at all. The only object the Stage should contain is the root
	 * object. Create a DisplayObjectContainer to contain all of the items on the
	 * display list. Then, if necessary, add that DisplayObjectContainer instance
	 * to the Stage.
	 * 
	 * @param child The DisplayObject instance to add as a child of this
	 *              DisplayObjectContainer instance.
	 * @return The DisplayObject instance that you pass in the `child`
	 *         parameter.
	 * @throws ArgumentError Throws if the child is the same as the parent. Also
	 *                       throws if the caller is a child(or grandchild etc.)
	 *                       of the child being added.
	 * @event added Dispatched when a display object is added to the display
	 *              list.</haxe_doc>
		</addChild>
		<addChildAt public="1" set="method">
			<f a="child:index">
				<c path="openfl.display.DisplayObject"/>
				<x path="Int"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc>* Adds a child DisplayObject instance to this DisplayObjectContainer
	 * instance. The child is added at the index position specified. An index of
	 * 0 represents the back(bottom) of the display list for this
	 * DisplayObjectContainer object.
	 *
	 * For example, the following example shows three display objects, labeled
	 * a, b, and c, at index positions 0, 2, and 1, respectively:
	 *
	 * If you add a child object that already has a different display object
	 * container as a parent, the object is removed from the child list of the
	 * other display object container. 
	 * 
	 * @param child The DisplayObject instance to add as a child of this
	 *              DisplayObjectContainer instance.
	 * @param index The index position to which the child is added. If you
	 *              specify a currently occupied index position, the child object
	 *              that exists at that position and all higher positions are
	 *              moved up one position in the child list.
	 * @return The DisplayObject instance that you pass in the `child`
	 *         parameter.
	 * @throws ArgumentError Throws if the child is the same as the parent. Also
	 *                       throws if the caller is a child(or grandchild etc.)
	 *                       of the child being added.
	 * @throws RangeError    Throws if the index position does not exist in the
	 *                       child list.
	 * @event added Dispatched when a display object is added to the display
	 *              list.</haxe_doc>
		</addChildAt>
		<areInaccessibleObjectsUnderPoint public="1" set="method">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Indicates whether the security restrictions would cause any display
	 * objects to be omitted from the list returned by calling the
	 * `DisplayObjectContainer.getObjectsUnderPoint()` method with the
	 * specified `point` point. By default, content from one domain
	 * cannot access objects from another domain unless they are permitted to do
	 * so with a call to the `Security.allowDomain()` method. For more
	 * information, related to security, see the Flash Player Developer Center
	 * Topic: [Security](http://www.adobe.com/go/devnet_security_en).
	 *
	 * The `point` parameter is in the coordinate space of the
	 * Stage, which may differ from the coordinate space of the display object
	 * container(unless the display object container is the Stage). You can use
	 * the `globalToLocal()` and the `localToGlobal()`
	 * methods to convert points between these coordinate spaces.
	 * 
	 * @param point The point under which to look.
	 * @return `true` if the point contains child display objects with
	 *         security restrictions.</haxe_doc>
		</areInaccessibleObjectsUnderPoint>
		<contains public="1" set="method">
			<f a="child">
				<c path="openfl.display.DisplayObject"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Determines whether the specified display object is a child of the
	 * DisplayObjectContainer instance or the instance itself. The search
	 * includes the entire display list including this DisplayObjectContainer
	 * instance. Grandchildren, great-grandchildren, and so on each return
	 * `true`.
	 * 
	 * @param child The child object to test.
	 * @return `true` if the `child` object is a child of
	 *         the DisplayObjectContainer or the container itself; otherwise
	 *         `false`.</haxe_doc>
		</contains>
		<getChildAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc>* Returns the child display object instance that exists at the specified
	 * index.
	 * 
	 * @param index The index position of the child object.
	 * @return The child display object at the specified index position.
	 * @throws RangeError    Throws if the index does not exist in the child
	 *                       list.
	 * @throws SecurityError This child display object belongs to a sandbox to
	 *                       which you do not have access. You can avoid this
	 *                       situation by having the child movie call
	 *                       `Security.allowDomain()`.</haxe_doc>
		</getChildAt>
		<getChildByName public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc>* Returns the child display object that exists with the specified name. If
	 * more that one child display object has the specified name, the method
	 * returns the first object in the child list.
	 *
	 * The `getChildAt()` method is faster than the
	 * `getChildByName()` method. The `getChildAt()` method
	 * accesses a child from a cached array, whereas the
	 * `getChildByName()` method has to traverse a linked list to
	 * access a child.
	 * 
	 * @param name The name of the child to return.
	 * @return The child display object with the specified name.
	 * @throws SecurityError This child display object belongs to a sandbox to
	 *                       which you do not have access. You can avoid this
	 *                       situation by having the child movie call the
	 *                       `Security.allowDomain()` method.</haxe_doc>
		</getChildByName>
		<getChildIndex public="1" set="method">
			<f a="child">
				<c path="openfl.display.DisplayObject"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Returns the index position of a `child` DisplayObject instance.
	 * 
	 * @param child The DisplayObject instance to identify.
	 * @return The index position of the child display object to identify.
	 * @throws ArgumentError Throws if the child parameter is not a child of this
	 *                       object.</haxe_doc>
		</getChildIndex>
		<getObjectsUnderPoint public="1" set="method">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
			</f>
			<haxe_doc>* Returns an array of objects that lie under the specified point and are
	 * children(or grandchildren, and so on) of this DisplayObjectContainer
	 * instance. Any child objects that are inaccessible for security reasons are
	 * omitted from the returned array. To determine whether this security
	 * restriction affects the returned array, call the
	 * `areInaccessibleObjectsUnderPoint()` method.
	 *
	 * The `point` parameter is in the coordinate space of the
	 * Stage, which may differ from the coordinate space of the display object
	 * container(unless the display object container is the Stage). You can use
	 * the `globalToLocal()` and the `localToGlobal()`
	 * methods to convert points between these coordinate spaces.
	 * 
	 * @param point The point under which to look.
	 * @return An array of objects that lie under the specified point and are
	 *         children(or grandchildren, and so on) of this
	 *         DisplayObjectContainer instance.</haxe_doc>
		</getObjectsUnderPoint>
		<removeChild public="1" set="method">
			<f a="child">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc>* Removes the specified `child` DisplayObject instance from the
	 * child list of the DisplayObjectContainer instance. The `parent`
	 * property of the removed child is set to `null` , and the object
	 * is garbage collected if no other references to the child exist. The index
	 * positions of any display objects above the child in the
	 * DisplayObjectContainer are decreased by 1.
	 *
	 * The garbage collector reallocates unused memory space. When a variable
	 * or object is no longer actively referenced or stored somewhere, the
	 * garbage collector sweeps through and wipes out the memory space it used to
	 * occupy if no other references to it exist.
	 * 
	 * @param child The DisplayObject instance to remove.
	 * @return The DisplayObject instance that you pass in the `child`
	 *         parameter.
	 * @throws ArgumentError Throws if the child parameter is not a child of this
	 *                       object.</haxe_doc>
		</removeChild>
		<removeChildAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc>* Removes a child DisplayObject from the specified `index`
	 * position in the child list of the DisplayObjectContainer. The
	 * `parent` property of the removed child is set to
	 * `null`, and the object is garbage collected if no other
	 * references to the child exist. The index positions of any display objects
	 * above the child in the DisplayObjectContainer are decreased by 1.
	 *
	 * The garbage collector reallocates unused memory space. When a variable
	 * or object is no longer actively referenced or stored somewhere, the
	 * garbage collector sweeps through and wipes out the memory space it used to
	 * occupy if no other references to it exist.
	 * 
	 * @param index The child index of the DisplayObject to remove.
	 * @return The DisplayObject instance that was removed.
	 * @throws RangeError    Throws if the index does not exist in the child
	 *                       list.
	 * @throws SecurityError This child display object belongs to a sandbox to
	 *                       which the calling object does not have access. You
	 *                       can avoid this situation by having the child movie
	 *                       call the `Security.allowDomain()` method.</haxe_doc>
		</removeChildAt>
		<removeChildren public="1" set="method">
			<f a="?beginIndex:?endIndex" v="0:0x7FFFFFFF">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ endIndex : 0x7FFFFFFF, beginIndex : 0 }</e></m></meta>
		</removeChildren>
		<setChildIndex public="1" set="method">
			<f a="child:index">
				<c path="openfl.display.DisplayObject"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Changes the position of an existing child in the display object container.
	 * This affects the layering of child objects. For example, the following
	 * example shows three display objects, labeled a, b, and c, at index
	 * positions 0, 1, and 2, respectively:
	 *
	 * When you use the `setChildIndex()` method and specify an
	 * index position that is already occupied, the only positions that change
	 * are those in between the display object's former and new position. All
	 * others will stay the same. If a child is moved to an index LOWER than its
	 * current index, all children in between will INCREASE by 1 for their index
	 * reference. If a child is moved to an index HIGHER than its current index,
	 * all children in between will DECREASE by 1 for their index reference. For
	 * example, if the display object container in the previous example is named
	 * `container`, you can swap the position of the display objects
	 * labeled a and b by calling the following code:
	 *
	 * This code results in the following arrangement of objects:
	 * 
	 * @param child The child DisplayObject instance for which you want to change
	 *              the index number.
	 * @param index The resulting index number for the `child` display
	 *              object.
	 * @throws ArgumentError Throws if the child parameter is not a child of this
	 *                       object.
	 * @throws RangeError    Throws if the index does not exist in the child
	 *                       list.</haxe_doc>
		</setChildIndex>
		<stopAllMovieClips public="1" set="method"><f a=""><x path="Void"/></f></stopAllMovieClips>
		<swapChildren public="1" set="method">
			<f a="child1:child2">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Swaps the z-order(front-to-back order) of the two specified child
	 * objects. All other child objects in the display object container remain in
	 * the same index positions.
	 * 
	 * @param child1 The first child object.
	 * @param child2 The second child object.
	 * @throws ArgumentError Throws if either child parameter is not a child of
	 *                       this object.</haxe_doc>
		</swapChildren>
		<swapChildrenAt public="1" set="method">
			<f a="index1:index2">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Swaps the z-order(front-to-back order) of the child objects at the two
	 * specified index positions in the child list. All other child objects in
	 * the display object container remain in the same index positions.
	 * 
	 * @param index1 The index position of the first child object.
	 * @param index2 The index position of the second child object.
	 * @throws RangeError If either index does not exist in the child list.</haxe_doc>
		</swapChildrenAt>
		<new set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Calling the `new DisplayObjectContainer()` constructor throws
	 * an `ArgumentError` exception. You _can_, however, call
	 * constructors for the following subclasses of DisplayObjectContainer:
	 * 
	 *  * `new Loader()`
	 *  * `new Sprite()`
	 *  * `new MovieClip()`
	 *</haxe_doc>
		</new>
		<haxe_doc>* The DisplayObjectContainer class is the base class for all objects that can
 * serve as display object containers on the display list. The display list
 * manages all objects displayed in the Flash runtimes. Use the
 * DisplayObjectContainer class to arrange the display objects in the display
 * list. Each DisplayObjectContainer object has its own child list for
 * organizing the z-order of the objects. The z-order is the front-to-back
 * order that determines which object is drawn in front, which is behind, and
 * so on.
 *
 * DisplayObject is an abstract base class; therefore, you cannot call
 * DisplayObject directly. Invoking `new DisplayObject()` throws an
 * `ArgumentError` exception.
 * The DisplayObjectContainer class is an abstract base class for all objects
 * that can contain child objects. It cannot be instantiated directly; calling
 * the `new DisplayObjectContainer()` constructor throws an
 * `ArgumentError` exception.
 *
 * For more information, see the "Display Programming" chapter of the
 * _ActionScript 3.0 Developer's Guide_.</haxe_doc>
	</class>
	<class path="openfl.display.Sprite" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/Sprite.hx" extern="1">
		<extends path="openfl.display.DisplayObjectContainer"/>
		<buttonMode public="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies the button mode of this sprite. If `true`, this
	 * sprite behaves as a button, which means that it triggers the display of
	 * the hand cursor when the pointer passes over the sprite and can receive a
	 * `click` event if the enter or space keys are pressed when the
	 * sprite has focus. You can suppress the display of the hand cursor by
	 * setting the `useHandCursor` property to `false`, in
	 * which case the pointer is displayed.
	 *
	 * Although it is better to use the SimpleButton class to create buttons,
	 * you can use the `buttonMode` property to give a sprite some
	 * button-like functionality. To include a sprite in the tab order, set the
	 * `tabEnabled` property(inherited from the InteractiveObject
	 * class and `false` by default) to `true`.
	 * Additionally, consider whether you want the children of your sprite to be
	 * user input enabled. Most buttons do not enable user input interactivity
	 * for their child objects because it confuses the event flow. To disable
	 * user input interactivity for all child objects, you must set the
	 * `mouseChildren` property(inherited from the
	 * DisplayObjectContainer class) to `false`.
	 *
	 * If you use the `buttonMode` property with the MovieClip
	 * class(which is a subclass of the Sprite class), your button might have
	 * some added functionality. If you include frames labeled _up, _over, and
	 * _down, Flash Player provides automatic state changes(functionality
	 * similar to that provided in previous versions of ActionScript for movie
	 * clips used as buttons). These automatic state changes are not available
	 * for sprites, which have no timeline, and thus no frames to label.</haxe_doc>
		</buttonMode>
		<dropTarget public="1" set="null"><c path="openfl.display.DisplayObject"/></dropTarget>
		<graphics public="1" get="null" set="null">
			<c path="openfl.display.Graphics"/>
			<haxe_doc>* Specifies the Graphics object that belongs to this sprite where vector
	 * drawing commands can occur.</haxe_doc>
		</graphics>
		<hitArea public="1"><c path="openfl.display.Sprite"/></hitArea>
		<soundTransform public="1">
			<c path="openfl.media.SoundTransform"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</soundTransform>
		<useHandCursor public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* A Boolean value that indicates whether the pointing hand(hand cursor)
	 * appears when the pointer rolls over a sprite in which the
	 * `buttonMode` property is set to `true`. The default
	 * value of the `useHandCursor` property is `true`. If
	 * `useHandCursor` is set to `true`, the pointing hand
	 * used for buttons appears when the pointer rolls over a button sprite. If
	 * `useHandCursor` is `false`, the arrow pointer is
	 * used instead.
	 *
	 * You can change the `useHandCursor` property at any time; the
	 * modified sprite immediately takes on the new cursor appearance. 
	 *
	 * **Note:** In Flex or Flash Builder, if your sprite has child
	 * sprites, you might want to set the `mouseChildren` property to
	 * `false`. For example, if you want a hand cursor to appear over
	 * a Flex <mx:Label> control, set the `useHandCursor` and
	 * `buttonMode` properties to `true`, and the
	 * `mouseChildren` property to `false`.]]></haxe_doc>
		</useHandCursor>
		<startDrag public="1" set="method">
			<f a="?lockCenter:?bounds" v="false:null">
				<x path="Bool"/>
				<c path="openfl.geom.Rectangle"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ bounds : null, lockCenter : false }</e></m></meta>
			<haxe_doc>* Lets the user drag the specified sprite. The sprite remains draggable
	 * until explicitly stopped through a call to the
	 * `Sprite.stopDrag()` method, or until another sprite is made
	 * draggable. Only one sprite is draggable at a time.
	 *
	 * Three-dimensional display objects follow the pointer and
	 * `Sprite.startDrag()` moves the object within the
	 * three-dimensional plane defined by the display object. Or, if the display
	 * object is a two-dimensional object and the child of a three-dimensional
	 * object, the two-dimensional object moves within the three dimensional
	 * plane defined by the three-dimensional parent object.
	 * 
	 * @param lockCenter Specifies whether the draggable sprite is locked to the
	 *                   center of the pointer position(`true`), or
	 *                   locked to the point where the user first clicked the
	 *                   sprite(`false`).
	 * @param bounds     Value relative to the coordinates of the Sprite's parent
	 *                   that specify a constraint rectangle for the Sprite.</haxe_doc>
		</startDrag>
		<startTouchDrag public="1" set="method">
			<f a="touchPointID:?lockCenter:?bounds" v=":false:null">
				<x path="Int"/>
				<x path="Bool"/>
				<c path="openfl.geom.Rectangle"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ bounds : null, lockCenter : false }</e></m>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</startTouchDrag>
		<stopDrag public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Ends the `startDrag()` method. A sprite that was made draggable
	 * with the `startDrag()` method remains draggable until a
	 * `stopDrag()` method is added, or until another sprite becomes
	 * draggable. Only one sprite is draggable at a time.
	 *</haxe_doc>
		</stopDrag>
		<stopTouchDrag public="1" set="method">
			<f a="touchPointID">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</stopTouchDrag>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Creates a new Sprite instance. After you create the Sprite instance, call
	 * the `DisplayObjectContainer.addChild()` or
	 * `DisplayObjectContainer.addChildAt()` method to add the Sprite
	 * to a parent DisplayObjectContainer.</haxe_doc>
		</new>
		<haxe_doc>* The Sprite class is a basic display list building block: a display list
 * node that can display graphics and can also contain children.
 *
 * A Sprite object is similar to a movie clip, but does not have a
 * timeline. Sprite is an appropriate base class for objects that do not
 * require timelines. For example, Sprite would be a logical base class for
 * user interface(UI) components that typically do not use the timeline.
 *
 * The Sprite class is new in ActionScript 3.0. It provides an alternative
 * to the functionality of the MovieClip class, which retains all the
 * functionality of previous ActionScript releases to provide backward
 * compatibility.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.display.MovieClip" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/MovieClip.hx" extern="1">
		<extends path="openfl.display.Sprite"/>
		<currentFrame public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* Specifies the number of the frame in which the playhead is located in the
	 * timeline of the MovieClip instance. If the movie clip has multiple scenes,
	 * this value is the frame number in the current scene.</haxe_doc>
		</currentFrame>
		<currentFrameLabel public="1" get="null" set="null">
			<c path="String"/>
			<haxe_doc>* The label at the current frame in the timeline of the MovieClip instance.
	 * If the current frame has no label, `currentLabel` is
	 * `null`.</haxe_doc>
		</currentFrameLabel>
		<currentLabel public="1" get="null" set="null">
			<c path="String"/>
			<haxe_doc>* The current label in which the playhead is located in the timeline of the
	 * MovieClip instance. If the current frame has no label,
	 * `currentLabel` is set to the name of the previous frame that
	 * includes a label. If the current frame and previous frames do not include
	 * a label, `currentLabel` returns `null`.</haxe_doc>
		</currentLabel>
		<currentLabels public="1" get="null" set="null">
			<c path="Array"><c path="openfl.display.FrameLabel"/></c>
			<haxe_doc>* Returns an array of FrameLabel objects from the current scene. If the
	 * MovieClip instance does not use scenes, the array includes all frame
	 * labels from the entire MovieClip instance.</haxe_doc>
		</currentLabels>
		<enabled public="1">
			<x path="Bool"/>
			<haxe_doc>* A Boolean value that indicates whether a movie clip is enabled. The
	 * default value of `enabled` is `true`. If
	 * `enabled` is set to `false`, the movie clip's Over,
	 * Down, and Up frames are disabled. The movie clip continues to receive
	 * events(for example, `mouseDown`, `mouseUp`,
	 * `keyDown`, and `keyUp`).
	 *
	 * The `enabled` property governs only the button-like
	 * properties of a movie clip. You can change the `enabled`
	 * property at any time; the modified movie clip is immediately enabled or
	 * disabled. If `enabled` is set to `false`, the object
	 * is not included in automatic tab ordering.</haxe_doc>
		</enabled>
		<framesLoaded public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The number of frames that are loaded from a streaming SWF file. You can
	 * use the `framesLoaded` property to determine whether the
	 * contents of a specific frame and all the frames before it loaded and are
	 * available locally in the browser. You can also use it to monitor the
	 * downloading of large SWF files. For example, you might want to display a
	 * message to users indicating that the SWF file is loading until a specified
	 * frame in the SWF file finishes loading.
	 *
	 * If the movie clip contains multiple scenes, the
	 * `framesLoaded` property returns the number of frames loaded for
	 * _all_ scenes in the movie clip.</haxe_doc>
		</framesLoaded>
		<isPlaying public="1" get="null" set="null"><x path="Bool"/></isPlaying>
		<scenes public="1" set="null">
			<c path="Array"><c path="flash.display.Scene"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</scenes>
		<totalFrames public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The total number of frames in the MovieClip instance.
	 *
	 * If the movie clip contains multiple frames, the
	 * `totalFrames` property returns the total number of frames in
	 * _all_ scenes in the movie clip.</haxe_doc>
		</totalFrames>
		<trackAsMenu public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</trackAsMenu>
		<addFrameScript public="1" set="method"><f a="index:method">
	<x path="Int"/>
	<f a=""><x path="Void"/></f>
	<x path="Void"/>
</f></addFrameScript>
		<gotoAndPlay public="1" set="method">
			<f a="frame:?scene" v=":null">
				<x path="Any"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ scene : null }</e></m></meta>
			<haxe_doc>* Starts playing the SWF file at the specified frame. This happens after all
	 * remaining actions in the frame have finished executing. To specify a scene
	 * as well as a frame, specify a value for the `scene` parameter.
	 * 
	 * @param frame A number representing the frame number, or a string
	 *              representing the label of the frame, to which the playhead is
	 *              sent. If you specify a number, it is relative to the scene
	 *              you specify. If you do not specify a scene, the current scene
	 *              determines the global frame number to play. If you do specify
	 *              a scene, the playhead jumps to the frame number in the
	 *              specified scene.
	 * @param scene The name of the scene to play. This parameter is optional.</haxe_doc>
		</gotoAndPlay>
		<gotoAndStop public="1" set="method">
			<f a="frame:?scene" v=":null">
				<x path="Any"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ scene : null }</e></m></meta>
			<haxe_doc>* Brings the playhead to the specified frame of the movie clip and stops it
	 * there. This happens after all remaining actions in the frame have finished
	 * executing. If you want to specify a scene in addition to a frame, specify
	 * a `scene` parameter.
	 * 
	 * @param frame A number representing the frame number, or a string
	 *              representing the label of the frame, to which the playhead is
	 *              sent. If you specify a number, it is relative to the scene
	 *              you specify. If you do not specify a scene, the current scene
	 *              determines the global frame number at which to go to and
	 *              stop. If you do specify a scene, the playhead goes to the
	 *              frame number in the specified scene and stops.
	 * @param scene The name of the scene. This parameter is optional.
	 * @throws ArgumentError If the `scene` or `frame`
	 *                       specified are not found in this movie clip.</haxe_doc>
		</gotoAndStop>
		<nextFrame public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Sends the playhead to the next frame and stops it. This happens after all
	 * remaining actions in the frame have finished executing.
	 *</haxe_doc>
		</nextFrame>
		<nextScene public="1" set="method">
			<f a=""><x path="Void"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</nextScene>
		<play public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Moves the playhead in the timeline of the movie clip.
	 *</haxe_doc>
		</play>
		<prevFrame public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Sends the playhead to the previous frame and stops it. This happens after
	 * all remaining actions in the frame have finished executing.
	 *</haxe_doc>
		</prevFrame>
		<prevScene public="1" set="method">
			<f a=""><x path="Void"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</prevScene>
		<stop public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Stops the playhead in the movie clip.
	 *</haxe_doc>
		</stop>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Creates a new MovieClip instance. After creating the MovieClip, call the
	 * `addChild()` or `addChildAt()` method of a display
	 * object container that is onstage.</haxe_doc>
		</new>
		<haxe_doc>* The MovieClip class inherits from the following classes: Sprite,
 * DisplayObjectContainer, InteractiveObject, DisplayObject, and
 * EventDispatcher.
 *
 * Unlike the Sprite object, a MovieClip object has a timeline.
 *
 * In Flash Professional, the methods for the MovieClip class provide the
 * same functionality as actions that target movie clips. Some additional
 * methods do not have equivalent actions in the Actions toolbox in the
 * Actions panel in the Flash authoring tool. 
 *
 * Children instances placed on the Stage in Flash Professional cannot be
 * accessed by code from within the constructor of a parent instance since
 * they have not been created at that point in code execution. Before
 * accessing the child, the parent must instead either create the child
 * instance by code or delay access to a callback function that listens for
 * the child to dispatch its `Event.ADDED_TO_STAGE` event.
 *
 * If you modify any of the following properties of a MovieClip object that
 * contains a motion tween, the playhead is stopped in that MovieClip object:
 * `alpha`, `blendMode`, `filters`,
 * `height`, `opaqueBackground`, `rotation`,
 * `scaleX`, `scaleY`, `scale9Grid`,
 * `scrollRect`, `transform`, `visible`,
 * `width`, `x`, or `y`. However, it does not
 * stop the playhead in any child MovieClip objects of that MovieClip
 * object.
 *
 * **Note:**Flash Lite 4 supports the MovieClip.opaqueBackground
 * property only if FEATURE_BITMAPCACHE is defined. The default configuration
 * of Flash Lite 4 does not define FEATURE_BITMAPCACHE. To enable the
 * MovieClip.opaqueBackground property for a suitable device, define
 * FEATURE_BITMAPCACHE in your project.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="flash.Boot" params="" file="/usr/share/haxe/std/flash/Boot.hx">
		<extends path="openfl.display.MovieClip"/>
		<tf static="1"><t path="flash.text.TextField"/></tf>
		<lines static="1"><c path="Array"><c path="String"/></c></lines>
		<lastError static="1"><t path="flash.errors.Error"/></lastError>
		<skip_constructor public="1" expr="false" line="52" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
		</skip_constructor>
		<IN_E expr="0" line="83" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</IN_E>
		<enum_to_string public="1" set="method" line="84" static="1"><f a="e">
	<a>
		<tag><c path="String"/></tag>
		<params><c path="Array"><d/></c></params>
	</a>
	<c path="String"/>
</f></enum_to_string>
		<__instanceof public="1" set="method" line="99" static="1">
			<f a="v:t">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</__instanceof>
		<__clear_trace public="1" set="method" line="109" static="1"><f a=""><x path="Void"/></f></__clear_trace>
		<__set_trace_color public="1" set="method" line="117" static="1"><f a="rgb">
	<x path="Int"/>
	<x path="Void"/>
</f></__set_trace_color>
		<getTrace public="1" set="method" line="123" static="1"><f a=""><t path="flash.text.TextField"/></f></getTrace>
		<__trace public="1" set="method" line="151" static="1"><f a="v:pos">
	<d/>
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></__trace>
		<__string_rec public="1" set="method" line="170" static="1">
			<f a="v:str">
				<d/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</__string_rec>
		<__unprotect__ set="method" line="215" static="1"><f a="s">
	<c path="String"/>
	<c path="String"/>
</f></__unprotect__>
		<mapDynamic public="1" set="method" line="219" static="1">
			<f a="d:f">
				<d/>
				<d/>
				<unknown/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</mapDynamic>
		<filterDynamic public="1" set="method" line="227" static="1">
			<f a="d:f">
				<d/>
				<d/>
				<unknown/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</filterDynamic>
		<start set="method" line="54">
			<f a=""><x path="Void"/></f>
			<meta><m n=":has_untyped"/></meta>
		</start>
		<doInitDelay set="method" line="74"><f a="_">
	<unknown/>
	<x path="Void"/>
</f></doInitDelay>
		<init set="method" line="79"><f a=""><x path="Void"/></f></init>
		<new public="1" set="method" line="46"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":keep"/>
		</meta>
	</class>
	<class path="flash._Boot.RealBoot" params="" file="/usr/share/haxe/std/flash/Boot.hx" private="1" module="flash.Boot">
		<extends path="flash.Boot"/>
		<new set="method" line="35"><f a=""><x path="Void"/></f></new>
		<meta><m n=":keep"/></meta>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="flash.Lib" params="" file="/usr/share/haxe/std/flash/Lib.hx">
		<current public="1" static="1"><t path="flash.display.MovieClip"/></current>
		<eval public="1" set="method" line="36" static="1">
			<f a="path">
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</eval>
		<getURL public="1" set="method" line="56" static="1">
			<f a="url:?target">
				<t path="flash.net.URLRequest"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getURL>
		<fscommand public="1" set="method" line="64" static="1">
			<f a="cmd:?param">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</fscommand>
		<attach public="1" set="method" line="76" static="1">
			<f a="name">
				<c path="String"/>
				<t path="flash.display.MovieClip"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</attach>
		<redirectTraces public="1" set="method" line="85" static="1"><f a=""><x path="Void"/></f></redirectTraces>
		<traceToConsole set="method" line="90" static="1"><f a="v:?inf">
	<d/>
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></traceToConsole>
		<haxe_doc>Platform-specific Flash Library. Provides some platform-specific 
	functions for the Flash target.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="flash.Vector" params="T" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/Vector.hx" extern="1">
		<ofArray public="1" params="T" get="inline" set="null" line="26" static="1">
			<f a="v">
				<c path="Array"><c path="ofArray.T"/></c>
				<c path="flash.Vector"><c path="ofArray.T"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</ofArray>
		<convert public="1" params="T:U" get="inline" set="null" line="32" static="1">
			<f a="v">
				<c path="flash.Vector"><c path="convert.T"/></c>
				<c path="flash.Vector"><c path="convert.U"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</convert>
		<length public="1"><x path="Int"/></length>
		<fixed public="1"><x path="Bool"/></fixed>
		<concat public="1" set="method"><f a="?a">
	<c path="flash.Vector"><c path="flash.Vector.T"/></c>
	<c path="flash.Vector"><c path="flash.Vector.T"/></c>
</f></concat>
		<indexOf public="1" set="method"><f a="x:?from">
	<c path="flash.Vector.T"/>
	<x path="Int"/>
	<x path="Int"/>
</f></indexOf>
		<insertAt public="1">
			<f a="index:element">
				<x path="Int"/>
				<c path="flash.Vector.T"/>
				<x path="Int"/>
			</f>
			<meta><m n=":require"><e>flash19</e></m></meta>
		</insertAt>
		<join public="1" set="method">
			<f a="?sep" v="&quot;,&quot;">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ sep : "," }</e></m></meta>
		</join>
		<lastIndexOf public="1" set="method"><f a="x:?from">
	<c path="flash.Vector.T"/>
	<x path="Int"/>
	<x path="Int"/>
</f></lastIndexOf>
		<pop public="1" set="method"><f a=""><t path="Null"><c path="flash.Vector.T"/></t></f></pop>
		<push public="1" set="method"><f a="x">
	<c path="flash.Vector.T"/>
	<x path="Int"/>
</f></push>
		<removeAt public="1">
			<f a="index">
				<x path="Int"/>
				<c path="flash.Vector.T"/>
			</f>
			<meta><m n=":require"><e>flash19</e></m></meta>
		</removeAt>
		<reverse public="1" set="method"><f a=""><c path="flash.Vector"><c path="flash.Vector.T"/></c></f></reverse>
		<shift public="1" set="method"><f a=""><t path="Null"><c path="flash.Vector.T"/></t></f></shift>
		<unshift public="1" set="method"><f a="x">
	<c path="flash.Vector.T"/>
	<x path="Void"/>
</f></unshift>
		<slice public="1" set="method"><f a="?pos:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="flash.Vector"><c path="flash.Vector.T"/></c>
</f></slice>
		<sort public="1" set="method"><f a="f">
	<f a=":">
		<c path="flash.Vector.T"/>
		<c path="flash.Vector.T"/>
		<x path="Int"/>
	</f>
	<x path="Void"/>
</f></sort>
		<splice public="1" set="method"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="flash.Vector"><c path="flash.Vector.T"/></c>
</f></splice>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method"><f a="?length:?fixed">
	<x path="UInt"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":require"><e>flash10</e></m>
		</meta>
	</class>
	<class path="flash.accessibility.AccessibilityImplementation" params="" file="/usr/share/haxe/std/flash/accessibility/AccessibilityImplementation.hx" extern="1">
		<errno public="1"><x path="UInt"/></errno>
		<stub public="1"><x path="Bool"/></stub>
		<accDoDefaultAction public="1" set="method"><f a="childID">
	<x path="UInt"/>
	<x path="Void"/>
</f></accDoDefaultAction>
		<accLocation public="1" set="method"><f a="childID">
	<x path="UInt"/>
	<d/>
</f></accLocation>
		<accSelect public="1" set="method"><f a="operation:childID">
	<x path="UInt"/>
	<x path="UInt"/>
	<x path="Void"/>
</f></accSelect>
		<getChildIDArray public="1" set="method"><f a=""><c path="Array"><d/></c></f></getChildIDArray>
		<get_accDefaultAction public="1" set="method"><f a="childID">
	<x path="UInt"/>
	<c path="String"/>
</f></get_accDefaultAction>
		<get_accFocus public="1" set="method"><f a=""><x path="UInt"/></f></get_accFocus>
		<get_accName public="1" set="method"><f a="childID">
	<x path="UInt"/>
	<c path="String"/>
</f></get_accName>
		<get_accRole public="1" set="method"><f a="childID">
	<x path="UInt"/>
	<x path="UInt"/>
</f></get_accRole>
		<get_accSelection public="1" set="method"><f a=""><c path="Array"><d/></c></f></get_accSelection>
		<get_accState public="1" set="method"><f a="childID">
	<x path="UInt"/>
	<x path="UInt"/>
</f></get_accState>
		<get_accValue public="1" set="method"><f a="childID">
	<x path="UInt"/>
	<c path="String"/>
</f></get_accValue>
		<get_selectionActiveIndex public="1" set="method"><f a=""><d/></f></get_selectionActiveIndex>
		<get_selectionAnchorIndex public="1" set="method"><f a=""><d/></f></get_selectionAnchorIndex>
		<isLabeledBy public="1" set="method"><f a="labelBounds">
	<t path="flash.geom.Rectangle"/>
	<x path="Bool"/>
</f></isLabeledBy>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="flash.accessibility.AccessibilityProperties" params="" file="/usr/share/haxe/std/flash/accessibility/AccessibilityProperties.hx" extern="1">
		<description public="1"><c path="String"/></description>
		<forceSimple public="1"><x path="Bool"/></forceSimple>
		<name public="1"><c path="String"/></name>
		<noAutoLabeling public="1"><x path="Bool"/></noAutoLabeling>
		<shortcut public="1"><c path="String"/></shortcut>
		<silent public="1"><x path="Bool"/></silent>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<typedef path="flash.desktop.Clipboard" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/desktop/Clipboard.hx"><c path="openfl.desktop.Clipboard"/></typedef>
	<enum path="flash.display.ActionScriptVersion" params="" file="/usr/share/haxe/std/flash/display/ActionScriptVersion.hx">
		<ACTIONSCRIPT2/>
		<ACTIONSCRIPT3/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>UInt</e></m>
		</meta>
	</enum>
	<typedef path="flash.display.Bitmap" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/display/Bitmap.hx"><c path="openfl.display.Bitmap"/></typedef>
	<typedef path="flash.display.BitmapData" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/display/BitmapData.hx"><c path="openfl.display.BitmapData"/></typedef>
	<enum path="flash.display.ColorCorrection" params="" file="/usr/share/haxe/std/flash/display/ColorCorrection.hx">
		<DEFAULT/>
		<OFF/>
		<ON/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
			<m n=":require"><e>flash10_1</e></m>
		</meta>
	</enum>
	<enum path="flash.display.ColorCorrectionSupport" params="" file="/usr/share/haxe/std/flash/display/ColorCorrectionSupport.hx">
		<DEFAULT_OFF/>
		<DEFAULT_ON/>
		<UNSUPPORTED/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
			<m n=":require"><e>flash10_1</e></m>
		</meta>
	</enum>
	<typedef path="flash.display.FrameLabel" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/display/FrameLabel.hx"><c path="openfl.display.FrameLabel"/></typedef>
	<typedef path="flash.display.Loader" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/display/Loader.hx"><c path="openfl.display.Loader"/></typedef>
	<typedef path="flash.display.LoaderInfo" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/display/LoaderInfo.hx"><c path="openfl.display.LoaderInfo"/></typedef>
	<typedef path="flash.display.MovieClip" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/display/MovieClip.hx"><c path="openfl.display.MovieClip"/></typedef>
	<class path="flash.display.NativeMenu" params="" file="/usr/share/haxe/std/flash/display/NativeMenu.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":require"><e>flash10_1</e></m></meta>
	</class>
	<class path="flash.display.Scene" params="" file="/usr/share/haxe/std/flash/display/Scene.hx" extern="1">
		<labels public="1" set="null"><c path="Array"><t path="flash.display.FrameLabel"/></c></labels>
		<name public="1" set="null"><c path="String"/></name>
		<numFrames public="1" set="null"><x path="Int"/></numFrames>
		<new public="1" set="method"><f a="name:labels:numFrames">
	<c path="String"/>
	<c path="Array"><t path="flash.display.FrameLabel"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":final"/></meta>
	</class>
	<typedef path="flash.display.Sprite" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/display/Sprite.hx"><c path="openfl.display.Sprite"/></typedef>
	<typedef path="flash.display.StageAlign" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/display/StageAlign.hx"><x path="openfl.display.StageAlign"/></typedef>
	<typedef path="flash.display.StageScaleMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/display/StageScaleMode.hx"><x path="openfl.display.StageScaleMode"/></typedef>
	<enum path="flash.display3D.Context3DFillMode" params="" file="/usr/share/haxe/std/flash/display3D/Context3DFillMode.hx">
		<SOLID/>
		<WIREFRAME/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
			<m n=":require"><e>flash16</e></m>
		</meta>
	</enum>
	<typedef path="flash.errors.Error" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/errors/Error.hx"><c path="openfl.errors.Error"/></typedef>
	<typedef path="flash.events.DataEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/DataEvent.hx"><c path="openfl.events.DataEvent"/></typedef>
	<typedef path="flash.events.Event" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/Event.hx"><c path="openfl.events.Event"/></typedef>
	<typedef path="flash.events.EventDispatcher" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/EventDispatcher.hx"><c path="openfl.events.EventDispatcher"/></typedef>
	<typedef path="flash.events.FocusEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/FocusEvent.hx"><c path="openfl.events.FocusEvent"/></typedef>
	<typedef path="flash.events.HTTPStatusEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/HTTPStatusEvent.hx"><c path="openfl.events.HTTPStatusEvent"/></typedef>
	<typedef path="flash.events.IOErrorEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/IOErrorEvent.hx"><c path="openfl.events.IOErrorEvent"/></typedef>
	<typedef path="flash.events.KeyboardEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/KeyboardEvent.hx"><c path="openfl.events.KeyboardEvent"/></typedef>
	<typedef path="flash.events.MouseEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/MouseEvent.hx"><c path="openfl.events.MouseEvent"/></typedef>
	<typedef path="flash.events.NetStatusEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/NetStatusEvent.hx"><c path="openfl.events.NetStatusEvent"/></typedef>
	<typedef path="flash.events.ProgressEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/ProgressEvent.hx"><c path="openfl.events.ProgressEvent"/></typedef>
	<typedef path="flash.events.SecurityErrorEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/SecurityErrorEvent.hx"><c path="openfl.events.SecurityErrorEvent"/></typedef>
	<class path="openfl.events.Event" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/Event.hx" extern="1">
		<ACTIVATE public="1" get="inline" set="null" expr="&quot;activate&quot;" line="61" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"activate"</e></m></meta>
			<haxe_doc>* The `ACTIVATE` constant defines the value of the
	 * `type` property of an `activate` event object.
	 *
	 * **Note:** This event has neither a "capture phase" nor a "bubble
	 * phase", which means that event listeners must be added directly to any
	 * potential targets, whether the target is on the display list or not.
	 *
	 * AIR for TV devices never automatically dispatch this event. You can,
	 * however, dispatch it manually.
	 *
	 * This event has the following properties:</haxe_doc>
		</ACTIVATE>
		<ADDED public="1" get="inline" set="null" expr="&quot;added&quot;" line="69" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"added"</e></m></meta>
			<haxe_doc>* The `Event.ADDED` constant defines the value of the
	 * `type` property of an `added` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</ADDED>
		<ADDED_TO_STAGE public="1" get="inline" set="null" expr="&quot;addedToStage&quot;" line="77" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"addedToStage"</e></m></meta>
			<haxe_doc>* The `Event.ADDED_TO_STAGE` constant defines the value of the
	 * `type` property of an `addedToStage` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</ADDED_TO_STAGE>
		<BROWSER_ZOOM_CHANGE public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash15</e></m>
			</meta>
		</BROWSER_ZOOM_CHANGE>
		<CANCEL public="1" get="inline" set="null" expr="&quot;cancel&quot;" line="89" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"cancel"</e></m></meta>
			<haxe_doc>* The `Event.CANCEL` constant defines the value of the
	 * `type` property of a `cancel` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</CANCEL>
		<CHANGE public="1" get="inline" set="null" expr="&quot;change&quot;" line="97" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"change"</e></m></meta>
			<haxe_doc>* The `Event.CHANGE` constant defines the value of the
	 * `type` property of a `change` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</CHANGE>
		<CHANNEL_MESSAGE public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</CHANNEL_MESSAGE>
		<CHANNEL_STATE public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</CHANNEL_STATE>
		<CLEAR public="1" get="inline" set="null" expr="&quot;clear&quot;" line="107" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"clear"</e></m></meta>
		</CLEAR>
		<CLOSE public="1" get="inline" set="null" expr="&quot;close&quot;" line="115" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"close"</e></m></meta>
			<haxe_doc>* The `Event.CLOSE` constant defines the value of the
	 * `type` property of a `close` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</CLOSE>
		<COMPLETE public="1" get="inline" set="null" expr="&quot;complete&quot;" line="123" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"complete"</e></m></meta>
			<haxe_doc>* The `Event.COMPLETE` constant defines the value of the
	 * `type` property of a `complete` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</COMPLETE>
		<CONNECT public="1" get="inline" set="null" expr="&quot;connect&quot;" line="131" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"connect"</e></m></meta>
			<haxe_doc>* The `Event.CONNECT` constant defines the value of the
	 * `type` property of a `connect` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</CONNECT>
		<CONTEXT3D_CREATE public="1" get="inline" set="null" expr="&quot;context3DCreate&quot;" line="133" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"context3DCreate"</e></m></meta>
		</CONTEXT3D_CREATE>
		<COPY public="1" get="inline" set="null" expr="&quot;copy&quot;" line="135" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"copy"</e></m></meta>
		</COPY>
		<CUT public="1" get="inline" set="null" expr="&quot;cut&quot;" line="137" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"cut"</e></m></meta>
		</CUT>
		<DEACTIVATE public="1" get="inline" set="null" expr="&quot;deactivate&quot;" line="152" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"deactivate"</e></m></meta>
			<haxe_doc>* The `Event.DEACTIVATE` constant defines the value of the
	 * `type` property of a `deactivate` event object.
	 *
	 * **Note:** This event has neither a "capture phase" nor a "bubble
	 * phase", which means that event listeners must be added directly to any
	 * potential targets, whether the target is on the display list or not.
	 *
	 * AIR for TV devices never automatically dispatch this event. You can,
	 * however, dispatch it manually.
	 *
	 * This event has the following properties:</haxe_doc>
		</DEACTIVATE>
		<ENTER_FRAME public="1" get="inline" set="null" expr="&quot;enterFrame&quot;" line="164" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"enterFrame"</e></m></meta>
			<haxe_doc>* The `Event.ENTER_FRAME` constant defines the value of the
	 * `type` property of an `enterFrame` event object.
	 *
	 * **Note:** This event has neither a "capture phase" nor a "bubble
	 * phase", which means that event listeners must be added directly to any
	 * potential targets, whether the target is on the display list or not.
	 *
	 * This event has the following properties:</haxe_doc>
		</ENTER_FRAME>
		<EXIT_FRAME public="1" get="inline" set="null" expr="&quot;exitFrame&quot;" line="170" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"exitFrame"</e></m></meta>
		</EXIT_FRAME>
		<FRAME_CONSTRUCTED public="1" get="inline" set="null" expr="&quot;frameConstructed&quot;" line="172" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"frameConstructed"</e></m></meta>
		</FRAME_CONSTRUCTED>
		<FRAME_LABEL public="1" get="inline" set="null" expr="&quot;frameLabel&quot;" line="174" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"frameLabel"</e></m></meta>
		</FRAME_LABEL>
		<FULLSCREEN public="1" get="inline" set="null" expr="&quot;fullScreen&quot;" line="176" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"fullScreen"</e></m></meta>
		</FULLSCREEN>
		<ID3 public="1" get="inline" set="null" expr="&quot;id3&quot;" line="184" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"id3"</e></m></meta>
			<haxe_doc>* The `Event.ID3` constant defines the value of the
	 * `type` property of an `id3` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</ID3>
		<INIT public="1" get="inline" set="null" expr="&quot;init&quot;" line="192" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"init"</e></m></meta>
			<haxe_doc>* The `Event.INIT` constant defines the value of the
	 * `type` property of an `init` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</INIT>
		<MOUSE_LEAVE public="1" get="inline" set="null" expr="&quot;mouseLeave&quot;" line="200" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"mouseLeave"</e></m></meta>
			<haxe_doc>* The `Event.MOUSE_LEAVE` constant defines the value of the
	 * `type` property of a `mouseLeave` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MOUSE_LEAVE>
		<OPEN public="1" get="inline" set="null" expr="&quot;open&quot;" line="208" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"open"</e></m></meta>
			<haxe_doc>* The `Event.OPEN` constant defines the value of the
	 * `type` property of an `open` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</OPEN>
		<PASTE public="1" get="inline" set="null" expr="&quot;paste&quot;" line="210" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"paste"</e></m></meta>
		</PASTE>
		<REMOVED public="1" get="inline" set="null" expr="&quot;removed&quot;" line="218" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"removed"</e></m></meta>
			<haxe_doc>* The `Event.REMOVED` constant defines the value of the
	 * `type` property of a `removed` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</REMOVED>
		<REMOVED_FROM_STAGE public="1" get="inline" set="null" expr="&quot;removedFromStage&quot;" line="227" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"removedFromStage"</e></m></meta>
			<haxe_doc>* The `Event.REMOVED_FROM_STAGE` constant defines the value of
	 * the `type` property of a `removedFromStage` event
	 * object.
	 *
	 * This event has the following properties:</haxe_doc>
		</REMOVED_FROM_STAGE>
		<RENDER public="1" get="inline" set="null" expr="&quot;render&quot;" line="239" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"render"</e></m></meta>
			<haxe_doc>* The `Event.RENDER` constant defines the value of the
	 * `type` property of a `render` event object.
	 *
	 * **Note:** This event has neither a "capture phase" nor a "bubble
	 * phase", which means that event listeners must be added directly to any
	 * potential targets, whether the target is on the display list or not.
	 *
	 * This event has the following properties:</haxe_doc>
		</RENDER>
		<RESIZE public="1" get="inline" set="null" expr="&quot;resize&quot;" line="247" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"resize"</e></m></meta>
			<haxe_doc>* The `Event.RESIZE` constant defines the value of the
	 * `type` property of a `resize` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</RESIZE>
		<SCROLL public="1" get="inline" set="null" expr="&quot;scroll&quot;" line="255" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"scroll"</e></m></meta>
			<haxe_doc>* The `Event.SCROLL` constant defines the value of the
	 * `type` property of a `scroll` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</SCROLL>
		<SELECT public="1" get="inline" set="null" expr="&quot;select&quot;" line="263" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"select"</e></m></meta>
			<haxe_doc>* The `Event.SELECT` constant defines the value of the
	 * `type` property of a `select` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</SELECT>
		<SELECT_ALL public="1" get="inline" set="null" expr="&quot;selectAll&quot;" line="265" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"selectAll"</e></m></meta>
		</SELECT_ALL>
		<SOUND_COMPLETE public="1" get="inline" set="null" expr="&quot;soundComplete&quot;" line="273" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"soundComplete"</e></m></meta>
			<haxe_doc>* The `Event.SOUND_COMPLETE` constant defines the value of the
	 * `type` property of a `soundComplete` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</SOUND_COMPLETE>
		<TAB_CHILDREN_CHANGE public="1" get="inline" set="null" expr="&quot;tabChildrenChange&quot;" line="286" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"tabChildrenChange"</e></m></meta>
			<haxe_doc>* The `Event.TAB_CHILDREN_CHANGE` constant defines the value of
	 * the `type` property of a `tabChildrenChange` event
	 * object.
	 *
	 * This event has the following properties:</haxe_doc>
		</TAB_CHILDREN_CHANGE>
		<TAB_ENABLED_CHANGE public="1" get="inline" set="null" expr="&quot;tabEnabledChange&quot;" line="295" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"tabEnabledChange"</e></m></meta>
			<haxe_doc>* The `Event.TAB_ENABLED_CHANGE` constant defines the value of
	 * the `type` property of a `tabEnabledChange` event
	 * object.
	 *
	 * This event has the following properties:</haxe_doc>
		</TAB_ENABLED_CHANGE>
		<TAB_INDEX_CHANGE public="1" get="inline" set="null" expr="&quot;tabIndexChange&quot;" line="303" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"tabIndexChange"</e></m></meta>
			<haxe_doc>* The `Event.TAB_INDEX_CHANGE` constant defines the value of the
	 * `type` property of a `tabIndexChange` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</TAB_INDEX_CHANGE>
		<TEXTURE_READY public="1" get="inline" set="null" expr="&quot;textureReady&quot;" line="305" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"textureReady"</e></m></meta>
		</TEXTURE_READY>
		<TEXT_INTERACTION_MODE_CHANGE public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</TEXT_INTERACTION_MODE_CHANGE>
		<UNLOAD public="1" get="inline" set="null" expr="&quot;unload&quot;" line="317" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"unload"</e></m></meta>
			<haxe_doc>* The `Event.UNLOAD` constant defines the value of the
	 * `type` property of an `unload` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</UNLOAD>
		<VIDEO_FRAME public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</VIDEO_FRAME>
		<WORKER_STATE public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</WORKER_STATE>
		<bubbles public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether an event is a bubbling event. If the event can bubble,
	 * this value is `true`; otherwise it is `false`.
	 *
	 * When an event occurs, it moves through the three phases of the event
	 * flow: the capture phase, which flows from the top of the display list
	 * hierarchy to the node just before the target node; the target phase, which
	 * comprises the target node; and the bubbling phase, which flows from the
	 * node subsequent to the target node back up the display list hierarchy.
	 *
	 * Some events, such as the `activate` and `unload`
	 * events, do not have a bubbling phase. The `bubbles` property
	 * has a value of `false` for events that do not have a bubbling
	 * phase.</haxe_doc>
		</bubbles>
		<cancelable public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the behavior associated with the event can be prevented.
	 * If the behavior can be canceled, this value is `true`;
	 * otherwise it is `false`.</haxe_doc>
		</cancelable>
		<currentTarget public="1" set="null">
			<x path="Any"/>
			<haxe_doc>* The object that is actively processing the Event object with an event
	 * listener. For example, if a user clicks an OK button, the current target
	 * could be the node containing that button or one of its ancestors that has
	 * registered an event listener for that event.</haxe_doc>
		</currentTarget>
		<eventPhase public="1" set="null">
			<x path="openfl.events.EventPhase"/>
			<haxe_doc>* The current phase in the event flow. This property can contain the
	 * following numeric values:
	 * 
	 *  *  The capture phase(`EventPhase.CAPTURING_PHASE`).
	 *  *  The target phase(`EventPhase.AT_TARGET`).
	 *  *  The bubbling phase(`EventPhase.BUBBLING_PHASE`).
	 *</haxe_doc>
		</eventPhase>
		<target public="1" set="null">
			<x path="Any"/>
			<haxe_doc>* The event target. This property contains the target node. For example, if
	 * a user clicks an OK button, the target node is the display list node
	 * containing that button.</haxe_doc>
		</target>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The type of event. The type is case-sensitive.</haxe_doc>
		</type>
		<clone public="1" set="method">
			<f a=""><c path="openfl.events.Event"/></f>
			<haxe_doc>* Duplicates an instance of an Event subclass.
	 *
	 * Returns a new Event object that is a copy of the original instance of
	 * the Event object. You do not normally call `clone()`; the
	 * EventDispatcher class calls it automatically when you redispatch an
	 * event - that is, when you call `dispatchEvent(event)` from a
	 * handler that is handling `event`.
	 *
	 * The new Event object includes all the properties of the original.
	 *
	 * When creating your own custom Event class, you must override the
	 * inherited `Event.clone()` method in order for it to duplicate
	 * the properties of your custom class. If you do not set all the properties
	 * that you add in your event subclass, those properties will not have the
	 * correct values when listeners handle the redispatched event.
	 *
	 * In this example, `PingEvent` is a subclass of
	 * `Event` and therefore implements its own version of
	 * `clone()`.
	 * 
	 * @return A new Event object that is identical to the original.</haxe_doc>
		</clone>
		<formatToString public="1" set="method"><f a="className:?p1:?p2:?p3:?p4:?p5">
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<c path="String"/>
</f></formatToString>
		<isDefaultPrevented public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>* Checks whether the `preventDefault()` method has been called on
	 * the event. If the `preventDefault()` method has been called,
	 * returns `true`; otherwise, returns `false`.
	 * 
	 * @return If `preventDefault()` has been called, returns
	 *         `true`; otherwise, returns `false`.</haxe_doc>
		</isDefaultPrevented>
		<preventDefault public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Cancels an event's default behavior if that behavior can be canceled.
	 * Many events have associated behaviors that are carried out by default. For example, if a user types a character into a text field, the default behavior is that the character is displayed in the text field. Because the `TextEvent.TEXT_INPUT` event's default behavior can be canceled, you can use the `preventDefault()` method to prevent the character from appearing.
	 * An example of a behavior that is not cancelable is the default behavior associated with the Event.REMOVED event, which is generated whenever Flash Player is about to remove a display object from the display list. The default behavior (removing the element) cannot be canceled, so the `preventDefault()` method has no effect on this default behavior.
	 * You can use the `Event.cancelable` property to check whether you can prevent the default behavior associated with a particular event. If the value of `Event.cancelable` is true, then `preventDefault()` can be used to cancel the event; otherwise, `preventDefault()` has no effect.</haxe_doc>
		</preventDefault>
		<stopImmediatePropagation public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Prevents processing of any event listeners in the current node and any
	 * subsequent nodes in the event flow. This method takes effect immediately,
	 * and it affects event listeners in the current node. In contrast, the
	 * `stopPropagation()` method doesn't take effect until all the
	 * event listeners in the current node finish processing.
	 *
	 * **Note: ** This method does not cancel the behavior associated with
	 * this event; see `preventDefault()` for that functionality.
	 *</haxe_doc>
		</stopImmediatePropagation>
		<stopPropagation public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Prevents processing of any event listeners in nodes subsequent to the
	 * current node in the event flow. This method does not affect any event
	 * listeners in the current node(`currentTarget`). In contrast,
	 * the `stopImmediatePropagation()` method prevents processing of
	 * event listeners in both the current node and subsequent nodes. Additional
	 * calls to this method have no effect. This method can be called in any
	 * phase of the event flow.
	 *
	 * **Note: ** This method does not cancel the behavior associated with
	 * this event; see `preventDefault()` for that functionality.
	 *</haxe_doc>
		</stopPropagation>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>* Returns a string containing all the properties of the Event object. The
	 * string is in the following format:
	 *
	 * `[Event type=_value_ bubbles=_value_
	 * cancelable=_value_]`
	 * 
	 * @return A string containing all the properties of the Event object.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable" v=":false:false">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an Event object to pass as a parameter to event listeners.
	 * 
	 * @param type       The type of the event, accessible as
	 *                   `Event.type`.
	 * @param bubbles    Determines whether the Event object participates in the
	 *                   bubbling stage of the event flow. The default value is
	 *                   `false`.
	 * @param cancelable Determines whether the Event object can be canceled. The
	 *                   default values is `false`.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[* The Event class is used as the base class for the creation of Event
 * objects, which are passed as parameters to event listeners when an event
 * occurs.
 *
 * The properties of the Event class carry basic information about an
 * event, such as the event's type or whether the event's default behavior can
 * be canceled. For many events, such as the events represented by the Event
 * class constants, this basic information is sufficient. Other events,
 * however, may require more detailed information. Events associated with a
 * mouse click, for example, need to include additional information about the
 * location of the click event and whether any keys were pressed during the
 * click event. You can pass such additional information to event listeners by
 * extending the Event class, which is what the MouseEvent class does.
 * ActionScript 3.0 API defines several Event subclasses for common events
 * that require additional information. Events associated with each of the
 * Event subclasses are described in the documentation for each class.
 *
 * The methods of the Event class can be used in event listener functions
 * to affect the behavior of the event object. Some events have an associated
 * default behavior. For example, the `doubleClick` event has an
 * associated default behavior that highlights the word under the mouse
 * pointer at the time of the event. Your event listener can cancel this
 * behavior by calling the `preventDefault()` method. You can also
 * make the current event listener the last one to process an event by calling
 * the `stopPropagation()` or
 * `stopImmediatePropagation()` method.
 *
 * Other sources of information include:
 *
 * 
 *  * A useful description about the timing of events, code execution, and
 * rendering at runtime in Ted Patrick's blog entry: <a
 * [Flash Player Mental Model - The Elastic](http://www.onflex.org/ted/2005/07/flash-player-mental-model-elastic.php).
 *  * A blog entry by Johannes Tacskovics about the timing of frame events,
 * such as ENTER_FRAME, EXIT_FRAME: [The MovieClip Lifecycle](http://blog.johannest.com/2009/06/15/the-movieclip-life-cycle-revisited-from-event-added-to-event-removed_from_stage/).
 *  * An article by Trevor McCauley about the order of ActionScript
 * operations: [Order of Operations in ActionScript](http://www.senocular.com/flash/tutorials/orderofoperations/).
 *  * A blog entry by Matt Przybylski on creating custom events:
 * [AS3: Custom Events](http://evolve.reintroducing.com/2007/10/23/as3/as3-custom-events/).]]></haxe_doc>
	</class>
	<class path="flash.events.StatusEvent" params="" file="/usr/share/haxe/std/flash/events/StatusEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<STATUS public="1" set="null" static="1"><c path="String"/></STATUS>
		<code public="1"><c path="String"/></code>
		<level public="1"><c path="String"/></level>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?code:?level" v=":false:false::">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ cancelable : false, bubbles : false }</e></m></meta>
		</new>
	</class>
	<typedef path="flash.events.TouchEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/events/TouchEvent.hx"><c path="openfl.events.TouchEvent"/></typedef>
	<typedef path="flash.external.ExternalInterface" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/external/ExternalInterface.hx"><c path="openfl.external.ExternalInterface"/></typedef>
	<typedef path="flash.filters.GlowFilter" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/filters/GlowFilter.hx"><c path="openfl.filters.GlowFilter"/></typedef>
	<typedef path="flash.geom.ColorTransform" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/geom/ColorTransform.hx"><c path="openfl.geom.ColorTransform"/></typedef>
	<typedef path="flash.geom.Matrix" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/geom/Matrix.hx"><c path="openfl.geom.Matrix"/></typedef>
	<typedef path="flash.geom.Point" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/geom/Point.hx"><c path="openfl.geom.Point"/></typedef>
	<typedef path="flash.geom.Rectangle" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/geom/Rectangle.hx"><c path="openfl.geom.Rectangle"/></typedef>
	<class path="flash.media.AVCaptionStyle" params="" file="/usr/share/haxe/std/flash/media/AVCaptionStyle.hx" extern="1">
		<BLACK public="1" set="null" static="1"><c path="String"/></BLACK>
		<BLUE public="1" set="null" static="1"><c path="String"/></BLUE>
		<BRIGHT_BLUE public="1" set="null" static="1"><c path="String"/></BRIGHT_BLUE>
		<BRIGHT_CYAN public="1" set="null" static="1"><c path="String"/></BRIGHT_CYAN>
		<BRIGHT_GREEN public="1" set="null" static="1"><c path="String"/></BRIGHT_GREEN>
		<BRIGHT_MAGENTA public="1" set="null" static="1"><c path="String"/></BRIGHT_MAGENTA>
		<BRIGHT_RED public="1" set="null" static="1"><c path="String"/></BRIGHT_RED>
		<BRIGHT_WHITE public="1" set="null" static="1"><c path="String"/></BRIGHT_WHITE>
		<BRIGHT_YELLOW public="1" set="null" static="1"><c path="String"/></BRIGHT_YELLOW>
		<CASUAL public="1" set="null" static="1"><c path="String"/></CASUAL>
		<CURSIVE public="1" set="null" static="1"><c path="String"/></CURSIVE>
		<CYAN public="1" set="null" static="1"><c path="String"/></CYAN>
		<DARK_BLUE public="1" set="null" static="1"><c path="String"/></DARK_BLUE>
		<DARK_CYAN public="1" set="null" static="1"><c path="String"/></DARK_CYAN>
		<DARK_GREEN public="1" set="null" static="1"><c path="String"/></DARK_GREEN>
		<DARK_MAGENTA public="1" set="null" static="1"><c path="String"/></DARK_MAGENTA>
		<DARK_RED public="1" set="null" static="1"><c path="String"/></DARK_RED>
		<DARK_YELLOW public="1" set="null" static="1"><c path="String"/></DARK_YELLOW>
		<DEFAULT public="1" set="null" static="1"><c path="String"/></DEFAULT>
		<DEPRESSED public="1" set="null" static="1"><c path="String"/></DEPRESSED>
		<GRAY public="1" set="null" static="1"><c path="String"/></GRAY>
		<GREEN public="1" set="null" static="1"><c path="String"/></GREEN>
		<LARGE public="1" set="null" static="1"><c path="String"/></LARGE>
		<LEFT_DROP_SHADOW public="1" set="null" static="1"><c path="String"/></LEFT_DROP_SHADOW>
		<MAGENTA public="1" set="null" static="1"><c path="String"/></MAGENTA>
		<MEDIUM public="1" set="null" static="1"><c path="String"/></MEDIUM>
		<MONOSPACED_WITHOUT_SERIFS public="1" set="null" static="1"><c path="String"/></MONOSPACED_WITHOUT_SERIFS>
		<MONOSPACE_WITH_SERIFS public="1" set="null" static="1"><c path="String"/></MONOSPACE_WITH_SERIFS>
		<NONE public="1" set="null" static="1"><c path="String"/></NONE>
		<PROPORTIONAL_WITHOUT_SERIFS public="1" set="null" static="1"><c path="String"/></PROPORTIONAL_WITHOUT_SERIFS>
		<PROPORTIONAL_WITH_SERIFS public="1" set="null" static="1"><c path="String"/></PROPORTIONAL_WITH_SERIFS>
		<RAISED public="1" set="null" static="1"><c path="String"/></RAISED>
		<RED public="1" set="null" static="1"><c path="String"/></RED>
		<RIGHT_DROP_SHADOW public="1" set="null" static="1"><c path="String"/></RIGHT_DROP_SHADOW>
		<SMALL public="1" set="null" static="1"><c path="String"/></SMALL>
		<SMALL_CAPITALS public="1" set="null" static="1"><c path="String"/></SMALL_CAPITALS>
		<UNIFORM public="1" set="null" static="1"><c path="String"/></UNIFORM>
		<WHITE public="1" set="null" static="1"><c path="String"/></WHITE>
		<YELLOW public="1" set="null" static="1"><c path="String"/></YELLOW>
		<backgroundColor public="1"><c path="String"/></backgroundColor>
		<backgroundOpacity public="1"><c path="String"/></backgroundOpacity>
		<bottomInset public="1"><c path="String"/></bottomInset>
		<edgeColor public="1"><c path="String"/></edgeColor>
		<fillColor public="1"><c path="String"/></fillColor>
		<fillOpacity public="1"><c path="String"/></fillOpacity>
		<font public="1"><c path="String"/></font>
		<fontColor public="1"><c path="String"/></fontColor>
		<fontEdge public="1"><c path="String"/></fontEdge>
		<fontOpacity public="1"><c path="String"/></fontOpacity>
		<size public="1"><c path="String"/></size>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="flash.media.AVPlayState" params="" file="/usr/share/haxe/std/flash/media/AVPlayState.hx" extern="1">
		<BUFFERING public="1" set="null" static="1"><x path="Int"/></BUFFERING>
		<EOF public="1" set="null" static="1"><x path="Int"/></EOF>
		<PAUSED public="1" set="null" static="1"><x path="Int"/></PAUSED>
		<PLAYING public="1" set="null" static="1"><x path="Int"/></PLAYING>
		<READY public="1" set="null" static="1"><x path="Int"/></READY>
		<SUSPENDED public="1" set="null" static="1"><x path="Int"/></SUSPENDED>
		<TRICK_PLAY public="1" set="null" static="1"><x path="Int"/></TRICK_PLAY>
		<UNINITIALIZED public="1" set="null" static="1"><x path="Int"/></UNINITIALIZED>
		<UNRECOVERABLE_ERROR public="1" set="null" static="1"><x path="Int"/></UNRECOVERABLE_ERROR>
		<state public="1" set="null"><x path="Int"/></state>
		<new public="1" set="method"><f a="state">
	<x path="UInt"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="flash.media.AVResult" params="" file="/usr/share/haxe/std/flash/media/AVResult.hx" extern="1">
		<ASYNC_OPERATION_IN_PROGRESS public="1" set="null" static="1"><x path="Int"/></ASYNC_OPERATION_IN_PROGRESS>
		<AUDIO_ONLY_STREAM_END public="1" set="null" static="1"><x path="Int"/></AUDIO_ONLY_STREAM_END>
		<AUDIO_ONLY_STREAM_START public="1" set="null" static="1"><x path="Int"/></AUDIO_ONLY_STREAM_START>
		<AUDIO_START_ERROR public="1" set="null" static="1"><x path="Int"/></AUDIO_START_ERROR>
		<BAD_MANIFEST_SIGNATURE public="1" set="null" static="1"><x path="Int"/></BAD_MANIFEST_SIGNATURE>
		<BAD_MEDIASAMPLE_FOUND public="1" set="null" static="1"><x path="Int"/></BAD_MEDIASAMPLE_FOUND>
		<BAD_MEDIA_INTERLEAVING public="1" set="null" static="1"><x path="Int"/></BAD_MEDIA_INTERLEAVING>
		<CALLED_FROM_WRONG_THREAD public="1" set="null" static="1"><x path="Int"/></CALLED_FROM_WRONG_THREAD>
		<CANNOT_ERASE_TIMELINE public="1" set="null" static="1"><x path="Int"/></CANNOT_ERASE_TIMELINE>
		<CANNOT_FAIL_OVER public="1" set="null" static="1"><x path="Int"/></CANNOT_FAIL_OVER>
		<CANNOT_HANDLE_MAIN_MANIFEST_UPDATE public="1" set="null" static="1"><x path="Int"/></CANNOT_HANDLE_MAIN_MANIFEST_UPDATE>
		<CANNOT_LOAD_PLAY_LIST public="1" set="null" static="1"><x path="Int"/></CANNOT_LOAD_PLAY_LIST>
		<CANNOT_SPLIT_TIMELINE public="1" set="null" static="1"><x path="Int"/></CANNOT_SPLIT_TIMELINE>
		<CODEC_NOT_SUPPORTED public="1" set="null" static="1"><x path="Int"/></CODEC_NOT_SUPPORTED>
		<COMPONENT_CREATION_FAILURE public="1" set="null" static="1"><x path="Int"/></COMPONENT_CREATION_FAILURE>
		<CONTAINER_NOT_SUPPORTED public="1" set="null" static="1"><x path="Int"/></CONTAINER_NOT_SUPPORTED>
		<CONTENT_LENGTH_MISMATCH public="1" set="null" static="1"><x path="Int"/></CONTENT_LENGTH_MISMATCH>
		<CRYPTO_ALGORITHM_NOT_SUPPORTED public="1" set="null" static="1"><x path="Int"/></CRYPTO_ALGORITHM_NOT_SUPPORTED>
		<CRYPTO_ERROR_BAD_CERTIFICATE public="1" set="null" static="1"><x path="Int"/></CRYPTO_ERROR_BAD_CERTIFICATE>
		<CRYPTO_ERROR_BAD_PARAMETER public="1" set="null" static="1"><x path="Int"/></CRYPTO_ERROR_BAD_PARAMETER>
		<CRYPTO_ERROR_BUFFER_TOO_SMALL public="1" set="null" static="1"><x path="Int"/></CRYPTO_ERROR_BUFFER_TOO_SMALL>
		<CRYPTO_ERROR_CORRUPTED_DATA public="1" set="null" static="1"><x path="Int"/></CRYPTO_ERROR_CORRUPTED_DATA>
		<CRYPTO_ERROR_DIGEST_FINISH public="1" set="null" static="1"><x path="Int"/></CRYPTO_ERROR_DIGEST_FINISH>
		<CRYPTO_ERROR_DIGEST_UPDATE public="1" set="null" static="1"><x path="Int"/></CRYPTO_ERROR_DIGEST_UPDATE>
		<CRYPTO_ERROR_UNKNOWN public="1" set="null" static="1"><x path="Int"/></CRYPTO_ERROR_UNKNOWN>
		<CURRENT_PERIOD_EXPIRED public="1" set="null" static="1"><x path="Int"/></CURRENT_PERIOD_EXPIRED>
		<DECODER_FAILED public="1" set="null" static="1"><x path="Int"/></DECODER_FAILED>
		<DEVICE_OPEN_ERROR public="1" set="null" static="1"><x path="Int"/></DEVICE_OPEN_ERROR>
		<DID_NOT_GET_NEXT_FRAGMENT public="1" set="null" static="1"><x path="Int"/></DID_NOT_GET_NEXT_FRAGMENT>
		<DRM_INIT_ERROR public="1" set="null" static="1"><x path="Int"/></DRM_INIT_ERROR>
		<DRM_NOT_AVAILABLE public="1" set="null" static="1"><x path="Int"/></DRM_NOT_AVAILABLE>
		<END_OF_PERIOD public="1" set="null" static="1"><x path="Int"/></END_OF_PERIOD>
		<EOF public="1" set="null" static="1"><x path="Int"/></EOF>
		<FILE_NOT_FOUND public="1" set="null" static="1"><x path="Int"/></FILE_NOT_FOUND>
		<FILE_OPEN_ERROR public="1" set="null" static="1"><x path="Int"/></FILE_OPEN_ERROR>
		<FILE_READ_ERROR public="1" set="null" static="1"><x path="Int"/></FILE_READ_ERROR>
		<FILE_STRUCTURE_INVALID public="1" set="null" static="1"><x path="Int"/></FILE_STRUCTURE_INVALID>
		<FILE_WRITE_ERROR public="1" set="null" static="1"><x path="Int"/></FILE_WRITE_ERROR>
		<FRAGMENT_READ_ERROR public="1" set="null" static="1"><x path="Int"/></FRAGMENT_READ_ERROR>
		<GENERIC_ERROR public="1" set="null" static="1"><x path="Int"/></GENERIC_ERROR>
		<HTTP_TIME_OUT public="1" set="null" static="1"><x path="Int"/></HTTP_TIME_OUT>
		<ID3_PARSE_ERROR public="1" set="null" static="1"><x path="Int"/></ID3_PARSE_ERROR>
		<INCOMPATIBLE_RENDER_MODE public="1" set="null" static="1"><x path="Int"/></INCOMPATIBLE_RENDER_MODE>
		<INCOMPATIBLE_VERSION public="1" set="null" static="1"><x path="Int"/></INCOMPATIBLE_VERSION>
		<INTERNAL_ERROR public="1" set="null" static="1"><x path="Int"/></INTERNAL_ERROR>
		<INVALID_KEY public="1" set="null" static="1"><x path="Int"/></INVALID_KEY>
		<INVALID_OPERATION public="1" set="null" static="1"><x path="Int"/></INVALID_OPERATION>
		<INVALID_PARAMETER public="1" set="null" static="1"><x path="Int"/></INVALID_PARAMETER>
		<INVALID_REPLACE_DURATION public="1" set="null" static="1"><x path="Int"/></INVALID_REPLACE_DURATION>
		<INVALID_SEEK_TIME public="1" set="null" static="1"><x path="Int"/></INVALID_SEEK_TIME>
		<INVALID_WITH_AUDIO_ONLY_FILE public="1" set="null" static="1"><x path="Int"/></INVALID_WITH_AUDIO_ONLY_FILE>
		<IRRECOVERABLE_ERROR public="1" set="null" static="1"><x path="Int"/></IRRECOVERABLE_ERROR>
		<KEY_NOT_FOUND public="1" set="null" static="1"><x path="Int"/></KEY_NOT_FOUND>
		<KEY_SERVER_NOT_FOUND public="1" set="null" static="1"><x path="Int"/></KEY_SERVER_NOT_FOUND>
		<LISTENER_NOT_FOUND public="1" set="null" static="1"><x path="Int"/></LISTENER_NOT_FOUND>
		<LIVE_HOLD public="1" set="null" static="1"><x path="Int"/></LIVE_HOLD>
		<LIVE_WINDOW_MOVED_BACKWARD public="1" set="null" static="1"><x path="Int"/></LIVE_WINDOW_MOVED_BACKWARD>
		<LOST_CONNECTION_RECOVERABLE public="1" set="null" static="1"><x path="Int"/></LOST_CONNECTION_RECOVERABLE>
		<MAIN_MANIFEST_UPDATE_TO_BE_HANDLED public="1" set="null" static="1"><x path="Int"/></MAIN_MANIFEST_UPDATE_TO_BE_HANDLED>
		<MANIFEST_FILE_UNEXPECTEDLY_CHANGED public="1" set="null" static="1"><x path="Int"/></MANIFEST_FILE_UNEXPECTEDLY_CHANGED>
		<NETWORK_DOWN public="1" set="null" static="1"><x path="Int"/></NETWORK_DOWN>
		<NETWORK_ERROR public="1" set="null" static="1"><x path="Int"/></NETWORK_ERROR>
		<NETWORK_UNAVAILABLE public="1" set="null" static="1"><x path="Int"/></NETWORK_UNAVAILABLE>
		<NOT_IMPLEMENTED public="1" set="null" static="1"><x path="Int"/></NOT_IMPLEMENTED>
		<NO_AUDIO_SINK public="1" set="null" static="1"><x path="Int"/></NO_AUDIO_SINK>
		<NO_FIXED_SIZE public="1" set="null" static="1"><x path="Int"/></NO_FIXED_SIZE>
		<NO_TIMELINE public="1" set="null" static="1"><x path="Int"/></NO_TIMELINE>
		<NO_USEABLE_BITRATE_PROFILE public="1" set="null" static="1"><x path="Int"/></NO_USEABLE_BITRATE_PROFILE>
		<NULL_OPERATION public="1" set="null" static="1"><x path="Int"/></NULL_OPERATION>
		<ONLY_ALLOWED_IN_PAUSED_STATE public="1" set="null" static="1"><x path="Int"/></ONLY_ALLOWED_IN_PAUSED_STATE>
		<OPERATION_ABORTED public="1" set="null" static="1"><x path="Int"/></OPERATION_ABORTED>
		<OUT_OF_MEMORY public="1" set="null" static="1"><x path="Int"/></OUT_OF_MEMORY>
		<OVERFLOW public="1" set="null" static="1"><x path="Int"/></OVERFLOW>
		<PARSE_ERROR public="1" set="null" static="1"><x path="Int"/></PARSE_ERROR>
		<PARTIAL_REPLACEMENT public="1" set="null" static="1"><x path="Int"/></PARTIAL_REPLACEMENT>
		<PERIOD_HOLD public="1" set="null" static="1"><x path="Int"/></PERIOD_HOLD>
		<PERIOD_NOT_LOADED public="1" set="null" static="1"><x path="Int"/></PERIOD_NOT_LOADED>
		<PLAYBACK_NOT_ENABLED public="1" set="null" static="1"><x path="Int"/></PLAYBACK_NOT_ENABLED>
		<POSTROLL_WITH_LIVE_NOT_ALLOWED public="1" set="null" static="1"><x path="Int"/></POSTROLL_WITH_LIVE_NOT_ALLOWED>
		<PREVIOUS_STEP_SEEK_IN_PROGRESS public="1" set="null" static="1"><x path="Int"/></PREVIOUS_STEP_SEEK_IN_PROGRESS>
		<PROTOCOL_NOT_SUPPORTED public="1" set="null" static="1"><x path="Int"/></PROTOCOL_NOT_SUPPORTED>
		<RANGE_ERROR public="1" set="null" static="1"><x path="Int"/></RANGE_ERROR>
		<RANGE_SPANS_READHEAD public="1" set="null" static="1"><x path="Int"/></RANGE_SPANS_READHEAD>
		<RENDITION_M3U8_ERROR public="1" set="null" static="1"><x path="Int"/></RENDITION_M3U8_ERROR>
		<REPLACEMENT_FAILED public="1" set="null" static="1"><x path="Int"/></REPLACEMENT_FAILED>
		<RESOURCE_NOT_SPECIFIED public="1" set="null" static="1"><x path="Int"/></RESOURCE_NOT_SPECIFIED>
		<SECURITY_ERROR public="1" set="null" static="1"><x path="Int"/></SECURITY_ERROR>
		<SEEK_FAILED public="1" set="null" static="1"><x path="Int"/></SEEK_FAILED>
		<SEGMENT_SKIPPED_ON_FAILURE public="1" set="null" static="1"><x path="Int"/></SEGMENT_SKIPPED_ON_FAILURE>
		<SIZE_UNKNOWN public="1" set="null" static="1"><x path="Int"/></SIZE_UNKNOWN>
		<SPS_PPS_FOUND_OUTSIDE_AVCC public="1" set="null" static="1"><x path="Int"/></SPS_PPS_FOUND_OUTSIDE_AVCC>
		<SUCCESS public="1" set="null" static="1"><x path="Int"/></SUCCESS>
		<SWITCH_TO_ASYMMETRIC_PROFILE public="1" set="null" static="1"><x path="Int"/></SWITCH_TO_ASYMMETRIC_PROFILE>
		<TIMELINE_TOO_SHORT public="1" set="null" static="1"><x path="Int"/></TIMELINE_TOO_SHORT>
		<UNDERFLOW public="1" set="null" static="1"><x path="Int"/></UNDERFLOW>
		<UNREPORTED_TIME_DISCONTINUITY_FOUND public="1" set="null" static="1"><x path="Int"/></UNREPORTED_TIME_DISCONTINUITY_FOUND>
		<UNSUPPORTED_CONFIGURATION public="1" set="null" static="1"><x path="Int"/></UNSUPPORTED_CONFIGURATION>
		<UNSUPPORTED_HLS_VERSION public="1" set="null" static="1"><x path="Int"/></UNSUPPORTED_HLS_VERSION>
		<UNSUPPORTED_OPERATION public="1" set="null" static="1"><x path="Int"/></UNSUPPORTED_OPERATION>
		<VIDEO_PROFILE_NOT_SUPPORTED public="1" set="null" static="1"><x path="Int"/></VIDEO_PROFILE_NOT_SUPPORTED>
		<WAITING_FOR_INIT public="1" set="null" static="1"><x path="Int"/></WAITING_FOR_INIT>
		<result public="1" set="null"><x path="Int"/></result>
		<new public="1" set="method"><f a="inResult">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="flash.media.AVSource" params="" file="/usr/share/haxe/std/flash/media/AVSource.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<dispose public="1" set="method"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="flash.media.AVStream" params="" file="/usr/share/haxe/std/flash/media/AVStream.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<HARDWARE public="1" set="null" static="1"><c path="String"/></HARDWARE>
		<SOFTWARE public="1" set="null" static="1"><c path="String"/></SOFTWARE>
		<UNDEFINED public="1" set="null" static="1"><c path="String"/></UNDEFINED>
		<backBufferLength public="1" set="null"><x path="Float"/></backBufferLength>
		<backBufferTime public="1" get="null"><x path="Float"/></backBufferTime>
		<bufferLength public="1" set="null"><x path="Float"/></bufferLength>
		<bufferTime public="1" get="null"><x path="Float"/></bufferTime>
		<captionStyle public="1" get="null"><c path="flash.media.AVCaptionStyle"/></captionStyle>
		<captionsEnabled public="1"><x path="Bool"/></captionsEnabled>
		<clientLivePoint public="1" set="null"><x path="Float"/></clientLivePoint>
		<currentFPS public="1" set="null"><x path="Float"/></currentFPS>
		<decoderType public="1" set="null"><c path="String"/></decoderType>
		<droppedFrames public="1" set="null"><x path="Int"/></droppedFrames>
		<frameTime public="1" set="null"><x path="Float"/></frameTime>
		<initialBufferTime public="1" get="null"><x path="Float"/></initialBufferTime>
		<playState public="1" set="null"><c path="flash.media.AVPlayState"/></playState>
		<renderType public="1" set="null"><c path="String"/></renderType>
		<time public="1" set="null"><x path="Float"/></time>
		<useHardwareDecoder public="1"><x path="Bool"/></useHardwareDecoder>
		<volume public="1"><x path="Float"/></volume>
		<dispose public="1" set="method"><f a=""><x path="Void"/></f></dispose>
		<fastForward public="1" set="method"><f a="rate">
	<x path="Float"/>
	<c path="flash.media.AVResult"/>
</f></fastForward>
		<pause public="1" set="method"><f a=""><c path="flash.media.AVResult"/></f></pause>
		<play public="1" set="method"><f a=""><c path="flash.media.AVResult"/></f></play>
		<resume public="1" set="method"><f a=""><x path="Bool"/></f></resume>
		<rewind public="1" set="method"><f a="rate">
	<x path="Float"/>
	<c path="flash.media.AVResult"/>
</f></rewind>
		<seek public="1" set="method">
			<f a="offset:?inBufferSeek" v=":true">
				<x path="Float"/>
				<x path="Bool"/>
				<c path="flash.media.AVResult"/>
			</f>
			<meta><m n=":value"><e>{ inBufferSeek : true }</e></m></meta>
		</seek>
		<seekToKeyFrame public="1" set="method">
			<f a="offset:?inBufferSeek" v=":true">
				<x path="Float"/>
				<x path="Bool"/>
				<c path="flash.media.AVResult"/>
			</f>
			<meta><m n=":value"><e>{ inBufferSeek : true }</e></m></meta>
		</seekToKeyFrame>
		<seekToLivePoint public="1" set="method"><f a=""><c path="flash.media.AVResult"/></f></seekToLivePoint>
		<seekToLocalTime public="1" set="method"><f a="periodIndex:time">
	<x path="Int"/>
	<x path="Float"/>
	<c path="flash.media.AVResult"/>
</f></seekToLocalTime>
		<setPlaySpeed public="1" set="method"><f a="speed:reserved">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setPlaySpeed>
		<step public="1" set="method"><f a="frames">
	<x path="Int"/>
	<c path="flash.media.AVResult"/>
</f></step>
		<new public="1" set="method"><f a="source">
	<c path="flash.media.AVSource"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="flash.media.Camera" params="" file="/usr/share/haxe/std/flash/media/Camera.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<isSupported public="1" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</isSupported>
		<names public="1" set="null" static="1"><c path="Array"><d/></c></names>
		<_scanHardware public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</_scanHardware>
		<getCamera public="1" set="method" static="1"><f a="?name">
	<c path="String"/>
	<c path="flash.media.Camera"/>
</f></getCamera>
		<activityLevel public="1" set="null"><x path="Float"/></activityLevel>
		<bandwidth public="1" set="null"><x path="Int"/></bandwidth>
		<currentFPS public="1" set="null"><x path="Float"/></currentFPS>
		<fps public="1" set="null"><x path="Float"/></fps>
		<height public="1" set="null"><x path="Int"/></height>
		<index public="1" set="null"><x path="Int"/></index>
		<keyFrameInterval public="1" set="null"><x path="Int"/></keyFrameInterval>
		<loopback public="1" set="null"><x path="Bool"/></loopback>
		<motionLevel public="1" set="null"><x path="Int"/></motionLevel>
		<motionTimeout public="1" set="null"><x path="Int"/></motionTimeout>
		<muted public="1" set="null"><x path="Bool"/></muted>
		<name public="1" set="null"><c path="String"/></name>
		<position public="1" set="null">
			<c path="String"/>
			<meta><m n=":require"><e>flash11_2</e></m></meta>
		</position>
		<quality public="1" set="null"><x path="Int"/></quality>
		<width public="1" set="null"><x path="Int"/></width>
		<copyToByteArray public="1" set="method">
			<f a="rect:destination">
				<t path="flash.geom.Rectangle"/>
				<t path="flash.utils.ByteArray"/>
				<x path="Void"/>
			</f>
			<meta><m n=":require"><e>flash11_4</e></m></meta>
		</copyToByteArray>
		<copyToVector public="1" set="method">
			<f a="rect:destination">
				<t path="flash.geom.Rectangle"/>
				<c path="flash.Vector"><x path="UInt"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":require"><e>flash11_4</e></m></meta>
		</copyToVector>
		<drawToBitmapData public="1" set="method">
			<f a="destination">
				<t path="flash.display.BitmapData"/>
				<x path="Void"/>
			</f>
			<meta><m n=":require"><e>flash11_4</e></m></meta>
		</drawToBitmapData>
		<setCursor public="1" set="method"><f a="value">
	<x path="Bool"/>
	<x path="Void"/>
</f></setCursor>
		<setKeyFrameInterval public="1" set="method"><f a="keyFrameInterval">
	<x path="Int"/>
	<x path="Void"/>
</f></setKeyFrameInterval>
		<setLoopback public="1" set="method">
			<f a="?compress" v="false">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ compress : false }</e></m></meta>
		</setLoopback>
		<setMode public="1" set="method">
			<f a="width:height:fps:?favorArea" v=":::true">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ favorArea : true }</e></m></meta>
		</setMode>
		<setMotionLevel public="1" set="method">
			<f a="motionLevel:?timeout" v=":2000">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ timeout : 2000 }</e></m></meta>
		</setMotionLevel>
		<setQuality public="1" set="method"><f a="bandwidth:quality">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setQuality>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="flash.media.Microphone" params="" file="/usr/share/haxe/std/flash/media/Microphone.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<isSupported public="1" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</isSupported>
		<names public="1" set="null" static="1"><c path="Array"><d/></c></names>
		<getEnhancedMicrophone public="1" set="method" static="1">
			<f a="?index" v="-1">
				<x path="Int"/>
				<c path="flash.media.Microphone"/>
			</f>
			<meta>
				<m n=":value"><e>{ index : -1 }</e></m>
				<m n=":require"><e>flash10_2</e></m>
			</meta>
		</getEnhancedMicrophone>
		<getMicrophone public="1" set="method" static="1">
			<f a="?index" v="-1">
				<x path="Int"/>
				<c path="flash.media.Microphone"/>
			</f>
			<meta><m n=":value"><e>{ index : -1 }</e></m></meta>
		</getMicrophone>
		<activityLevel public="1" set="null"><x path="Float"/></activityLevel>
		<codec public="1">
			<e path="flash.media.SoundCodec"/>
			<meta><m n=":require"><e>flash10</e></m></meta>
		</codec>
		<enableVAD public="1">
			<x path="Bool"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</enableVAD>
		<encodeQuality public="1">
			<x path="Int"/>
			<meta><m n=":require"><e>flash10</e></m></meta>
		</encodeQuality>
		<enhancedOptions public="1">
			<c path="flash.media.MicrophoneEnhancedOptions"/>
			<meta><m n=":require"><e>flash10_2</e></m></meta>
		</enhancedOptions>
		<framesPerPacket public="1">
			<x path="Int"/>
			<meta><m n=":require"><e>flash10</e></m></meta>
		</framesPerPacket>
		<gain public="1"><x path="Float"/></gain>
		<index public="1" set="null"><x path="Int"/></index>
		<muted public="1" set="null"><x path="Bool"/></muted>
		<name public="1" set="null"><c path="String"/></name>
		<noiseSuppressionLevel public="1">
			<x path="Int"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</noiseSuppressionLevel>
		<rate public="1"><x path="Int"/></rate>
		<silenceLevel public="1" set="null"><x path="Float"/></silenceLevel>
		<silenceTimeout public="1" set="null"><x path="Int"/></silenceTimeout>
		<soundTransform public="1"><t path="flash.media.SoundTransform"/></soundTransform>
		<useEchoSuppression public="1" set="null"><x path="Bool"/></useEchoSuppression>
		<setLoopBack public="1" set="method">
			<f a="?state" v="true">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : true }</e></m></meta>
		</setLoopBack>
		<setSilenceLevel public="1" set="method">
			<f a="silenceLevel:?timeout" v=":-1">
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ timeout : -1 }</e></m></meta>
		</setSilenceLevel>
		<setUseEchoSuppression public="1" set="method"><f a="useEchoSuppression">
	<x path="Bool"/>
	<x path="Void"/>
</f></setUseEchoSuppression>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":final"/></meta>
	</class>
	<enum path="flash.media.MicrophoneEnhancedMode" params="" file="/usr/share/haxe/std/flash/media/MicrophoneEnhancedMode.hx">
		<FULL_DUPLEX/>
		<HALF_DUPLEX/>
		<HEADSET/>
		<OFF/>
		<SPEAKER_MUTE/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
			<m n=":require"><e>flash10_2</e></m>
		</meta>
	</enum>
	<class path="flash.media.MicrophoneEnhancedOptions" params="" file="/usr/share/haxe/std/flash/media/MicrophoneEnhancedOptions.hx" extern="1">
		<autoGain public="1"><x path="Bool"/></autoGain>
		<echoPath public="1"><x path="Int"/></echoPath>
		<isVoiceDetected public="1"><x path="Int"/></isVoiceDetected>
		<mode public="1"><e path="flash.media.MicrophoneEnhancedMode"/></mode>
		<nonLinearProcessing public="1"><x path="Bool"/></nonLinearProcessing>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":final"/>
			<m n=":require"><e>flash10_2</e></m>
		</meta>
	</class>
	<typedef path="flash.media.Sound" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/media/Sound.hx"><c path="openfl.media.Sound"/></typedef>
	<typedef path="flash.media.SoundChannel" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/media/SoundChannel.hx"><c path="openfl.media.SoundChannel"/></typedef>
	<enum path="flash.media.SoundCodec" params="" file="/usr/share/haxe/std/flash/media/SoundCodec.hx">
		<NELLYMOSER/>
		<PCMA/>
		<PCMU/>
		<SPEEX/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
		</meta>
	</enum>
	<typedef path="flash.media.SoundTransform" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/media/SoundTransform.hx"><c path="openfl.media.SoundTransform"/></typedef>
	<class path="flash.media.StageVideo" params="" file="/usr/share/haxe/std/flash/media/StageVideo.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<colorSpaces public="1" set="null"><c path="flash.Vector"><c path="String"/></c></colorSpaces>
		<depth public="1"><x path="Int"/></depth>
		<pan public="1"><t path="flash.geom.Point"/></pan>
		<videoHeight public="1" set="null"><x path="Int"/></videoHeight>
		<videoWidth public="1" set="null"><x path="Int"/></videoWidth>
		<viewPort public="1"><t path="flash.geom.Rectangle"/></viewPort>
		<zoom public="1"><t path="flash.geom.Point"/></zoom>
		<attachAVStream public="1" set="method">
			<f a="avStream">
				<c path="flash.media.AVStream"/>
				<x path="Void"/>
			</f>
			<meta><m n=":require"><e>flash11_7</e></m></meta>
		</attachAVStream>
		<attachCamera public="1" set="method">
			<f a="theCamera">
				<c path="flash.media.Camera"/>
				<x path="Void"/>
			</f>
			<meta><m n=":require"><e>flash11_4</e></m></meta>
		</attachCamera>
		<attachNetStream public="1" set="method"><f a="netStream">
	<t path="flash.net.NetStream"/>
	<x path="Void"/>
</f></attachNetStream>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":require"><e>flash10_2</e></m></meta>
	</class>
	<class path="flash.media.VideoStreamSettings" params="" file="/usr/share/haxe/std/flash/media/VideoStreamSettings.hx" extern="1">
		<bandwidth public="1" set="null"><x path="Int"/></bandwidth>
		<codec public="1" set="null"><c path="String"/></codec>
		<fps public="1" set="null"><x path="Float"/></fps>
		<height public="1" set="null"><x path="Int"/></height>
		<keyFrameInterval public="1" set="null"><x path="Int"/></keyFrameInterval>
		<quality public="1" set="null"><x path="Int"/></quality>
		<width public="1" set="null"><x path="Int"/></width>
		<setKeyFrameInterval public="1" set="method"><f a="keyFrameInterval">
	<x path="Int"/>
	<x path="Void"/>
</f></setKeyFrameInterval>
		<setMode public="1" set="method"><f a="width:height:fps">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setMode>
		<setQuality public="1" set="method"><f a="bandwidth:quality">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setQuality>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="flash.net.LocalConnection" params="" file="/usr/share/haxe/std/flash/net/LocalConnection.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<isSupported public="1" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</isSupported>
		<client public="1"><d/></client>
		<domain public="1" set="null"><c path="String"/></domain>
		<isPerUser public="1">
			<x path="Bool"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</isPerUser>
		<allowDomain public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></allowDomain>
		<allowInsecureDomain public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></allowInsecureDomain>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<connect public="1" set="method"><f a="connectionName">
	<c path="String"/>
	<x path="Void"/>
</f></connect>
		<send public="1" set="method"><f a="connectionName:methodName:?p1:?p2:?p3:?p4:?p5">
	<c path="String"/>
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></send>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<typedef path="flash.net.NetConnection" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/net/NetConnection.hx"><c path="openfl.net.NetConnection"/></typedef>
	<typedef path="flash.net.NetStream" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/net/NetStream.hx"><c path="openfl.net.NetStream"/></typedef>
	<class path="flash.net.NetStreamInfo" params="" file="/usr/share/haxe/std/flash/net/NetStreamInfo.hx" extern="1">
		<SRTT public="1" set="null"><x path="Float"/></SRTT>
		<audioBufferByteLength public="1" set="null"><x path="Float"/></audioBufferByteLength>
		<audioBufferLength public="1" set="null"><x path="Float"/></audioBufferLength>
		<audioByteCount public="1" set="null"><x path="Float"/></audioByteCount>
		<audioBytesPerSecond public="1" set="null"><x path="Float"/></audioBytesPerSecond>
		<audioLossRate public="1" set="null"><x path="Float"/></audioLossRate>
		<byteCount public="1" set="null"><x path="Float"/></byteCount>
		<currentBytesPerSecond public="1" set="null"><x path="Float"/></currentBytesPerSecond>
		<dataBufferByteLength public="1" set="null"><x path="Float"/></dataBufferByteLength>
		<dataBufferLength public="1" set="null"><x path="Float"/></dataBufferLength>
		<dataByteCount public="1" set="null"><x path="Float"/></dataByteCount>
		<dataBytesPerSecond public="1" set="null"><x path="Float"/></dataBytesPerSecond>
		<droppedFrames public="1" set="null"><x path="Float"/></droppedFrames>
		<isLive public="1" set="null"><x path="Bool"/></isLive>
		<maxBytesPerSecond public="1" set="null"><x path="Float"/></maxBytesPerSecond>
		<metaData public="1" set="null"><d/></metaData>
		<playbackBytesPerSecond public="1" set="null"><x path="Float"/></playbackBytesPerSecond>
		<resourceName public="1" set="null"><c path="String"/></resourceName>
		<uri public="1" set="null"><c path="String"/></uri>
		<videoBufferByteLength public="1" set="null"><x path="Float"/></videoBufferByteLength>
		<videoBufferLength public="1" set="null"><x path="Float"/></videoBufferLength>
		<videoByteCount public="1" set="null"><x path="Float"/></videoByteCount>
		<videoBytesPerSecond public="1" set="null"><x path="Float"/></videoBytesPerSecond>
		<videoLossRate public="1" set="null">
			<x path="Float"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</videoLossRate>
		<xmpData public="1" set="null"><d/></xmpData>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method">
			<f a="curBPS:byteCount:maxBPS:audioBPS:audioByteCount:videoBPS:videoByteCount:dataBPS:dataByteCount:playbackBPS:droppedFrames:audioBufferByteLength:videoBufferByteLength:dataBufferByteLength:audioBufferLength:videoBufferLength:dataBufferLength:srtt:audioLossRate:videoLossRate:?metaData:?xmpData:?uri:?resourceName:?isLive" v="::::::::::::::::::::::::true">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<d/>
				<d/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ isLive : true }</e></m></meta>
		</new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="flash.net.NetStreamMulticastInfo" params="" file="/usr/share/haxe/std/flash/net/NetStreamMulticastInfo.hx" extern="1">
		<bytesPushedFromPeers public="1" set="null"><x path="Float"/></bytesPushedFromPeers>
		<bytesPushedToPeers public="1" set="null"><x path="Float"/></bytesPushedToPeers>
		<bytesReceivedFromIPMulticast public="1" set="null"><x path="Float"/></bytesReceivedFromIPMulticast>
		<bytesReceivedFromServer public="1" set="null"><x path="Float"/></bytesReceivedFromServer>
		<bytesRequestedByPeers public="1" set="null"><x path="Float"/></bytesRequestedByPeers>
		<bytesRequestedFromPeers public="1" set="null"><x path="Float"/></bytesRequestedFromPeers>
		<fragmentsPushedFromPeers public="1" set="null"><x path="Float"/></fragmentsPushedFromPeers>
		<fragmentsPushedToPeers public="1" set="null"><x path="Float"/></fragmentsPushedToPeers>
		<fragmentsReceivedFromIPMulticast public="1" set="null"><x path="Float"/></fragmentsReceivedFromIPMulticast>
		<fragmentsReceivedFromServer public="1" set="null"><x path="Float"/></fragmentsReceivedFromServer>
		<fragmentsRequestedByPeers public="1" set="null"><x path="Float"/></fragmentsRequestedByPeers>
		<fragmentsRequestedFromPeers public="1" set="null"><x path="Float"/></fragmentsRequestedFromPeers>
		<receiveControlBytesPerSecond public="1" set="null"><x path="Float"/></receiveControlBytesPerSecond>
		<receiveDataBytesPerSecond public="1" set="null"><x path="Float"/></receiveDataBytesPerSecond>
		<receiveDataBytesPerSecondFromIPMulticast public="1" set="null"><x path="Float"/></receiveDataBytesPerSecondFromIPMulticast>
		<receiveDataBytesPerSecondFromServer public="1" set="null"><x path="Float"/></receiveDataBytesPerSecondFromServer>
		<sendControlBytesPerSecond public="1" set="null"><x path="Float"/></sendControlBytesPerSecond>
		<sendControlBytesPerSecondToServer public="1" set="null"><x path="Float"/></sendControlBytesPerSecondToServer>
		<sendDataBytesPerSecond public="1" set="null"><x path="Float"/></sendDataBytesPerSecond>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method"><f a="sendDataBytesPerSecond:sendControlBytesPerSecond:receiveDataBytesPerSecond:receiveControlBytesPerSecond:bytesPushedToPeers:fragmentsPushedToPeers:bytesRequestedByPeers:fragmentsRequestedByPeers:bytesPushedFromPeers:fragmentsPushedFromPeers:bytesRequestedFromPeers:fragmentsRequestedFromPeers:sendControlBytesPerSecondToServer:receiveDataBytesPerSecondFromServer:bytesReceivedFromServer:fragmentsReceivedFromServer:receiveDataBytesPerSecondFromIPMulticast:bytesReceivedFromIPMulticast:fragmentsReceivedFromIPMulticast">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":final"/>
			<m n=":require"><e>flash10_1</e></m>
		</meta>
	</class>
	<class path="flash.net.NetStreamPlayOptions" params="" file="/usr/share/haxe/std/flash/net/NetStreamPlayOptions.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<len public="1"><x path="Float"/></len>
		<offset public="1">
			<x path="Float"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</offset>
		<oldStreamName public="1"><c path="String"/></oldStreamName>
		<start public="1"><x path="Float"/></start>
		<streamName public="1"><c path="String"/></streamName>
		<transition public="1"><c path="String"/></transition>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="flash.net.Responder" params="" file="/usr/share/haxe/std/flash/net/Responder.hx" extern="1"><new public="1" set="method"><f a="result:?status">
	<d/>
	<d/>
	<x path="Void"/>
</f></new></class>
	<typedef path="flash.net.URLLoader" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/net/URLLoader.hx"><c path="openfl.net.URLLoader"/></typedef>
	<typedef path="flash.net.URLRequest" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/net/URLRequest.hx"><c path="openfl.net.URLRequest"/></typedef>
	<typedef path="flash.net.URLRequestHeader" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/net/URLRequestHeader.hx"><c path="openfl.net.URLRequestHeader"/></typedef>
	<typedef path="flash.net.URLVariables" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/net/URLVariables.hx"><c path="openfl.net.URLVariables"/></typedef>
	<typedef path="flash.net.XMLSocket" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/net/XMLSocket.hx"><c path="openfl.net.XMLSocket"/></typedef>
	<typedef path="flash.system.Capabilities" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/system/Capabilities.hx"><c path="openfl.system.Capabilities"/></typedef>
	<class path="flash.system.IME" params="" file="/usr/share/haxe/std/flash/system/IME.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<conversionMode public="1" static="1"><e path="flash.system.IMEConversionMode"/></conversionMode>
		<enabled public="1" static="1"><x path="Bool"/></enabled>
		<isSupported public="1" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</isSupported>
		<compositionAbandoned public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</compositionAbandoned>
		<compositionSelectionChanged public="1" set="method" static="1">
			<f a="start:end">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</compositionSelectionChanged>
		<doConversion public="1" set="method" static="1"><f a=""><x path="Void"/></f></doConversion>
		<setCompositionString public="1" set="method" static="1"><f a="composition">
	<c path="String"/>
	<x path="Void"/>
</f></setCompositionString>
	</class>
	<enum path="flash.system.IMEConversionMode" params="" file="/usr/share/haxe/std/flash/system/IMEConversionMode.hx">
		<ALPHANUMERIC_FULL/>
		<ALPHANUMERIC_HALF/>
		<CHINESE/>
		<JAPANESE_HIRAGANA/>
		<JAPANESE_KATAKANA_FULL/>
		<JAPANESE_KATAKANA_HALF/>
		<KOREAN/>
		<UNKNOWN/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
		</meta>
	</enum>
	<enum path="flash.system.ImageDecodingPolicy" params="" file="/usr/share/haxe/std/flash/system/ImageDecodingPolicy.hx">
		<ON_DEMAND/>
		<ON_LOAD/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
		</meta>
	</enum>
	<typedef path="flash.system.LoaderContext" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/system/LoaderContext.hx"><c path="openfl.system.LoaderContext"/></typedef>
	<enum path="flash.system.SecurityPanel" params="" file="/usr/share/haxe/std/flash/system/SecurityPanel.hx">
		<CAMERA/>
		<DEFAULT/>
		<DISPLAY/>
		<LOCAL_STORAGE/>
		<MICROPHONE/>
		<PRIVACY/>
		<SETTINGS_MANAGER/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
		</meta>
	</enum>
	<typedef path="flash.text.TextField" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/text/TextField.hx"><c path="openfl.text.TextField"/></typedef>
	<typedef path="flash.text.TextFieldAutoSize" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/text/TextFieldAutoSize.hx"><x path="openfl.text.TextFieldAutoSize"/></typedef>
	<enum path="flash.text.TextFormatDisplay" params="" file="/usr/share/haxe/std/flash/text/TextFormatDisplay.hx">
		<BLOCK/>
		<INLINE/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
		</meta>
	</enum>
	<class path="flash.text.TextSnapshot" params="" file="/usr/share/haxe/std/flash/text/TextSnapshot.hx" extern="1">
		<charCount public="1" set="null"><x path="Int"/></charCount>
		<findText public="1" set="method"><f a="beginIndex:textToFind:caseSensitive">
	<x path="Int"/>
	<c path="String"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></findText>
		<getSelected public="1" set="method"><f a="beginIndex:endIndex">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
</f></getSelected>
		<getSelectedText public="1" set="method">
			<f a="?includeLineEndings" v="false">
				<x path="Bool"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ includeLineEndings : false }</e></m></meta>
		</getSelectedText>
		<getText public="1" set="method">
			<f a="beginIndex:endIndex:?includeLineEndings" v="::false">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ includeLineEndings : false }</e></m></meta>
		</getText>
		<getTextRunInfo public="1" set="method"><f a="beginIndex:endIndex">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><d/></c>
</f></getTextRunInfo>
		<hitTestTextNearPos public="1" set="method">
			<f a="x:y:?maxDistance" v="::0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":value"><e>{ maxDistance : 0 }</e></m></meta>
		</hitTestTextNearPos>
		<setSelectColor public="1" set="method">
			<f a="?hexColor" v="16776960">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ hexColor : 16776960 }</e></m></meta>
		</setSelectColor>
		<setSelected public="1" set="method"><f a="beginIndex:endIndex:select">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setSelected>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="flash.ui.ContextMenu" params="" file="/usr/share/haxe/std/flash/ui/ContextMenu.hx" extern="1">
		<extends path="flash.display.NativeMenu"/>
		<isSupported public="1" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":require"><e>flash10_1</e></m></meta>
		</isSupported>
		<builtInItems public="1"><c path="flash.ui.ContextMenuBuiltInItems"/></builtInItems>
		<clipboardItems public="1">
			<c path="flash.ui.ContextMenuClipboardItems"/>
			<meta><m n=":require"><e>flash10</e></m></meta>
		</clipboardItems>
		<clipboardMenu public="1">
			<x path="Bool"/>
			<meta><m n=":require"><e>flash10</e></m></meta>
		</clipboardMenu>
		<customItems public="1"><c path="Array"><d/></c></customItems>
		<link public="1">
			<t path="flash.net.URLRequest"/>
			<meta><m n=":require"><e>flash10</e></m></meta>
		</link>
		<clone public="1" set="method"><f a=""><c path="flash.ui.ContextMenu"/></f></clone>
		<hideBuiltInItems public="1" set="method"><f a=""><x path="Void"/></f></hideBuiltInItems>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="flash.ui.ContextMenuBuiltInItems" params="" file="/usr/share/haxe/std/flash/ui/ContextMenuBuiltInItems.hx" extern="1">
		<forwardAndBack public="1"><x path="Bool"/></forwardAndBack>
		<loop public="1"><x path="Bool"/></loop>
		<play public="1"><x path="Bool"/></play>
		<print public="1"><x path="Bool"/></print>
		<quality public="1"><x path="Bool"/></quality>
		<rewind public="1"><x path="Bool"/></rewind>
		<save public="1"><x path="Bool"/></save>
		<zoom public="1"><x path="Bool"/></zoom>
		<clone public="1" set="method"><f a=""><c path="flash.ui.ContextMenuBuiltInItems"/></f></clone>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="flash.ui.ContextMenuClipboardItems" params="" file="/usr/share/haxe/std/flash/ui/ContextMenuClipboardItems.hx" extern="1">
		<clear public="1"><x path="Bool"/></clear>
		<copy public="1"><x path="Bool"/></copy>
		<cut public="1"><x path="Bool"/></cut>
		<paste public="1"><x path="Bool"/></paste>
		<selectAll public="1"><x path="Bool"/></selectAll>
		<clone public="1" set="method"><f a=""><c path="flash.ui.ContextMenuClipboardItems"/></f></clone>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":final"/></meta>
	</class>
	<typedef path="flash.ui.Mouse" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/ui/Mouse.hx"><c path="openfl.ui.Mouse"/></typedef>
	<typedef path="flash.ui.MouseCursor" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/ui/MouseCursor.hx"><x path="openfl.ui.MouseCursor"/></typedef>
	<class path="flash.ui.MouseCursorData" params="" file="/usr/share/haxe/std/flash/ui/MouseCursorData.hx" extern="1">
		<data public="1"><c path="flash.Vector"><t path="flash.display.BitmapData"/></c></data>
		<frameRate public="1"><x path="Float"/></frameRate>
		<hotSpot public="1"><t path="flash.geom.Point"/></hotSpot>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":final"/>
			<m n=":require"><e>flash10_2</e></m>
		</meta>
	</class>
	<typedef path="flash.ui.Multitouch" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/ui/Multitouch.hx"><c path="openfl.ui.Multitouch"/></typedef>
	<typedef path="flash.ui.MultitouchInputMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/ui/MultitouchInputMode.hx"><x path="openfl.ui.MultitouchInputMode"/></typedef>
	<typedef path="flash.utils.ByteArray" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/utils/ByteArray.hx"><c path="openfl.utils.ByteArrayData"/></typedef>
	<typedef path="flash.utils.CompressionAlgorithm" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/utils/CompressionAlgorithm.hx"><x path="openfl.utils.CompressionAlgorithm"/></typedef>
	<class path="flash.utils.Dictionary" params="" file="/usr/share/haxe/std/flash/utils/Dictionary.hx" extern="1">
		<new public="1" set="method">
			<f a="?weakKeys" v="false">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ weakKeys : false }</e></m></meta>
		</new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<typedef path="flash.utils.Endian" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/flash/flash/utils/Endian.hx"><x path="openfl.utils.Endian"/></typedef>
	<typedef path="flash.utils.Function" params="" file="/usr/share/haxe/std/flash/utils/Function.hx"><d/></typedef>
	<class path="flash.utils.Namespace" params="" file="/usr/share/haxe/std/flash/utils/Namespace.hx" extern="1">
		<prefix public="1" set="null"><d/></prefix>
		<uri public="1" set="null"><c path="String"/></uri>
		<new public="1" set="method"><f a="?prefix:?uri">
	<d/>
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":final"/></meta>
	</class>
	<typedef path="flash.utils.Object" params="" file="/usr/share/haxe/std/flash/utils/Object.hx"><d/></typedef>
	<class path="flash.utils.RegExp" params="" file="/usr/share/haxe/std/flash/utils/RegExp.hx" extern="1">
		<dotall public="1" set="null"><x path="Bool"/></dotall>
		<extended public="1" set="null"><x path="Bool"/></extended>
		<global public="1" set="null"><x path="Bool"/></global>
		<ignoreCase public="1" set="null"><x path="Bool"/></ignoreCase>
		<lastIndex public="1"><x path="Int"/></lastIndex>
		<multiline public="1" set="null"><x path="Bool"/></multiline>
		<source public="1" set="null"><c path="String"/></source>
		<exec public="1" set="method">
			<f a="?s">
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":ns"><e>"http://adobe.com/AS3/2006/builtin"</e></m></meta>
		</exec>
		<test public="1" set="method">
			<f a="?s">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":ns"><e>"http://adobe.com/AS3/2006/builtin"</e></m></meta>
		</test>
		<new public="1" set="method"><f a="?pattern:?options">
	<d/>
	<d/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"RegExp"</e></m>
		</meta>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="flash.xml.XML" params="" file="/usr/share/haxe/std/flash/xml/XML.hx" extern="1">
		<ignoreComments public="1" static="1"><x path="Bool"/></ignoreComments>
		<ignoreProcessingInstructions public="1" static="1"><x path="Bool"/></ignoreProcessingInstructions>
		<ignoreWhitespace public="1" static="1"><x path="Bool"/></ignoreWhitespace>
		<prettyIndent public="1" static="1"><x path="Int"/></prettyIndent>
		<prettyPrinting public="1" static="1"><x path="Bool"/></prettyPrinting>
		<defaultSettings public="1" set="method" static="1"><f a=""><d/></f></defaultSettings>
		<setSettings public="1" set="method" static="1"><f a="?o">
	<d/>
	<x path="Void"/>
</f></setSettings>
		<settings public="1" set="method" static="1"><f a=""><d/></f></settings>
		<addNamespace public="1" set="method"><f a="ns">
	<d/>
	<c path="flash.xml.XML"/>
</f></addNamespace>
		<appendChild public="1" set="method"><f a="child">
	<d/>
	<c path="flash.xml.XML"/>
</f></appendChild>
		<attribute public="1" set="method"><f a="arg">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></attribute>
		<attributes public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></attributes>
		<child public="1" set="method"><f a="propertyName">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></child>
		<childIndex public="1" set="method"><f a=""><x path="Int"/></f></childIndex>
		<children public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></children>
		<comments public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></comments>
		<contains public="1" set="method"><f a="value">
	<d/>
	<x path="Bool"/>
</f></contains>
		<copy public="1" set="method"><f a=""><c path="flash.xml.XML"/></f></copy>
		<descendants public="1" set="method"><f a="?name">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></descendants>
		<elements public="1" set="method"><f a="?name">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></elements>
		<hasComplexContent public="1" set="method"><f a=""><x path="Bool"/></f></hasComplexContent>
		<hasSimpleContent public="1" set="method"><f a=""><x path="Bool"/></f></hasSimpleContent>
		<inScopeNamespaces public="1" set="method"><f a=""><c path="Array"><d/></c></f></inScopeNamespaces>
		<insertChildAfter public="1" set="method"><f a="child1:child2">
	<d/>
	<d/>
	<d/>
</f></insertChildAfter>
		<insertChildBefore public="1" set="method"><f a="child1:child2">
	<d/>
	<d/>
	<d/>
</f></insertChildBefore>
		<length public="1" set="method"><f a=""><x path="Int"/></f></length>
		<localName public="1" set="method"><f a=""><t path="flash.utils.Object"/></f></localName>
		<name public="1" set="method"><f a=""><t path="flash.utils.Object"/></f></name>
		<namespace public="1" set="method"><f a="?prefix">
	<d/>
	<c path="flash.utils.Namespace"/>
</f></namespace>
		<namespaceDeclarations public="1" set="method"><f a=""><c path="Array"><d/></c></f></namespaceDeclarations>
		<nodeKind public="1" set="method"><f a=""><c path="String"/></f></nodeKind>
		<normalize public="1" set="method"><f a=""><c path="flash.xml.XML"/></f></normalize>
		<notification public="1" set="method"><f a=""><t path="flash.utils.Function"/></f></notification>
		<parent public="1" set="method"><f a=""><c path="flash.xml.XML"/></f></parent>
		<prependChild public="1" set="method"><f a="value">
	<d/>
	<c path="flash.xml.XML"/>
</f></prependChild>
		<processingInstructions public="1" set="method"><f a="?name">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></processingInstructions>
		<removeNamespace public="1" set="method"><f a="ns">
	<d/>
	<c path="flash.xml.XML"/>
</f></removeNamespace>
		<replace public="1" set="method"><f a="propertyName:value">
	<d/>
	<d/>
	<c path="flash.xml.XML"/>
</f></replace>
		<setChildren public="1" set="method"><f a="value">
	<d/>
	<c path="flash.xml.XML"/>
</f></setChildren>
		<setLocalName public="1" set="method"><f a="name">
	<d/>
	<x path="Void"/>
</f></setLocalName>
		<setName public="1" set="method"><f a="name">
	<d/>
	<x path="Void"/>
</f></setName>
		<setNamespace public="1" set="method"><f a="ns">
	<d/>
	<x path="Void"/>
</f></setNamespace>
		<setNotification public="1" set="method"><f a="f">
	<t path="flash.utils.Function"/>
	<d/>
</f></setNotification>
		<text public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></text>
		<toJSON public="1" set="method">
			<f a="k">
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":require"><e>flash11</e></m></meta>
		</toJSON>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<toXMLString public="1" set="method"><f a=""><c path="String"/></f></toXMLString>
		<valueOf public="1" set="method"><f a=""><c path="flash.xml.XML"/></f></valueOf>
		<new public="1" set="method"><f a="?value">
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":final"/></meta>
		<haxe_dynamic><c path="flash.xml.XMLList"/></haxe_dynamic>
	</class>
	<class path="flash.xml.XMLList" params="" file="/usr/share/haxe/std/flash/xml/XMLList.hx" extern="1">
		<addNamespace public="1" set="method"><f a="ns">
	<d/>
	<c path="flash.xml.XML"/>
</f></addNamespace>
		<appendChild public="1" set="method"><f a="child">
	<d/>
	<c path="flash.xml.XML"/>
</f></appendChild>
		<attribute public="1" set="method"><f a="arg">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></attribute>
		<attributes public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></attributes>
		<child public="1" set="method"><f a="propertyName">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></child>
		<childIndex public="1" set="method"><f a=""><x path="Int"/></f></childIndex>
		<children public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></children>
		<comments public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></comments>
		<contains public="1" set="method"><f a="value">
	<d/>
	<x path="Bool"/>
</f></contains>
		<copy public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></copy>
		<descendants public="1" set="method"><f a="?name">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></descendants>
		<elements public="1" set="method"><f a="?name">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></elements>
		<hasComplexContent public="1" set="method"><f a=""><x path="Bool"/></f></hasComplexContent>
		<hasSimpleContent public="1" set="method"><f a=""><x path="Bool"/></f></hasSimpleContent>
		<inScopeNamespaces public="1" set="method"><f a=""><c path="Array"><d/></c></f></inScopeNamespaces>
		<insertChildAfter public="1" set="method"><f a="child1:child2">
	<d/>
	<d/>
	<d/>
</f></insertChildAfter>
		<insertChildBefore public="1" set="method"><f a="child1:child2">
	<d/>
	<d/>
	<d/>
</f></insertChildBefore>
		<length public="1" set="method"><f a=""><x path="Int"/></f></length>
		<localName public="1" set="method"><f a=""><t path="flash.utils.Object"/></f></localName>
		<name public="1" set="method"><f a=""><t path="flash.utils.Object"/></f></name>
		<namespace public="1" set="method"><f a="?prefix">
	<d/>
	<c path="flash.utils.Namespace"/>
</f></namespace>
		<namespaceDeclarations public="1" set="method"><f a=""><c path="Array"><d/></c></f></namespaceDeclarations>
		<nodeKind public="1" set="method"><f a=""><c path="String"/></f></nodeKind>
		<normalize public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></normalize>
		<parent public="1" set="method"><f a=""><c path="flash.xml.XML"/></f></parent>
		<prependChild public="1" set="method"><f a="value">
	<d/>
	<c path="flash.xml.XML"/>
</f></prependChild>
		<processingInstructions public="1" set="method"><f a="?name">
	<d/>
	<c path="flash.xml.XMLList"/>
</f></processingInstructions>
		<removeNamespace public="1" set="method"><f a="ns">
	<d/>
	<c path="flash.xml.XML"/>
</f></removeNamespace>
		<replace public="1" set="method"><f a="propertyName:value">
	<d/>
	<d/>
	<c path="flash.xml.XML"/>
</f></replace>
		<setChildren public="1" set="method"><f a="value">
	<d/>
	<c path="flash.xml.XML"/>
</f></setChildren>
		<setLocalName public="1" set="method"><f a="name">
	<d/>
	<x path="Void"/>
</f></setLocalName>
		<setName public="1" set="method"><f a="name">
	<d/>
	<x path="Void"/>
</f></setName>
		<setNamespace public="1" set="method"><f a="ns">
	<d/>
	<x path="Void"/>
</f></setNamespace>
		<text public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></text>
		<toJSON public="1" set="method">
			<f a="k">
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":require"><e>flash11</e></m></meta>
		</toJSON>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<toXMLString public="1" set="method"><f a=""><c path="String"/></f></toXMLString>
		<valueOf public="1" set="method"><f a=""><c path="flash.xml.XMLList"/></f></valueOf>
		<new public="1" set="method"><f a="?value">
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":final"/></meta>
	</class>
	<enum path="haxe.StackItem" params="" file="/home/joshua/Development/Haxe/lime/haxe/CallStack.hx" module="haxe.CallStack">
		<CFunction/>
		<Module a="m"><c path="String"/></Module>
		<FilePos a="s:file:line">
			<t path="Null"><e path="haxe.StackItem"/></t>
			<c path="String"/>
			<x path="Int"/>
		</FilePos>
		<Method a="classname:method">
			<c path="String"/>
			<c path="String"/>
		</Method>
		<LocalFunction a="?v"><x path="Int"/></LocalFunction>
		<haxe_doc>Elements return by `CallStack` methods.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="haxe.CallStack" params="" file="/home/joshua/Development/Haxe/lime/haxe/CallStack.hx">
		<callStack public="1" set="method" line="77" static="1">
			<f a=""><c path="Array"><e path="haxe.StackItem"/></c></f>
			<haxe_doc>Return the call stack elements, or an empty array if not available.</haxe_doc>
		</callStack>
		<exceptionStack public="1" set="method" line="140" static="1">
			<f a=""><c path="Array"><e path="haxe.StackItem"/></c></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Return the exception stack : this is the stack elements between
		the place the last exception was thrown and the place it was
		caught, or an empty array if not available.</haxe_doc>
		</exceptionStack>
		<toString public="1" set="method" line="206" static="1">
			<f a="stack">
				<c path="Array"><e path="haxe.StackItem"/></c>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a representation of the stack as a printable string.</haxe_doc>
		</toString>
		<itemToString set="method" line="219" static="1"><f a="b:s">
	<c path="StringBuf"/>
	<e path="haxe.StackItem"/>
	<x path="Void"/>
</f></itemToString>
		<makeStack set="method" line="246" static="1"><f a="s">
	<c path="String"/>
	<c path="Array"><e path="haxe.StackItem"/></c>
</f></makeStack>
		<haxe_doc>Get informations about the call stack.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="haxe.Function" params="" file="/usr/share/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc>This type unifies with any function type.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.</haxe_doc>
		<meta><m n=":callable"/></meta>
		<impl><class path="haxe._Constraints.Function_Impl_" params="" file="/usr/share/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.FlatEnum" params="" file="/usr/share/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc>This type unifies with an enum instance if all constructors of the enum
	require no arguments.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.</haxe_doc>
		<impl><class path="haxe._Constraints.FlatEnum_Impl_" params="" file="/usr/share/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.Constructible" params="T" file="/usr/share/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc><![CDATA[This type unifies with any instance of classes that have a constructor
	which
		* is public and
		* unifies with the type used for type parameter `T`.

	If a type parameter A is assigned to a type parameter B which is constrained
	to `Constructible<T>`, A must be explicitly constrained to
	`Constructible<T>` as well.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.]]></haxe_doc>
		<impl><class path="haxe._Constraints.Constructible_Impl_" params="" file="/usr/share/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="haxe.IMap" params="K:V" file="/usr/share/haxe/std/haxe/Constraints.hx" module="haxe.Constraints" interface="1">
		<get public="1" set="method"><f a="k">
	<c path="haxe.IMap.K"/>
	<t path="Null"><c path="haxe.IMap.V"/></t>
</f></get>
		<set public="1" set="method"><f a="k:v">
	<c path="haxe.IMap.K"/>
	<c path="haxe.IMap.V"/>
	<x path="Void"/>
</f></set>
		<exists public="1" set="method"><f a="k">
	<c path="haxe.IMap.K"/>
	<x path="Bool"/>
</f></exists>
		<remove public="1" set="method"><f a="k">
	<c path="haxe.IMap.K"/>
	<x path="Bool"/>
</f></remove>
		<keys public="1" set="method"><f a=""><t path="Iterator"><c path="haxe.IMap.K"/></t></f></keys>
		<iterator public="1" set="method"><f a=""><t path="Iterator"><c path="haxe.IMap.V"/></t></f></iterator>
		<meta><m n=":keep"/></meta>
	</class>
	<abstract path="haxe.DynamicAccess" params="T" file="/usr/share/haxe/std/haxe/DynamicAccess.hx">
		<from><icast><d><c path="haxe.DynamicAccess.T"/></d></icast></from>
		<this><d><c path="haxe.DynamicAccess.T"/></d></this>
		<to><icast><d><c path="haxe.DynamicAccess.T"/></d></icast></to>
		<haxe_doc>DynamicAccess is an abstract type for working with anonymous structures
	that are intended to hold collections of objects by the string key.

	For example, these types of structures are often created from JSON.

	Basically, it wraps `Reflect` calls in a `Map`-like interface.</haxe_doc>
		<impl><class path="haxe._DynamicAccess.DynamicAccess_Impl_" params="" file="/usr/share/haxe/std/haxe/DynamicAccess.hx" private="1" module="haxe.DynamicAccess"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.EnumFlags" params="T" file="/usr/share/haxe/std/haxe/EnumFlags.hx">
		<this><x path="Int"/></this>
		<haxe_doc>A typed interface for bit flags. This is not a real object, only a typed
	interface for an actual Int. Each flag can be tested/set with the
	corresponding enum instance. Up to 32 flags can be stored that way.

	Enum constructor indices are preserved from Haxe syntax, so the first
	declared is index 0, the next index 1 etc. The methods are optimized if the
	enum instance is passed directly, e.g. as has(EnumCtor). Otherwise
	Type.enumIndex() reflection is used.</haxe_doc>
		<impl><class path="haxe._EnumFlags.EnumFlags_Impl_" params="" file="/usr/share/haxe/std/haxe/EnumFlags.hx" private="1" module="haxe.EnumFlags"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="haxe.EnumTools" params="" file="/usr/share/haxe/std/haxe/EnumTools.hx" extern="1">
		<getName public="1" params="T" get="inline" set="null" line="50" static="1">
			<f a="e">
				<x path="Enum"><c path="getName.T"/></x>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the name of enum `e`, including its path.

		If `e` is inside a package, the package structure is returned dot-
		separated, with another dot separating the enum name:
			pack1.pack2.(...).packN.EnumName
		If `e` is a sub-type of a Haxe module, that module is not part of the
		package structure.

		If `e` has no package, the enum name is returned.

		If `e` is `null`, the result is unspecified.

		The enum name does not include any type parameters.</haxe_doc>
		</getName>
		<createByName public="1" params="T" get="inline" set="null" line="63" static="1">
			<f a="e:constr:?params">
				<x path="Enum"><c path="createByName.T"/></x>
				<c path="String"/>
				<c path="Array"><d/></c>
				<c path="createByName.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor `constr` with
		arguments `params`.

		If `e` or `constr` is `null`, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createByName>
		<createByIndex public="1" params="T" get="inline" set="null" line="79" static="1">
			<f a="e:index:?params">
				<x path="Enum"><c path="createByIndex.T"/></x>
				<x path="Int"/>
				<c path="Array"><d/></c>
				<c path="createByIndex.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor number
		`index` with arguments `params`.

		The constructor indices are preserved from Haxe syntax, so the first
		declared is index 0, the next index 1 etc.

		If `e` or `index` is `null`, or if enum `e` has no constructor
		corresponding to index `index`, or if the number of elements in `params`
		does not match the expected number of constructor arguments, or if any
		argument has an invalid type, the result is unspecified.</haxe_doc>
		</createByIndex>
		<createAll public="1" params="T" get="inline" set="null" line="96" static="1">
			<f a="e">
				<x path="Enum"><c path="createAll.T"/></x>
				<c path="Array"><c path="createAll.T"/></c>
			</f>
			<haxe_doc>Returns a list of all constructors of enum `e` that require no
		arguments.

		This may return the empty Array `[]` if all constructors of `e` require
		arguments.

		Otherwise an instance of `e` constructed through each of its non-
		argument constructors is returned, in the order of the constructor
		declaration.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</createAll>
		<getConstructors public="1" params="T" get="inline" set="null" line="108" static="1">
			<f a="e">
				<x path="Enum"><c path="getConstructors.T"/></x>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns a list of the names of all constructors of enum `e`.

		The order of the constructor names in the returned Array is preserved
		from the original syntax.

		If `c` is `null`, the result is unspecified.</haxe_doc>
		</getConstructors>
		<haxe_doc>This class provides advanced methods on enums. It is ideally used with
	`using EnumTools` and then acts as an 
  [extension](https://haxe.org/manual/lf-static-extension.html) to the 
  `enum` types.

	If the first argument to any of the methods is null, the result is
	unspecified.</haxe_doc>
	</class>
	<class path="haxe.EnumValueTools" params="" file="/usr/share/haxe/std/haxe/EnumTools.hx" module="haxe.EnumTools" extern="1">
		<equals public="1" params="T" get="inline" set="null" line="132" static="1">
			<f a="a:b">
				<c path="equals.T"/>
				<c path="equals.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Recursively compares two enum instances `a` and `b` by value.

		Unlike `a == b`, this function performs a deep equality check on the
		arguments of the constructors (if there are any).

		If `a` or `b` are `null`, the result is unspecified.</haxe_doc>
		</equals>
		<getName public="1" get="inline" set="null" line="143" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the constructor name of enum instance `e`.

		The result String does not contain any constructor arguments.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</getName>
		<getParameters public="1" get="inline" set="null" line="157" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="Array"><d/></c>
			</f>
			<haxe_doc>Returns a list of the constructor arguments of enum instance `e`.

		If `e` has no arguments, the result is `[]`.

		Otherwise the result are the values that were used as arguments to `e`,
		in the order of their declaration.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</getParameters>
		<getIndex public="1" get="inline" set="null" line="169" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the index of enum instance `e`.

		This corresponds to the original syntactic position of `e`. The index of
		the first declared constructor is 0, the next one is 1 etc.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</getIndex>
		<match public="1" set="method" static="1">
			<f a="e:pattern">
				<x path="EnumValue"/>
				<d/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Matches enum instance `e` against pattern `pattern`, returning `true` if
		matching succeeded and `false` otherwise.

		Example usage:

		```haxe
		if (e.match(pattern)) {
			// codeIfTrue
		} else {
			// codeIfFalse
		}
		```

		This is equivalent to the following code:

		```haxe
		switch (e) {
			case pattern:
				// codeIfTrue
			case _:
				// codeIfFalse
		}
		```

		This method is implemented in the compiler. This definition exists only
		for documentation.</haxe_doc>
		</match>
		<haxe_doc>This class provides advanced methods on enum values. It is ideally used with
	`using EnumValueTools` and then acts as an 
  [extension](https://haxe.org/manual/lf-static-extension.html) to the 
  `EnumValue` types.

	If the first argument to any of the methods is null, the result is
	unspecified.</haxe_doc>
	</class>
	<abstract path="haxe.Int32" params="" file="haxe/Int32.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="Int"/></icast>
			<icast field="toFloat"><x path="Float"/></icast>
		</to>
		<haxe_doc>Int32 provides a 32-bit integer with consistent overflow behavior across
 	all platforms.</haxe_doc>
		<impl><class path="haxe._Int32.Int32_Impl_" params="" file="haxe/Int32.hx" private="1" module="haxe.Int32">
	<preIncrement get="inline" set="null" line="31" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="haxe.Int32"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":op"><e>++A</e></m>
		</meta>
	</preIncrement>
	<postIncrement get="inline" set="null" line="34" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="haxe.Int32"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":op"><e>A++</e></m>
		</meta>
	</postIncrement>
	<preDecrement get="inline" set="null" line="40" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="haxe.Int32"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":op"><e>--A</e></m>
		</meta>
	</preDecrement>
	<postDecrement get="inline" set="null" line="43" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="haxe.Int32"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":op"><e>A--</e></m>
		</meta>
	</postDecrement>
	<add get="inline" set="null" line="49" static="1">
		<f a="a:b">
			<x path="haxe.Int32"/>
			<x path="haxe.Int32"/>
			<x path="haxe.Int32"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</add>
	<addInt get="inline" set="null" line="52" static="1">
		<f a="a:b">
			<x path="haxe.Int32"/>
			<x path="Int"/>
			<x path="haxe.Int32"/>
		</f>
		<meta>
			<m n=":op"><e>A + B</e></m>
			<m n=":commutative"/>
		</meta>
	</addInt>
	<sub get="inline" set="null" line="57" static="1">
		<f a="a:b">
			<x path="haxe.Int32"/>
			<x path="haxe.Int32"/>
			<x path="haxe.Int32"/>
		</f>
		<meta><m n=":op"><e>A - B</e></m></meta>
	</sub>
	<subInt get="inline" set="null" line="60" static="1">
		<f a="a:b">
			<x path="haxe.Int32"/>
			<x path="Int"/>
			<x path="haxe.Int32"/>
		</f>
		<meta><m n=":op"><e>A - B</e></m></meta>
	</subInt>
	<intSub get="inline" set="null" line="63" static="1">
		<f a="a:b">
			<x path="Int"/>
			<x path="haxe.Int32"/>
			<x path="haxe.Int32"/>
		</f>
		<meta><m n=":op"><e>A - B</e></m></meta>
	</intSub>
	<toFloat get="inline" set="null" line="171" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toFloat>
	<ucompare public="1" set="method" line="177" static="1">
		<f a="a:b">
			<x path="haxe.Int32"/>
			<x path="haxe.Int32"/>
			<x path="Int"/>
		</f>
		<haxe_doc>Compare `a` and `b` in unsigned mode.</haxe_doc>
	</ucompare>
	<clamp get="inline" set="null" line="187" static="1"><f a="x">
	<x path="Int"/>
	<x path="Int"/>
</f></clamp>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="haxe._Int32.Int32_Impl_" params="" file="haxe/Int32.hx" private="1" module="haxe.Int32">
		<preIncrement get="inline" set="null" line="31" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="haxe.Int32"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":op"><e>++A</e></m>
			</meta>
		</preIncrement>
		<postIncrement get="inline" set="null" line="34" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="haxe.Int32"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":op"><e>A++</e></m>
			</meta>
		</postIncrement>
		<preDecrement get="inline" set="null" line="40" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="haxe.Int32"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":op"><e>--A</e></m>
			</meta>
		</preDecrement>
		<postDecrement get="inline" set="null" line="43" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="haxe.Int32"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":op"><e>A--</e></m>
			</meta>
		</postDecrement>
		<add get="inline" set="null" line="49" static="1">
			<f a="a:b">
				<x path="haxe.Int32"/>
				<x path="haxe.Int32"/>
				<x path="haxe.Int32"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</add>
		<addInt get="inline" set="null" line="52" static="1">
			<f a="a:b">
				<x path="haxe.Int32"/>
				<x path="Int"/>
				<x path="haxe.Int32"/>
			</f>
			<meta>
				<m n=":op"><e>A + B</e></m>
				<m n=":commutative"/>
			</meta>
		</addInt>
		<sub get="inline" set="null" line="57" static="1">
			<f a="a:b">
				<x path="haxe.Int32"/>
				<x path="haxe.Int32"/>
				<x path="haxe.Int32"/>
			</f>
			<meta><m n=":op"><e>A - B</e></m></meta>
		</sub>
		<subInt get="inline" set="null" line="60" static="1">
			<f a="a:b">
				<x path="haxe.Int32"/>
				<x path="Int"/>
				<x path="haxe.Int32"/>
			</f>
			<meta><m n=":op"><e>A - B</e></m></meta>
		</subInt>
		<intSub get="inline" set="null" line="63" static="1">
			<f a="a:b">
				<x path="Int"/>
				<x path="haxe.Int32"/>
				<x path="haxe.Int32"/>
			</f>
			<meta><m n=":op"><e>A - B</e></m></meta>
		</intSub>
		<toFloat get="inline" set="null" line="171" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toFloat>
		<ucompare public="1" set="method" line="177" static="1">
			<f a="a:b">
				<x path="haxe.Int32"/>
				<x path="haxe.Int32"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Compare `a` and `b` in unsigned mode.</haxe_doc>
		</ucompare>
		<clamp get="inline" set="null" line="187" static="1"><f a="x">
	<x path="Int"/>
	<x path="Int"/>
</f></clamp>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="haxe.Int64" params="" file="/usr/share/haxe/std/haxe/Int64.hx">
		<from>
			<icast><t path="haxe._Int64.__Int64"/></icast>
			<icast field="ofInt"><x path="Int"/></icast>
		</from>
		<this><t path="haxe._Int64.__Int64"/></this>
		<to><icast><t path="haxe._Int64.__Int64"/></icast></to>
		<haxe_doc>A cross-platform signed 64-bit integer.
	Int64 instances can be created from two 32-bit words using `Int64.make()`.</haxe_doc>
		<meta><m n=":notNull"/></meta>
		<impl><class path="haxe._Int64.Int64_Impl_" params="" file="/usr/share/haxe/std/haxe/Int64.hx" private="1" module="haxe.Int64">
	<high public="1" get="accessor" set="null" static="1">
		<x path="haxe.Int32"/>
		<meta><m n=":impl"/></meta>
	</high>
	<low public="1" get="accessor" set="null" static="1">
		<x path="haxe.Int32"/>
		<meta><m n=":impl"/></meta>
	</low>
	<meta>
		<m n=":keep"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<typedef path="haxe._Int64.__Int64" params="" file="/usr/share/haxe/std/haxe/Int64.hx" private="1" module="haxe.Int64">
		<c path="haxe._Int64.___Int64"/>
		<haxe_doc>* This typedef will fool @:coreApi into thinking that we are using
  * the same underlying type, even though it might be different on
  * specific platforms.</haxe_doc>
	</typedef>
	<class path="haxe._Int64.___Int64" params="" file="/usr/share/haxe/std/haxe/Int64.hx" private="1" module="haxe.Int64">
		<high public="1"><x path="haxe.Int32"/></high>
		<low public="1"><x path="haxe.Int32"/></low>
		<new public="1" get="inline" set="null" line="459"><f a="high:low">
	<x path="haxe.Int32"/>
	<x path="haxe.Int32"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.Json" params="" file="/usr/share/haxe/std/flash/_std/haxe/Json.hx" extern="1">
		<parse public="1" set="method" static="1">
			<f a="text">
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[Parses given JSON-encoded `text` and returns the resulting object.

		JSON objects are parsed into anonymous structures and JSON arrays
		are parsed into `Array<Dynamic>`.

		If given `text` is not valid JSON, an exception will be thrown.

		@see https://haxe.org/manual/std-Json-parsing.html]]></haxe_doc>
		</parse>
		<stringify public="1" set="method" static="1">
			<f a="value:?replacer:?space">
				<d/>
				<f a=":">
					<d/>
					<d/>
					<d/>
				</f>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Encodes the given `value` and returns the resulting JSON string.

		If `replacer` is given and is not null, it is used to retrieve the
		actual object to be encoded. The `replacer` function takes two parameters,
		the key and the value being encoded. Initial key value is an empty string.
		
		If `space` is given and is not null, the result will be pretty-printed.
		Successive levels will be indented by this string.

		@see https://haxe.org/manual/std-Json-encoding.html</haxe_doc>
		</stringify>
		<haxe_doc>Cross-platform JSON API: it will automatically use the optimized native API if available.
	Use `-D haxeJSON` to force usage of the Haxe implementation even if a native API is found:
	This will provide extra encoding features such as enums (replaced by their index) and StringMaps.

	@see https://haxe.org/manual/std-Json.html</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
			<m n=":native"><e>"JSON"</e></m>
		</meta>
	</class>
	<class path="haxe.Log" params="" file="/usr/share/haxe/std/haxe/Log.hx">
		<trace public="1" set="dynamic" line="47" static="1">
			<f a="v:?infos">
				<d/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Outputs `v` in a platform-dependent way.

		The second parameter `infos` is injected by the compiler and contains
		information about the position where the `trace()` call was made.

		This method can be rebound to a custom function:
			var oldTrace = haxe.Log.trace; // store old function
			haxe.Log.trace = function(v, ?infos) {
			  // handle trace
			}
			...
			haxe.Log.trace = oldTrace;

		If it is bound to null, subsequent calls to `trace()` will cause an
		exception.</haxe_doc>
		</trace>
		<haxe_doc>Log primarily provides the `trace()` method, which is invoked upon a call to
	`trace()` in Haxe code.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<typedef path="haxe.PosInfos" params="" file="/usr/share/haxe/std/haxe/PosInfos.hx">
		<a>
			<methodName><c path="String"/></methodName>
			<lineNumber><x path="Int"/></lineNumber>
			<fileName><c path="String"/></fileName>
			<customParams>
				<t path="Null"><c path="Array"><d/></c></t>
				<meta><m n=":optional"/></meta>
			</customParams>
			<className><c path="String"/></className>
		</a>
		<haxe_doc>PosInfos is a magic type which can be used to generate position information
	into the output for debugging use.

	If a function has a final optional argument of this type, i.e.
	(..., ?pos:haxe.PosInfos), each call to that function which does not assign
	a value to that argument has its position added as call argument.

	This can be used to track positions of calls in e.g. a unit testing
	framework.</haxe_doc>
	</typedef>
	<class path="haxe.Serializer" params="" file="/usr/share/haxe/std/haxe/Serializer.hx">
		<USE_CACHE public="1" expr="false" line="55" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
			<haxe_doc>If the values you are serializing can contain circular references or
		objects repetitions, you should set `USE_CACHE` to true to prevent
		infinite loops.

		This may also reduce the size of serialization Strings at the expense of
		performance.

		This value can be changed for individual instances of Serializer by
		setting their useCache field.</haxe_doc>
		</USE_CACHE>
		<USE_ENUM_INDEX public="1" expr="false" line="67" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
			<haxe_doc>Use constructor indexes for enums instead of names.

		This may reduce the size of serialization Strings, but makes them less
		suited for long-term storage: If constructors are removed or added from
		the enum, the indices may no longer match.

		This value can be changed for individual instances of Serializer by
		setting their useEnumIndex field.</haxe_doc>
		</USE_ENUM_INDEX>
		<BASE64 expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:&quot;" line="69" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:"</e></m></meta>
		</BASE64>
		<BASE64_CODES expr="null" line="70" static="1">
			<x path="haxe.ds.Vector"><t path="Null"><x path="Int"/></t></x>
			<meta><m n=":value"><e>null</e></m></meta>
		</BASE64_CODES>
		<run public="1" set="method" line="556" static="1">
			<f a="v">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Serializes `v` and returns the String representation.

		This is a convenience function for creating a new instance of
		Serializer, serialize `v` into it and obtain the result through a call
		to toString().</haxe_doc>
		</run>
		<buf><c path="StringBuf"/></buf>
		<cache><c path="Array"><d/></c></cache>
		<shash><c path="haxe.ds.StringMap"><x path="Int"/></c></shash>
		<scount><x path="Int"/></scount>
		<useCache public="1">
			<x path="Bool"/>
			<haxe_doc>The individual cache setting for `this` Serializer instance.

		See USE_CACHE for a complete description.</haxe_doc>
		</useCache>
		<useEnumIndex public="1">
			<x path="Bool"/>
			<haxe_doc>The individual enum index setting for `this` Serializer instance.

		See USE_ENUM_INDEX for a complete description.</haxe_doc>
		</useEnumIndex>
		<toString public="1" set="method" line="116">
			<f a=""><c path="String"/></f>
			<haxe_doc>Return the String representation of `this` Serializer.

		The exact format specification can be found here:
		https://haxe.org/manual/serialization/format</haxe_doc>
		</toString>
		<serializeString set="method" line="153"><f a="s">
	<c path="String"/>
	<x path="Void"/>
</f></serializeString>
		<serializeRef set="method" line="172"><f a="v">
	<unknown/>
	<x path="Bool"/>
</f></serializeRef>
		<serializeClassFields set="method" line="195">
			<f a="v:c">
				<a><hasOwnProperty set="null"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></hasOwnProperty></a>
				<x path="Class"><d/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</serializeClassFields>
		<serializeFields set="method" line="209"><f a="v">
	<unknown/>
	<x path="Void"/>
</f></serializeFields>
		<serialize public="1" set="method" line="227">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Serializes `v`.

		All haxe-defined values and objects with the exception of functions can
		be serialized. Serialization of external/native objects is not
		guaranteed to work.

		The values of `this.useCache` and `this.useEnumIndex` may affect
		serialization output.</haxe_doc>
		</serialize>
		<serializeException public="1" set="method" line="533">
			<f a="e">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</serializeException>
		<new public="1" set="method" line="101">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Serializer instance.

		Subsequent calls to `this.serialize` will append values to the
		internal buffer of this String. Once complete, the contents can be
		retrieved through a call to `this.toString`.

		Each Serializer instance maintains its own cache if this.useCache` is
		true.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The Serializer class can be used to encode values and objects into a `String`,
	from which the `Unserializer` class can recreate the original representation.

	This class can be used in two ways:

	- create a `new Serializer()` instance, call its `serialize()` method with
		any argument and finally retrieve the String representation from
		`toString()`
	- call `Serializer.run()` to obtain the serialized representation of a
		single argument

	Serialization is guaranteed to work for all haxe-defined classes, but may
	or may not work for instances of external/native classes.

	The specification of the serialization format can be found here:
	<https://haxe.org/manual/serialization/format>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<enum path="haxe._Template.TemplateExpr" params="" file="/home/joshua/Development/Haxe/lime/haxe/Template.hx" private="1" module="haxe.Template">
		<OpVar a="v"><c path="String"/></OpVar>
		<OpExpr a="expr"><f a=""><d/></f></OpExpr>
		<OpIf a="expr:eif:eelse">
			<f a=""><d/></f>
			<e path="haxe._Template.TemplateExpr"/>
			<e path="haxe._Template.TemplateExpr"/>
		</OpIf>
		<OpStr a="str"><c path="String"/></OpStr>
		<OpBlock a="l"><c path="List"><e path="haxe._Template.TemplateExpr"/></c></OpBlock>
		<OpForeach a="expr:loop">
			<f a=""><d/></f>
			<e path="haxe._Template.TemplateExpr"/>
		</OpForeach>
		<OpMacro a="name:params">
			<c path="String"/>
			<c path="List"><e path="haxe._Template.TemplateExpr"/></c>
		</OpMacro>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<typedef path="haxe._Template.Token" params="" file="/home/joshua/Development/Haxe/lime/haxe/Template.hx" private="1" module="haxe.Template"><a>
	<s><x path="Bool"/></s>
	<p><c path="String"/></p>
	<l><c path="Array"><c path="String"/></c></l>
</a></typedef>
	<typedef path="haxe._Template.ExprToken" params="" file="/home/joshua/Development/Haxe/lime/haxe/Template.hx" private="1" module="haxe.Template"><a>
	<s><x path="Bool"/></s>
	<p><c path="String"/></p>
</a></typedef>
	<class path="haxe.Template" params="" file="/home/joshua/Development/Haxe/lime/haxe/Template.hx">
		<splitter expr="~/(::[A-Za-z0-9_ ()&amp;|!+=/&gt;&lt;*.&quot;-]+::|\$\$([A-Za-z0-9_-]+)\()/" line="54" static="1">
			<c path="EReg"/>
			<meta><m n=":value"><e><![CDATA[~/(::[A-Za-z0-9_ ()&|!+=/><*."-]+::|\$\$([A-Za-z0-9_-]+)\()/]]></e></m></meta>
		</splitter>
		<expr_splitter expr="~/(\(|\)|[ 
	]*&quot;[^&quot;]*&quot;[ 
	]*|[!+=/&gt;&lt;*.&amp;|-]+)/" line="55" static="1">
			<c path="EReg"/>
			<meta><m n=":value"><e><![CDATA[~/(\(|\)|[ 
	]*"[^"]*"[ 
	]*|[!+=/><*.&|-]+)/]]></e></m></meta>
		</expr_splitter>
		<expr_trim expr="~/^[ ]*([^ ]+)[ ]*$/" line="56" static="1">
			<c path="EReg"/>
			<meta><m n=":value"><e>~/^[ ]*([^ ]+)[ ]*$/</e></m></meta>
		</expr_trim>
		<expr_int expr="~/^[0-9]+$/" line="57" static="1">
			<c path="EReg"/>
			<meta><m n=":value"><e>~/^[0-9]+$/</e></m></meta>
		</expr_int>
		<expr_float expr="~/^([+-]?)(?=\d|,\d)\d*(,\d*)?([Ee]([+-]?\d+))?$/" line="58" static="1">
			<c path="EReg"/>
			<meta><m n=":value"><e>~/^([+-]?)(?=\d|,\d)\d*(,\d*)?([Ee]([+-]?\d+))?$/</e></m></meta>
		</expr_float>
		<globals public="1" expr="{ }" line="64" static="1">
			<d/>
			<meta><m n=":value"><e>{ }</e></m></meta>
			<haxe_doc>Global replacements which are used across all Template instances. This
		has lower priority than the context argument of execute().</haxe_doc>
		</globals>
		<expr><e path="haxe._Template.TemplateExpr"/></expr>
		<context><d/></context>
		<macros><d/></macros>
		<stack><c path="List"><d/></c></stack>
		<buf><c path="StringBuf"/></buf>
		<execute public="1" set="method" line="105">
			<f a="context:?macros">
				<d/>
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Executes `this` Template, taking into account `context` for
		replacements and `macros` for callback functions.

		If `context` has a field 'name', its value replaces all occurrences of
		::name:: in the Template. Otherwise Template.globals is checked instead,
		If 'name' is not a field of that either, ::name:: is replaced with null.

		If `macros` has a field 'name', all occurrences of $$name(args) are
		replaced with the result of calling that field. The first argument is
		always the resolve() method, followed by the given arguments.
		If `macros` has no such field, the result is unspecified.

		If `context` is null, the result is unspecified. If `macros` is null,
		no macros are used.</haxe_doc>
		</execute>
		<resolve set="method" line="114"><f a="v">
	<c path="String"/>
	<d/>
</f></resolve>
		<parseTokens set="method" line="128"><f a="data">
	<c path="String"/>
	<c path="List"><t path="haxe._Template.Token"/></c>
</f></parseTokens>
		<parseBlock set="method" line="174"><f a="tokens">
	<c path="List"><t path="haxe._Template.Token"/></c>
	<e path="haxe._Template.TemplateExpr"/>
</f></parseBlock>
		<parse set="method" line="189"><f a="tokens">
	<c path="List"><t path="haxe._Template.Token"/></c>
	<e path="haxe._Template.TemplateExpr"/>
</f></parse>
		<parseExpr set="method" line="239"><f a="data">
	<c path="String"/>
	<f a=""><unknown/></f>
</f></parseExpr>
		<makeConst set="method" line="270"><f a="v">
	<c path="String"/>
	<f a=""><d/></f>
</f></makeConst>
		<makePath set="method" line="289"><f a="e:l">
	<f a=""><d/></f>
	<c path="List"><t path="haxe._Template.ExprToken"/></c>
	<f a=""><d/></f>
</f></makePath>
		<makeExpr set="method" line="303"><f a="l">
	<c path="List"><t path="haxe._Template.ExprToken"/></c>
	<f a=""><d/></f>
</f></makeExpr>
		<makeExpr2 set="method" line="307"><f a="l">
	<c path="List"><t path="haxe._Template.ExprToken"/></c>
	<f a=""><d/></f>
</f></makeExpr2>
		<run set="method" line="353"><f a="e">
	<e path="haxe._Template.TemplateExpr"/>
	<x path="Void"/>
</f></run>
		<new public="1" set="method" line="82">
			<f a="str">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new Template instance from `str`.

		`str` is parsed into tokens, which are stored for internal use. This
		means that multiple execute() operations on a single Template instance
		are more efficient than one execute() operations on multiple Template
		instances.

		If `str` is null, the result is unspecified.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[Template provides a basic templating mechanism to replace values in a source
	String, and to have some basic logic.

	A complete documentation of the supported syntax is available at:
	<http://haxe.org/manual/std-template.html>]]></haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="haxe.Timer" params="" file="/home/joshua/Development/Haxe/lime/haxe/Timer.hx">
		<delay public="1" set="method" line="141" static="1">
			<f a="f:time_ms">
				<f a=""><x path="Void"/></f>
				<x path="Int"/>
				<c path="haxe.Timer"/>
			</f>
			<haxe_doc>Invokes `f` after `time_ms` milliseconds.

		This is a convenience function for creating a new Timer instance with
		`time_ms` as argument, binding its run() method to `f` and then stopping
		`this` Timer upon the first invocation.

		If `f` is null, the result is unspecified.</haxe_doc>
		</delay>
		<measure public="1" params="T" set="method" line="161" static="1">
			<f a="f:?pos">
				<f a=""><c path="measure.T"/></f>
				<t path="haxe.PosInfos"/>
				<c path="measure.T"/>
			</f>
			<haxe_doc>Measures the time it takes to execute `f`, in seconds with fractions.

		This is a convenience function for calculating the difference between
		Timer.stamp() before and after the invocation of `f`.

		The difference is passed as argument to Log.trace(), with "s" appended
		to denote the unit. The optional `pos` argument is passed through.

		If `f` is null, the result is unspecified.</haxe_doc>
		</measure>
		<stamp public="1" get="inline" set="null" line="174" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns a timestamp, in seconds with fractions.

		The value itself might differ depending on platforms, only differences
		between two values make sense.</haxe_doc>
		</stamp>
		<id><t path="Null"><x path="Int"/></t></id>
		<stop public="1" set="method" line="93">
			<f a=""><x path="Void"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Stops `this` Timer.

		After calling this method, no additional invocations of `this.run`
		will occur.

		It is not possible to restart `this` Timer once stopped.</haxe_doc>
		</stop>
		<run public="1" set="dynamic" line="128">
			<f a=""><x path="Void"/></f>
			<haxe_doc>This method is invoked repeatedly on `this` Timer.

		It can be overridden in a subclass, or rebound directly to a custom
		function:
			var timer = new haxe.Timer(1000); // 1000ms delay
			timer.run = function() { ... }

		Once bound, it can still be rebound to different functions until `this`
		Timer is stopped through a call to `this.stop`.</haxe_doc>
		</run>
		<new public="1" set="method" line="65">
			<f a="time_ms">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates a new timer that will run every `time_ms` milliseconds.

		After creating the Timer instance, it calls `this.run` repeatedly,
		with delays of `time_ms` milliseconds, until `this.stop` is called.

		The first invocation occurs after `time_ms` milliseconds, not
		immediately.

		The accuracy of this may be platform-dependent.</haxe_doc>
		</new>
		<haxe_doc>The Timer class allows you to create asynchronous timers on platforms that
	support events.

	The intended usage is to create an instance of the Timer class with a given
	interval, set its run() method to a custom function to be invoked and
	eventually call stop() to stop the Timer.

	Note that a running Timer may or may not prevent the program to exit
	automatically when main() returns.

	It is also possible to extend this class and override its run() method in
	the child class.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="haxe.Ucs2" params="" file="/usr/share/haxe/std/haxe/Ucs2.hx">
		<this><c path="String"/></this>
		<haxe_doc>Cross platform UCS2 string API.</haxe_doc>
		<impl><class path="haxe._Ucs2.Ucs2_Impl_" params="" file="/usr/share/haxe/std/haxe/Ucs2.hx" private="1" module="haxe.Ucs2">
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta>
			<m n=":impl"/>
			<m n=":extern"/>
		</meta>
	</length>
	<meta>
		<m n=":keep"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="haxe._Unserializer.DefaultResolver" params="" file="/usr/share/haxe/std/haxe/Unserializer.hx" private="1" module="haxe.Unserializer">
		<resolveClass public="1" get="inline" set="null" line="477">
			<f a="name">
				<c path="String"/>
				<x path="Class"><d/></x>
			</f>
			<meta><m n=":final"/></meta>
		</resolveClass>
		<resolveEnum public="1" get="inline" set="null" line="478">
			<f a="name">
				<c path="String"/>
				<x path="Enum"><d/></x>
			</f>
			<meta><m n=":final"/></meta>
		</resolveEnum>
		<new public="1" set="method" line="476"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.Unserializer" params="" file="/usr/share/haxe/std/haxe/Unserializer.hx">
		<DEFAULT_RESOLVER public="1" expr="new DefaultResolver()" line="63" static="1">
			<t path="haxe.TypeResolver"/>
			<meta><m n=":value"><e>new DefaultResolver()</e></m></meta>
			<haxe_doc><![CDATA[This value can be set to use custom type resolvers.

		A type resolver finds a `Class` or `Enum` instance from a given `String`. 
		By default, the Haxe `Type` Api is used.

		A type resolver must provide two methods:

		1. `resolveClass(name:String):Class<Dynamic>` is called to determine a
				`Class` from a class name
		2. `resolveEnum(name:String):Enum<Dynamic>` is called to determine an
				`Enum` from an enum name

		This value is applied when a new `Unserializer` instance is created.
		Changing it afterwards has no effect on previously created instances.]]></haxe_doc>
		</DEFAULT_RESOLVER>
		<BASE64 expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:&quot;" line="65" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:"</e></m></meta>
		</BASE64>
		<CODES expr="null" line="68" static="1">
			<c path="openfl.utils.ByteArrayData"/>
			<meta><m n=":value"><e>null</e></m></meta>
		</CODES>
		<initCodes set="method" line="70" static="1"><f a=""><c path="openfl.utils.ByteArrayData"/></f></initCodes>
		<run public="1" set="method" line="465" static="1">
			<f a="v">
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Unserializes `v` and returns the according value.

		This is a convenience function for creating a new instance of
		Unserializer with `v` as buffer and calling its unserialize() method
		once.</haxe_doc>
		</run>
		<buf><c path="String"/></buf>
		<pos><x path="Int"/></pos>
		<length><x path="Int"/></length>
		<cache><c path="Array"><d/></c></cache>
		<scache><c path="Array"><c path="String"/></c></scache>
		<resolver><t path="haxe.TypeResolver"/></resolver>
		<readDigits set="method" line="147"><f a=""><x path="Int"/></f></readDigits>
		<readFloat set="method" line="172"><f a=""><x path="Float"/></f></readFloat>
		<unserializeObject set="method" line="186"><f a="o">
	<a/>
	<x path="Void"/>
</f></unserializeObject>
		<unserializeEnum set="method" line="201"><f a="edecl:tag">
	<x path="Enum"><unknown/></x>
	<c path="String"/>
	<unknown/>
</f></unserializeEnum>
		<unserialize public="1" set="method" line="233">
			<f a=""><d/></f>
			<haxe_doc>Unserializes the next part of `this` Unserializer instance and returns
		the according value.

		This function may call `this.resolver.resolveClass` to determine a
		Class from a String, and `this.resolver.resolveEnum` to determine an
		Enum from a String.

		If `this` Unserializer instance contains no more or invalid data, an
		exception is thrown.

		This operation may fail on structurally valid data if a type cannot be
		resolved or if a field cannot be set. This can happen when unserializing
		Strings that were serialized on a different Haxe target, in which the
		serialization side has to make sure not to include platform-specific
		data.

		Classes are created from `Type.createEmptyInstance`, which means their
		constructors are not called.</haxe_doc>
		</unserialize>
		<new public="1" set="method" line="102">
			<f a="buf">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new Unserializer instance, with its internal buffer
		initialized to `buf`.

		This does not parse `buf` immediately. It is parsed only when calls to
		`this.unserialize` are made.

		Each Unserializer instance maintains its own cache.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Unserializer` class is the complement to the `Serializer` class. It parses
	a serialization `String` and creates objects from the contained data.

	This class can be used in two ways:

	- create a `new Unserializer()` instance with a given serialization
		String, then call its `unserialize()` method until all values are
		extracted
	- call `Unserializer.run()`  to unserialize a single value from a given
		String

	The specification of the serialization format can be found here:
	<https://haxe.org/manual/serialization/format>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.io.Bytes" params="" file="/home/joshua/Development/Haxe/lime/haxe/io/Bytes.hx">
		<alloc public="1" set="method" line="471" static="1"><f a="length">
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></alloc>
		<ofString public="1" set="method" line="499" static="1"><f a="s">
	<c path="String"/>
	<c path="haxe.io.Bytes"/>
</f></ofString>
		<ofData public="1" set="method" line="560" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<c path="haxe.io.Bytes"/>
</f></ofData>
		<fastGet public="1" get="inline" set="null" line="578" static="1">
			<f a="b:pos">
				<t path="haxe.io.BytesData"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Read the most efficiently possible the n-th byte of the data.
		Behavior when reading outside of the available data is unspecified.</haxe_doc>
		</fastGet>
		<length public="1" set="null"><x path="Int"/></length>
		<b><t path="haxe.io.BytesData"/></b>
		<get public="1" get="inline" set="null" line="51"><f a="pos">
	<x path="Int"/>
	<x path="Int"/>
</f></get>
		<set public="1" get="inline" set="null" line="69"><f a="pos:v">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></set>
		<blit public="1" set="method" line="89"><f a="pos:src:srcpos:len">
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blit>
		<fill public="1" set="method" line="124"><f a="pos:len:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></fill>
		<sub public="1" set="method" line="143"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></sub>
		<compare public="1" set="method" line="171"><f a="other">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
</f></compare>
		<getDouble public="1" get="inline" set="null" line="223">
			<f a="pos">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the IEEE double precision value at given position (in low endian encoding).
		Result is unspecified if reading outside of the bounds</haxe_doc>
		</getDouble>
		<getFloat public="1" get="inline" set="null" line="242">
			<f a="pos">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the IEEE single precision value at given position (in low endian encoding).
		Result is unspecified if reading outside of the bounds</haxe_doc>
		</getFloat>
		<setDouble public="1" get="inline" set="null" line="261">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Store the IEEE double precision value at given position in low endian encoding.
		Result is unspecified if writing outside of the bounds.</haxe_doc>
		</setDouble>
		<setFloat public="1" get="inline" set="null" line="284">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Store the IEEE single precision value at given position in low endian encoding.
		Result is unspecified if writing outside of the bounds.</haxe_doc>
		</setFloat>
		<getUInt16 public="1" get="inline" set="null" line="303">
			<f a="pos">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the 16 bit unsigned integer at given position (in low endian encoding).</haxe_doc>
		</getUInt16>
		<setUInt16 public="1" get="inline" set="null" line="314">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Store the 16 bit unsigned integer at given position (in low endian encoding).</haxe_doc>
		</setUInt16>
		<getInt32 public="1" get="inline" set="null" line="326">
			<f a="pos">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the 32 bit integer at given position (in low endian encoding).</haxe_doc>
		</getInt32>
		<getInt64 public="1" get="inline" set="null" line="343">
			<f a="pos">
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<haxe_doc>Returns the 64 bit integer at given position (in low endian encoding).</haxe_doc>
		</getInt64>
		<setInt32 public="1" get="inline" set="null" line="350">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Store the 32 bit integer at given position (in low endian encoding).</haxe_doc>
		</setInt32>
		<setInt64 public="1" get="inline" set="null" line="364">
			<f a="pos:v">
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Store the 64 bit integer at given position (in low endian encoding).</haxe_doc>
		</setInt64>
		<getString public="1" set="method" line="369"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<readString public="1" get="inline" set="null" line="428">
			<f a="pos:len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":deprecated"><e>"readString is deprecated, use getString instead"</e></m>
				<m n=":noCompletion"/>
			</meta>
		</readString>
		<toString public="1" set="method" line="432"><f a=""><c path="String"/></f></toString>
		<toHex public="1" set="method" line="453"><f a=""><c path="String"/></f></toHex>
		<getData public="1" get="inline" set="null" line="467"><f a=""><t path="haxe.io.BytesData"/></f></getData>
		<new set="method" line="43"><f a="length:b">
	<x path="Int"/>
	<t path="haxe.io.BytesData"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":autoBuild"><e>lime._macros.AssetsMacro.embedBytes()</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="openfl.utils.IDataInput" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/IDataInput.hx" extern="1" interface="1">
		<get_bytesAvailable public="1" set="method">
			<f a=""><x path="UInt"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</get_bytesAvailable>
		<get_endian public="1" set="method">
			<f a=""><x path="openfl.utils.Endian"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</get_endian>
		<set_endian public="1" set="method">
			<f a="value">
				<x path="openfl.utils.Endian"/>
				<x path="openfl.utils.Endian"/>
			</f>
			<meta><m n=":compilerGenerated"/></meta>
		</set_endian>
		<bytesAvailable public="1" get="accessor" set="null"><x path="UInt"/></bytesAvailable>
		<endian public="1" get="accessor" set="accessor"><x path="openfl.utils.Endian"/></endian>
		<objectEncoding public="1"><x path="UInt"/></objectEncoding>
		<readBoolean public="1" set="method"><f a=""><x path="Bool"/></f></readBoolean>
		<readByte public="1" set="method"><f a=""><x path="Int"/></f></readByte>
		<readBytes public="1" set="method">
			<f a="bytes:?offset:?length" v=":0:0">
				<x path="openfl.utils.ByteArray"/>
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ length : 0, offset : 0 }</e></m></meta>
		</readBytes>
		<readDouble public="1" set="method"><f a=""><x path="Float"/></f></readDouble>
		<readFloat public="1" set="method"><f a=""><x path="Float"/></f></readFloat>
		<readInt public="1" set="method"><f a=""><x path="Int"/></f></readInt>
		<readMultiByte public="1" set="method"><f a="length:charSet">
	<x path="UInt"/>
	<c path="String"/>
	<c path="String"/>
</f></readMultiByte>
		<readShort public="1" set="method"><f a=""><x path="Int"/></f></readShort>
		<readUnsignedByte public="1" set="method"><f a=""><x path="Int"/></f></readUnsignedByte>
		<readUnsignedInt public="1" set="method"><f a=""><x path="Int"/></f></readUnsignedInt>
		<readUnsignedShort public="1" set="method"><f a=""><x path="Int"/></f></readUnsignedShort>
		<readUTF public="1" set="method"><f a=""><c path="String"/></f></readUTF>
		<readUTFBytes public="1" set="method"><f a="length">
	<x path="Int"/>
	<c path="String"/>
</f></readUTFBytes>
		<meta><m n=":native"><e>"flash.utils.IDataInput"</e></m></meta>
	</class>
	<class path="openfl.utils.IDataOutput" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/IDataOutput.hx" extern="1" interface="1">
		<get_endian public="1" set="method">
			<f a=""><x path="openfl.utils.Endian"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</get_endian>
		<set_endian public="1" set="method">
			<f a="value">
				<x path="openfl.utils.Endian"/>
				<x path="openfl.utils.Endian"/>
			</f>
			<meta><m n=":compilerGenerated"/></meta>
		</set_endian>
		<endian public="1" get="accessor" set="accessor"><x path="openfl.utils.Endian"/></endian>
		<objectEncoding public="1"><x path="UInt"/></objectEncoding>
		<writeBoolean public="1" set="method"><f a="value">
	<x path="Bool"/>
	<x path="Void"/>
</f></writeBoolean>
		<writeByte public="1" set="method"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeByte>
		<writeBytes public="1" set="method">
			<f a="bytes:?offset:?length" v=":0:0">
				<x path="openfl.utils.ByteArray"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ length : 0, offset : 0 }</e></m></meta>
		</writeBytes>
		<writeDouble public="1" set="method"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></writeDouble>
		<writeFloat public="1" set="method"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></writeFloat>
		<writeInt public="1" set="method"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeInt>
		<writeMultiByte public="1" set="method"><f a="value:charSet">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></writeMultiByte>
		<writeShort public="1" set="method"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeShort>
		<writeUTF public="1" set="method"><f a="value">
	<c path="String"/>
	<x path="Void"/>
</f></writeUTF>
		<writeUTFBytes public="1" set="method"><f a="value">
	<c path="String"/>
	<x path="Void"/>
</f></writeUTFBytes>
		<writeUnsignedInt public="1" set="method"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeUnsignedInt>
		<meta><m n=":native"><e>"flash.utils.IDataOutput"</e></m></meta>
	</class>
	<class path="openfl.utils.ByteArrayData" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/ByteArray.hx" module="openfl.utils.ByteArray" extern="1">
		<implements path="openfl.utils.IDataInput"/>
		<implements path="openfl.utils.IDataOutput"/>
		<defaultObjectEncoding public="1" static="1">
			<x path="UInt"/>
			<haxe_doc>* Denotes the default object encoding for the ByteArray class to use for a
	 * new ByteArray instance. When you create a new ByteArray instance, the
	 * encoding on that instance starts with the value of
	 * `defaultObjectEncoding`. The `defaultObjectEncoding`
	 * property is initialized to `ObjectEncoding.AMF3`.
	 *
	 * When an object is written to or read from binary data, the
	 * `objectEncoding` value is used to determine whether the
	 * ActionScript 3.0, ActionScript2.0, or ActionScript 1.0 format should be
	 * used. The value is a constant from the ObjectEncoding class.</haxe_doc>
		</defaultObjectEncoding>
		<bytesAvailable public="1" get="accessor" set="null">
			<x path="UInt"/>
			<haxe_doc>* The number of bytes of data available for reading from the current
	 * position in the byte array to the end of the array.
	 *
	 * Use the `bytesAvailable` property in conjunction with the
	 * read methods each time you access a ByteArray object to ensure that you
	 * are reading valid data.</haxe_doc>
		</bytesAvailable>
		<get_bytesAvailable get="inline" set="null" line="952"><f a=""><x path="UInt"/></f></get_bytesAvailable>
		<endian public="1" get="accessor" set="accessor">
			<x path="openfl.utils.Endian"/>
			<haxe_doc>* Changes or reads the byte order for the data; either
	 * `Endian.BIG_ENDIAN` or `Endian.LITTLE_ENDIAN`.</haxe_doc>
		</endian>
		<get_endian set="method"><f a=""><x path="openfl.utils.Endian"/></f></get_endian>
		<set_endian set="method"><f a="value">
	<x path="openfl.utils.Endian"/>
	<x path="openfl.utils.Endian"/>
</f></set_endian>
		<length public="1">
			<x path="UInt"/>
			<haxe_doc>* The length of the ByteArray object, in bytes.
	 *
	 * If the length is set to a value that is larger than the current length,
	 * the right side of the byte array is filled with zeros.
	 *
	 * If the length is set to a value that is smaller than the current
	 * length, the byte array is truncated.</haxe_doc>
		</length>
		<objectEncoding public="1">
			<x path="UInt"/>
			<haxe_doc>* Used to determine whether the ActionScript 3.0, ActionScript 2.0, or
	 * ActionScript 1.0 format should be used when writing to, or reading from, a
	 * ByteArray instance. The value is a constant from the ObjectEncoding class.</haxe_doc>
		</objectEncoding>
		<position public="1">
			<x path="UInt"/>
			<haxe_doc>* Moves, or returns the current position, in bytes, of the file pointer into
	 * the ByteArray object. This is the point at which the next call to a read
	 * method starts reading or a write method starts writing.</haxe_doc>
		</position>
		<shareable public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_4</e></m>
			</meta>
		</shareable>
		<atomicCompareAndSwapIntAt public="1" set="method">
			<f a="byteIndex:expectedValue:newValue">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_4</e></m>
			</meta>
		</atomicCompareAndSwapIntAt>
		<atomicCompareAndSwapLength public="1" set="method">
			<f a="expectedLength:newLength">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_4</e></m>
			</meta>
		</atomicCompareAndSwapLength>
		<clear public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Clears the contents of the byte array and resets the `length`
	 * and `position` properties to 0. Calling this method explicitly
	 * frees up the memory used by the ByteArray instance.
	 *</haxe_doc>
		</clear>
		<compress public="1" set="method">
			<f a="?algorithm" v="null">
				<x path="openfl.utils.CompressionAlgorithm"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ algorithm : null }</e></m></meta>
			<haxe_doc><![CDATA[* Compresses the byte array. The entire byte array is compressed. For
	 * content running in Adobe AIR, you can specify a compression algorithm by
	 * passing a value(defined in the CompressionAlgorithm class) as the
	 * `algorithm` parameter. Flash Player supports only the default
	 * algorithm, zlib.
	 *
	 * After the call, the `length` property of the ByteArray is
	 * set to the new length. The `position` property is set to the
	 * end of the byte array.
	 *
	 * The zlib compressed data format is described at 
	 * [http://www.ietf.org/rfc/rfc1950.txt](http://www.ietf.org/rfc/rfc1950.txt).
	 *
	 * The deflate compression algorithm is described at 
	 * [http://www.ietf.org/rfc/rfc1951.txt](http://www.ietf.org/rfc/rfc1951.txt).
	 *
	 * The deflate compression algorithm is used in several compression
	 * formats, such as zlib, gzip, some zip implementations, and others. When
	 * data is compressed using one of those compression formats, in addition to
	 * storing the compressed version of the original data, the compression
	 * format data(for example, the .zip file) includes metadata information.
	 * Some examples of the types of metadata included in various file formats
	 * are file name, file modification date/time, original file size, optional
	 * comments, checksum data, and more.
	 *
	 * For example, when a ByteArray is compressed using the zlib algorithm,
	 * the resulting ByteArray is structured in a specific format. Certain bytes
	 * contain metadata about the compressed data, while other bytes contain the
	 * actual compressed version of the original ByteArray data. As defined by
	 * the zlib compressed data format specification, those bytes(that is, the
	 * portion containing the compressed version of the original data) are
	 * compressed using the deflate algorithm. Consequently those bytes are
	 * identical to the result of calling `compress(<ph
	 * outputclass="javascript">air.CompressionAlgorithm.DEFLATE)` on the
	 * original ByteArray. However, the result from `compress(<ph
	 * outputclass="javascript">air.CompressionAlgorithm.ZLIB)` includes
	 * the extra metadata, while the
	 * `compress(CompressionAlgorithm.DEFLATE)` result includes only
	 * the compressed version of the original ByteArray data and nothing
	 * else.
	 *
	 * In order to use the deflate format to compress a ByteArray instance's
	 * data in a specific format such as gzip or zip, you cannot simply call
	 * `compress(CompressionAlgorithm.DEFLATE)`. You must create a
	 * ByteArray structured according to the compression format's specification,
	 * including the appropriate metadata as well as the compressed data obtained
	 * using the deflate format. Likewise, in order to decode data compressed in
	 * a format such as gzip or zip, you can't simply call
	 * `uncompress(CompressionAlgorithm.DEFLATE)` on that data. First,
	 * you must separate the metadata from the compressed data, and you can then
	 * use the deflate format to decompress the compressed data.
	 *]]></haxe_doc>
		</compress>
		<deflate public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Compresses the byte array using the deflate compression algorithm. The
	 * entire byte array is compressed.
	 *
	 * After the call, the `length` property of the ByteArray is
	 * set to the new length. The `position` property is set to the
	 * end of the byte array.
	 *
	 * The deflate compression algorithm is described at 
	 * [http://www.ietf.org/rfc/rfc1951.txt](http://www.ietf.org/rfc/rfc1951.txt).
	 *
	 * In order to use the deflate format to compress a ByteArray instance's
	 * data in a specific format such as gzip or zip, you cannot simply call
	 * `deflate()`. You must create a ByteArray structured according
	 * to the compression format's specification, including the appropriate
	 * metadata as well as the compressed data obtained using the deflate format.
	 * Likewise, in order to decode data compressed in a format such as gzip or
	 * zip, you can't simply call `inflate()` on that data. First, you
	 * must separate the metadata from the compressed data, and you can then use
	 * the deflate format to decompress the compressed data.
	 *</haxe_doc>
		</deflate>
		<inflate public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Decompresses the byte array using the deflate compression algorithm. The
	 * byte array must have been compressed using the same algorithm.
	 *
	 * After the call, the `length` property of the ByteArray is
	 * set to the new length. The `position` property is set to 0.
	 *
	 * The deflate compression algorithm is described at 
	 * [http://www.ietf.org/rfc/rfc1951.txt](http://www.ietf.org/rfc/rfc1951.txt).
	 *
	 * In order to decode data compressed in a format that uses the deflate
	 * compression algorithm, such as data in gzip or zip format, it will not
	 * work to simply call `inflate()` on a ByteArray containing the
	 * compression formation data. First, you must separate the metadata that is
	 * included as part of the compressed data format from the actual compressed
	 * data. For more information, see the `compress()` method
	 * description.
	 * 
	 * @throws IOError The data is not valid compressed data; it was not
	 *                 compressed with the same compression algorithm used to
	 *                 compress.</haxe_doc>
		</inflate>
		<readBoolean public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>* Reads a Boolean value from the byte stream. A single byte is read, and
	 * `true` is returned if the byte is nonzero, `false`
	 * otherwise.
	 * 
	 * @return Returns `true` if the byte is nonzero,
	 *         `false` otherwise.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readBoolean>
		<readByte public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>* Reads a signed byte from the byte stream.
	 *
	 * The returned value is in the range -128 to 127.
	 * 
	 * @return An integer between -128 and 127.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readByte>
		<readBytes public="1" set="method">
			<f a="bytes:?offset:?length" v=":0:0">
				<x path="openfl.utils.ByteArray"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ length : 0, offset : 0 }</e></m></meta>
			<haxe_doc>* Reads the number of data bytes, specified by the `length`
	 * parameter, from the byte stream. The bytes are read into the ByteArray
	 * object specified by the `bytes` parameter, and the bytes are
	 * written into the destination ByteArray starting at the position specified
	 * by `offset`.
	 * 
	 * @param bytes  The ByteArray object to read data into.
	 * @param offset The offset(position) in `bytes` at which the
	 *               read data should be written.
	 * @param length The number of bytes to read. The default value of 0 causes
	 *               all available data to be read.
	 * @throws EOFError   There is not sufficient data available to read.
	 * @throws RangeError The value of the supplied offset and length, combined,
	 *                    is greater than the maximum for a uint.</haxe_doc>
		</readBytes>
		<readDouble public="1" set="method">
			<f a=""><x path="Float"/></f>
			<haxe_doc>* Reads an IEEE 754 double-precision(64-bit) floating-point number from the
	 * byte stream.
	 * 
	 * @return A double-precision(64-bit) floating-point number.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readDouble>
		<readFloat public="1" set="method">
			<f a=""><x path="Float"/></f>
			<haxe_doc>* Reads an IEEE 754 single-precision(32-bit) floating-point number from the
	 * byte stream.
	 * 
	 * @return A single-precision(32-bit) floating-point number.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readFloat>
		<readInt public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>* Reads a signed 32-bit integer from the byte stream.
	 *
	 * The returned value is in the range -2147483648 to 2147483647.
	 * 
	 * @return A 32-bit signed integer between -2147483648 and 2147483647.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readInt>
		<readMultiByte public="1" set="method">
			<f a="length:charSet">
				<x path="UInt"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc><![CDATA[* Reads a multibyte string of specified length from the byte stream using
	 * the specified character set.
	 * 
	 * @param length  The number of bytes from the byte stream to read.
	 * @param charSet The string denoting the character set to use to interpret
	 *                the bytes. Possible character set strings include
	 *                `"shift-jis"`, `"cn-gb"`,
	 *                `"iso-8859-1"`, and others. For a complete list,
	 *                see <a href="../../charset-codes.html">Supported Character
	 *                Sets</a>.
	 *
	 *                **Note:** If the value for the `charSet`
	 *                parameter is not recognized by the current system, the
	 *                application uses the system's default code page as the
	 *                character set. For example, a value for the
	 *                `charSet` parameter, as in
	 *                `myTest.readMultiByte(22, "iso-8859-01")` that
	 *                uses `01` instead of `1` might work
	 *                on your development system, but not on another system. On
	 *                the other system, the application will use the system's
	 *                default code page.
	 * @return UTF-8 encoded string.
	 * @throws EOFError There is not sufficient data available to read.]]></haxe_doc>
		</readMultiByte>
		<readObject public="1" set="method">
			<f a=""><d/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
			<haxe_doc>* Reads an object from the byte array, encoded in AMF serialized format.
	 * 
	 * @return The deserialized object.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readObject>
		<readShort public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>* Reads a signed 16-bit integer from the byte stream.
	 *
	 * The returned value is in the range -32768 to 32767.
	 * 
	 * @return A 16-bit signed integer between -32768 and 32767.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readShort>
		<readUTF public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>* Reads a UTF-8 string from the byte stream. The string is assumed to be
	 * prefixed with an unsigned short indicating the length in bytes.
	 * 
	 * @return UTF-8 encoded string.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readUTF>
		<readUTFBytes public="1" set="method">
			<f a="length">
				<x path="UInt"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Reads a sequence of UTF-8 bytes specified by the `length`
	 * parameter from the byte stream and returns a string.
	 * 
	 * @param length An unsigned short indicating the length of the UTF-8 bytes.
	 * @return A string composed of the UTF-8 bytes of the specified length.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readUTFBytes>
		<readUnsignedByte public="1" set="method">
			<f a=""><x path="UInt"/></f>
			<haxe_doc>* Reads an unsigned byte from the byte stream.
	 *
	 * The returned value is in the range 0 to 255. 
	 * 
	 * @return A 32-bit unsigned integer between 0 and 255.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readUnsignedByte>
		<readUnsignedInt public="1" set="method">
			<f a=""><x path="UInt"/></f>
			<haxe_doc>* Reads an unsigned 32-bit integer from the byte stream.
	 *
	 * The returned value is in the range 0 to 4294967295. 
	 * 
	 * @return A 32-bit unsigned integer between 0 and 4294967295.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readUnsignedInt>
		<readUnsignedShort public="1" set="method">
			<f a=""><x path="UInt"/></f>
			<haxe_doc>* Reads an unsigned 16-bit integer from the byte stream.
	 *
	 * The returned value is in the range 0 to 65535. 
	 * 
	 * @return A 16-bit unsigned integer between 0 and 65535.
	 * @throws EOFError There is not sufficient data available to read.</haxe_doc>
		</readUnsignedShort>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>* Converts the byte array to a string. If the data in the array begins with
	 * a Unicode byte order mark, the application will honor that mark when
	 * converting to a string. If `System.useCodePage` is set to
	 * `true`, the application will treat the data in the array as
	 * being in the current system code page when converting.
	 * 
	 * @return The string representation of the byte array.</haxe_doc>
		</toString>
		<uncompress public="1" set="method">
			<f a="?algorithm" v="null">
				<x path="openfl.utils.CompressionAlgorithm"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ algorithm : null }</e></m></meta>
			<haxe_doc>* Decompresses the byte array. For content running in Adobe AIR, you can
	 * specify a compression algorithm by passing a value(defined in the
	 * CompressionAlgorithm class) as the `algorithm` parameter. The
	 * byte array must have been compressed using the same algorithm. Flash
	 * Player supports only the default algorithm, zlib.
	 *
	 * After the call, the `length` property of the ByteArray is
	 * set to the new length. The `position` property is set to 0.
	 *
	 * The zlib compressed data format is described at 
	 * [http://www.ietf.org/rfc/rfc1950.txt](http://www.ietf.org/rfc/rfc1950.txt).
	 *
	 * The deflate compression algorithm is described at 
	 * [http://www.ietf.org/rfc/rfc1951.txt](http://www.ietf.org/rfc/rfc1951.txt).
	 *
	 * In order to decode data compressed in a format that uses the deflate
	 * compression algorithm, such as data in gzip or zip format, it will not
	 * work to call `uncompress(CompressionAlgorithm.DEFLATE)` on a
	 * ByteArray containing the compression formation data. First, you must
	 * separate the metadata that is included as part of the compressed data
	 * format from the actual compressed data. For more information, see the
	 * `compress()` method description.
	 * 
	 * @throws IOError The data is not valid compressed data; it was not
	 *                 compressed with the same compression algorithm used to
	 *                 compress.</haxe_doc>
		</uncompress>
		<writeBoolean public="1" set="method">
			<f a="value">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Writes a Boolean value. A single byte is written according to the
	 * `value` parameter, either 1 if `true` or 0 if
	 * `false`.
	 * 
	 * @param value A Boolean value determining which byte is written. If the
	 *              parameter is `true`, the method writes a 1; if
	 *              `false`, the method writes a 0.</haxe_doc>
		</writeBoolean>
		<writeByte public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Writes a byte to the byte stream.
	 *
	 * The low 8 bits of the parameter are used. The high 24 bits are ignored.
	 * 
	 * 
	 * @param value A 32-bit integer. The low 8 bits are written to the byte
	 *              stream.</haxe_doc>
		</writeByte>
		<writeBytes public="1" set="method">
			<f a="bytes:?offset:?length" v=":0:0">
				<x path="openfl.utils.ByteArray"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ length : 0, offset : 0 }</e></m></meta>
			<haxe_doc>* Writes a sequence of `length` bytes from the specified byte
	 * array, `bytes`, starting `offset`(zero-based index)
	 * bytes into the byte stream.
	 *
	 * If the `length` parameter is omitted, the default length of
	 * 0 is used; the method writes the entire buffer starting at
	 * `offset`. If the `offset` parameter is also omitted,
	 * the entire buffer is written. 
	 *
	 * If `offset` or `length` is out of range, they are
	 * clamped to the beginning and end of the `bytes` array.
	 * 
	 * @param bytes  The ByteArray object.
	 * @param offset A zero-based index indicating the position into the array to
	 *               begin writing.
	 * @param length An unsigned integer indicating how far into the buffer to
	 *               write.</haxe_doc>
		</writeBytes>
		<writeDouble public="1" set="method">
			<f a="value">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Writes an IEEE 754 double-precision(64-bit) floating-point number to the
	 * byte stream.
	 * 
	 * @param value A double-precision(64-bit) floating-point number.</haxe_doc>
		</writeDouble>
		<writeFloat public="1" set="method">
			<f a="value">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Writes an IEEE 754 single-precision(32-bit) floating-point number to the
	 * byte stream.
	 * 
	 * @param value A single-precision(32-bit) floating-point number.</haxe_doc>
		</writeFloat>
		<writeInt public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Writes a 32-bit signed integer to the byte stream.
	 * 
	 * @param value An integer to write to the byte stream.</haxe_doc>
		</writeInt>
		<writeMultiByte public="1" set="method">
			<f a="value:charSet">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Writes a multibyte string to the byte stream using the specified character
	 * set.
	 * 
	 * @param value   The string value to be written.
	 * @param charSet The string denoting the character set to use. Possible
	 *                character set strings include `"shift-jis"`,
	 *                `"cn-gb"`, `"iso-8859-1"`, and
	 *                others. For a complete list, see <a
	 *                href="../../charset-codes.html">Supported Character
	 *                Sets</a>.]]></haxe_doc>
		</writeMultiByte>
		<writeObject public="1" set="method">
			<f a="object">
				<d/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
			<haxe_doc>* Writes an object into the byte array in AMF serialized format.
	 * 
	 * @param object The object to serialize.</haxe_doc>
		</writeObject>
		<writeShort public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Writes a 16-bit integer to the byte stream. The low 16 bits of the
	 * parameter are used. The high 16 bits are ignored.
	 * 
	 * @param value 32-bit integer, whose low 16 bits are written to the byte
	 *              stream.</haxe_doc>
		</writeShort>
		<writeUTF public="1" set="method">
			<f a="value">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Writes a UTF-8 string to the byte stream. The length of the UTF-8 string
	 * in bytes is written first, as a 16-bit integer, followed by the bytes
	 * representing the characters of the string.
	 * 
	 * @param value The string value to be written.
	 * @throws RangeError If the length is larger than 65535.</haxe_doc>
		</writeUTF>
		<writeUTFBytes public="1" set="method">
			<f a="value">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Writes a UTF-8 string to the byte stream. Similar to the
	 * `writeUTF()` method, but `writeUTFBytes()` does not
	 * prefix the string with a 16-bit length word.
	 * 
	 * @param value The string value to be written.</haxe_doc>
		</writeUTFBytes>
		<writeUnsignedInt public="1" set="method">
			<f a="value">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Writes a 32-bit unsigned integer to the byte stream.
	 * 
	 * @param value An unsigned integer to write to the byte stream.</haxe_doc>
		</writeUnsignedInt>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Creates a ByteArray instance representing a packed array of bytes, so that
	 * you can use the methods and properties in this class to optimize your data
	 * storage and stream.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[* The ByteArray class provides methods and properties to optimize reading,
 * writing, and working with binary data.
 *
 * _Note:_ The ByteArray class is for advanced developers who need to
 * access data on the byte level.
 *
 * In-memory data is a packed array(the most compact representation for
 * the data type) of bytes, but an instance of the ByteArray class can be
 * manipulated with the standard `[]`(array access) operators. It
 * also can be read and written to as an in-memory file, using methods similar
 * to those in the URLStream and Socket classes.
 *
 * In addition, zlib compression and decompression are supported, as well
 * as Action Message Format(AMF) object serialization.
 *
 * Possible uses of the ByteArray class include the following:
 * 
 *  * Creating a custom protocol to connect to a server.
 *  * Writing your own URLEncoder/URLDecoder.
 *  * Writing your own AMF/Remoting packet.
 *  * Optimizing the size of your data by using data types.
 *  * Working with binary data loaded from a file in Adobe<sup>®</sup>
 * AIR<sup>®</sup>.
 * 
 *]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"flash.utils.ByteArray"</e></m>
		</meta>
	</class>
	<class path="haxe.crypto.BaseCode" params="" file="/usr/share/haxe/std/haxe/crypto/BaseCode.hx">
		<haxe_doc>Allows to encode/decode String and bytes using a power of two base dictionary.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<enum path="haxe.crypto.HashMethod" params="" file="/home/joshua/Development/Haxe/lime/haxe/crypto/Hmac.hx" module="haxe.crypto.Hmac">
		<MD5/>
		<SHA1/>
		<SHA256/>
		<haxe_doc>Hash methods for Hmac calculation.</haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="haxe.crypto.Hmac" params="" file="/home/joshua/Development/Haxe/lime/haxe/crypto/Hmac.hx">
		<method><e path="haxe.crypto.HashMethod"/></method>
		<blockSize><x path="Int"/></blockSize>
		<length><x path="Int"/></length>
		<doHash get="inline" set="null" line="54"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></doHash>
		<nullPad set="method" line="62"><f a="s:chunkLen">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></nullPad>
		<make public="1" set="method" line="73"><f a="key:msg">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></make>
		<new public="1" set="method" line="42"><f a="hashMethod">
	<e path="haxe.crypto.HashMethod"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>Calculates a Hmac of the given Bytes using a HashMethod.</haxe_doc>
	</class>
	<class path="haxe.crypto.Md5" params="" file="/usr/share/haxe/std/haxe/crypto/Md5.hx">
		<make public="1" set="method" line="41" static="1"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></make>
		<bytes2blks set="method" line="110" static="1"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="Array"><x path="Int"/></c>
</f></bytes2blks>
		<bitOR set="method" line="76"><f a="a:b">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></bitOR>
		<bitXOR set="method" line="82"><f a="a:b">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></bitXOR>
		<bitAND set="method" line="88"><f a="a:b">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></bitAND>
		<addme set="method" line="94"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></addme>
		<rol set="method" line="172"><f a="num:cnt">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></rol>
		<cmn set="method" line="176"><f a="q:a:b:x:s:t">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></cmn>
		<ff set="method" line="180"><f a="a:b:c:d:x:s:t">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></ff>
		<gg set="method" line="184"><f a="a:b:c:d:x:s:t">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></gg>
		<hh set="method" line="188"><f a="a:b:c:d:x:s:t">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></hh>
		<ii set="method" line="192"><f a="a:b:c:d:x:s:t">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></ii>
		<doEncode set="method" line="196"><f a="x">
	<c path="Array"><x path="Int"/></c>
	<c path="Array"><x path="Int"/></c>
</f></doEncode>
		<new set="method" line="73"><f a=""><x path="Void"/></f></new>
		<haxe_doc>Creates a MD5 of a String.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.crypto.Sha1" params="" file="/usr/share/haxe/std/haxe/crypto/Sha1.hx">
		<encode public="1" set="method" line="29" static="1"><f a="s">
	<c path="String"/>
	<c path="String"/>
</f></encode>
		<make public="1" set="method" line="39" static="1"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></make>
		<str2blks set="method" line="107" static="1"><f a="s">
	<c path="String"/>
	<c path="Array"><x path="Int"/></c>
</f></str2blks>
		<bytes2blks set="method" line="127" static="1"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="Array"><x path="Int"/></c>
</f></bytes2blks>
		<doEncode set="method" line="61"><f a="x">
	<c path="Array"><x path="Int"/></c>
	<c path="Array"><x path="Int"/></c>
</f></doEncode>
		<ft set="method" line="154">
			<f a="t:b:c:d">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Perform the appropriate triplet combination function for the current iteration</haxe_doc>
		</ft>
		<kt set="method" line="164">
			<f a="t">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Determine the appropriate additive constant for the current iteration</haxe_doc>
		</kt>
		<hex set="method" line="174"><f a="a">
	<c path="Array"><x path="Int"/></c>
	<c path="String"/>
</f></hex>
		<new set="method" line="58"><f a=""><x path="Void"/></f></new>
		<haxe_doc>Creates a Sha1 of a String.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.crypto.Sha256" params="" file="/home/joshua/Development/Haxe/lime/haxe/crypto/Sha256.hx">
		<encode public="1" set="method" line="29" static="1"><f a="s">
	<c path="String"/>
	<c path="String"/>
</f></encode>
		<make public="1" set="method" line="39" static="1"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></make>
		<str2blks set="method" line="115" static="1"><f a="s">
	<c path="String"/>
	<c path="Array"><x path="Int"/></c>
</f></str2blks>
		<bytes2blks set="method" line="132" static="1"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="Array"><x path="Int"/></c>
</f></bytes2blks>
		<doEncode set="method" line="59"><f a="m:l">
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></doEncode>
		<S set="method" line="149"><f a="X:n">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></S>
		<R set="method" line="153"><f a="X:n">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></R>
		<Ch set="method" line="157"><f a="x:y:z">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></Ch>
		<Maj set="method" line="161"><f a="x:y:z">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></Maj>
		<Sigma0256 set="method" line="165"><f a="x">
	<x path="Int"/>
	<x path="Int"/>
</f></Sigma0256>
		<Sigma1256 set="method" line="169"><f a="x">
	<x path="Int"/>
	<x path="Int"/>
</f></Sigma1256>
		<Gamma0256 set="method" line="173"><f a="x">
	<x path="Int"/>
	<x path="Int"/>
</f></Gamma0256>
		<Gamma1256 set="method" line="177"><f a="x">
	<x path="Int"/>
	<x path="Int"/>
</f></Gamma1256>
		<safeAdd set="method" line="181"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></safeAdd>
		<hex set="method" line="187"><f a="a">
	<c path="Array"><x path="Int"/></c>
	<c path="String"/>
</f></hex>
		<new public="1" set="method" line="56"><f a=""><x path="Void"/></f></new>
		<haxe_doc>Creates a Sha256 of a String.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="haxe.ds.BalancedTree" params="K:V" file="/usr/share/haxe/std/haxe/ds/BalancedTree.hx">
		<root><c path="haxe.ds.TreeNode">
	<c path="haxe.ds.BalancedTree.K"/>
	<c path="haxe.ds.BalancedTree.V"/>
</c></root>
		<set public="1" set="method" line="50">
			<f a="key:value">
				<c path="haxe.ds.BalancedTree.K"/>
				<c path="haxe.ds.BalancedTree.V"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Binds `key` to `value`.

		If `key` is already bound to a value, that binding disappears.

		If `key` is null, the result is unspecified.</haxe_doc>
		</set>
		<get public="1" set="method" line="61">
			<f a="key">
				<c path="haxe.ds.BalancedTree.K"/>
				<t path="Null"><c path="haxe.ds.BalancedTree.V"/></t>
			</f>
			<haxe_doc>Returns the value `key` is bound to.

		If `key` is not bound to any value, `null` is returned.

		If `key` is null, the result is unspecified.</haxe_doc>
		</get>
		<remove public="1" set="method" line="82">
			<f a="key">
				<c path="haxe.ds.BalancedTree.K"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Removes the current binding of `key`.

		If `key` has no binding, `this` BalancedTree is unchanged and false is
		returned.

		Otherwise the binding of `key` is removed and true is returned.

		If `key` is null, the result is unspecified.</haxe_doc>
		</remove>
		<exists public="1" set="method" line="99">
			<f a="key">
				<c path="haxe.ds.BalancedTree.K"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `key` is bound to a value.

		This method returns true even if `key` is bound to null.

		If `key` is null, the result is unspecified.</haxe_doc>
		</exists>
		<iterator public="1" set="method" line="115">
			<f a=""><t path="Iterator"><c path="haxe.ds.BalancedTree.V"/></t></f>
			<haxe_doc>Iterates over the bound values of `this` BalancedTree.

		This operation is performed in-order.</haxe_doc>
		</iterator>
		<keys public="1" set="method" line="126">
			<f a=""><t path="Iterator"><c path="haxe.ds.BalancedTree.K"/></t></f>
			<haxe_doc>Iterates over the keys of `this` BalancedTree.

		This operation is performed in-order.</haxe_doc>
		</keys>
		<setLoop set="method" line="132"><f a="k:v:node">
	<c path="haxe.ds.BalancedTree.K"/>
	<c path="haxe.ds.BalancedTree.V"/>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
</f></setLoop>
		<removeLoop set="method" line="145"><f a="k:node">
	<c path="haxe.ds.BalancedTree.K"/>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
</f></removeLoop>
		<iteratorLoop set="method" line="153"><f a="node:acc">
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="Array"><c path="haxe.ds.BalancedTree.V"/></c>
	<x path="Void"/>
</f></iteratorLoop>
		<keysLoop set="method" line="161"><f a="node:acc">
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="Array"><c path="haxe.ds.BalancedTree.K"/></c>
	<x path="Void"/>
</f></keysLoop>
		<merge set="method" line="169"><f a="t1:t2">
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
</f></merge>
		<minBinding set="method" line="176"><f a="t">
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
</f></minBinding>
		<removeMinBinding set="method" line="182"><f a="t">
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
</f></removeMinBinding>
		<balance set="method" line="187"><f a="l:k:v:r">
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.BalancedTree.K"/>
	<c path="haxe.ds.BalancedTree.V"/>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
</f></balance>
		<compare set="method" line="201"><f a="k1:k2">
	<c path="haxe.ds.BalancedTree.K"/>
	<c path="haxe.ds.BalancedTree.K"/>
	<x path="Int"/>
</f></compare>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new BalancedTree, which is initially empty.</haxe_doc>
		</new>
		<haxe_doc>BalancedTree allows key-value mapping with arbitrary keys, as long as they
	can be ordered. By default, `Reflect.compare` is used in the `compare`
	method, which can be overridden in subclasses.

	Operations have a logarithmic average and worst-case cost.

	Iteration over keys and values, using `keys` and `iterator` respectively,
	are in-order.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.ds.TreeNode" params="K:V" file="/usr/share/haxe/std/haxe/ds/BalancedTree.hx" module="haxe.ds.BalancedTree">
		<left public="1"><c path="haxe.ds.TreeNode">
	<c path="haxe.ds.TreeNode.K"/>
	<c path="haxe.ds.TreeNode.V"/>
</c></left>
		<right public="1"><c path="haxe.ds.TreeNode">
	<c path="haxe.ds.TreeNode.K"/>
	<c path="haxe.ds.TreeNode.V"/>
</c></right>
		<key public="1"><c path="haxe.ds.TreeNode.K"/></key>
		<value public="1"><c path="haxe.ds.TreeNode.V"/></value>
		<_height><x path="Int"/></_height>
		<new public="1" set="method" line="223">
			<f a="l:k:v:r:?h" v="::::-1">
				<c path="haxe.ds.TreeNode">
					<c path="haxe.ds.TreeNode.K"/>
					<c path="haxe.ds.TreeNode.V"/>
				</c>
				<c path="haxe.ds.TreeNode.K"/>
				<c path="haxe.ds.TreeNode.V"/>
				<c path="haxe.ds.TreeNode">
					<c path="haxe.ds.TreeNode.K"/>
					<c path="haxe.ds.TreeNode.V"/>
				</c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ h : -1 }</e></m></meta>
		</new>
		<haxe_doc>A tree node of `haxe.ds.BalancedTree`.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.ds.EnumValueMap" params="K:V" file="/usr/share/haxe/std/haxe/ds/EnumValueMap.hx">
		<extends path="haxe.ds.BalancedTree">
			<c path="haxe.ds.EnumValueMap.K"/>
			<c path="haxe.ds.EnumValueMap.V"/>
		</extends>
		<implements path="haxe.IMap">
			<c path="haxe.ds.EnumValueMap.K"/>
			<c path="haxe.ds.EnumValueMap.V"/>
		</implements>
		<compare set="method" line="33" override="1"><f a="k1:k2">
	<x path="EnumValue"/>
	<x path="EnumValue"/>
	<x path="Int"/>
</f></compare>
		<compareArgs set="method" line="42"><f a="a1:a2">
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<x path="Int"/>
</f></compareArgs>
		<compareArg set="method" line="52"><f a="v1:v2">
	<d/>
	<d/>
	<x path="Int"/>
</f></compareArg>
		<new public="1" set="method" line="31"><f a=""><x path="Void"/></f></new>
		<haxe_doc>EnumValueMap allows mapping of enum value keys to arbitrary values.

	Keys are compared by value and recursively over their parameters. If any
	parameter is not an enum value, `Reflect.compare` is used to compare them.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<abstract path="haxe.ds.HashMap" params="K:V" file="/usr/share/haxe/std/haxe/ds/HashMap.hx">
		<this><c path="haxe.ds._HashMap.HashMapData">
	<c path="haxe.ds.HashMap.K"/>
	<c path="haxe.ds.HashMap.V"/>
</c></this>
		<haxe_doc>HashMap allows mapping of hashable objects to arbitrary values.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<impl><class path="haxe.ds._HashMap.HashMap_Impl_" params="" file="/usr/share/haxe/std/haxe/ds/HashMap.hx" private="1" module="haxe.ds.HashMap"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="haxe.ds.IntMap" params="T" file="/usr/share/haxe/std/flash/_std/haxe/ds/IntMap.hx">
		<implements path="haxe.IMap">
			<x path="Int"/>
			<c path="haxe.ds.IntMap.T"/>
		</implements>
		<h><c path="flash.utils.Dictionary"/></h>
		<set public="1" get="inline" set="null" line="32">
			<f a="key:value">
				<x path="Int"/>
				<c path="haxe.ds.IntMap.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<get public="1" get="inline" set="null" line="36">
			<f a="key">
				<x path="Int"/>
				<t path="Null"><c path="haxe.ds.IntMap.T"/></t>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.get`</haxe_doc>
		</get>
		<exists public="1" get="inline" set="null" line="40">
			<f a="key">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<remove public="1" set="method" line="44">
			<f a="key">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.remove`</haxe_doc>
		</remove>
		<keys public="1" get="inline" set="null" line="69">
			<f a=""><t path="Iterator"><x path="Int"/></t></f>
			<haxe_doc>See `Map.keys`</haxe_doc>
		</keys>
		<iterator public="1" get="inline" set="null" line="73">
			<f a=""><t path="Iterator"><c path="haxe.ds.IntMap.T"/></t></f>
			<haxe_doc>See `Map.iterator`</haxe_doc>
		</iterator>
		<new public="1" set="method" line="28">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new IntMap.</haxe_doc>
		</new>
		<haxe_doc>IntMap allows mapping of Int keys to arbitrary values.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="haxe.ds._IntMap.IntMapKeysIterator" params="" file="/usr/share/haxe/std/flash/_std/haxe/ds/IntMap.hx" private="1" module="haxe.ds.IntMap">
		<h><c path="flash.utils.Dictionary"/></h>
		<index><x path="Int"/></index>
		<nextIndex><x path="Int"/></nextIndex>
		<hasNext public="1" get="inline" set="null" line="111">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":has_untyped"/></meta>
		</hasNext>
		<next public="1" get="inline" set="null" line="118">
			<f a=""><x path="Int"/></f>
			<meta><m n=":has_untyped"/></meta>
		</next>
		<new get="inline" set="null" line="105"><f a="h">
	<c path="flash.utils.Dictionary"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>haxe.ds.IntMap</e></m>
		</meta>
	</class>
	<class path="haxe.ds._IntMap.IntMapValuesIterator" params="T" file="/usr/share/haxe/std/flash/_std/haxe/ds/IntMap.hx" private="1" module="haxe.ds.IntMap">
		<h><c path="flash.utils.Dictionary"/></h>
		<index><x path="Int"/></index>
		<nextIndex><x path="Int"/></nextIndex>
		<hasNext public="1" get="inline" set="null" line="138">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":has_untyped"/></meta>
		</hasNext>
		<next public="1" get="inline" set="null" line="145">
			<f a=""><c path="haxe.ds._IntMap.IntMapValuesIterator.T"/></f>
			<meta><m n=":has_untyped"/></meta>
		</next>
		<new get="inline" set="null" line="132"><f a="h">
	<c path="flash.utils.Dictionary"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>haxe.ds.IntMap</e></m>
		</meta>
	</class>
	<class path="haxe.ds.ObjectMap" params="K:V" file="/usr/share/haxe/std/flash/_std/haxe/ds/ObjectMap.hx">
		<extends path="flash.utils.Dictionary"/>
		<implements path="haxe.IMap">
			<c path="haxe.ds.ObjectMap.K"/>
			<c path="haxe.ds.ObjectMap.V"/>
		</implements>
		<get public="1" get="inline" set="null" line="31">
			<f a="key">
				<c path="haxe.ds.ObjectMap.K"/>
				<t path="Null"><c path="haxe.ds.ObjectMap.V"/></t>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.get`</haxe_doc>
		</get>
		<set public="1" get="inline" set="null" line="35">
			<f a="key:value">
				<c path="haxe.ds.ObjectMap.K"/>
				<c path="haxe.ds.ObjectMap.V"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<exists public="1" get="inline" set="null" line="39">
			<f a="key">
				<c path="haxe.ds.ObjectMap.K"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<remove public="1" set="method" line="43">
			<f a="key">
				<c path="haxe.ds.ObjectMap.K"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.remove`</haxe_doc>
		</remove>
		<keys public="1" set="method" line="63">
			<f a=""><t path="Iterator"><c path="haxe.ds.ObjectMap.K"/></t></f>
			<haxe_doc>See `Map.keys`</haxe_doc>
		</keys>
		<iterator public="1" set="method" line="67">
			<f a=""><t path="Iterator"><c path="haxe.ds.ObjectMap.V"/></t></f>
			<haxe_doc>See `Map.iterator`</haxe_doc>
		</iterator>
		<toString public="1" set="method" line="73">
			<f a=""><c path="String"/></f>
			<haxe_doc>See `Map.toString`</haxe_doc>
		</toString>
		<new public="1" set="method" line="27">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new ObjectMap.</haxe_doc>
		</new>
		<haxe_doc>ObjectMap allows mapping of object keys to arbitrary values.

	On static targets, the keys are considered to be strong references. Refer
	to `haxe.ds.WeakMap` for a weak reference version.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="haxe.ds._ObjectMap.NativePropertyIterator" params="" file="/usr/share/haxe/std/flash/_std/haxe/ds/ObjectMap.hx" private="1" module="haxe.ds.ObjectMap">
		<collection><d/></collection>
		<index expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</index>
		<hasNext public="1" get="inline" set="null" line="97">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":has_untyped"/></meta>
		</hasNext>
		<next public="1" get="inline" set="null" line="106">
			<f a=""><d/></f>
			<meta><m n=":has_untyped"/></meta>
		</next>
		<new set="method" line="95"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.ds._ObjectMap.NativeValueIterator" params="" file="/usr/share/haxe/std/flash/_std/haxe/ds/ObjectMap.hx" private="1" module="haxe.ds.ObjectMap">
		<collection><d/></collection>
		<index expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</index>
		<hasNext public="1" get="inline" set="null" line="126">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":has_untyped"/></meta>
		</hasNext>
		<next public="1" get="inline" set="null" line="135">
			<f a=""><d/></f>
			<meta><m n=":has_untyped"/></meta>
		</next>
		<new set="method" line="124"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.ds.StringMap" params="T" file="/usr/share/haxe/std/flash/_std/haxe/ds/StringMap.hx">
		<implements path="haxe.IMap">
			<c path="String"/>
			<c path="haxe.ds.StringMap.T"/>
		</implements>
		<reserved expr="{ }" line="28" static="1">
			<a/>
			<meta><m n=":value"><e>{ }</e></m></meta>
		</reserved>
		<h><d/></h>
		<rh><d/></rh>
		<set public="1" get="inline" set="null" line="38">
			<f a="key:value">
				<c path="String"/>
				<c path="haxe.ds.StringMap.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<get public="1" get="inline" set="null" line="45">
			<f a="key">
				<c path="String"/>
				<t path="Null"><c path="haxe.ds.StringMap.T"/></t>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.get`</haxe_doc>
		</get>
		<exists public="1" get="inline" set="null" line="51">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<setReserved set="method" line="57">
			<f a="key:value">
				<c path="String"/>
				<c path="haxe.ds.StringMap.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setReserved>
		<getReserved set="method" line="62">
			<f a="key">
				<c path="String"/>
				<t path="Null"><c path="haxe.ds.StringMap.T"/></t>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getReserved>
		<existsReserved set="method" line="66">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</existsReserved>
		<remove public="1" set="method" line="71">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.remove`</haxe_doc>
		</remove>
		<keys public="1" get="inline" set="null" line="105">
			<f a=""><t path="Iterator"><c path="String"/></t></f>
			<haxe_doc>See `Map.keys`</haxe_doc>
		</keys>
		<iterator public="1" get="inline" set="null" line="109">
			<f a=""><t path="Iterator"><c path="haxe.ds.StringMap.T"/></t></f>
			<haxe_doc>See `Map.iterator`</haxe_doc>
		</iterator>
		<toString public="1" set="method" line="115">
			<f a=""><c path="String"/></f>
			<haxe_doc>See `Map.toString`</haxe_doc>
		</toString>
		<new public="1" set="method" line="30">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new StringMap.</haxe_doc>
		</new>
		<haxe_doc>StringMap allows mapping of String keys to arbitrary values.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="haxe.ds._StringMap.StringMapKeysIterator" params="" file="/usr/share/haxe/std/flash/_std/haxe/ds/StringMap.hx" private="1" module="haxe.ds.StringMap">
		<h><d/></h>
		<rh><d/></rh>
		<index><x path="Int"/></index>
		<nextIndex><x path="Int"/></nextIndex>
		<isReserved><x path="Bool"/></isReserved>
		<hasNext public="1" get="inline" set="null" line="152">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":has_untyped"/></meta>
		</hasNext>
		<next public="1" get="inline" set="null" line="166">
			<f a=""><c path="String"/></f>
			<meta><m n=":has_untyped"/></meta>
		</next>
		<new get="inline" set="null" line="144"><f a="h:rh">
	<d/>
	<d/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>haxe.ds.StringMap</e></m>
		</meta>
	</class>
	<class path="haxe.ds._StringMap.StringMapValuesIterator" params="T" file="/usr/share/haxe/std/flash/_std/haxe/ds/StringMap.hx" private="1" module="haxe.ds.StringMap">
		<h><d/></h>
		<rh><d/></rh>
		<index><x path="Int"/></index>
		<nextIndex><x path="Int"/></nextIndex>
		<hasNext public="1" get="inline" set="null" line="189">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":has_untyped"/></meta>
		</hasNext>
		<next public="1" get="inline" set="null" line="202">
			<f a=""><c path="haxe.ds._StringMap.StringMapValuesIterator.T"/></f>
			<meta><m n=":has_untyped"/></meta>
		</next>
		<new get="inline" set="null" line="182"><f a="h:rh">
	<d/>
	<d/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>haxe.ds.StringMap</e></m>
		</meta>
	</class>
	<typedef path="haxe.ds._Vector.VectorData" params="T" file="/usr/share/haxe/std/haxe/ds/Vector.hx" private="1" module="haxe.ds.Vector"><c path="flash.Vector"><c path="haxe.ds._Vector.VectorData.T"/></c></typedef>
	<abstract path="haxe.ds.Vector" params="T" file="/usr/share/haxe/std/haxe/ds/Vector.hx">
		<this><t path="haxe.ds._Vector.VectorData"><c path="haxe.ds.Vector.T"/></t></this>
		<haxe_doc>A Vector is a storage of fixed size. It can be faster than Array on some
	targets, and is never slower.

	@see https://haxe.org/manual/std-vector.html</haxe_doc>
		<impl><class path="haxe.ds._Vector.Vector_Impl_" params="" file="/usr/share/haxe/std/haxe/ds/Vector.hx" private="1" module="haxe.ds.Vector">
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the length of `this` Vector.</haxe_doc>
	</length>
	<meta>
		<m n=":keep"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<abstract path="haxe.extern.EitherType" params="T1:T2" file="/usr/share/haxe/std/haxe/extern/EitherType.hx">
		<from>
			<icast><c path="haxe.extern.EitherType.T2"/></icast>
			<icast><c path="haxe.extern.EitherType.T1"/></icast>
		</from>
		<this><d/></this>
		<to>
			<icast><c path="haxe.extern.EitherType.T2"/></icast>
			<icast><c path="haxe.extern.EitherType.T1"/></icast>
		</to>
		<haxe_doc><![CDATA[An abstract type allowing values to be either of `T1` or `T2` type.
	Supports implicit casts from/to either types.

	It is useful for interfacing with external code on dynamic platforms
	such as JavaScript or Python.

	Otherwise, use of this type is discouraged.
	
	@see <https://haxe.org/manual/lf-externs.html>]]></haxe_doc>
		<impl><class path="haxe.extern._EitherType.EitherType_Impl_" params="" file="/usr/share/haxe/std/haxe/extern/EitherType.hx" private="1" module="haxe.extern.EitherType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.extern.Rest" params="T" file="/usr/share/haxe/std/haxe/extern/Rest.hx">
		<this><c path="Array"><c path="haxe.extern.Rest.T"/></c></this>
		<haxe_doc><![CDATA[A special abstract type that represents "rest" function argument.

	Should be used as a type for the last argument of an extern method,
	representing that arbitrary number of arguments of given type can be
	passed to that method.
	
	@see <https://haxe.org/manual/lf-externs.html>]]></haxe_doc>
		<impl><class path="haxe.extern._Rest.Rest_Impl_" params="" file="/usr/share/haxe/std/haxe/extern/Rest.hx" private="1" module="haxe.extern.Rest"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="haxe.io.Input" params="" file="/usr/share/haxe/std/haxe/io/Input.hx">
		<haxe_doc>An Input is an abstract reader. See other classes in the `haxe.io` package
	for several possible implementations.

	All functions which read data throw `Eof` when the end of the stream
	is reached.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.io.BytesBuffer" params="" file="/usr/share/haxe/std/haxe/io/BytesBuffer.hx">
		<b><t path="flash.utils.ByteArray"/></b>
		<length public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>The length of the buffer in bytes.</haxe_doc>
		</length>
		<getBytes public="1" set="method" line="191">
			<f a=""><c path="haxe.io.Bytes"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns either a copy or a reference of the current bytes.
		Once called, the buffer can no longer be used.</haxe_doc>
		</getBytes>
		<new public="1" set="method" line="45"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<typedef path="haxe.io.BytesData" params="" file="/usr/share/haxe/std/haxe/io/BytesData.hx"><t path="flash.utils.ByteArray"/></typedef>
	<class path="haxe.io.Output" params="" file="/usr/share/haxe/std/haxe/io/Output.hx">
		<haxe_doc>An Output is an abstract write. A specific output implementation will only
	have to override the `writeByte` and maybe the `write`, `flush` and `close`
	methods. See `File.write` and `String.write` for two ways of creating an
	Output.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.io.Eof" params="" file="/usr/share/haxe/std/haxe/io/Eof.hx">
		<toString set="method" line="30">
			<f a=""><c path="String"/></f>
			<meta><m n=":keep"/></meta>
		</toString>
		<haxe_doc>This exception is raised when reading while data is no longer available in the `haxe.io.Input`.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<enum path="haxe.io.Error" params="" file="/usr/share/haxe/std/haxe/io/Error.hx">
		<Blocked><haxe_doc>The IO is set into nonblocking mode and some data cannot be read or written</haxe_doc></Blocked>
		<Overflow><haxe_doc>An integer value is outside its allowed range</haxe_doc></Overflow>
		<OutsideBounds><haxe_doc>An operation on Bytes is outside of its valid range</haxe_doc></OutsideBounds>
		<Custom a="e">
			<d/>
			<haxe_doc>Other errors</haxe_doc>
		</Custom>
		<haxe_doc>The possible IO errors that can occur</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="haxe.io.FPHelper" params="" file="/home/joshua/Development/Haxe/openfl/haxe/io/FPHelper.hx">
		<i64tmp expr="Int64.ofInt(0)" line="35" static="1">
			<x path="haxe.Int64"/>
			<meta><m n=":value"><e>Int64.ofInt(0)</e></m></meta>
		</i64tmp>
		<helper expr="{
	var b = new flash.utils.ByteArray();
	b.endian = flash.utils.Endian.LITTLE_ENDIAN;
	b;
}" line="50" static="1">
			<c path="openfl.utils.ByteArrayData"/>
			<meta><m n=":value"><e>{
	var b = new flash.utils.ByteArray();
	b.endian = flash.utils.Endian.LITTLE_ENDIAN;
	b;
}</e></m></meta>
		</helper>
		<i32ToFloat public="1" set="method" line="62" static="1"><f a="i">
	<x path="Int"/>
	<x path="Float"/>
</f></i32ToFloat>
		<floatToI32 public="1" set="method" line="109" static="1"><f a="f">
	<x path="Float"/>
	<x path="Int"/>
</f></floatToI32>
		<i64ToDouble public="1" set="method" line="153" static="1"><f a="low:high">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></i64ToDouble>
		<doubleToI64 public="1" set="method" line="219" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="haxe.Int64"/>
			</f>
			<haxe_doc>Returns an Int64 representing the bytes representation of the double precision IEEE float value.
		WARNING : for performance reason, the same Int64 value might be reused every time. Copy its low/high values before calling again.
		We still ensure that this is safe to use in a multithread environment</haxe_doc>
		</doubleToI64>
		<haxe_doc>Helper that converts between floating point and binary representation.
	Always works in low-endian encoding.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="haxe.io.Path" params="" file="/usr/share/haxe/std/haxe/io/Path.hx">
		<directory public="1" set="method" line="147" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the directory of `path`.

		If the directory is null, the empty String `""` is returned.

		If `path` is null, the result is unspecified.</haxe_doc>
		</directory>
		<extension public="1" set="method" line="161" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the extension of `path`.

		If the extension is null, the empty String `""` is returned.

		If `path` is null, the result is unspecified.</haxe_doc>
		</extension>
		<dir public="1">
			<c path="String"/>
			<haxe_doc>The directory.

		This is the leading part of the path that is not part of the file name
		and the extension.

		Does not end with a `/` or `\` separator.

		If the path has no directory, the value is null.</haxe_doc>
		</dir>
		<file public="1">
			<c path="String"/>
			<haxe_doc>The file name.

		This is the part of the part between the directory and the extension.

		If there is no file name, e.g. for ".htaccess" or "/dir/", the value
		is the empty String "".</haxe_doc>
		</file>
		<ext public="1">
			<c path="String"/>
			<haxe_doc>The file extension.

		It is separated from the file name by a dot. This dot is not part of
		the extension.

		If the path has no extension, the value is null.</haxe_doc>
		</ext>
		<backslash public="1">
			<x path="Bool"/>
			<haxe_doc>True if the last directory separator is a backslash, false otherwise.</haxe_doc>
		</backslash>
		<new public="1" set="method" line="76">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new Path instance by parsing `path`.

		Path information can be retrieved by accessing the dir, file and ext
		properties.</haxe_doc>
		</new>
		<haxe_doc>This class provides a convenient way of working with paths. It supports the
	common path formats:

	- directory1/directory2/filename.extension
	- directory1\directory2\filename.extension</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<abstract path="haxe.macro.IncludePosition" params="" file="/usr/share/haxe/std/haxe/macro/Compiler.hx" module="haxe.macro.Compiler">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="haxe.macro._Compiler.IncludePosition_Impl_" params="" file="/usr/share/haxe/std/haxe/macro/Compiler.hx" private="1" module="haxe.macro.Compiler"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<typedef path="haxe.macro.Position" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<min>
				<x path="Int"/>
				<haxe_doc>Position of the first character.</haxe_doc>
			</min>
			<max>
				<x path="Int"/>
				<haxe_doc>Position of the last character.</haxe_doc>
			</max>
			<file>
				<c path="String"/>
				<haxe_doc>Reference to the filename.</haxe_doc>
			</file>
		</a>
		<haxe_doc>Represents a position in a file.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Expr" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the expression.</haxe_doc>
			</pos>
			<expr>
				<e path="haxe.macro.ExprDef"/>
				<haxe_doc>The expression kind.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a node in the AST.
	@see https://haxe.org/manual/macro-reification-expression.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ExprOf" params="T" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<t path="haxe.macro.Expr"/>
		<haxe_doc>Represents a AST node identical to `Expr`, but it allows constraining the
	type of accepted expressions.
	@see https://haxe.org/manual/macro-ExprOf.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Case" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<values>
				<c path="Array"><t path="haxe.macro.Expr"/></c>
				<haxe_doc>The value expressions of the case.</haxe_doc>
			</values>
			<guard>
				<t path="Null"><t path="Null"><t path="haxe.macro.Expr"/></t></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional guard expressions of the case, if available.</haxe_doc>
			</guard>
			<expr>
				<t path="Null"><t path="haxe.macro.Expr"/></t>
				<haxe_doc>The expression of the case, if available.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a switch case.
	@see https://haxe.org/manual/expression-switch.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Var" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<type>
				<t path="Null"><e path="haxe.macro.ComplexType"/></t>
				<haxe_doc>The type-hint of the variable, if available.</haxe_doc>
			</type>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the variable.</haxe_doc>
			</name>
			<expr>
				<t path="Null"><t path="haxe.macro.Expr"/></t>
				<haxe_doc>The expression of the variable, if available.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a variable in the AST.
	@see https://haxe.org/manual/expression-var.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Catch" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<type>
				<e path="haxe.macro.ComplexType"/>
				<haxe_doc>The type of the catch.</haxe_doc>
			</type>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the catch variable.</haxe_doc>
			</name>
			<expr>
				<t path="haxe.macro.Expr"/>
				<haxe_doc>The expression of the catch.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a catch in the AST.
	@https://haxe.org/manual/expression-try-catch.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypePath" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<sub>
				<t path="Null"><t path="Null"><c path="String"/></t></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Sub is set on module sub-type access:
		`pack.Module.Type` has name = Module, sub = Type, if available.</haxe_doc>
			</sub>
			<params>
				<t path="Null"><c path="Array"><e path="haxe.macro.TypeParam"/></c></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Optional parameters of the type path.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>Represents the package of the type path.</haxe_doc>
			</pack>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type path.</haxe_doc>
			</name>
		</a>
		<haxe_doc>Represents a type path in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypeParamDecl" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<params>
				<t path="Null"><c path="Array"><t path="haxe.macro.TypeParamDecl"/></c></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional parameters of the type parameter.</haxe_doc>
			</params>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type parameter.</haxe_doc>
			</name>
			<meta>
				<t path="Null"><t path="haxe.macro.Metadata"/></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The metadata of the type parameter.</haxe_doc>
			</meta>
			<constraints>
				<t path="Null"><c path="Array"><e path="haxe.macro.ComplexType"/></c></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional constraints of the type parameter.</haxe_doc>
			</constraints>
		</a>
		<haxe_doc>Represents a type parameter declaration in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Function" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<ret>
				<t path="Null"><e path="haxe.macro.ComplexType"/></t>
				<haxe_doc>The return type-hint of the function, if available.</haxe_doc>
			</ret>
			<params>
				<t path="Null"><c path="Array"><t path="haxe.macro.TypeParamDecl"/></c></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>An optional list of function parameter type declarations.</haxe_doc>
			</params>
			<expr>
				<t path="Null"><t path="haxe.macro.Expr"/></t>
				<haxe_doc>The expression of the function body, if available.</haxe_doc>
			</expr>
			<args>
				<c path="Array"><t path="haxe.macro.FunctionArg"/></c>
				<haxe_doc>A list of function arguments.</haxe_doc>
			</args>
		</a>
		<haxe_doc>Represents a function in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.FunctionArg" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<value>
				<t path="Null"><t path="Null"><t path="haxe.macro.Expr"/></t></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional value of the function argument, if available.</haxe_doc>
			</value>
			<type>
				<t path="Null"><e path="haxe.macro.ComplexType"/></t>
				<haxe_doc>The type-hint of the function argument, if available.</haxe_doc>
			</type>
			<opt>
				<t path="Null"><x path="Bool"/></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether or not the function argument is optional.</haxe_doc>
			</opt>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the function argument.</haxe_doc>
			</name>
			<meta>
				<t path="Null"><t path="haxe.macro.Metadata"/></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The metadata of the function argument.</haxe_doc>
			</meta>
		</a>
		<haxe_doc>Represents a function argument in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.MetadataEntry" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the metadata entry.</haxe_doc>
			</pos>
			<params>
				<t path="Null"><c path="Array"><t path="haxe.macro.Expr"/></c></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional parameters of the metadata entry.</haxe_doc>
			</params>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the metadata entry.</haxe_doc>
			</name>
		</a>
		<haxe_doc>Represents a metadata entry in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Metadata" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<c path="Array"><t path="haxe.macro.MetadataEntry"/></c>
		<haxe_doc>Represents metadata in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Field" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the field.</haxe_doc>
			</pos>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the field.</haxe_doc>
			</name>
			<meta>
				<t path="Null"><t path="haxe.macro.Metadata"/></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional metadata of the field.</haxe_doc>
			</meta>
			<kind>
				<e path="haxe.macro.FieldType"/>
				<haxe_doc>The kind of the field.</haxe_doc>
			</kind>
			<doc>
				<t path="Null"><t path="Null"><c path="String"/></t></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The documentation of the field, if available. If the field has no
		documentation, the value is `null`.</haxe_doc>
			</doc>
			<access>
				<t path="Null"><c path="Array"><e path="haxe.macro.Access"/></c></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The access modifiers of the field. By default fields have private access.
		@see https://haxe.org/manual/class-field-access-modifier.html</haxe_doc>
			</access>
		</a>
		<haxe_doc>Represents a field in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypeDefinition" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position to the type definition.</haxe_doc>
			</pos>
			<params>
				<t path="Null"><c path="Array"><t path="haxe.macro.TypeParamDecl"/></c></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The parameter type declarations of the type definition.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>The package of the type definition.</haxe_doc>
			</pack>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type definition.</haxe_doc>
			</name>
			<meta>
				<t path="Null"><t path="haxe.macro.Metadata"/></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional metadata of the type definition.</haxe_doc>
			</meta>
			<kind>
				<e path="haxe.macro.TypeDefKind"/>
				<haxe_doc>The kind of the type definition.</haxe_doc>
			</kind>
			<isExtern>
				<t path="Null"><x path="Bool"/></t>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether or not the type is extern.</haxe_doc>
			</isExtern>
			<fields>
				<c path="Array"><t path="haxe.macro.Field"/></c>
				<haxe_doc>The fields of the type definition.</haxe_doc>
			</fields>
		</a>
		<haxe_doc>Represents a type definition.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ImportExpr" params="" file="/usr/share/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<path>
				<c path="Array"><a>
	<pos><t path="haxe.macro.Position"/></pos>
	<name><c path="String"/></name>
</a></c>
				<haxe_doc>The path to the import expression.</haxe_doc>
			</path>
			<mode>
				<e path="haxe.macro.ImportMode"/>
				<haxe_doc>The mode of the import expression.</haxe_doc>
			</mode>
		</a>
		<haxe_doc>Represents the import expression.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.JSGenApi" params="" file="/usr/share/haxe/std/haxe/macro/JSGenApi.hx">
		<a>
			<types>
				<c path="Array"><e path="haxe.macro.Type"/></c>
				<haxe_doc>all the types that were compiled by Haxe</haxe_doc>
			</types>
			<setTypeAccessor set="method">
				<f a="callb">
					<f a="">
						<e path="haxe.macro.Type"/>
						<c path="String"/>
					</f>
					<x path="Void"/>
				</f>
				<haxe_doc>define the JS code that gets generated when a class or enum is accessed in a typed expression</haxe_doc>
			</setTypeAccessor>
			<setCurrentClass set="method">
				<f a="c">
					<t path="haxe.macro.ClassType"/>
					<x path="Void"/>
				</f>
				<haxe_doc>select the current classe</haxe_doc>
			</setCurrentClass>
			<quoteString set="method">
				<f a="s">
					<c path="String"/>
					<c path="String"/>
				</f>
				<haxe_doc>quote and escape the given string constant</haxe_doc>
			</quoteString>
			<outputFile>
				<c path="String"/>
				<haxe_doc>the file in which the JS code can be generated</haxe_doc>
			</outputFile>
			<main>
				<t path="Null"><t path="haxe.macro.TypedExpr"/></t>
				<haxe_doc>the main call expression, if a -main class is defined</haxe_doc>
			</main>
			<isKeyword set="method">
				<f a="ident">
					<c path="String"/>
					<x path="Bool"/>
				</f>
				<haxe_doc>tells if the given identifier is a JS keyword</haxe_doc>
			</isKeyword>
			<hasFeature set="method">
				<f a="f">
					<c path="String"/>
					<x path="Bool"/>
				</f>
				<haxe_doc>check if a feature is used</haxe_doc>
			</hasFeature>
			<generateValue set="method">
				<f a="e">
					<t path="haxe.macro.TypedExpr"/>
					<c path="String"/>
				</f>
				<haxe_doc>generate the JS code for a given typed expression-value</haxe_doc>
			</generateValue>
			<generateStatement set="method">
				<f a="e">
					<t path="haxe.macro.TypedExpr"/>
					<c path="String"/>
				</f>
				<haxe_doc>generate the JS code for any given typed expression</haxe_doc>
			</generateStatement>
			<buildMetaData set="method">
				<f a="t">
					<t path="haxe.macro.BaseType"/>
					<t path="Null"><t path="haxe.macro.TypedExpr"/></t>
				</f>
				<haxe_doc>create the metadata expression for the given type</haxe_doc>
			</buildMetaData>
			<addFeature set="method">
				<f a="f">
					<c path="String"/>
					<x path="Bool"/>
				</f>
				<haxe_doc>add a feature</haxe_doc>
			</addFeature>
		</a>
		<haxe_doc>This is the api that is passed to the custom JS generator.</haxe_doc>
	</typedef>
	<class path="haxe.macro.MacroType" params="Const" file="/usr/share/haxe/std/haxe/macro/MacroType.hx" extern="1"><haxe_doc><![CDATA[This type is meant to be used to generate custom types using a macro.
	For instance by doing MacroType<[my.Class.myMacro(55)]>]]></haxe_doc></class>
	<typedef path="haxe.macro.TExprTools" params="" file="/usr/share/haxe/std/haxe/macro/Tools.hx" module="haxe.macro.Tools">
		<c path="haxe.macro.ExprTools"/>
		<haxe_doc><![CDATA[This class can be added via `using haxe.macro.Tools` in order to enable
	`using` functionality on these macro tool classes:

	- `haxe.macro.ExprTools`
	- `haxe.macro.ComplexTypeTools`
	- `haxe.macro.TypeTools`
	- `haxe.macro.MacroStringTools`
	- `haxe.macro.TypedExprTools`
	- `haxe.macro.PositionTools`
  
  @see <https://haxe.org/manual/lf-static-extension.html>]]></haxe_doc>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</typedef>
	<typedef path="haxe.macro.TComplexTypeTools" params="" file="/usr/share/haxe/std/haxe/macro/Tools.hx" module="haxe.macro.Tools">
		<c path="haxe.macro.ComplexTypeTools"/>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</typedef>
	<typedef path="haxe.macro.TTypeTools" params="" file="/usr/share/haxe/std/haxe/macro/Tools.hx" module="haxe.macro.Tools">
		<c path="haxe.macro.TypeTools"/>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</typedef>
	<typedef path="haxe.macro.TMacroStringTools" params="" file="/usr/share/haxe/std/haxe/macro/Tools.hx" module="haxe.macro.Tools">
		<c path="haxe.macro.MacroStringTools"/>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</typedef>
	<typedef path="haxe.macro.TTypedExprTools" params="" file="/usr/share/haxe/std/haxe/macro/Tools.hx" module="haxe.macro.Tools">
		<c path="haxe.macro.TypedExprTools"/>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</typedef>
	<typedef path="haxe.macro.TPositionTools" params="" file="/usr/share/haxe/std/haxe/macro/Tools.hx" module="haxe.macro.Tools">
		<c path="haxe.macro.PositionTools"/>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</typedef>
	<typedef path="haxe.macro.Ref" params="T" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<toString set="method"><f a=""><c path="String"/></f></toString>
			<get set="method"><f a=""><c path="haxe.macro.Ref.T"/></f></get>
		</a>
		<haxe_doc>Represents a reference to internal compiler structure. It exists to avoid
	expensive encoding if it is not required and to ensure that physical
	equality remains intact.

	A structure is only encoded when user requests it through `ref.get()`.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.AnonType" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<status>
				<e path="haxe.macro.AnonStatus"/>
				<haxe_doc>The status/kind of the structure.</haxe_doc>
			</status>
			<fields>
				<c path="Array"><t path="haxe.macro.ClassField"/></c>
				<haxe_doc>The class fields of the structure.</haxe_doc>
			</fields>
		</a>
		<haxe_doc>Represents information for anonymous structure types.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypeParameter" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<t>
				<e path="haxe.macro.Type"/>
				<haxe_doc>The type of the type parameter. It is guaranteed to be a `TInst` with a
		`KTypeParameter` kind.</haxe_doc>
			</t>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type parameter.</haxe_doc>
			</name>
		</a>
		<haxe_doc>Represents the declaration of type parameters.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ClassField" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<type>
				<e path="haxe.macro.Type"/>
				<haxe_doc>The type of the class field.</haxe_doc>
			</type>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the class field.</haxe_doc>
			</pos>
			<params>
				<c path="Array"><t path="haxe.macro.TypeParameter"/></c>
				<haxe_doc>The type parameters of the class field.</haxe_doc>
			</params>
			<overloads>
				<t path="haxe.macro.Ref"><c path="Array"><t path="haxe.macro.ClassField"/></c></t>
				<haxe_doc>The overload fields of the class field.</haxe_doc>
			</overloads>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the class field.</haxe_doc>
			</name>
			<meta>
				<t path="haxe.macro.MetaAccess"/>
				<haxe_doc>The metadata of the class field.</haxe_doc>
			</meta>
			<kind>
				<e path="haxe.macro.FieldKind"/>
				<haxe_doc>The class field kind.</haxe_doc>
			</kind>
			<isPublic>
				<x path="Bool"/>
				<haxe_doc>Whether or not the class field is public.</haxe_doc>
			</isPublic>
			<expr set="method">
				<f a=""><t path="Null"><t path="haxe.macro.TypedExpr"/></t></f>
				<haxe_doc>Returns the typed expression of the class field.</haxe_doc>
			</expr>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The associated documentation of the class field.</haxe_doc>
			</doc>
		</a>
		<haxe_doc>Represents a class field.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.EnumField" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<type>
				<e path="haxe.macro.Type"/>
				<haxe_doc>The type of the enum constructor.</haxe_doc>
			</type>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the enum constructor.</haxe_doc>
			</pos>
			<params>
				<c path="Array"><t path="haxe.macro.TypeParameter"/></c>
				<haxe_doc>The type parameters of the enum constructor.</haxe_doc>
			</params>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the enum constructor.</haxe_doc>
			</name>
			<meta>
				<t path="haxe.macro.MetaAccess"/>
				<haxe_doc>The metadata of the enum constructor.</haxe_doc>
			</meta>
			<index>
				<x path="Int"/>
				<haxe_doc>The index of the enum constructor, i.e. in which position it appears
		in the syntax.</haxe_doc>
			</index>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The associated documentation of the enum constructor.</haxe_doc>
			</doc>
		</a>
		<haxe_doc>Represents an enum constructor.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.BaseType" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the type.</haxe_doc>
			</pos>
			<params>
				<c path="Array"><t path="haxe.macro.TypeParameter"/></c>
				<haxe_doc>The type parameters of the type.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>The package of the type.</haxe_doc>
			</pack>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type.</haxe_doc>
			</name>
			<module>
				<c path="String"/>
				<haxe_doc>The module name of the type, which might be different.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.macro.MetaAccess"/>
				<haxe_doc>The metadata of the type.</haxe_doc>
			</meta>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is private.</haxe_doc>
			</isPrivate>
			<isExtern>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is extern.</haxe_doc>
			</isExtern>
			<exclude set="method">
				<f a=""><x path="Void"/></f>
				<haxe_doc>Allows excluding the type from compilation.</haxe_doc>
			</exclude>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The associated documentation of the class field.</haxe_doc>
			</doc>
		</a>
		<haxe_doc>The information that all types (`ClassType`, `EnumType`, `DefType`,
	`AbstractType`) have in common.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ClassType" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<superClass>
				<t path="Null"><a>
	<t><t path="haxe.macro.Ref"><t path="haxe.macro.ClassType"/></t></t>
	<params><c path="Array"><e path="haxe.macro.Type"/></c></params>
</a></t>
				<haxe_doc>The parent class and its type parameters, if available.</haxe_doc>
			</superClass>
			<statics>
				<t path="haxe.macro.Ref"><c path="Array"><t path="haxe.macro.ClassField"/></c></t>
				<haxe_doc>The static fields of the class.</haxe_doc>
			</statics>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the type.</haxe_doc>
			</pos>
			<params>
				<c path="Array"><t path="haxe.macro.TypeParameter"/></c>
				<haxe_doc>The type parameters of the type.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>The package of the type.</haxe_doc>
			</pack>
			<overrides>
				<c path="Array"><t path="haxe.macro.Ref"><t path="haxe.macro.ClassField"/></t></c>
				<haxe_doc>The list of fields that have override status.</haxe_doc>
			</overrides>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type.</haxe_doc>
			</name>
			<module>
				<c path="String"/>
				<haxe_doc>The module name of the type, which might be different.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.macro.MetaAccess"/>
				<haxe_doc>The metadata of the type.</haxe_doc>
			</meta>
			<kind>
				<e path="haxe.macro.ClassKind"/>
				<haxe_doc>The kind of the class.</haxe_doc>
			</kind>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is private.</haxe_doc>
			</isPrivate>
			<isInterface>
				<x path="Bool"/>
				<haxe_doc>If true the type is an interface, otherwise it is a class.</haxe_doc>
			</isInterface>
			<isExtern>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is extern.</haxe_doc>
			</isExtern>
			<interfaces>
				<c path="Array"><a>
	<t><t path="haxe.macro.Ref"><t path="haxe.macro.ClassType"/></t></t>
	<params><c path="Array"><e path="haxe.macro.Type"/></c></params>
</a></c>
				<haxe_doc>The implemented interfaces and their type parameters.</haxe_doc>
			</interfaces>
			<init>
				<t path="Null"><t path="haxe.macro.TypedExpr"/></t>
				<haxe_doc>The `__init__` expression of the class, if available.</haxe_doc>
			</init>
			<fields>
				<t path="haxe.macro.Ref"><c path="Array"><t path="haxe.macro.ClassField"/></c></t>
				<haxe_doc>The member fields of the class.</haxe_doc>
			</fields>
			<exclude set="method">
				<f a=""><x path="Void"/></f>
				<haxe_doc>Allows excluding the type from compilation.</haxe_doc>
			</exclude>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The associated documentation of the class field.</haxe_doc>
			</doc>
			<constructor>
				<t path="Null"><t path="haxe.macro.Ref"><t path="haxe.macro.ClassField"/></t></t>
				<haxe_doc>The constructor of the class, if available.</haxe_doc>
			</constructor>
		</a>
		<haxe_doc>Represents a class type.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.EnumType" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the type.</haxe_doc>
			</pos>
			<params>
				<c path="Array"><t path="haxe.macro.TypeParameter"/></c>
				<haxe_doc>The type parameters of the type.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>The package of the type.</haxe_doc>
			</pack>
			<names>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>An ordered list of enum constructor names.</haxe_doc>
			</names>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type.</haxe_doc>
			</name>
			<module>
				<c path="String"/>
				<haxe_doc>The module name of the type, which might be different.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.macro.MetaAccess"/>
				<haxe_doc>The metadata of the type.</haxe_doc>
			</meta>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is private.</haxe_doc>
			</isPrivate>
			<isExtern>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is extern.</haxe_doc>
			</isExtern>
			<exclude set="method">
				<f a=""><x path="Void"/></f>
				<haxe_doc>Allows excluding the type from compilation.</haxe_doc>
			</exclude>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The associated documentation of the class field.</haxe_doc>
			</doc>
			<constructs>
				<x path="Map">
					<c path="String"/>
					<t path="haxe.macro.EnumField"/>
				</x>
				<haxe_doc>The available enum constructors.</haxe_doc>
			</constructs>
		</a>
		<haxe_doc>Represents an enum type.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.DefType" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<type>
				<e path="haxe.macro.Type"/>
				<haxe_doc>The target type of the typedef.</haxe_doc>
			</type>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the type.</haxe_doc>
			</pos>
			<params>
				<c path="Array"><t path="haxe.macro.TypeParameter"/></c>
				<haxe_doc>The type parameters of the type.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>The package of the type.</haxe_doc>
			</pack>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type.</haxe_doc>
			</name>
			<module>
				<c path="String"/>
				<haxe_doc>The module name of the type, which might be different.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.macro.MetaAccess"/>
				<haxe_doc>The metadata of the type.</haxe_doc>
			</meta>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is private.</haxe_doc>
			</isPrivate>
			<isExtern>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is extern.</haxe_doc>
			</isExtern>
			<exclude set="method">
				<f a=""><x path="Void"/></f>
				<haxe_doc>Allows excluding the type from compilation.</haxe_doc>
			</exclude>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The associated documentation of the class field.</haxe_doc>
			</doc>
		</a>
		<haxe_doc>Represents a typedef.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.AbstractType" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<unops>
				<c path="Array"><a>
	<postFix><x path="Bool"/></postFix>
	<op><e path="haxe.macro.Unop"/></op>
	<field><t path="haxe.macro.ClassField"/></field>
</a></c>
				<haxe_doc>The defined unary operators of the abstract.</haxe_doc>
			</unops>
			<type>
				<e path="haxe.macro.Type"/>
				<haxe_doc>The underlying type of the abstract.</haxe_doc>
			</type>
			<to>
				<c path="Array"><a>
	<t><e path="haxe.macro.Type"/></t>
	<field><t path="Null"><t path="haxe.macro.ClassField"/></t></field>
</a></c>
				<haxe_doc>The available implicit to-casts of the abstract.

		@see https://haxe.org/manual/types-abstract-implicit-casts.html</haxe_doc>
			</to>
			<resolve>
				<t path="Null"><t path="haxe.macro.ClassField"/></t>
				<meta><m n=":require"><e><![CDATA[haxe_ver >= 3.3]]></e></m></meta>
				<haxe_doc>The method used for resolving unknown field access, if available.</haxe_doc>
			</resolve>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the type.</haxe_doc>
			</pos>
			<params>
				<c path="Array"><t path="haxe.macro.TypeParameter"/></c>
				<haxe_doc>The type parameters of the type.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>The package of the type.</haxe_doc>
			</pack>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type.</haxe_doc>
			</name>
			<module>
				<c path="String"/>
				<haxe_doc>The module name of the type, which might be different.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.macro.MetaAccess"/>
				<haxe_doc>The metadata of the type.</haxe_doc>
			</meta>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is private.</haxe_doc>
			</isPrivate>
			<isExtern>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is extern.</haxe_doc>
			</isExtern>
			<impl>
				<t path="Null"><t path="haxe.macro.Ref"><t path="haxe.macro.ClassType"/></t></t>
				<haxe_doc>The implementation class of the abstract, if available.</haxe_doc>
			</impl>
			<from>
				<c path="Array"><a>
	<t><e path="haxe.macro.Type"/></t>
	<field><t path="Null"><t path="haxe.macro.ClassField"/></t></field>
</a></c>
				<haxe_doc>The available implicit from-casts of the abstract.

		@see https://haxe.org/manual/types-abstract-implicit-casts.html</haxe_doc>
			</from>
			<exclude set="method">
				<f a=""><x path="Void"/></f>
				<haxe_doc>Allows excluding the type from compilation.</haxe_doc>
			</exclude>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The associated documentation of the class field.</haxe_doc>
			</doc>
			<binops>
				<c path="Array"><a>
	<op><e path="haxe.macro.Binop"/></op>
	<field><t path="haxe.macro.ClassField"/></field>
</a></c>
				<haxe_doc>The defined binary operators of the abstract.</haxe_doc>
			</binops>
			<array>
				<c path="Array"><t path="haxe.macro.ClassField"/></c>
				<haxe_doc>The defined array-access fields of the abstract.</haxe_doc>
			</array>
		</a>
		<haxe_doc>Represents an abstract type.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.MetaAccess" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<remove set="method">
				<f a="name">
					<c path="String"/>
					<x path="Void"/>
				</f>
				<haxe_doc>Removes all `name` metadata entries from the origin of `this`
		MetaAccess.

		This method might clear several metadata entries of the same name.

		If a `Metadata` array is obtained through a call to `get`, a subsequent
		call to `remove` has no effect on that array.

		If `name` is null, compilation fails with an error.</haxe_doc>
			</remove>
			<has set="method">
				<f a="name">
					<c path="String"/>
					<x path="Bool"/>
				</f>
				<haxe_doc>Tells if the origin of `this` MetaAccess has a `name` metadata entry.

		If `name` is null, compilation fails with an error.</haxe_doc>
			</has>
			<get set="method">
				<f a=""><t path="haxe.macro.Metadata"/></f>
				<haxe_doc>Return the wrapped `Metadata` array.

		Modifying this array has no effect on the origin of `this` MetaAccess.
		The `add` and `remove` methods can be used for that.</haxe_doc>
			</get>
			<extract set="method">
				<f a="name">
					<c path="String"/>
					<c path="Array"><t path="haxe.macro.MetadataEntry"/></c>
				</f>
				<haxe_doc>Extract metadata entries by given `name`.

		If there's no metadata with such name, empty array `[]` is returned.

		If `name` is null, compilation fails with an error.</haxe_doc>
			</extract>
			<add set="method">
				<f a="name:params:pos">
					<c path="String"/>
					<c path="Array"><t path="haxe.macro.Expr"/></c>
					<t path="haxe.macro.Position"/>
					<x path="Void"/>
				</f>
				<haxe_doc>Adds the metadata specified by `name`, `params` and `pos` to the origin
		of `this` MetaAccess.

		Metadata names are not unique during compilation, so this method never
		overwrites a previous metadata.

		If a `Metadata` array is obtained through a call to `get`, a subsequent
		call to `add` has no effect on that array.

		If any argument is null, compilation fails with an error.</haxe_doc>
			</add>
		</a>
		<haxe_doc>MetaAccess is a wrapper for the `Metadata` array. It can be used to add
	metadata to and remove metadata from its origin.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TVar" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<t set="null">
				<e path="haxe.macro.Type"/>
				<haxe_doc>The type of the variable.</haxe_doc>
			</t>
			<name set="null">
				<c path="String"/>
				<haxe_doc>The name of the variable.</haxe_doc>
			</name>
			<meta set="null">
				<t path="Null"><t path="haxe.macro.MetaAccess"/></t>
				<haxe_doc>The metadata of the variable.</haxe_doc>
			</meta>
			<id set="null">
				<x path="Int"/>
				<haxe_doc>The unique ID of the variable.</haxe_doc>
			</id>
			<extra set="null">
				<t path="Null"><a>
	<params><c path="Array"><t path="haxe.macro.TypeParameter"/></c></params>
	<expr><t path="Null"><t path="haxe.macro.TypedExpr"/></t></expr>
</a></t>
				<haxe_doc>Special information which is internally used to keep track of closure.
		information</haxe_doc>
			</extra>
			<capture set="null">
				<x path="Bool"/>
				<haxe_doc>Whether or not the variable has been captured by a closure.</haxe_doc>
			</capture>
		</a>
		<haxe_doc>Represents a variable in the typed AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TFunc" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<t>
				<e path="haxe.macro.Type"/>
				<haxe_doc>The return type of the function.</haxe_doc>
			</t>
			<expr>
				<t path="haxe.macro.TypedExpr"/>
				<haxe_doc>The expression of the function body.</haxe_doc>
			</expr>
			<args>
				<c path="Array"><a>
	<value><t path="Null"><e path="haxe.macro.TConstant"/></t></value>
	<v><t path="haxe.macro.TVar"/></v>
</a></c>
				<haxe_doc>A list of function arguments identified by an argument variable `v` and
		an optional initialization `value`.</haxe_doc>
			</args>
		</a>
		<haxe_doc>Represents a function in the typed AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypedExpr" params="" file="/usr/share/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<t>
				<e path="haxe.macro.Type"/>
				<haxe_doc>The type of the expression.</haxe_doc>
			</t>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the expression.</haxe_doc>
			</pos>
			<expr>
				<e path="haxe.macro.TypedExprDef"/>
				<haxe_doc>The expression kind.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a typed AST node.</haxe_doc>
	</typedef>
	<class path="haxe.remoting.AsyncConnection" params="" file="/usr/share/haxe/std/haxe/remoting/AsyncConnection.hx" interface="1">
		<haxe_doc>For asynchronous connections, where the results are events that will be resolved later in the execution process.</haxe_doc>
		<meta><m n=":keep"/></meta>
		<haxe_dynamic><c path="haxe.remoting.AsyncConnection"/></haxe_dynamic>
	</class>
	<class path="haxe.remoting.Connection" params="" file="/usr/share/haxe/std/haxe/remoting/Connection.hx" interface="1">
		<meta><m n=":keep"/></meta>
		<haxe_dynamic><c path="haxe.remoting.Connection"/></haxe_dynamic>
	</class>
	<class path="haxe.remoting.Context" params="" file="/usr/share/haxe/std/haxe/remoting/Context.hx">
		<objects><c path="haxe.ds.StringMap"><a>
	<rec><x path="Bool"/></rec>
	<obj><d/></obj>
</a></c></objects>
		<call public="1" set="method" line="39"><f a="path:params">
	<c path="Array"><c path="String"/></c>
	<c path="Array"><d/></c>
	<d/>
</f></call>
		<haxe_doc>Allows communication between platforms. This is a shared API that can be called on the connection at the client code.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.remoting.ExternalConnection" params="" file="/usr/share/haxe/std/haxe/remoting/ExternalConnection.hx">
		<implements path="haxe.remoting.Connection"/>
		<escapeString set="method" line="49" static="1"><f a="s">
	<c path="String"/>
	<c path="String"/>
</f></escapeString>
		<connections expr="new haxe.ds.StringMap&lt;ExternalConnection&gt;()" line="94" static="1">
			<c path="haxe.ds.StringMap"><c path="haxe.remoting.ExternalConnection"/></c>
			<meta><m n=":value"><e><![CDATA[new haxe.ds.StringMap<ExternalConnection>()]]></e></m></meta>
		</connections>
		<doCall set="method" line="97" static="1">
			<f a="name:path:params">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":keep"/></meta>
		</doCall>
		<__data><a>
	<name><c path="String"/></name>
	<ctx><c path="haxe.remoting.Context"/></ctx>
</a></__data>
		<haxe_doc>Synchronous communications between Flash and Javascript.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":expose"/>
		</meta>
		<haxe_dynamic><c path="haxe.remoting.Connection"/></haxe_dynamic>
	</class>
	<typedef path="haxe.remoting.Socket" params="" file="/usr/share/haxe/std/haxe/remoting/SocketProtocol.hx" module="haxe.remoting.SocketProtocol"><t path="flash.net.XMLSocket"/></typedef>
	<typedef path="haxe.rtti.Path" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<c path="String"/>
		<haxe_doc>The (dot-)path of the runtime type.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.Platforms" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<c path="List"><c path="String"/></c>
		<haxe_doc>A list of strings representing the targets where the type is available.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.FunctionArgument" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<a>
			<value>
				<t path="Null"><c path="String"/></t>
				<meta><m n=":optional"/></meta>
			</value>
			<t><e path="haxe.rtti.CType"/></t>
			<opt><x path="Bool"/></opt>
			<name><c path="String"/></name>
		</a>
		<haxe_doc>The function argument runtime type information.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.PathParams" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<a>
			<path>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The path of the type.</haxe_doc>
			</path>
			<params>
				<c path="List"><e path="haxe.rtti.CType"/></c>
				<haxe_doc>The list of parameters types.</haxe_doc>
			</params>
		</a>
		<haxe_doc>The type parameters in the runtime type information.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.TypeParams" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<c path="Array"><c path="String"/></c>
		<haxe_doc>An array of strings representing the names of the type parameters the type 
	has. As of Haxe 3.2.0, this does not include the constraints.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.MetaData" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<c path="Array"><a>
	<params><c path="Array"><c path="String"/></c></params>
	<name><c path="String"/></name>
</a></c>
		<haxe_doc>The list of runtime metadata.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.ClassField" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<a>
			<type>
				<e path="haxe.rtti.CType"/>
				<haxe_doc>The type of the field.</haxe_doc>
			</type>
			<set>
				<e path="haxe.rtti.Rights"/>
				<haxe_doc>The [write access](https://haxe.org/manual/dictionary.html#define-write-access)
		behavior of the field.</haxe_doc>
			</set>
			<platforms>
				<t path="haxe.rtti.Platforms"/>
				<haxe_doc>A list of strings representing the targets where the field is available.</haxe_doc>
			</platforms>
			<params>
				<t path="haxe.rtti.TypeParams"/>
				<haxe_doc>An array of strings representing the names of the type parameters 
		the field has.</haxe_doc>
			</params>
			<overloads>
				<t path="Null"><c path="List"><t path="haxe.rtti.ClassField"/></c></t>
				<haxe_doc>The list of available overloads for the fields or `null` if no overloads 
		exists.</haxe_doc>
			</overloads>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the field.</haxe_doc>
			</name>
			<meta>
				<t path="haxe.rtti.MetaData"/>
				<haxe_doc>The meta data the field was annotated with.</haxe_doc>
			</meta>
			<line>
				<t path="Null"><x path="Int"/></t>
				<haxe_doc>The line number where the field is defined. This information is only 
		available if the field has an expression. 
		Otherwise the value is `null`.</haxe_doc>
			</line>
			<isPublic>
				<x path="Bool"/>
				<haxe_doc>Whether or not the field is public.</haxe_doc>
			</isPublic>
			<isOverride>
				<x path="Bool"/>
				<haxe_doc>Whether or not the field overrides another field.</haxe_doc>
			</isOverride>
			<get>
				<e path="haxe.rtti.Rights"/>
				<haxe_doc>The [read access](https://haxe.org/manual/dictionary.html#define-read-access) 
		behavior of the field.</haxe_doc>
			</get>
			<expr>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The actual expression of the field or `null` if there is no expression.</haxe_doc>
			</expr>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The documentation of the field. This information is only available 
		if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or 
		if the field has no documentation, the value is `null`.</haxe_doc>
			</doc>
		</a>
		<haxe_doc><![CDATA[The runtime class field information.
	
	@see <https://haxe.org/manual/cr-rtti-structure.html#class-field-information>]]></haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.TypeInfos" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<a>
			<platforms>
				<t path="haxe.rtti.Platforms"/>
				<haxe_doc>A list of strings representing the targets where the type is available.</haxe_doc>
			</platforms>
			<path>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the type.</haxe_doc>
			</path>
			<params>
				<t path="haxe.rtti.TypeParams"/>
				<haxe_doc>An array of strings representing the names of the type parameters the 
		type has.</haxe_doc>
			</params>
			<module>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the module containing the type.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.rtti.MetaData"/>
				<haxe_doc>The [metadata](https://haxe.org/manual/lf-metadata.html) the type was 
		annotated with.</haxe_doc>
			</meta>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is [private](https://haxe.org/manual/dictionary.html#define-private-type).</haxe_doc>
			</isPrivate>
			<file>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The full slash path of the .hx file containing the type. 
		This might be `null` in case there is no such file, e.g. if the
		type is defined through a macro.</haxe_doc>
			</file>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The documentation of the type. This information is only available
		if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or if
		the constructor has no documentation, the value is `null`.</haxe_doc>
			</doc>
		</a>
		<haxe_doc>The general runtime type information.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.Classdef" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<a>
			<tdynamic>
				<t path="Null"><e path="haxe.rtti.CType"/></t>
				<haxe_doc>The type which is dynamically implemented by the class or `null` if no
		such type exists.</haxe_doc>
			</tdynamic>
			<superClass>
				<t path="Null"><t path="haxe.rtti.PathParams"/></t>
				<haxe_doc>The class' parent class defined by its type path and list of type 
		parameters.</haxe_doc>
			</superClass>
			<statics>
				<c path="List"><t path="haxe.rtti.ClassField"/></c>
				<haxe_doc>The list of static class fields.</haxe_doc>
			</statics>
			<platforms>
				<t path="haxe.rtti.Platforms"/>
				<haxe_doc>A list of strings representing the targets where the type is available.</haxe_doc>
			</platforms>
			<path>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the type.</haxe_doc>
			</path>
			<params>
				<t path="haxe.rtti.TypeParams"/>
				<haxe_doc>An array of strings representing the names of the type parameters the 
		type has.</haxe_doc>
			</params>
			<module>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the module containing the type.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.rtti.MetaData"/>
				<haxe_doc>The [metadata](https://haxe.org/manual/lf-metadata.html) the type was 
		annotated with.</haxe_doc>
			</meta>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is [private](https://haxe.org/manual/dictionary.html#define-private-type).</haxe_doc>
			</isPrivate>
			<isInterface>
				<x path="Bool"/>
				<haxe_doc>Whether or not the class is actually an [interface](https://haxe.org/manual/types-interfaces.html).</haxe_doc>
			</isInterface>
			<isExtern>
				<x path="Bool"/>
				<haxe_doc>Whether or not the class is [extern](https://haxe.org/manual/lf-externs.html).</haxe_doc>
			</isExtern>
			<interfaces>
				<c path="List"><t path="haxe.rtti.PathParams"/></c>
				<haxe_doc>The list of interfaces defined by their type path and list of type 
		parameters.</haxe_doc>
			</interfaces>
			<file>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The full slash path of the .hx file containing the type. 
		This might be `null` in case there is no such file, e.g. if the
		type is defined through a macro.</haxe_doc>
			</file>
			<fields>
				<c path="List"><t path="haxe.rtti.ClassField"/></c>
				<haxe_doc>The list of member [class fields](https://haxe.org/manual/class-field.html).</haxe_doc>
			</fields>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The documentation of the type. This information is only available
		if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or if
		the constructor has no documentation, the value is `null`.</haxe_doc>
			</doc>
		</a>
		<haxe_doc>The runtime class definition information.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.EnumField" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<a>
			<platforms>
				<t path="haxe.rtti.Platforms"/>
				<haxe_doc>A list of strings representing the targets where the constructor is
		available.</haxe_doc>
			</platforms>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the constructor.</haxe_doc>
			</name>
			<meta>
				<t path="haxe.rtti.MetaData"/>
				<haxe_doc>The meta data the constructor was annotated with.</haxe_doc>
			</meta>
			<doc>
				<c path="String"/>
				<haxe_doc>The documentation of the constructor. This information is only available
		if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or if
		the constructor has no documentation, the value is `null`.</haxe_doc>
			</doc>
			<args>
				<t path="Null"><c path="List"><a>
	<t><e path="haxe.rtti.CType"/></t>
	<opt><x path="Bool"/></opt>
	<name><c path="String"/></name>
</a></c></t>
				<haxe_doc>The list of arguments the constructor has or `null` if no arguments are 
		available.</haxe_doc>
			</args>
		</a>
		<haxe_doc><![CDATA[The runtime enum constructor information.
	
	@see <https://haxe.org/manual/cr-rtti-structure.html#enum-constructor-information>]]></haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.Enumdef" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<a>
			<platforms>
				<t path="haxe.rtti.Platforms"/>
				<haxe_doc>A list of strings representing the targets where the type is available.</haxe_doc>
			</platforms>
			<path>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the type.</haxe_doc>
			</path>
			<params>
				<t path="haxe.rtti.TypeParams"/>
				<haxe_doc>An array of strings representing the names of the type parameters the 
		type has.</haxe_doc>
			</params>
			<module>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the module containing the type.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.rtti.MetaData"/>
				<haxe_doc>The [metadata](https://haxe.org/manual/lf-metadata.html) the type was 
		annotated with.</haxe_doc>
			</meta>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is [private](https://haxe.org/manual/dictionary.html#define-private-type).</haxe_doc>
			</isPrivate>
			<isExtern>
				<x path="Bool"/>
				<haxe_doc>Whether or not the enum is [extern](https://haxe.org/manual/lf-externs.html).</haxe_doc>
			</isExtern>
			<file>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The full slash path of the .hx file containing the type. 
		This might be `null` in case there is no such file, e.g. if the
		type is defined through a macro.</haxe_doc>
			</file>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The documentation of the type. This information is only available
		if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or if
		the constructor has no documentation, the value is `null`.</haxe_doc>
			</doc>
			<constructors>
				<c path="List"><t path="haxe.rtti.EnumField"/></c>
				<haxe_doc>The list of enum constructors.</haxe_doc>
			</constructors>
		</a>
		<haxe_doc><![CDATA[The enum runtime type information.
	
	@see <https://haxe.org/manual/cr-rtti-structure.html#enum-type-information>]]></haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.Typedef" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<a>
			<types>
				<x path="Map">
					<c path="String"/>
					<e path="haxe.rtti.CType"/>
				</x>
				<haxe_doc>The types of the typedef, by platform.</haxe_doc>
			</types>
			<type>
				<e path="haxe.rtti.CType"/>
				<haxe_doc>The type of the typedef.</haxe_doc>
			</type>
			<platforms>
				<t path="haxe.rtti.Platforms"/>
				<haxe_doc>A list of strings representing the targets where the type is available.</haxe_doc>
			</platforms>
			<path>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the type.</haxe_doc>
			</path>
			<params>
				<t path="haxe.rtti.TypeParams"/>
				<haxe_doc>An array of strings representing the names of the type parameters the 
		type has.</haxe_doc>
			</params>
			<module>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the module containing the type.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.rtti.MetaData"/>
				<haxe_doc>The [metadata](https://haxe.org/manual/lf-metadata.html) the type was 
		annotated with.</haxe_doc>
			</meta>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is [private](https://haxe.org/manual/dictionary.html#define-private-type).</haxe_doc>
			</isPrivate>
			<file>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The full slash path of the .hx file containing the type. 
		This might be `null` in case there is no such file, e.g. if the
		type is defined through a macro.</haxe_doc>
			</file>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The documentation of the type. This information is only available
		if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or if
		the constructor has no documentation, the value is `null`.</haxe_doc>
			</doc>
		</a>
		<haxe_doc>The typedef runtime information.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.Abstractdef" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<a>
			<to><c path="Array"><a>
	<t><e path="haxe.rtti.CType"/></t>
	<field><t path="Null"><c path="String"/></t></field>
</a></c></to>
			<platforms>
				<t path="haxe.rtti.Platforms"/>
				<haxe_doc>A list of strings representing the targets where the type is available.</haxe_doc>
			</platforms>
			<path>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the type.</haxe_doc>
			</path>
			<params>
				<t path="haxe.rtti.TypeParams"/>
				<haxe_doc>An array of strings representing the names of the type parameters the 
		type has.</haxe_doc>
			</params>
			<module>
				<t path="haxe.rtti.Path"/>
				<haxe_doc>The type path of the module containing the type.</haxe_doc>
			</module>
			<meta>
				<t path="haxe.rtti.MetaData"/>
				<haxe_doc>The [metadata](https://haxe.org/manual/lf-metadata.html) the type was 
		annotated with.</haxe_doc>
			</meta>
			<isPrivate>
				<x path="Bool"/>
				<haxe_doc>Whether or not the type is [private](https://haxe.org/manual/dictionary.html#define-private-type).</haxe_doc>
			</isPrivate>
			<impl><t path="haxe.rtti.Classdef"/></impl>
			<from><c path="Array"><a>
	<t><e path="haxe.rtti.CType"/></t>
	<field><t path="Null"><c path="String"/></t></field>
</a></c></from>
			<file>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The full slash path of the .hx file containing the type. 
		This might be `null` in case there is no such file, e.g. if the
		type is defined through a macro.</haxe_doc>
			</file>
			<doc>
				<t path="Null"><c path="String"/></t>
				<haxe_doc>The documentation of the type. This information is only available
		if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or if
		the constructor has no documentation, the value is `null`.</haxe_doc>
			</doc>
			<athis><e path="haxe.rtti.CType"/></athis>
		</a>
		<haxe_doc><![CDATA[The abstract type runtime information.
	
	@see <https://haxe.org/manual/cr-rtti-structure.html#abstract-type-information>]]></haxe_doc>
	</typedef>
	<typedef path="haxe.rtti.TypeRoot" params="" file="/usr/share/haxe/std/haxe/rtti/CType.hx" module="haxe.rtti.CType">
		<c path="Array"><e path="haxe.rtti.TypeTree"/></c>
		<haxe_doc>List of `TypeTree`.</haxe_doc>
	</typedef>
	<typedef path="haxe.rtti._Meta.MetaObject" params="" file="/usr/share/haxe/std/haxe/rtti/Meta.hx" private="1" module="haxe.rtti.Meta"><a>
	<statics>
		<t path="Null"><d><d><t path="Null"><c path="Array"><d/></c></t></d></d></t>
		<meta><m n=":optional"/></meta>
	</statics>
	<obj>
		<t path="Null"><d><t path="Null"><c path="Array"><d/></c></t></d></t>
		<meta><m n=":optional"/></meta>
	</obj>
	<fields>
		<t path="Null"><d><d><t path="Null"><c path="Array"><d/></c></t></d></d></t>
		<meta><m n=":optional"/></meta>
	</fields>
</a></typedef>
	<class path="haxe.unit.TestCase" params="" file="/usr/share/haxe/std/haxe/unit/TestCase.hx">
		<currentTest public="1">
			<c path="haxe.unit.TestStatus"/>
			<haxe_doc>The current test status of the TestRunner.</haxe_doc>
		</currentTest>
		<setup public="1" set="method" line="65">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Override this method to execute code before the test runs.</haxe_doc>
		</setup>
		<tearDown public="1" set="method" line="71">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Override this method to execute code after the test ran.</haxe_doc>
		</tearDown>
		<print public="1" set="method" line="74"><f a="v">
	<d/>
	<x path="Void"/>
</f></print>
		<assertTrue public="1" set="method" line="81">
			<f a="b:?c">
				<x path="Bool"/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Succeeds if `b` is `true`.</haxe_doc>
		</assertTrue>
		<assertFalse public="1" set="method" line="94">
			<f a="b:?c">
				<x path="Bool"/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Succeeds if `b` is `false`.</haxe_doc>
		</assertFalse>
		<assertEquals public="1" params="T" set="method" line="107">
			<f a="expected:actual:?c">
				<c path="assertEquals.T"/>
				<c path="assertEquals.T"/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Succeeds if `expected` and `actual` are equal.</haxe_doc>
		</assertEquals>
		<new public="1" set="method" line="59"><f a=""><x path="Void"/></f></new>
		<haxe_doc><![CDATA[This unit test class should be extended to create test cases. Each test 
	method created in this extended class should start with the name "test".

	These test methods should call the assertion methods:

	 * `assertTrue(a)`: Succeeds if `a` is `true`.
	 * `assertFalse(a)`: Succeeds if `a` is `false`.
	 * `assertEquals(expected, actual)`: Succeeds if `expected` and `actual`
	   are equal.

	```haxe
	class MyTestCase extends haxe.unit.TestCase {
		function testBasic() {
			assertEquals("A", "A");
		}
	}
	```

	The TestCase can be tested using `TestRunner`. 

	To run code before or after the test, override the functions `setup` 
	and `tearDown`.

	@see <https://haxe.org/manual/std-unit-testing.html>]]></haxe_doc>
		<meta>
			<m n=":keepSub"/>
			<m n=":publicFields"/>
		</meta>
	</class>
	<class path="haxe.unit.TestRunner" params="" file="/usr/share/haxe/std/haxe/unit/TestRunner.hx">
		<tf expr="null" line="48" static="1">
			<t path="flash.text.TextField"/>
			<meta><m n=":value"><e>null</e></m></meta>
		</tf>
		<print public="1" set="dynamic" line="60" static="1">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Prints the given object/value.
		
		 * Flash outputs the result in a new `TextField` on stage.
		 * JavaScript outputs the result using `console.log`.
		 * Other targets use native `print` to output the result.

		This function is `dynamic` so it can be overriden in custom setups.</haxe_doc>
		</print>
		<haxe_doc><![CDATA[This class runs unit test cases and prints the result.
	
	```haxe
	var r = new haxe.unit.TestRunner();
	r.add(new MyTestCase());
	// add other TestCases here
	
	// finally, run the tests
	r.run();
	```
	
	@see <https://haxe.org/manual/std-unit-testing.html>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.unit.TestStatus" params="" file="/usr/share/haxe/std/haxe/unit/TestStatus.hx">
		<done public="1">
			<x path="Bool"/>
			<haxe_doc>`true` when the unit test is executed.</haxe_doc>
		</done>
		<success public="1">
			<x path="Bool"/>
			<haxe_doc>`true` when succesfully unit tested.</haxe_doc>
		</success>
		<error public="1">
			<c path="String"/>
			<haxe_doc>The error message of the unit test method.</haxe_doc>
		</error>
		<posInfos public="1">
			<t path="haxe.PosInfos"/>
			<haxe_doc>The position information of the unit test.</haxe_doc>
		</posInfos>
		<haxe_doc><![CDATA[The status information of a unit test case method.

	@see <https://haxe.org/manual/std-unit-testing.html>]]></haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<typedef path="haxe.web.DispatchConfig" params="" file="/usr/share/haxe/std/haxe/web/Dispatch.hx" module="haxe.web.Dispatch"><a>
	<rules><d/></rules>
	<obj><d/></obj>
</a></typedef>
	<typedef path="haxe.web.Lock" params="T" file="/usr/share/haxe/std/haxe/web/Dispatch.hx" module="haxe.web.Dispatch"><c path="haxe.web.Lock.T"/></typedef>
	<class path="haxe.xml._Parser.S" params="" file="/usr/share/haxe/std/haxe/xml/Parser.hx" private="1" module="haxe.xml.Parser" extern="1">
		<IGNORE_SPACES public="1" get="inline" set="null" expr="0" line="28" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</IGNORE_SPACES>
		<BEGIN public="1" get="inline" set="null" expr="1" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BEGIN>
		<BEGIN_NODE public="1" get="inline" set="null" expr="2" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</BEGIN_NODE>
		<TAG_NAME public="1" get="inline" set="null" expr="3" line="31" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</TAG_NAME>
		<BODY public="1" get="inline" set="null" expr="4" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BODY>
		<ATTRIB_NAME public="1" get="inline" set="null" expr="5" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</ATTRIB_NAME>
		<EQUALS public="1" get="inline" set="null" expr="6" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</EQUALS>
		<ATTVAL_BEGIN public="1" get="inline" set="null" expr="7" line="35" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7</e></m></meta>
		</ATTVAL_BEGIN>
		<ATTRIB_VAL public="1" get="inline" set="null" expr="8" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</ATTRIB_VAL>
		<CHILDS public="1" get="inline" set="null" expr="9" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9</e></m></meta>
		</CHILDS>
		<CLOSE public="1" get="inline" set="null" expr="10" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10</e></m></meta>
		</CLOSE>
		<WAIT_END public="1" get="inline" set="null" expr="11" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>11</e></m></meta>
		</WAIT_END>
		<WAIT_END_RET public="1" get="inline" set="null" expr="12" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>12</e></m></meta>
		</WAIT_END_RET>
		<PCDATA public="1" get="inline" set="null" expr="13" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>13</e></m></meta>
		</PCDATA>
		<HEADER public="1" get="inline" set="null" expr="14" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>14</e></m></meta>
		</HEADER>
		<COMMENT public="1" get="inline" set="null" expr="15" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>15</e></m></meta>
		</COMMENT>
		<DOCTYPE public="1" get="inline" set="null" expr="16" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>16</e></m></meta>
		</DOCTYPE>
		<CDATA public="1" get="inline" set="null" expr="17" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>17</e></m></meta>
		</CDATA>
		<ESCAPE public="1" get="inline" set="null" expr="18" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>18</e></m></meta>
		</ESCAPE>
	</class>
	<typedef path="haxe.zip.Entry" params="" file="/usr/share/haxe/std/haxe/zip/Entry.hx"><a>
	<fileTime><c path="Date"/></fileTime>
	<fileSize><x path="Int"/></fileSize>
	<fileName><c path="String"/></fileName>
	<extraFields>
		<t path="Null"><t path="Null"><c path="List"><e path="haxe.zip.ExtraField"/></c></t></t>
		<meta><m n=":optional"/></meta>
	</extraFields>
	<dataSize><x path="Int"/></dataSize>
	<data><t path="Null"><c path="haxe.io.Bytes"/></t></data>
	<crc32><t path="Null"><x path="Int"/></t></crc32>
	<compressed><x path="Bool"/></compressed>
</a></typedef>
	<typedef path="lime.Assets" params="" file="/home/joshua/Development/Haxe/lime/lime/Assets.hx"><c path="lime.utils.Assets"/></typedef>
	<class path="lime._backend.flash.FlashApplication" params="" file="/home/joshua/Development/Haxe/lime/lime/_backend/flash/FlashApplication.hx">
		<cacheTime><x path="Int"/></cacheTime>
		<parent><c path="lime.app.Application"/></parent>
		<create public="1" set="method" line="35"><f a="config">
	<t path="lime.app.Config"/>
	<x path="Void"/>
</f></create>
		<exec public="1" set="method" line="42"><f a=""><x path="Int"/></f></exec>
		<exit public="1" set="method" line="56"><f a=""><x path="Void"/></f></exit>
		<getFrameRate public="1" set="method" line="63"><f a=""><x path="Float"/></f></getFrameRate>
		<handleApplicationEvent set="method" line="70"><f a="event">
	<t path="flash.events.Event"/>
	<x path="Void"/>
</f></handleApplicationEvent>
		<setFrameRate public="1" set="method" line="88"><f a="value">
	<x path="Float"/>
	<x path="Float"/>
</f></setFrameRate>
		<new public="1" set="method" line="25"><f a="parent">
	<c path="lime.app.Application"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.app.Application</e></m>
			<m n=":access"><e>lime.graphics.Renderer</e></m>
		</meta>
	</class>
	<class path="lime._backend.flash.FlashAudioSource" params="" file="/home/joshua/Development/Haxe/lime/lime/_backend/flash/FlashAudioSource.hx">
		<channel><t path="flash.media.SoundChannel"/></channel>
		<completed><x path="Bool"/></completed>
		<length><t path="Null"><x path="Int"/></t></length>
		<loops><x path="Int"/></loops>
		<parent><c path="lime.media.AudioSource"/></parent>
		<pauseTime><x path="Int"/></pauseTime>
		<playing><x path="Bool"/></playing>
		<position><c path="lime.math.Vector4"/></position>
		<dispose public="1" set="method" line="33"><f a=""><x path="Void"/></f></dispose>
		<init public="1" set="method" line="40"><f a=""><x path="Void"/></f></init>
		<play public="1" set="method" line="47"><f a=""><x path="Void"/></f></play>
		<pause public="1" set="method" line="55"><f a=""><x path="Void"/></f></pause>
		<stop public="1" set="method" line="67"><f a=""><x path="Void"/></f></stop>
		<getCurrentTime public="1" set="method" line="87"><f a=""><x path="Int"/></f></getCurrentTime>
		<setCurrentTime public="1" set="method" line="102"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></setCurrentTime>
		<getGain public="1" set="method" line="119"><f a=""><x path="Float"/></f></getGain>
		<setGain public="1" set="method" line="126"><f a="value">
	<x path="Float"/>
	<x path="Float"/>
</f></setGain>
		<getLength public="1" set="method" line="136"><f a=""><x path="Int"/></f></getLength>
		<setLength public="1" set="method" line="149"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></setLength>
		<getLoops public="1" set="method" line="156"><f a=""><x path="Int"/></f></getLoops>
		<setLoops public="1" set="method" line="163"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></setLoops>
		<getPosition public="1" set="method" line="170"><f a=""><c path="lime.math.Vector4"/></f></getPosition>
		<setPosition public="1" set="method" line="179"><f a="value">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
</f></setPosition>
		<new public="1" set="method" line="24"><f a="parent">
	<c path="lime.media.AudioSource"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.media.AudioBuffer</e></m>
		</meta>
	</class>
	<class path="lime._backend.flash.FlashMouse" params="" file="/home/joshua/Development/Haxe/lime/lime/_backend/flash/FlashMouse.hx">
		<__cursor static="1"><e path="lime.ui.MouseCursor"/></__cursor>
		<__hidden static="1"><x path="Bool"/></__hidden>
		<hide public="1" set="method" line="17" static="1"><f a=""><x path="Void"/></f></hide>
		<show public="1" set="method" line="30" static="1"><f a=""><x path="Void"/></f></show>
		<warp public="1" set="method" line="43" static="1"><f a="x:y:window">
	<x path="Int"/>
	<x path="Int"/>
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></warp>
		<get_cursor public="1" set="method" line="57" static="1"><f a=""><e path="lime.ui.MouseCursor"/></f></get_cursor>
		<set_cursor public="1" set="method" line="65" static="1"><f a="value">
	<e path="lime.ui.MouseCursor"/>
	<e path="lime.ui.MouseCursor"/>
</f></set_cursor>
		<get_lock public="1" set="method" line="99" static="1"><f a=""><x path="Bool"/></f></get_lock>
		<set_lock public="1" set="method" line="106" static="1"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_lock>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime._backend.flash.FlashRenderer" params="" file="/home/joshua/Development/Haxe/lime/lime/_backend/flash/FlashRenderer.hx">
		<parent><c path="lime.graphics.Renderer"/></parent>
		<create public="1" set="method" line="25"><f a=""><x path="Void"/></f></create>
		<flip public="1" set="method" line="33"><f a=""><x path="Void"/></f></flip>
		<readPixels public="1" set="method" line="40"><f a="rect">
	<c path="lime.math.Rectangle"/>
	<c path="lime.graphics.Image"/>
</f></readPixels>
		<render public="1" set="method" line="73"><f a=""><x path="Void"/></f></render>
		<new public="1" set="method" line="18"><f a="parent">
	<c path="lime.graphics.Renderer"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime._backend.flash.FlashWindow" params="" file="/home/joshua/Development/Haxe/lime/lime/_backend/flash/FlashWindow.hx">
		<windowID expr="0" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</windowID>
		<cacheMouseX><x path="Float"/></cacheMouseX>
		<cacheMouseY><x path="Float"/></cacheMouseY>
		<currentTouches expr="new Map&lt;Int,Touch&gt;()">
			<x path="Map">
				<x path="Int"/>
				<c path="lime.ui.Touch"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Touch>()]]></e></m></meta>
		</currentTouches>
		<enableTextEvents><x path="Bool"/></enableTextEvents>
		<mouseLeft><x path="Bool"/></mouseLeft>
		<parent><c path="lime.ui.Window"/></parent>
		<unusedTouchesPool expr="new List&lt;Touch&gt;()">
			<c path="List"><c path="lime.ui.Touch"/></c>
			<meta><m n=":value"><e><![CDATA[new List<Touch>()]]></e></m></meta>
		</unusedTouchesPool>
		<alert public="1" set="method" line="50"><f a="message:title">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></alert>
		<close public="1" set="method" line="57"><f a=""><x path="Void"/></f></close>
		<convertKeyCode set="method" line="64"><f a="keyCode">
	<x path="Int"/>
	<x path="lime.ui.KeyCode"/>
</f></convertKeyCode>
		<create public="1" set="method" line="139"><f a="application">
	<c path="lime.app.Application"/>
	<x path="Void"/>
</f></create>
		<focus public="1" set="method" line="173"><f a=""><x path="Void"/></f></focus>
		<getDisplay public="1" set="method" line="180"><f a=""><c path="lime.system.Display"/></f></getDisplay>
		<getDisplayMode public="1" set="method" line="187"><f a=""><c path="lime.system.DisplayMode"/></f></getDisplayMode>
		<handleKeyEvent set="method" line="194"><f a="event">
	<t path="flash.events.KeyboardEvent"/>
	<x path="Void"/>
</f></handleKeyEvent>
		<handleMouseEvent set="method" line="218"><f a="event">
	<t path="flash.events.MouseEvent"/>
	<x path="Void"/>
</f></handleMouseEvent>
		<handleTouchEvent set="method" line="267"><f a="event">
	<t path="flash.events.TouchEvent"/>
	<x path="Void"/>
</f></handleTouchEvent>
		<handleWindowEvent set="method" line="363"><f a="event">
	<t path="flash.events.Event"/>
	<x path="Void"/>
</f></handleWindowEvent>
		<setDisplayMode public="1" set="method" line="402"><f a="value">
	<c path="lime.system.DisplayMode"/>
	<c path="lime.system.DisplayMode"/>
</f></setDisplayMode>
		<getEnableTextEvents public="1" set="method" line="409"><f a=""><x path="Bool"/></f></getEnableTextEvents>
		<move public="1" set="method" line="416"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></move>
		<resize public="1" set="method" line="423"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<setBorderless public="1" set="method" line="430"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setBorderless>
		<setEnableTextEvents public="1" set="method" line="437"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setEnableTextEvents>
		<setFullscreen public="1" set="method" line="444"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setFullscreen>
		<setIcon public="1" set="method" line="452"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></setIcon>
		<setMaximized public="1" set="method" line="459"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setMaximized>
		<setMinimized public="1" set="method" line="466"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setMinimized>
		<setResizable public="1" set="method" line="473"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setResizable>
		<setTitle public="1" set="method" line="480"><f a="value">
	<c path="String"/>
	<c path="String"/>
</f></setTitle>
		<new public="1" set="method" line="40"><f a="parent">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.app.Application</e></m>
			<m n=":access"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<typedef path="lime._backend.native.Float32" params="" file="/home/joshua/Development/Haxe/lime/lime/_backend/native/NativeCFFI.hx" module="lime._backend.native.NativeCFFI"><x path="Float"/></typedef>
	<class path="lime._backend.native.NativeCFFI" params="" file="/home/joshua/Development/Haxe/lime/lime/_backend/native/NativeCFFI.hx"><meta>
	<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
	<m n=":noDebug"/>
	<m n=":build"><e>lime.system.CFFI.build()</e></m>
</meta></class>
	<class path="lime._macros.AssetsMacro" params="" file="/home/joshua/Development/Haxe/lime/lime/_macros/AssetsMacro.hx"><cacheVersion public="1" set="method" static="1"><f a=""><d/></f></cacheVersion></class>
	<class path="lime.app.IModule" params="" file="/home/joshua/Development/Haxe/lime/lime/app/IModule.hx" interface="1">
		<addRenderer public="1" set="method">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</addRenderer>
		<addWindow public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</addWindow>
		<registerModule public="1" set="method">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</registerModule>
		<removeRenderer public="1" set="method">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</removeRenderer>
		<removeWindow public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</removeWindow>
		<setPreloader public="1" set="method">
			<f a="preloader">
				<c path="lime.app.Preloader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</setPreloader>
		<unregisterModule public="1" set="method">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</unregisterModule>
	</class>
	<class path="lime.app.Module" params="" file="/home/joshua/Development/Haxe/lime/lime/app/Module.hx">
		<implements path="lime.app.IModule"/>
		<onExit public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
			<haxe_doc>* Exit events are dispatched when the application is exiting</haxe_doc>
		</onExit>
		<__application>
			<c path="lime.app.Application"/>
			<meta><m n=":noCompletion"/></meta>
		</__application>
		<__preloader>
			<c path="lime.app.Preloader"/>
			<meta><m n=":noCompletion"/></meta>
		</__preloader>
		<__renderers>
			<c path="Array"><c path="lime.graphics.Renderer"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__renderers>
		<__windows>
			<c path="Array"><c path="lime.ui.Window"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__windows>
		<addRenderer public="1" set="method" line="44">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</addRenderer>
		<addWindow public="1" set="method" line="55">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</addWindow>
		<registerModule public="1" set="method" line="92">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</registerModule>
		<removeRenderer public="1" set="method" line="123">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</removeRenderer>
		<removeWindow public="1" set="method" line="134">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</removeWindow>
		<setPreloader public="1" set="method" line="145">
			<f a="preloader">
				<c path="lime.app.Preloader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</setPreloader>
		<unregisterModule public="1" set="method" line="170">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</unregisterModule>
		<onGamepadAxisMove public="1" set="method" line="193">
			<f a="gamepad:axis:value">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadAxis"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a gamepad axis move event is fired
	 * @param	gamepad	The current gamepad
	 * @param	axis	The axis that was moved
	 * @param	value	The axis value (between 0 and 1)</haxe_doc>
		</onGamepadAxisMove>
		<onGamepadButtonDown public="1" set="method" line="201">
			<f a="gamepad:button">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a gamepad button down event is fired
	 * @param	gamepad	The current gamepad
	 * @param	button	The button that was pressed</haxe_doc>
		</onGamepadButtonDown>
		<onGamepadButtonUp public="1" set="method" line="209">
			<f a="gamepad:button">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a gamepad button up event is fired
	 * @param	gamepad	The current gamepad
	 * @param	button	The button that was released</haxe_doc>
		</onGamepadButtonUp>
		<onGamepadConnect public="1" set="method" line="216">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a gamepad is connected
	 * @param	gamepad	The gamepad that was connected</haxe_doc>
		</onGamepadConnect>
		<onGamepadDisconnect public="1" set="method" line="223">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a gamepad is disconnected
	 * @param	gamepad	The gamepad that was disconnected</haxe_doc>
		</onGamepadDisconnect>
		<onJoystickAxisMove public="1" set="method" line="232">
			<f a="joystick:axis:value">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a joystick axis move event is fired
	 * @param	joystick	The current joystick
	 * @param	axis	The axis that was moved
	 * @param	value	The axis value (between 0 and 1)</haxe_doc>
		</onJoystickAxisMove>
		<onJoystickButtonDown public="1" set="method" line="240">
			<f a="joystick:button">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a joystick button down event is fired
	 * @param	joystick	The current joystick
	 * @param	button	The button that was pressed</haxe_doc>
		</onJoystickButtonDown>
		<onJoystickButtonUp public="1" set="method" line="248">
			<f a="joystick:button">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a joystick button up event is fired
	 * @param	joystick	The current joystick
	 * @param	button	The button that was released</haxe_doc>
		</onJoystickButtonUp>
		<onJoystickConnect public="1" set="method" line="255">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a joystick is connected
	 * @param	joystick	The joystick that was connected</haxe_doc>
		</onJoystickConnect>
		<onJoystickDisconnect public="1" set="method" line="262">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a joystick is disconnected
	 * @param	joystick	The joystick that was disconnected</haxe_doc>
		</onJoystickDisconnect>
		<onJoystickHatMove public="1" set="method" line="271">
			<f a="joystick:hat:position">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="lime.ui.JoystickHatPosition"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a joystick hat move event is fired
	 * @param	joystick	The current joystick
	 * @param	hat	The hat that was moved
	 * @param	position	The current hat position</haxe_doc>
		</onJoystickHatMove>
		<onJoystickTrackballMove public="1" set="method" line="281">
			<f a="joystick:trackball:x:y">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a joystick axis move event is fired
	 * @param	joystick	The current joystick
	 * @param	trackball	The trackball that was moved
	 * @param	x	The x movement of the trackball (between 0 and 1)
	 * @param	y	The y movement of the trackball (between 0 and 1)</haxe_doc>
		</onJoystickTrackballMove>
		<onKeyDown public="1" set="method" line="290">
			<f a="window:keyCode:modifier">
				<c path="lime.ui.Window"/>
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyModifier"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a key down event is fired
	 * @param	window	The window dispatching the event
	 * @param	keyCode	The code of the key that was pressed
	 * @param	modifier	The modifier of the key that was pressed</haxe_doc>
		</onKeyDown>
		<onKeyUp public="1" set="method" line="299">
			<f a="window:keyCode:modifier">
				<c path="lime.ui.Window"/>
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyModifier"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a key up event is fired
	 * @param	window	The window dispatching the event
	 * @param	keyCode	The code of the key that was released
	 * @param	modifier	The modifier of the key that was released</haxe_doc>
		</onKeyUp>
		<onModuleExit public="1" set="method" line="305">
			<f a="code">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when the module is exiting</haxe_doc>
		</onModuleExit>
		<onMouseDown public="1" set="method" line="315">
			<f a="window:x:y:button">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a mouse down event is fired
	 * @param	window	The window dispatching the event
	 * @param	x	The current x coordinate of the mouse
	 * @param	y	The current y coordinate of the mouse
	 * @param	button	The ID of the mouse button that was pressed</haxe_doc>
		</onMouseDown>
		<onMouseMove public="1" set="method" line="325">
			<f a="window:x:y">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a mouse move event is fired
	 * @param	window	The window dispatching the event
	 * @param	x	The current x coordinate of the mouse
	 * @param	y	The current y coordinate of the mouse
	 * @param	button	The ID of the mouse button that was pressed</haxe_doc>
		</onMouseMove>
		<onMouseMoveRelative public="1" set="method" line="335">
			<f a="window:x:y">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a mouse move relative event is fired
	 * @param	window	The window dispatching the event
	 * @param	x	The x movement of the mouse
	 * @param	y	The y movement of the mouse
	 * @param	button	The ID of the mouse button that was pressed</haxe_doc>
		</onMouseMoveRelative>
		<onMouseUp public="1" set="method" line="345">
			<f a="window:x:y:button">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a mouse up event is fired
	 * @param	window	The window dispatching the event
	 * @param	x	The current x coordinate of the mouse
	 * @param	y	The current y coordinate of the mouse
	 * @param	button	The ID of the button that was released</haxe_doc>
		</onMouseUp>
		<onMouseWheel public="1" set="method" line="354">
			<f a="window:deltaX:deltaY">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a mouse wheel event is fired
	 * @param	window	The window dispatching the event
	 * @param	deltaX	The amount of horizontal scrolling (if applicable)
	 * @param	deltaY	The amount of vertical scrolling (if applicable)</haxe_doc>
		</onMouseWheel>
		<onPreloadComplete public="1" set="method" line="360">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Called when a preload complete event is fired</haxe_doc>
		</onPreloadComplete>
		<onPreloadProgress public="1" set="method" line="368">
			<f a="loaded:total">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a preload progress event is fired
	 * @param	loaded	The number of items that are loaded
	 * @param	total	The total number of items will be loaded</haxe_doc>
		</onPreloadProgress>
		<onRenderContextLost public="1" set="method" line="375">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a render context is lost
	 * @param	renderer	The renderer dispatching the event</haxe_doc>
		</onRenderContextLost>
		<onRenderContextRestored public="1" set="method" line="383">
			<f a="renderer:context">
				<c path="lime.graphics.Renderer"/>
				<e path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a render context is restored
	 * @param	renderer	The renderer dispatching the event
	 * @param	context	The current render context</haxe_doc>
		</onRenderContextRestored>
		<onTextEdit public="1" set="method" line="393">
			<f a="window:text:start:length">
				<c path="lime.ui.Window"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a text edit event is fired
	 * @param	window	The window dispatching the event
	 * @param	text	The current replacement text
	 * @param	start	The starting index for the edit
	 * @param	length	The length of the edit</haxe_doc>
		</onTextEdit>
		<onTextInput public="1" set="method" line="401">
			<f a="window:text">
				<c path="lime.ui.Window"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a text input event is fired
	 * @param	window	The window dispatching the event
	 * @param	text	The current input text</haxe_doc>
		</onTextInput>
		<onTouchCancel public="1" set="method" line="408">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a touch cancel event is fired
	 * @param	touch	The current touch object</haxe_doc>
		</onTouchCancel>
		<onTouchEnd public="1" set="method" line="415">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a touch end event is fired
	 * @param	touch	The current touch object</haxe_doc>
		</onTouchEnd>
		<onTouchMove public="1" set="method" line="422">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a touch move event is fired
	 * @param	touch	The current touch object</haxe_doc>
		</onTouchMove>
		<onTouchStart public="1" set="method" line="429">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a touch start event is fired
	 * @param	touch	The current touch object</haxe_doc>
		</onTouchStart>
		<onWindowActivate public="1" set="method" line="436">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window activate event is fired
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowActivate>
		<onWindowClose public="1" set="method" line="443">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window close event is fired
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowClose>
		<onWindowCreate public="1" set="method" line="450">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window create event is fired
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowCreate>
		<onWindowDeactivate public="1" set="method" line="457">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window deactivate event is fired
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowDeactivate>
		<onWindowDropFile public="1" set="method" line="464">
			<f a="window:file">
				<c path="lime.ui.Window"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window drop file event is fired
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowDropFile>
		<onWindowEnter public="1" set="method" line="471">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window enter event is fired
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowEnter>
		<onWindowFocusIn public="1" set="method" line="478">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window focus in event is fired
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowFocusIn>
		<onWindowFocusOut public="1" set="method" line="485">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window focus out event is fired
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowFocusOut>
		<onWindowFullscreen public="1" set="method" line="492">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window enters fullscreen
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowFullscreen>
		<onWindowLeave public="1" set="method" line="499">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window leave event is fired
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowLeave>
		<onWindowMove public="1" set="method" line="508">
			<f a="window:x:y">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window move event is fired
	 * @param	window	The window dispatching the event
	 * @param	x	The x position of the window in desktop coordinates
	 * @param	y	The y position of the window in desktop coordinates</haxe_doc>
		</onWindowMove>
		<onWindowMinimize public="1" set="method" line="515">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window is minimized
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowMinimize>
		<onWindowResize public="1" set="method" line="524">
			<f a="window:width:height">
				<c path="lime.ui.Window"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window resize event is fired
	 * @param	window	The window dispatching the event
	 * @param	width	The width of the window
	 * @param	height	The height of the window</haxe_doc>
		</onWindowResize>
		<onWindowRestore public="1" set="method" line="531">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window is restored from being minimized or fullscreen
	 * @param	window	The window dispatching the event</haxe_doc>
		</onWindowRestore>
		<render public="1" set="method" line="538">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a render event is fired
	 * @param	renderer	The renderer dispatching the event</haxe_doc>
		</render>
		<update public="1" set="method" line="545">
			<f a="deltaTime">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when an update event is fired
	 * @param	deltaTime	The amount of time in milliseconds that has elapsed since the last update</haxe_doc>
		</update>
		<__onGamepadConnect set="method" line="548">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onGamepadConnect>
		<__onJoystickConnect set="method" line="560">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onJoystickConnect>
		<__onWindowClose set="method" line="574">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onWindowClose>
		<new public="1" set="method" line="36"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app.Application" params="" file="/home/joshua/Development/Haxe/lime/lime/app/Application.hx">
		<extends path="lime.app.Module"/>
		<current public="1" set="null" static="1">
			<c path="lime.app.Application"/>
			<haxe_doc>* The current Application instance that is executing</haxe_doc>
		</current>
		<config public="1" set="null">
			<t path="lime.app.Config"/>
			<haxe_doc>* Configuration values for the application, such as window options or a package name</haxe_doc>
		</config>
		<frameRate public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>* The current frame rate (measured in frames-per-second) of the application.
	 *
	 * On some platforms, a frame rate of 60 or greater may imply vsync, which will
	 * perform more quickly on displays with a higher refresh rate</haxe_doc>
		</frameRate>
		<modules public="1" set="null">
			<c path="Array"><c path="lime.app.IModule"/></c>
			<haxe_doc>* A list of currently attached Module instances</haxe_doc>
		</modules>
		<preloader public="1" get="accessor" set="null">
			<c path="lime.app.Preloader"/>
			<haxe_doc>* The Preloader for the current Application</haxe_doc>
		</preloader>
		<onUpdate public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
			<haxe_doc>* Update events are dispatched each frame (usually just before rendering)</haxe_doc>
		</onUpdate>
		<renderer public="1" get="accessor" set="null">
			<c path="lime.graphics.Renderer"/>
			<haxe_doc>* The Renderer associated with this Application, or the first Renderer
	 * if there are multiple Renderer instances</haxe_doc>
		</renderer>
		<renderers public="1" get="accessor" set="null">
			<c path="Array"><c path="lime.graphics.Renderer"/></c>
			<haxe_doc>* A list of Renderer instances associated with this Application</haxe_doc>
		</renderers>
		<window public="1" get="accessor" set="null">
			<c path="lime.ui.Window"/>
			<haxe_doc>* The Window associated with this Application, or the first Window
	 * if there are multiple Windows active</haxe_doc>
		</window>
		<windows public="1" get="accessor" set="null">
			<c path="Array"><c path="lime.ui.Window"/></c>
			<haxe_doc>* A list of active Window instances associated with this Application</haxe_doc>
		</windows>
		<backend>
			<t path="lime.app._Application.ApplicationBackend"/>
			<meta><m n=":noCompletion"/></meta>
		</backend>
		<windowByID>
			<x path="Map">
				<x path="Int"/>
				<c path="lime.ui.Window"/>
			</x>
			<meta><m n=":noCompletion"/></meta>
		</windowByID>
		<addModule public="1" set="method" line="117">
			<f a="module">
				<c path="lime.app.IModule"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adds a new module to the Application
	 * @param	module	A module to add</haxe_doc>
		</addModule>
		<addRenderer public="1" set="method" line="152" override="1">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adds a new Renderer to the Application. By default, this is
	 * called automatically by create()
	 * @param	renderer	A Renderer object to add</haxe_doc>
		</addRenderer>
		<create public="1" set="method" line="171">
			<f a="config">
				<t path="lime.app.Config"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Initializes the Application, using the settings defined in
	 * the config instance. By default, this is called automatically
	 * when building the project using Lime's command-line tools
	 * @param	config	A Config object</haxe_doc>
		</create>
		<createWindow public="1" set="method" line="222">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adds a new Window to the Application. By default, this is
	 * called automatically by create()
	 * @param	window	A Window object to add</haxe_doc>
		</createWindow>
		<exec public="1" set="method" line="254">
			<f a=""><x path="Int"/></f>
			<haxe_doc>* Execute the Application. On native platforms, this method
	 * blocks until the application is finished running. On other 
	 * platforms, it will return immediately
	 * @return An exit code, 0 if there was no error</haxe_doc>
		</exec>
		<onModuleExit public="1" set="method" line="263" override="1"><f a="code">
	<x path="Int"/>
	<x path="Void"/>
</f></onModuleExit>
		<onWindowClose public="1" set="method" line="270" override="1"><f a="window">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></onWindowClose>
		<removeModule public="1" set="method" line="281">
			<f a="module">
				<c path="lime.app.IModule"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Removes a module from the Application
	 * @param	module	A module to remove</haxe_doc>
		</removeModule>
		<removeWindow public="1" set="method" line="293" override="1">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</removeWindow>
		<setPreloader public="1" set="method" line="324" override="1">
			<f a="preloader">
				<c path="lime.app.Preloader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</setPreloader>
		<get_frameRate get="inline" set="null" line="344">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_frameRate>
		<set_frameRate get="inline" set="null" line="351">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_frameRate>
		<get_preloader get="inline" set="null" line="358">
			<f a=""><c path="lime.app.Preloader"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_preloader>
		<get_renderer get="inline" set="null" line="365">
			<f a=""><c path="lime.graphics.Renderer"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_renderer>
		<get_renderers get="inline" set="null" line="372">
			<f a=""><c path="Array"><c path="lime.graphics.Renderer"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_renderers>
		<get_window get="inline" set="null" line="379">
			<f a=""><c path="lime.ui.Window"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_window>
		<get_windows get="inline" set="null" line="386">
			<f a=""><c path="Array"><c path="lime.ui.Window"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_windows>
		<new public="1" set="method" line="93">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Creates a new Application instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.app._Application.ApplicationBackend" params="" file="/home/joshua/Development/Haxe/lime/lime/app/Application.hx" private="1" module="lime.app.Application">
		<c path="lime._backend.flash.FlashApplication"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<typedef path="lime.app.Config" params="" file="/home/joshua/Development/Haxe/lime/lime/app/Config.hx"><a>
	<windows>
		<t path="Null"><c path="Array"><t path="lime.app.WindowConfig"/></c></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc>* A set of configuration objects for each initial application Window</haxe_doc>
	</windows>
	<version>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc><![CDATA[* A version number
	 *
	 * The version number is what normally corresponds to the user-facing
	 * version for an application, such as "1.0.0" or "12.2.5". This is 
	 * distinct from the build number. Many application stores expect the
	 * version number to include three segments.
	 *
	 * In the default generated config for Lime applications, this value 
	 * corresponds to the `<meta title="" />` attribute in XML]]></haxe_doc>
	</version>
	<rootPath>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc>* A root path for application assets
	 *
	 * The default value is an empty string, but this can be used when
	 * bundled application assets are located in a different directory.
	 *
	 * This value is not exposed in Lime project files, but is available
	 * using the `lime.embed` function in HTML5 project embeds, and may
	 * behave similarly to the Flash "base" embed parameter</haxe_doc>
	</rootPath>
	<packageName>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc><![CDATA[* A package name, this usually corresponds to the unique ID used
	 * in application stores to identify the current application
	 *
	 * In the default generated config for Lime applications, this value 
	 * corresponds to the `<meta package="" />` attribute in XML]]></haxe_doc>
	</packageName>
	<orientation>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc><![CDATA[* An application orientation
	 *
	 * Expected values include "portrait", "landscape" or an empty string
	 * for all orientations.
	 *
	 * In the default generated config for Lime applications, this value 
	 * corresponds to the `<window orientation="" />` attribute in XML]]></haxe_doc>
	</orientation>
	<name>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc><![CDATA[* An application name, used as the default Window title
	 *
	 * In the default generated config for Lime applications, this value 
	 * corresponds to the `<meta title="" />` attribute in XML]]></haxe_doc>
	</name>
	<fps>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc><![CDATA[* A requested frame rate
	 *
	 * In the default generated config for Lime applications, the default value
	 * is 30 FPS on many platforms, or vsync for HTML5. It can be overriden in 
	 * XML project files using the `<window fps="" />` attribute]]></haxe_doc>
	</fps>
	<file>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc><![CDATA[* An application file name, without a file extension
	 *
	 * In the default generated config for Lime applications, this value 
	 * corresponds to the `<app file="" />` attribute in XML]]></haxe_doc>
	</file>
	<company>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc><![CDATA[* A company name
	 *
	 * In the default generated config for Lime applications, this value 
	 * corresponds to the `<meta company="" />` attribute in XML]]></haxe_doc>
	</company>
	<build>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
		<haxe_doc><![CDATA[* A build number
	 *
	 * The build number is a unique, integer-based value which increases
	 * upon each build or release of an application. This is distinct from
	 * the version number.
	 *
	 * In the default generated config for Lime applications, this is often
	 * updated automatically, or can be overriden in XML project files using
	 * the `<app build="" />` attribute]]></haxe_doc>
	</build>
</a></typedef>
	<typedef path="lime.app.WindowConfig" params="" file="/home/joshua/Development/Haxe/lime/lime/app/Config.hx" module="lime.app.Config"><a>
	<y>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
	</y>
	<x>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
	</x>
	<width>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
	</width>
	<vsync>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</vsync>
	<title>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
	</title>
	<stencilBuffer>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</stencilBuffer>
	<resizable>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</resizable>
	<parameters>
		<t path="Null"><d/></t>
		<meta><m n=":optional"/></meta>
	</parameters>
	<minimized>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</minimized>
	<maximized>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</maximized>
	<hidden>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</hidden>
	<height>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
	</height>
	<hardware>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</hardware>
	<fullscreen>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</fullscreen>
	<display>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
	</display>
	<depthBuffer>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</depthBuffer>
	<colorDepth>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
	</colorDepth>
	<borderless>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</borderless>
	<background>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
	</background>
	<antialiasing>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
	</antialiasing>
	<alwaysOnTop>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</alwaysOnTop>
	<allowHighDPI>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</allowHighDPI>
</a></typedef>
	<class path="lime.app.Event" params="T" file="/home/joshua/Development/Haxe/lime/lime/app/Event.hx">
		<canceled public="1" set="null"><x path="Bool"/></canceled>
		<__listeners public="1">
			<c path="Array"><c path="lime.app.Event.T"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__listeners>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities><c path="Array"><x path="Int"/></c></__priorities>
		<add public="1" set="method" line="43">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app.Event.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
		</add>
		<cancel public="1" set="method" line="219"><f a=""><x path="Void"/></f></cancel>
		<dispatch public="1"><d/></dispatch>
		<has public="1" set="method" line="257"><f a="listener">
	<c path="lime.app.Event.T"/>
	<x path="Bool"/>
</f></has>
		<remove public="1" set="method" line="272"><f a="listener">
	<c path="lime.app.Event.T"/>
	<x path="Void"/>
</f></remove>
		<new public="1" set="method" line="31"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app.Future" params="T" file="/home/joshua/Development/Haxe/lime/lime/app/Future.hx">
		<ofEvents public="1" params="T" set="method" line="61" static="1">
			<f a="onComplete:?onError:?onProgress" v=":null:null">
				<c path="lime.app.Event"><f a="">
	<c path="ofEvents.T"/>
	<x path="Void"/>
</f></c>
				<c path="lime.app.Event"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
				<c path="lime.app.Event"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
				<c path="lime.app.Future"><c path="ofEvents.T"/></c>
			</f>
			<meta><m n=":value"><e>{ onProgress : null, onError : null }</e></m></meta>
		</ofEvents>
		<withError public="1" set="method" line="243" static="1"><f a="error">
	<d/>
	<c path="lime.app.Future"><d/></c>
</f></withError>
		<withValue public="1" params="T" set="method" line="253" static="1"><f a="value">
	<c path="withValue.T"/>
	<c path="lime.app.Future"><c path="withValue.T"/></c>
</f></withValue>
		<error public="1" set="null"><d/></error>
		<isComplete public="1" set="null"><x path="Bool"/></isComplete>
		<isError public="1" set="null"><x path="Bool"/></isError>
		<value public="1" set="null"><c path="lime.app.Future.T"/></value>
		<__completeListeners><c path="Array"><f a="">
	<c path="lime.app.Future.T"/>
	<x path="Void"/>
</f></c></__completeListeners>
		<__errorListeners><c path="Array"><f a="">
	<d/>
	<x path="Void"/>
</f></c></__errorListeners>
		<__progressListeners><c path="Array"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></__progressListeners>
		<onComplete public="1" set="method" line="74"><f a="listener">
	<f a="">
		<c path="lime.app.Future.T"/>
		<x path="Void"/>
	</f>
	<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
</f></onComplete>
		<onError public="1" set="method" line="101"><f a="listener">
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
</f></onError>
		<onProgress public="1" set="method" line="128"><f a="listener">
	<f a=":">
		<x path="Int"/>
		<x path="Int"/>
		<x path="Void"/>
	</f>
	<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
</f></onProgress>
		<ready public="1" set="method" line="147">
			<f a="?waitTime" v="-1">
				<x path="Int"/>
				<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
			</f>
			<meta><m n=":value"><e>{ waitTime : -1 }</e></m></meta>
		</ready>
		<result public="1" set="method" line="192">
			<f a="?waitTime" v="-1">
				<x path="Int"/>
				<t path="Null"><c path="lime.app.Future.T"/></t>
			</f>
			<meta><m n=":value"><e>{ waitTime : -1 }</e></m></meta>
		</result>
		<then public="1" params="U" set="method" line="209"><f a="next">
	<f a="">
		<c path="lime.app.Future.T"/>
		<c path="lime.app.Future"><c path="then.U"/></c>
	</f>
	<c path="lime.app.Future"><c path="then.U"/></c>
</f></then>
		<new public="1" set="method" line="29">
			<f a="?work:?async" v="null:false">
				<f a=""><c path="lime.app.Future.T"/></f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ async : false, work : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":allow"><e>lime.app.Promise</e></m>
		</meta>
	</class>
	<class path="lime.app._Future.FutureWork" params="" file="/home/joshua/Development/Haxe/lime/lime/app/Future.hx" private="1" module="lime.app.Future">
		<threadPool static="1"><c path="lime.system.ThreadPool"/></threadPool>
		<queue public="1" set="method" line="278" static="1">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</queue>
		<threadPool_doWork set="method" line="301" static="1"><f a="state">
	<d/>
	<x path="Void"/>
</f></threadPool_doWork>
		<threadPool_onComplete set="method" line="317" static="1"><f a="state">
	<d/>
	<x path="Void"/>
</f></threadPool_onComplete>
		<threadPool_onError set="method" line="324" static="1"><f a="state">
	<d/>
	<x path="Void"/>
</f></threadPool_onError>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="lime.app.Preloader" params="" file="/home/joshua/Development/Haxe/lime/lime/app/Preloader.hx">
		<extends path="openfl.display.Sprite"/>
		<complete public="1" set="null"><x path="Bool"/></complete>
		<onComplete public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onComplete>
		<onProgress public="1" expr="new Event&lt;Int -&gt; Int&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Int>()]]></e></m></meta>
		</onProgress>
		<bytesLoaded><x path="Int"/></bytesLoaded>
		<bytesLoadedCache expr="new Map&lt;AssetLibrary,Int&gt;()">
			<x path="Map">
				<c path="lime.utils.AssetLibrary"/>
				<x path="Int"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<AssetLibrary,Int>()]]></e></m></meta>
		</bytesLoadedCache>
		<bytesLoadedCache2 expr="new Map&lt;String,Int&gt;()">
			<x path="Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m></meta>
		</bytesLoadedCache2>
		<bytesTotal><x path="Int"/></bytesTotal>
		<bytesTotalCache expr="new Map&lt;String,Int&gt;()">
			<x path="Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m></meta>
		</bytesTotalCache>
		<initLibraryNames><x path="Bool"/></initLibraryNames>
		<libraries><c path="Array"><c path="lime.utils.AssetLibrary"/></c></libraries>
		<libraryNames><c path="Array"><c path="String"/></c></libraryNames>
		<loadedLibraries><x path="Int"/></loadedLibraries>
		<loadedStage><x path="Bool"/></loadedStage>
		<preloadComplete><x path="Bool"/></preloadComplete>
		<preloadStarted><x path="Bool"/></preloadStarted>
		<simulateProgress><x path="Bool"/></simulateProgress>
		<addLibrary public="1" set="method" line="108"><f a="library">
	<c path="lime.utils.AssetLibrary"/>
	<x path="Void"/>
</f></addLibrary>
		<addLibraryName public="1" set="method" line="115"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></addLibraryName>
		<create public="1" set="method" line="126"><f a="config">
	<t path="lime.app.Config"/>
	<x path="Void"/>
</f></create>
		<load public="1" set="method" line="140"><f a=""><x path="Void"/></f></load>
		<loadedAssetLibrary set="method" line="212">
			<f a="?name" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ name : null }</e></m></meta>
		</loadedAssetLibrary>
		<start set="method" line="236"><f a=""><x path="Void"/></f></start>
		<update set="method" line="255"><f a="loaded:total">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></update>
		<updateProgress set="method" line="262"><f a=""><x path="Void"/></f></updateProgress>
		<current_onEnter set="method" line="361"><f a="event">
	<t path="flash.events.Event"/>
	<x path="Void"/>
</f></current_onEnter>
		<loaderInfo_onComplete set="method" line="393"><f a="event">
	<t path="flash.events.Event"/>
	<x path="Void"/>
</f></loaderInfo_onComplete>
		<loaderInfo_onInit set="method" line="410"><f a="event">
	<t path="flash.events.Event"/>
	<x path="Void"/>
</f></loaderInfo_onInit>
		<loaderInfo_onProgress set="method" line="428"><f a="event">
	<t path="flash.events.ProgressEvent"/>
	<x path="Void"/>
</f></loaderInfo_onProgress>
		<new public="1" set="method" line="58"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":access"><e>lime.utils.AssetLibrary</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app.Promise" params="T" file="/home/joshua/Development/Haxe/lime/lime/app/Promise.hx">
		<future public="1" set="null"><c path="lime.app.Future"><c path="lime.app.Promise.T"/></c></future>
		<isComplete public="1" get="accessor" set="null"><x path="Bool"/></isComplete>
		<isError public="1" get="accessor" set="null"><x path="Bool"/></isError>
		<complete public="1" set="method" line="28"><f a="data">
	<c path="lime.app.Promise.T"/>
	<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
</f></complete>
		<completeWith public="1" set="method" line="54"><f a="future">
	<c path="lime.app.Future"><c path="lime.app.Promise.T"/></c>
	<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
</f></completeWith>
		<error public="1" set="method" line="66"><f a="msg">
	<d/>
	<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
</f></error>
		<progress public="1" set="method" line="92"><f a="progress:total">
	<x path="Int"/>
	<x path="Int"/>
	<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
</f></progress>
		<get_isComplete set="method" line="120"><f a=""><x path="Bool"/></f></get_isComplete>
		<get_isError set="method" line="127"><f a=""><x path="Bool"/></f></get_isError>
		<new public="1" set="method" line="21"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":allow"><e>lime.app.Future</e></m>
			<m n=":generic"/>
		</meta>
	</class>
	<typedef path="lime.graphics.CairoRenderContext" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/CairoRenderContext.hx"><c path="lime.graphics.cairo.Cairo"/></typedef>
	<class path="lime.graphics.CanvasRenderContext" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/CanvasRenderContext.hx">
		<backingStorePixelRatio public="1" set="null"><x path="Float"/></backingStorePixelRatio>
		<canvas public="1"><d/></canvas>
		<fillStyle public="1"><d/></fillStyle>
		<font public="1"><c path="String"/></font>
		<globalAlpha public="1"><x path="Float"/></globalAlpha>
		<globalCompositeOperation public="1"><c path="String"/></globalCompositeOperation>
		<imageSmoothingEnabled public="1"><x path="Bool"/></imageSmoothingEnabled>
		<lineCap public="1"><c path="String"/></lineCap>
		<lineDash public="1"><c path="Array"><d/></c></lineDash>
		<lineDashOffset public="1"><x path="Float"/></lineDashOffset>
		<lineJoin public="1"><c path="String"/></lineJoin>
		<lineWidth public="1"><x path="Float"/></lineWidth>
		<miterLimit public="1"><x path="Float"/></miterLimit>
		<shadowBlur public="1"><x path="Float"/></shadowBlur>
		<shadowColor public="1"><c path="String"/></shadowColor>
		<shadowOffsetX public="1"><x path="Float"/></shadowOffsetX>
		<shadowOffsetY public="1"><x path="Float"/></shadowOffsetY>
		<strokeStyle public="1"><d/></strokeStyle>
		<textAlign public="1"><c path="String"/></textAlign>
		<textBaseline public="1"><c path="String"/></textBaseline>
		<arc public="1" set="method" line="39"><f a="x:y:radius:startAngle:endAngle:anticlockwise">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></arc>
		<arcTo public="1" set="method" line="40"><f a="x1:y1:x2:y2:radius">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></arcTo>
		<beginPath public="1" set="method" line="41"><f a=""><x path="Void"/></f></beginPath>
		<bezierCurveTo public="1" set="method" line="42"><f a="cp1x:cp1y:cp2x:cp2y:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bezierCurveTo>
		<clearRect public="1" set="method" line="43"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearRect>
		<clearShadow public="1" set="method" line="44"><f a=""><x path="Void"/></f></clearShadow>
		<clip public="1" set="method" line="45"><f a=""><x path="Void"/></f></clip>
		<closePath public="1" set="method" line="46"><f a=""><x path="Void"/></f></closePath>
		<createDynamicImageData public="1" set="method" line="48">
			<f a="sw:sh">
				<x path="Float"/>
				<x path="Float"/>
				<d/>
			</f>
			<overloads><createDynamicImageData public="1" set="method"><f a="dynamicImageData">
	<d/>
	<d/>
</f></createDynamicImageData></overloads>
		</createDynamicImageData>
		<createLinearGradient public="1" set="method" line="49"><f a="x0:y0:x1:y1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<d/>
</f></createLinearGradient>
		<createPattern public="1" set="method" line="51">
			<f a="image:repetitionType">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<overloads><createPattern public="1" set="method"><f a="canvas:repetitionType">
	<d/>
	<c path="String"/>
	<d/>
</f></createPattern></overloads>
		</createPattern>
		<createRadialGradient public="1" set="method" line="52"><f a="x0:y0:r0:x1:y1:r1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<d/>
</f></createRadialGradient>
		<drawImage public="1" set="method" line="61"><f a="element:sx:sy:?sw:?sh:?dx:?dy:?dw:?dh">
	<d/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></drawImage>
		<drawImageFromRect public="1" set="method" line="62"><f a="image:?sx:?sy:?sw:?sh:?dx:?dy:?dw:?dh:?compositeOperation">
	<d/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="String"/>
	<x path="Void"/>
</f></drawImageFromRect>
		<fill public="1" set="method" line="63"><f a=""><x path="Void"/></f></fill>
		<fillRect public="1" set="method" line="64"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></fillRect>
		<fillText public="1" set="method" line="65"><f a="text:x:y:?maxWidth">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></fillText>
		<getDynamicImageData public="1" set="method" line="66"><f a="sx:sy:sw:sh">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<d/>
</f></getDynamicImageData>
		<getDynamicImageDataHD public="1" set="method" line="67"><f a="sx:sy:sw:sh">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<d/>
</f></getDynamicImageDataHD>
		<getLineDash public="1" set="method" line="68"><f a=""><c path="Array"><x path="Float"/></c></f></getLineDash>
		<isPointInPath public="1" set="method" line="69"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></isPointInPath>
		<lineTo public="1" set="method" line="70"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></lineTo>
		<measureText public="1" set="method" line="71"><f a="text">
	<c path="String"/>
	<d/>
</f></measureText>
		<moveTo public="1" set="method" line="72"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<putDynamicImageData public="1" set="method" line="74">
			<f a="dynamicImageData:dx:dy:dirtyX:dirtyY:dirtyWidth:dirtyHeight">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads><putDynamicImageData public="1" set="method"><f a="dynamicImageData:dx:dy">
	<d/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></putDynamicImageData></overloads>
		</putDynamicImageData>
		<putDynamicImageDataHD public="1" set="method" line="76">
			<f a="dynamicImageData:dx:dy:dirtyX:dirtyY:dirtyWidth:dirtyHeight">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads><putDynamicImageDataHD public="1" set="method"><f a="dynamicImageData:dx:dy">
	<d/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></putDynamicImageDataHD></overloads>
		</putDynamicImageDataHD>
		<quadraticCurveTo public="1" set="method" line="77"><f a="cpx:cpy:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></quadraticCurveTo>
		<rect public="1" set="method" line="78"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></rect>
		<restore public="1" set="method" line="79"><f a=""><x path="Void"/></f></restore>
		<rotate public="1" set="method" line="80"><f a="angle">
	<x path="Float"/>
	<x path="Void"/>
</f></rotate>
		<save public="1" set="method" line="81"><f a=""><x path="Void"/></f></save>
		<scale public="1" set="method" line="82"><f a="sx:sy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scale>
		<setAlpha public="1" set="method" line="83"><f a="alpha">
	<x path="Float"/>
	<x path="Void"/>
</f></setAlpha>
		<setCompositeOperation public="1" set="method" line="84"><f a="compositeOperation">
	<c path="String"/>
	<x path="Void"/>
</f></setCompositeOperation>
		<setFillColor public="1" set="method" line="88">
			<f a="c:m:y:k:a">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<setFillColor public="1" set="method"><f a="color:?alpha">
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFillColor>
				<setFillColor public="1" set="method"><f a="grayLevel:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFillColor>
				<setFillColor public="1" set="method"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFillColor>
			</overloads>
		</setFillColor>
		<setLineCap public="1" set="method" line="89"><f a="cap">
	<c path="String"/>
	<x path="Void"/>
</f></setLineCap>
		<setLineDash public="1" set="method" line="90"><f a="dash">
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></setLineDash>
		<setLineJoin public="1" set="method" line="91"><f a="join">
	<c path="String"/>
	<x path="Void"/>
</f></setLineJoin>
		<setLineWidth public="1" set="method" line="92"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></setLineWidth>
		<setMiterLimit public="1" set="method" line="93"><f a="limit">
	<x path="Float"/>
	<x path="Void"/>
</f></setMiterLimit>
		<setShadow public="1" set="method" line="97">
			<f a="width:height:blur:c:m:y:k:a">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<setShadow public="1" set="method"><f a="width:height:blur:?color:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setShadow>
				<setShadow public="1" set="method"><f a="width:height:blur:grayLevel:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setShadow>
				<setShadow public="1" set="method"><f a="width:height:blur:r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setShadow>
			</overloads>
		</setShadow>
		<setStrokeColor public="1" set="method" line="101">
			<f a="c:m:y:k:a">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<setStrokeColor public="1" set="method"><f a="color:?alpha">
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setStrokeColor>
				<setStrokeColor public="1" set="method"><f a="grayLevel:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setStrokeColor>
				<setStrokeColor public="1" set="method"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setStrokeColor>
			</overloads>
		</setStrokeColor>
		<setTransform public="1" set="method" line="102"><f a="m11:m12:m21:m22:dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTransform>
		<stroke public="1" set="method" line="103"><f a=""><x path="Void"/></f></stroke>
		<strokeRect public="1" set="method" line="104"><f a="x:y:width:height:?lineWidth">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></strokeRect>
		<strokeText public="1" set="method" line="105"><f a="text:x:y:?maxWidth">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></strokeText>
		<transform public="1" set="method" line="106"><f a="m11:m12:m21:m22:dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></transform>
		<translate public="1" set="method" line="107"><f a="tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></translate>
		<new public="1" set="method" line="32"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.graphics.ConsoleRenderContext" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/ConsoleRenderContext.hx">
		<width public="1" get="accessor" set="null"><x path="Int"/></width>
		<height public="1" get="accessor" set="null"><x path="Int"/></height>
		<createIndexBuffer public="1" set="method" line="112"><f a="indices:count">
	<unknown/>
	<x path="Int"/>
	<c path="lime.graphics.console.IndexBuffer"/>
</f></createIndexBuffer>
		<createVertexBuffer public="1" set="method" line="113"><f a="decl:count">
	<unknown/>
	<x path="Int"/>
	<c path="lime.graphics.console.VertexBuffer"/>
</f></createVertexBuffer>
		<lookupShader public="1" set="method" line="114"><f a="name">
	<c path="String"/>
	<c path="lime.graphics.console.Shader"/>
</f></lookupShader>
		<clear public="1" set="method" line="116">
			<f a="r:g:b:a:?depth:?stencil" v="::::1.0:0">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ stencil : 0, depth : 1.0 }</e></m></meta>
		</clear>
		<bindShader public="1" set="method" line="118"><f a="shader">
	<c path="lime.graphics.console.Shader"/>
	<x path="Void"/>
</f></bindShader>
		<setViewport public="1" set="method" line="120">
			<f a="x:y:width:height:?nearPlane:?farPlane" v="::::0.0:1.0">
				<unknown/>
				<unknown/>
				<unknown/>
				<unknown/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ farPlane : 1.0, nearPlane : 0.0 }</e></m></meta>
		</setViewport>
		<setVertexShaderConstantF public="1" set="method" line="122"><f a="startRegister:vec4:vec4count">
	<unknown/>
	<unknown/>
	<unknown/>
	<x path="Void"/>
</f></setVertexShaderConstantF>
		<setVertexSource public="1" set="method" line="124"><f a="vb">
	<c path="lime.graphics.console.VertexBuffer"/>
	<x path="Void"/>
</f></setVertexSource>
		<setIndexSource public="1" set="method" line="125"><f a="ib">
	<c path="lime.graphics.console.IndexBuffer"/>
	<x path="Void"/>
</f></setIndexSource>
		<draw public="1" set="method" line="127"><f a="primitive:startVertex:primitiveCount">
	<unknown/>
	<unknown/>
	<unknown/>
	<x path="Void"/>
</f></draw>
		<drawIndexed public="1" set="method" line="128"><f a="primitive:vertexCount:startIndex:primitiveCount">
	<unknown/>
	<unknown/>
	<unknown/>
	<unknown/>
	<x path="Void"/>
</f></drawIndexed>
		<get_width set="method" line="130"><f a=""><x path="Int"/></f></get_width>
		<get_height set="method" line="131"><f a=""><x path="Int"/></f></get_height>
		<new public="1" set="method" line="102"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.graphics.DOMRenderContext" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/DOMRenderContext.hx">
		<accessKey public="1"><c path="String"/></accessKey>
		<align public="1"><c path="String"/></align>
		<attributes public="1" set="null"><d/></attributes>
		<baseURI public="1" set="null"><c path="String"/></baseURI>
		<childElementCount public="1" set="null"><x path="Int"/></childElementCount>
		<childNodes public="1" set="null"><d/></childNodes>
		<children public="1" set="null"><d/></children>
		<classList public="1" set="null"><d/></classList>
		<className public="1"><c path="String"/></className>
		<clientHeight public="1" set="null"><x path="Int"/></clientHeight>
		<clientLeft public="1" set="null"><x path="Int"/></clientLeft>
		<clientTop public="1" set="null"><x path="Int"/></clientTop>
		<clientWidth public="1" set="null"><x path="Int"/></clientWidth>
		<contentEditable public="1"><c path="String"/></contentEditable>
		<dataset public="1" set="null"><d><c path="String"/></d></dataset>
		<dir public="1"><c path="String"/></dir>
		<draggable public="1"><x path="Bool"/></draggable>
		<dropzone public="1"><c path="String"/></dropzone>
		<firstChild public="1" set="null"><d/></firstChild>
		<firstElementChild public="1" set="null"><d/></firstElementChild>
		<hidden public="1"><x path="Bool"/></hidden>
		<id public="1"><c path="String"/></id>
		<innerHTML public="1"><c path="String"/></innerHTML>
		<innerText public="1"><c path="String"/></innerText>
		<isContentEditable public="1" set="null"><x path="Bool"/></isContentEditable>
		<lang public="1"><c path="String"/></lang>
		<lastChild public="1" set="null"><d/></lastChild>
		<lastElementChild public="1" set="null"><d/></lastElementChild>
		<localName public="1" set="null"><c path="String"/></localName>
		<namespaceURI public="1" set="null"><c path="String"/></namespaceURI>
		<nextElementSibling public="1" set="null"><d/></nextElementSibling>
		<nextSibling public="1" set="null"><d/></nextSibling>
		<nodeName public="1" set="null"><c path="String"/></nodeName>
		<nodeType public="1" set="null"><x path="Int"/></nodeType>
		<nodeValue public="1"><c path="String"/></nodeValue>
		<offsetHeight public="1" set="null"><x path="Int"/></offsetHeight>
		<offsetLeft public="1" set="null"><x path="Int"/></offsetLeft>
		<offsetParent public="1" set="null"><d/></offsetParent>
		<offsetTop public="1" set="null"><x path="Int"/></offsetTop>
		<offsetWidth public="1" set="null"><x path="Int"/></offsetWidth>
		<onabort public="1"><d/></onabort>
		<onbeforecopy public="1"><d/></onbeforecopy>
		<onbeforecut public="1"><d/></onbeforecut>
		<onbeforepaste public="1"><d/></onbeforepaste>
		<onblur public="1"><d/></onblur>
		<onchange public="1"><d/></onchange>
		<onclick public="1"><d/></onclick>
		<oncontextmenu public="1"><d/></oncontextmenu>
		<oncopy public="1"><d/></oncopy>
		<oncut public="1"><d/></oncut>
		<ondblclick public="1"><d/></ondblclick>
		<ondrag public="1"><d/></ondrag>
		<ondragend public="1"><d/></ondragend>
		<ondragenter public="1"><d/></ondragenter>
		<ondragleave public="1"><d/></ondragleave>
		<ondragover public="1"><d/></ondragover>
		<ondragstart public="1"><d/></ondragstart>
		<ondrop public="1"><d/></ondrop>
		<onerror public="1"><d/></onerror>
		<onfocus public="1"><d/></onfocus>
		<onfullscreenchange public="1"><d/></onfullscreenchange>
		<onfullscreenerror public="1"><d/></onfullscreenerror>
		<oninput public="1"><d/></oninput>
		<oninvalid public="1"><d/></oninvalid>
		<onkeydown public="1"><d/></onkeydown>
		<onkeypress public="1"><d/></onkeypress>
		<onkeyup public="1"><d/></onkeyup>
		<onload public="1"><d/></onload>
		<onmousedown public="1"><d/></onmousedown>
		<onmousemove public="1"><d/></onmousemove>
		<onmouseout public="1"><d/></onmouseout>
		<onmouseover public="1"><d/></onmouseover>
		<onmouseup public="1"><d/></onmouseup>
		<onmousewheel public="1"><d/></onmousewheel>
		<onpaste public="1"><d/></onpaste>
		<onreset public="1"><d/></onreset>
		<onscroll public="1"><d/></onscroll>
		<onsearch public="1"><d/></onsearch>
		<onselect public="1"><d/></onselect>
		<onselectstart public="1"><d/></onselectstart>
		<onsubmit public="1"><d/></onsubmit>
		<ontouchcancel public="1"><d/></ontouchcancel>
		<ontouchend public="1"><d/></ontouchend>
		<ontouchmove public="1"><d/></ontouchmove>
		<ontouchstart public="1"><d/></ontouchstart>
		<outerHTML public="1"><c path="String"/></outerHTML>
		<outerText public="1"><c path="String"/></outerText>
		<ownerDocument public="1" set="null"><d/></ownerDocument>
		<parentElement public="1" set="null"><d/></parentElement>
		<parentNode public="1" set="null"><d/></parentNode>
		<prefix public="1"><c path="String"/></prefix>
		<previousElementSibling public="1" set="null"><d/></previousElementSibling>
		<previousSibling public="1" set="null"><d/></previousSibling>
		<pseudo public="1"><c path="String"/></pseudo>
		<scrollHeight public="1" set="null"><x path="Int"/></scrollHeight>
		<scrollLeft public="1"><x path="Int"/></scrollLeft>
		<scrollTop public="1"><x path="Int"/></scrollTop>
		<scrollWidth public="1" set="null"><x path="Int"/></scrollWidth>
		<spellcheck public="1"><x path="Bool"/></spellcheck>
		<style public="1" set="null"><d/></style>
		<tabIndex public="1"><x path="Int"/></tabIndex>
		<tagName public="1" set="null"><c path="String"/></tagName>
		<textContent public="1"><c path="String"/></textContent>
		<title public="1"><c path="String"/></title>
		<translate public="1"><x path="Bool"/></translate>
		<addEventListener public="1" set="method" line="124"><f a="type:listener:?useCapture">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
	<x path="Void"/>
</f></addEventListener>
		<appendChild public="1" set="method" line="125"><f a="newChild">
	<d/>
	<d/>
</f></appendChild>
		<blur public="1" set="method" line="126"><f a=""><x path="Void"/></f></blur>
		<click public="1" set="method" line="127"><f a=""><x path="Void"/></f></click>
		<cloneNode public="1" set="method" line="128"><f a="deep">
	<x path="Bool"/>
	<d/>
</f></cloneNode>
		<compareDocumentPosition public="1" set="method" line="129"><f a="other">
	<d/>
	<x path="Int"/>
</f></compareDocumentPosition>
		<contains public="1" set="method" line="130"><f a="other">
	<d/>
	<x path="Bool"/>
</f></contains>
		<dispatchEvent public="1" set="method" line="131"><f a="event">
	<d/>
	<x path="Bool"/>
</f></dispatchEvent>
		<focus public="1" set="method" line="132"><f a=""><x path="Void"/></f></focus>
		<getAttribute public="1" set="method" line="133"><f a="name">
	<c path="String"/>
	<c path="String"/>
</f></getAttribute>
		<getAttributeNS public="1" set="method" line="134"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></getAttributeNS>
		<getAttributeNode public="1" set="method" line="135"><f a="name">
	<c path="String"/>
	<d/>
</f></getAttributeNode>
		<getAttributeNodeNS public="1" set="method" line="136"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<d/>
</f></getAttributeNodeNS>
		<getBoundingClientRect public="1" set="method" line="137"><f a=""><d/></f></getBoundingClientRect>
		<getClientRects public="1" set="method" line="138"><f a=""><d/></f></getClientRects>
		<getElementsByClassName public="1" set="method" line="139"><f a="name">
	<c path="String"/>
	<d/>
</f></getElementsByClassName>
		<getElementsByTagName public="1" set="method" line="140"><f a="name">
	<c path="String"/>
	<d/>
</f></getElementsByTagName>
		<getElementsByTagNameNS public="1" set="method" line="141"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<d/>
</f></getElementsByTagNameNS>
		<hasAttribute public="1" set="method" line="142"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasAttribute>
		<hasAttributeNS public="1" set="method" line="143"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></hasAttributeNS>
		<hasAttributes public="1" set="method" line="144"><f a=""><x path="Bool"/></f></hasAttributes>
		<hasChildNodes public="1" set="method" line="145"><f a=""><x path="Bool"/></f></hasChildNodes>
		<insertAdjacentElement public="1" set="method" line="146"><f a="where:element">
	<c path="String"/>
	<d/>
	<d/>
</f></insertAdjacentElement>
		<insertAdjacentHTML public="1" set="method" line="147"><f a="where:html">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></insertAdjacentHTML>
		<insertAdjacentText public="1" set="method" line="148"><f a="where:text">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></insertAdjacentText>
		<insertBefore public="1" set="method" line="149"><f a="newChild:refChild">
	<d/>
	<d/>
	<d/>
</f></insertBefore>
		<isDefaultNamespace public="1" set="method" line="150"><f a="?namespaceURI">
	<c path="String"/>
	<x path="Bool"/>
</f></isDefaultNamespace>
		<isEqualNode public="1" set="method" line="151"><f a="other">
	<d/>
	<x path="Bool"/>
</f></isEqualNode>
		<isSameNode public="1" set="method" line="152"><f a="other">
	<d/>
	<x path="Bool"/>
</f></isSameNode>
		<isSupported public="1" set="method" line="153"><f a="feature:?version">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></isSupported>
		<lookupNamespaceURI public="1" set="method" line="154"><f a="?prefix">
	<c path="String"/>
	<c path="String"/>
</f></lookupNamespaceURI>
		<lookupPrefix public="1" set="method" line="155"><f a="?namespaceURI">
	<c path="String"/>
	<c path="String"/>
</f></lookupPrefix>
		<matchesSelector public="1" set="method" line="156"><f a="selectors">
	<c path="String"/>
	<x path="Bool"/>
</f></matchesSelector>
		<normalize public="1" set="method" line="157"><f a=""><x path="Void"/></f></normalize>
		<querySelector public="1" set="method" line="158"><f a="selectors">
	<c path="String"/>
	<d/>
</f></querySelector>
		<querySelectorAll public="1" set="method" line="159"><f a="selectors">
	<c path="String"/>
	<d/>
</f></querySelectorAll>
		<remove public="1" set="method" line="160"><f a=""><x path="Void"/></f></remove>
		<removeAttribute public="1" set="method" line="161"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></removeAttribute>
		<removeAttributeNS public="1" set="method" line="162"><f a="namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></removeAttributeNS>
		<removeAttributeNode public="1" set="method" line="163"><f a="oldAttr">
	<d/>
	<d/>
</f></removeAttributeNode>
		<removeChild public="1" set="method" line="164"><f a="oldChild">
	<d/>
	<d/>
</f></removeChild>
		<removeEventListener public="1" set="method" line="165"><f a="type:listener:?useCapture">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
	<x path="Void"/>
</f></removeEventListener>
		<replaceChild public="1" set="method" line="166"><f a="newChild:oldChild">
	<d/>
	<d/>
	<d/>
</f></replaceChild>
		<requestFullScreen public="1" set="method" line="167"><f a="flags">
	<x path="Int"/>
	<x path="Void"/>
</f></requestFullScreen>
		<requestFullscreen public="1" set="method" line="168"><f a=""><x path="Void"/></f></requestFullscreen>
		<requestPointerLock public="1" set="method" line="169"><f a=""><x path="Void"/></f></requestPointerLock>
		<scrollByLines public="1" set="method" line="170"><f a="lines">
	<x path="Int"/>
	<x path="Void"/>
</f></scrollByLines>
		<scrollByPages public="1" set="method" line="171"><f a="pages">
	<x path="Int"/>
	<x path="Void"/>
</f></scrollByPages>
		<scrollIntoView public="1" set="method" line="172"><f a="?alignWithTop">
	<x path="Bool"/>
	<x path="Void"/>
</f></scrollIntoView>
		<scrollIntoViewIfNeeded public="1" set="method" line="173"><f a="?centerIfNeeded">
	<x path="Bool"/>
	<x path="Void"/>
</f></scrollIntoViewIfNeeded>
		<setAttribute public="1" set="method" line="174"><f a="name:value">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setAttribute>
		<setAttributeNS public="1" set="method" line="175"><f a="?namespaceURI:qualifiedName:value">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setAttributeNS>
		<setAttributeNode public="1" set="method" line="176"><f a="newAttr">
	<d/>
	<d/>
</f></setAttributeNode>
		<setAttributeNodeNS public="1" set="method" line="177"><f a="newAttr">
	<d/>
	<d/>
</f></setAttributeNodeNS>
		<new public="1" set="method" line="117"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.graphics.FlashRenderContext" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/FlashRenderContext.hx">
		<accessibilityImplementation public="1"><d/></accessibilityImplementation>
		<accessibilityProperties public="1"><d/></accessibilityProperties>
		<alpha public="1"><x path="Float"/></alpha>
		<blendMode public="1"><d/></blendMode>
		<blendShader public="1" get="null"><d/></blendShader>
		<buttonMode public="1"><x path="Bool"/></buttonMode>
		<cacheAsBitmap public="1"><x path="Bool"/></cacheAsBitmap>
		<contextMenu public="1"><d/></contextMenu>
		<doubleClickEnabled public="1"><x path="Bool"/></doubleClickEnabled>
		<dropTarget public="1" set="null"><d/></dropTarget>
		<filters public="1"><c path="Array"><d/></c></filters>
		<focusRect public="1"><d/></focusRect>
		<graphics public="1" set="null"><d/></graphics>
		<height public="1"><x path="Float"/></height>
		<hitArea public="1"><d/></hitArea>
		<loaderInfo public="1" set="null"><d/></loaderInfo>
		<mask public="1"><d/></mask>
		<mouseChildren public="1"><x path="Bool"/></mouseChildren>
		<mouseEnabled public="1"><x path="Bool"/></mouseEnabled>
		<mouseX public="1" set="null"><x path="Float"/></mouseX>
		<mouseY public="1" set="null"><x path="Float"/></mouseY>
		<name public="1"><c path="String"/></name>
		<needsSoftKeyboard public="1"><x path="Bool"/></needsSoftKeyboard>
		<numChildren public="1" set="null"><x path="Int"/></numChildren>
		<opaqueBackground public="1"><t path="Null"><x path="UInt"/></t></opaqueBackground>
		<parent public="1" set="null"><d/></parent>
		<root public="1" set="null"><d/></root>
		<rotation public="1"><x path="Float"/></rotation>
		<rotationX public="1"><x path="Float"/></rotationX>
		<rotationY public="1"><x path="Float"/></rotationY>
		<rotationZ public="1"><x path="Float"/></rotationZ>
		<scale9Grid public="1"><d/></scale9Grid>
		<scaleX public="1"><x path="Float"/></scaleX>
		<scaleY public="1"><x path="Float"/></scaleY>
		<scaleZ public="1"><x path="Float"/></scaleZ>
		<scrollRect public="1"><d/></scrollRect>
		<softKeyboardInputAreaOfInterest public="1"><d/></softKeyboardInputAreaOfInterest>
		<soundTransform public="1"><d/></soundTransform>
		<stage public="1" set="null"><d/></stage>
		<tabChildren public="1"><x path="Bool"/></tabChildren>
		<tabEnabled public="1"><x path="Bool"/></tabEnabled>
		<tabIndex public="1"><x path="Int"/></tabIndex>
		<textSnapshot public="1" set="null"><d/></textSnapshot>
		<transform public="1"><d/></transform>
		<useHandCursor public="1"><x path="Bool"/></useHandCursor>
		<visible public="1"><x path="Bool"/></visible>
		<width public="1"><x path="Float"/></width>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<z public="1"><x path="Float"/></z>
		<addChild public="1" set="method" line="69"><f a="child">
	<d/>
	<d/>
</f></addChild>
		<addChildAt public="1" set="method" line="70"><f a="child:index">
	<d/>
	<x path="Int"/>
	<d/>
</f></addChildAt>
		<addEventListener public="1" set="method" line="71">
			<f a="type:listener:?useCapture:?priority:?useWeakReference" v="::false:0:false">
				<c path="String"/>
				<f a="">
					<d/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ useWeakReference : false, priority : 0, useCapture : false }</e></m></meta>
		</addEventListener>
		<areInaccessibleObjectsUnderPoint public="1" set="method" line="72"><f a="point">
	<d/>
	<x path="Bool"/>
</f></areInaccessibleObjectsUnderPoint>
		<contains public="1" set="method" line="73"><f a="child">
	<d/>
	<x path="Bool"/>
</f></contains>
		<dispatchEvent public="1" set="method" line="74"><f a="event">
	<d/>
	<x path="Bool"/>
</f></dispatchEvent>
		<getBounds public="1" set="method" line="75"><f a="targetCoordinateSpace">
	<d/>
	<d/>
</f></getBounds>
		<getChildAt public="1" set="method" line="76"><f a="index">
	<x path="Int"/>
	<d/>
</f></getChildAt>
		<getChildByName public="1" set="method" line="77"><f a="name">
	<c path="String"/>
	<d/>
</f></getChildByName>
		<getChildIndex public="1" set="method" line="78"><f a="child">
	<d/>
	<x path="Int"/>
</f></getChildIndex>
		<getObjectsUnderPoint public="1" set="method" line="79"><f a="point">
	<d/>
	<c path="Array"><d/></c>
</f></getObjectsUnderPoint>
		<getRect public="1" set="method" line="80"><f a="targetCoordinateSpace">
	<d/>
	<d/>
</f></getRect>
		<globalToLocal public="1" set="method" line="81"><f a="point">
	<d/>
	<d/>
</f></globalToLocal>
		<globalToLocal3D public="1" set="method" line="82"><f a="point">
	<d/>
	<d/>
</f></globalToLocal3D>
		<hasEventListener public="1" set="method" line="83"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasEventListener>
		<hitTestObject public="1" set="method" line="84"><f a="obj">
	<d/>
	<x path="Bool"/>
</f></hitTestObject>
		<hitTestPoint public="1" set="method" line="85">
			<f a="x:y:?shapeFlag" v="::false">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ shapeFlag : false }</e></m></meta>
		</hitTestPoint>
		<local3DToGlobal public="1" set="method" line="86"><f a="point3d">
	<d/>
	<d/>
</f></local3DToGlobal>
		<localToGlobal public="1" set="method" line="87"><f a="point">
	<d/>
	<d/>
</f></localToGlobal>
		<removeChild public="1" set="method" line="88"><f a="child">
	<d/>
	<d/>
</f></removeChild>
		<removeChildAt public="1" set="method" line="89"><f a="index">
	<x path="Int"/>
	<d/>
</f></removeChildAt>
		<removeChildren public="1" set="method" line="90">
			<f a="?beginIndex:?endIndex" v="0:2147483647">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ endIndex : 2147483647, beginIndex : 0 }</e></m></meta>
		</removeChildren>
		<removeEventListener public="1" set="method" line="91">
			<f a="type:listener:?useCapture" v="::false">
				<c path="String"/>
				<f a="">
					<d/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ useCapture : false }</e></m></meta>
		</removeEventListener>
		<requestSoftKeyboard public="1" set="method" line="92"><f a=""><x path="Bool"/></f></requestSoftKeyboard>
		<setChildIndex public="1" set="method" line="93"><f a="child:index">
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></setChildIndex>
		<startDrag public="1" set="method" line="94">
			<f a="?lockCenter:?bounds" v="false:">
				<x path="Bool"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ lockCenter : false }</e></m></meta>
		</startDrag>
		<startTouchDrag public="1" set="method" line="95">
			<f a="touchPointID:?lockCenter:?bounds" v=":false:">
				<x path="Int"/>
				<x path="Bool"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ lockCenter : false }</e></m></meta>
		</startTouchDrag>
		<stopAllMovieClips public="1" set="method" line="96"><f a=""><x path="Void"/></f></stopAllMovieClips>
		<stopDrag public="1" set="method" line="97"><f a=""><x path="Void"/></f></stopDrag>
		<stopTouchDrag public="1" set="method" line="98"><f a="touchPointID">
	<x path="Int"/>
	<x path="Void"/>
</f></stopTouchDrag>
		<swapChildren public="1" set="method" line="99"><f a="child1:child2">
	<d/>
	<d/>
	<x path="Void"/>
</f></swapChildren>
		<swapChildrenAt public="1" set="method" line="100"><f a="index1:index2">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></swapChildrenAt>
		<toString public="1" set="method" line="101"><f a=""><c path="String"/></f></toString>
		<willTrigger public="1" set="method" line="102"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></willTrigger>
		<new public="1" set="method" line="62"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.graphics.GLRenderContext" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/GLRenderContext.hx">
		<ACTIVE_ATTRIBUTES public="1"><x path="Int"/></ACTIVE_ATTRIBUTES>
		<ACTIVE_TEXTURE public="1"><x path="Int"/></ACTIVE_TEXTURE>
		<ACTIVE_UNIFORMS public="1"><x path="Int"/></ACTIVE_UNIFORMS>
		<ALIASED_LINE_WIDTH_RANGE public="1"><x path="Int"/></ALIASED_LINE_WIDTH_RANGE>
		<ALIASED_POINT_SIZE_RANGE public="1"><x path="Int"/></ALIASED_POINT_SIZE_RANGE>
		<ALPHA public="1"><x path="Int"/></ALPHA>
		<ALPHA_BITS public="1"><x path="Int"/></ALPHA_BITS>
		<ALWAYS public="1"><x path="Int"/></ALWAYS>
		<ARRAY_BUFFER public="1"><x path="Int"/></ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1"><x path="Int"/></ARRAY_BUFFER_BINDING>
		<ATTACHED_SHADERS public="1"><x path="Int"/></ATTACHED_SHADERS>
		<BACK public="1"><x path="Int"/></BACK>
		<BLEND public="1"><x path="Int"/></BLEND>
		<BLEND_COLOR public="1"><x path="Int"/></BLEND_COLOR>
		<BLEND_DST_ALPHA public="1"><x path="Int"/></BLEND_DST_ALPHA>
		<BLEND_DST_RGB public="1"><x path="Int"/></BLEND_DST_RGB>
		<BLEND_EQUATION public="1"><x path="Int"/></BLEND_EQUATION>
		<BLEND_EQUATION_ALPHA public="1"><x path="Int"/></BLEND_EQUATION_ALPHA>
		<BLEND_EQUATION_RGB public="1"><x path="Int"/></BLEND_EQUATION_RGB>
		<BLEND_SRC_ALPHA public="1"><x path="Int"/></BLEND_SRC_ALPHA>
		<BLEND_SRC_RGB public="1"><x path="Int"/></BLEND_SRC_RGB>
		<BLUE_BITS public="1"><x path="Int"/></BLUE_BITS>
		<BOOL public="1"><x path="Int"/></BOOL>
		<BOOL_VEC2 public="1"><x path="Int"/></BOOL_VEC2>
		<BOOL_VEC3 public="1"><x path="Int"/></BOOL_VEC3>
		<BOOL_VEC4 public="1"><x path="Int"/></BOOL_VEC4>
		<BROWSER_DEFAULT_WEBGL public="1"><x path="Int"/></BROWSER_DEFAULT_WEBGL>
		<BUFFER_SIZE public="1"><x path="Int"/></BUFFER_SIZE>
		<BUFFER_USAGE public="1"><x path="Int"/></BUFFER_USAGE>
		<BYTE public="1"><x path="Int"/></BYTE>
		<CCW public="1"><x path="Int"/></CCW>
		<CLAMP_TO_EDGE public="1"><x path="Int"/></CLAMP_TO_EDGE>
		<COLOR_ATTACHMENT0 public="1"><x path="Int"/></COLOR_ATTACHMENT0>
		<COLOR_BUFFER_BIT public="1"><x path="Int"/></COLOR_BUFFER_BIT>
		<COLOR_CLEAR_VALUE public="1"><x path="Int"/></COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1"><x path="Int"/></COLOR_WRITEMASK>
		<COMPILE_STATUS public="1"><x path="Int"/></COMPILE_STATUS>
		<COMPRESSED_TEXTURE_FORMATS public="1"><x path="Int"/></COMPRESSED_TEXTURE_FORMATS>
		<CONSTANT_ALPHA public="1"><x path="Int"/></CONSTANT_ALPHA>
		<CONSTANT_COLOR public="1"><x path="Int"/></CONSTANT_COLOR>
		<CONTEXT_LOST_WEBGL public="1"><x path="Int"/></CONTEXT_LOST_WEBGL>
		<CULL_FACE public="1"><x path="Int"/></CULL_FACE>
		<CULL_FACE_MODE public="1"><x path="Int"/></CULL_FACE_MODE>
		<CURRENT_PROGRAM public="1"><x path="Int"/></CURRENT_PROGRAM>
		<CURRENT_VERTEX_ATTRIB public="1"><x path="Int"/></CURRENT_VERTEX_ATTRIB>
		<CW public="1"><x path="Int"/></CW>
		<DECR public="1"><x path="Int"/></DECR>
		<DECR_WRAP public="1"><x path="Int"/></DECR_WRAP>
		<DELETE_STATUS public="1"><x path="Int"/></DELETE_STATUS>
		<DEPTH_ATTACHMENT public="1"><x path="Int"/></DEPTH_ATTACHMENT>
		<DEPTH_BITS public="1"><x path="Int"/></DEPTH_BITS>
		<DEPTH_BUFFER_BIT public="1"><x path="Int"/></DEPTH_BUFFER_BIT>
		<DEPTH_CLEAR_VALUE public="1"><x path="Int"/></DEPTH_CLEAR_VALUE>
		<DEPTH_COMPONENT public="1"><x path="Int"/></DEPTH_COMPONENT>
		<DEPTH_COMPONENT16 public="1"><x path="Int"/></DEPTH_COMPONENT16>
		<DEPTH_FUNC public="1"><x path="Int"/></DEPTH_FUNC>
		<DEPTH_RANGE public="1"><x path="Int"/></DEPTH_RANGE>
		<DEPTH_STENCIL public="1"><x path="Int"/></DEPTH_STENCIL>
		<DEPTH_STENCIL_ATTACHMENT public="1"><x path="Int"/></DEPTH_STENCIL_ATTACHMENT>
		<DEPTH_TEST public="1"><x path="Int"/></DEPTH_TEST>
		<DEPTH_WRITEMASK public="1"><x path="Int"/></DEPTH_WRITEMASK>
		<DITHER public="1"><x path="Int"/></DITHER>
		<DONT_CARE public="1"><x path="Int"/></DONT_CARE>
		<DST_ALPHA public="1"><x path="Int"/></DST_ALPHA>
		<DST_COLOR public="1"><x path="Int"/></DST_COLOR>
		<DYNAMIC_DRAW public="1"><x path="Int"/></DYNAMIC_DRAW>
		<ELEMENT_ARRAY_BUFFER public="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER_BINDING>
		<EQUAL public="1"><x path="Int"/></EQUAL>
		<FASTEST public="1"><x path="Int"/></FASTEST>
		<FLOAT public="1"><x path="Int"/></FLOAT>
		<FLOAT_MAT2 public="1"><x path="Int"/></FLOAT_MAT2>
		<FLOAT_MAT3 public="1"><x path="Int"/></FLOAT_MAT3>
		<FLOAT_MAT4 public="1"><x path="Int"/></FLOAT_MAT4>
		<FLOAT_VEC2 public="1"><x path="Int"/></FLOAT_VEC2>
		<FLOAT_VEC3 public="1"><x path="Int"/></FLOAT_VEC3>
		<FLOAT_VEC4 public="1"><x path="Int"/></FLOAT_VEC4>
		<FRAGMENT_SHADER public="1"><x path="Int"/></FRAGMENT_SHADER>
		<FRAMEBUFFER public="1"><x path="Int"/></FRAMEBUFFER>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_BINDING public="1"><x path="Int"/></FRAMEBUFFER_BINDING>
		<FRAMEBUFFER_COMPLETE public="1"><x path="Int"/></FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_UNSUPPORTED public="1"><x path="Int"/></FRAMEBUFFER_UNSUPPORTED>
		<FRONT public="1"><x path="Int"/></FRONT>
		<FRONT_AND_BACK public="1"><x path="Int"/></FRONT_AND_BACK>
		<FRONT_FACE public="1"><x path="Int"/></FRONT_FACE>
		<FUNC_ADD public="1"><x path="Int"/></FUNC_ADD>
		<FUNC_REVERSE_SUBTRACT public="1"><x path="Int"/></FUNC_REVERSE_SUBTRACT>
		<FUNC_SUBTRACT public="1"><x path="Int"/></FUNC_SUBTRACT>
		<GENERATE_MIPMAP_HINT public="1"><x path="Int"/></GENERATE_MIPMAP_HINT>
		<GEQUAL public="1"><x path="Int"/></GEQUAL>
		<GREATER public="1"><x path="Int"/></GREATER>
		<GREEN_BITS public="1"><x path="Int"/></GREEN_BITS>
		<HIGH_FLOAT public="1"><x path="Int"/></HIGH_FLOAT>
		<HIGH_INT public="1"><x path="Int"/></HIGH_INT>
		<INCR public="1"><x path="Int"/></INCR>
		<INCR_WRAP public="1"><x path="Int"/></INCR_WRAP>
		<INT public="1"><x path="Int"/></INT>
		<INT_VEC2 public="1"><x path="Int"/></INT_VEC2>
		<INT_VEC3 public="1"><x path="Int"/></INT_VEC3>
		<INT_VEC4 public="1"><x path="Int"/></INT_VEC4>
		<INVALID_ENUM public="1"><x path="Int"/></INVALID_ENUM>
		<INVALID_FRAMEBUFFER_OPERATION public="1"><x path="Int"/></INVALID_FRAMEBUFFER_OPERATION>
		<INVALID_OPERATION public="1"><x path="Int"/></INVALID_OPERATION>
		<INVALID_VALUE public="1"><x path="Int"/></INVALID_VALUE>
		<INVERT public="1"><x path="Int"/></INVERT>
		<KEEP public="1"><x path="Int"/></KEEP>
		<LEQUAL public="1"><x path="Int"/></LEQUAL>
		<LESS public="1"><x path="Int"/></LESS>
		<LINEAR public="1"><x path="Int"/></LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1"><x path="Int"/></LINEAR_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_NEAREST public="1"><x path="Int"/></LINEAR_MIPMAP_NEAREST>
		<LINES public="1"><x path="Int"/></LINES>
		<LINE_LOOP public="1"><x path="Int"/></LINE_LOOP>
		<LINE_STRIP public="1"><x path="Int"/></LINE_STRIP>
		<LINE_WIDTH public="1"><x path="Int"/></LINE_WIDTH>
		<LINK_STATUS public="1"><x path="Int"/></LINK_STATUS>
		<LOW_FLOAT public="1"><x path="Int"/></LOW_FLOAT>
		<LOW_INT public="1"><x path="Int"/></LOW_INT>
		<LUMINANCE public="1"><x path="Int"/></LUMINANCE>
		<LUMINANCE_ALPHA public="1"><x path="Int"/></LUMINANCE_ALPHA>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1"><x path="Int"/></MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1"><x path="Int"/></MAX_CUBE_MAP_TEXTURE_SIZE>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1"><x path="Int"/></MAX_FRAGMENT_UNIFORM_VECTORS>
		<MAX_RENDERBUFFER_SIZE public="1"><x path="Int"/></MAX_RENDERBUFFER_SIZE>
		<MAX_TEXTURE_IMAGE_UNITS public="1"><x path="Int"/></MAX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_SIZE public="1"><x path="Int"/></MAX_TEXTURE_SIZE>
		<MAX_VARYING_VECTORS public="1"><x path="Int"/></MAX_VARYING_VECTORS>
		<MAX_VERTEX_ATTRIBS public="1"><x path="Int"/></MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1"><x path="Int"/></MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1"><x path="Int"/></MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VIEWPORT_DIMS public="1"><x path="Int"/></MAX_VIEWPORT_DIMS>
		<MEDIUM_FLOAT public="1"><x path="Int"/></MEDIUM_FLOAT>
		<MEDIUM_INT public="1"><x path="Int"/></MEDIUM_INT>
		<MIRRORED_REPEAT public="1"><x path="Int"/></MIRRORED_REPEAT>
		<NEAREST public="1"><x path="Int"/></NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1"><x path="Int"/></NEAREST_MIPMAP_LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1"><x path="Int"/></NEAREST_MIPMAP_NEAREST>
		<NEVER public="1"><x path="Int"/></NEVER>
		<NICEST public="1"><x path="Int"/></NICEST>
		<NONE public="1"><x path="Int"/></NONE>
		<NOTEQUAL public="1"><x path="Int"/></NOTEQUAL>
		<NO_ERROR public="1"><x path="Int"/></NO_ERROR>
		<ONE public="1"><x path="Int"/></ONE>
		<ONE_MINUS_CONSTANT_ALPHA public="1"><x path="Int"/></ONE_MINUS_CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_COLOR public="1"><x path="Int"/></ONE_MINUS_CONSTANT_COLOR>
		<ONE_MINUS_DST_ALPHA public="1"><x path="Int"/></ONE_MINUS_DST_ALPHA>
		<ONE_MINUS_DST_COLOR public="1"><x path="Int"/></ONE_MINUS_DST_COLOR>
		<ONE_MINUS_SRC_ALPHA public="1"><x path="Int"/></ONE_MINUS_SRC_ALPHA>
		<ONE_MINUS_SRC_COLOR public="1"><x path="Int"/></ONE_MINUS_SRC_COLOR>
		<OUT_OF_MEMORY public="1"><x path="Int"/></OUT_OF_MEMORY>
		<PACK_ALIGNMENT public="1"><x path="Int"/></PACK_ALIGNMENT>
		<POINTS public="1"><x path="Int"/></POINTS>
		<POLYGON_OFFSET_FACTOR public="1"><x path="Int"/></POLYGON_OFFSET_FACTOR>
		<POLYGON_OFFSET_FILL public="1"><x path="Int"/></POLYGON_OFFSET_FILL>
		<POLYGON_OFFSET_UNITS public="1"><x path="Int"/></POLYGON_OFFSET_UNITS>
		<RED_BITS public="1"><x path="Int"/></RED_BITS>
		<RENDERBUFFER public="1"><x path="Int"/></RENDERBUFFER>
		<RENDERBUFFER_ALPHA_SIZE public="1"><x path="Int"/></RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_BINDING public="1"><x path="Int"/></RENDERBUFFER_BINDING>
		<RENDERBUFFER_BLUE_SIZE public="1"><x path="Int"/></RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1"><x path="Int"/></RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1"><x path="Int"/></RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_HEIGHT public="1"><x path="Int"/></RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1"><x path="Int"/></RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1"><x path="Int"/></RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1"><x path="Int"/></RENDERBUFFER_STENCIL_SIZE>
		<RENDERBUFFER_WIDTH public="1"><x path="Int"/></RENDERBUFFER_WIDTH>
		<RENDERER public="1"><x path="Int"/></RENDERER>
		<REPEAT public="1"><x path="Int"/></REPEAT>
		<REPLACE public="1"><x path="Int"/></REPLACE>
		<RGB public="1"><x path="Int"/></RGB>
		<RGB565 public="1"><x path="Int"/></RGB565>
		<RGB5_A1 public="1"><x path="Int"/></RGB5_A1>
		<RGBA public="1"><x path="Int"/></RGBA>
		<RGBA4 public="1"><x path="Int"/></RGBA4>
		<SAMPLER_2D public="1"><x path="Int"/></SAMPLER_2D>
		<SAMPLER_CUBE public="1"><x path="Int"/></SAMPLER_CUBE>
		<SAMPLES public="1"><x path="Int"/></SAMPLES>
		<SAMPLE_ALPHA_TO_COVERAGE public="1"><x path="Int"/></SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_BUFFERS public="1"><x path="Int"/></SAMPLE_BUFFERS>
		<SAMPLE_COVERAGE public="1"><x path="Int"/></SAMPLE_COVERAGE>
		<SAMPLE_COVERAGE_INVERT public="1"><x path="Int"/></SAMPLE_COVERAGE_INVERT>
		<SAMPLE_COVERAGE_VALUE public="1"><x path="Int"/></SAMPLE_COVERAGE_VALUE>
		<SCISSOR_BOX public="1"><x path="Int"/></SCISSOR_BOX>
		<SCISSOR_TEST public="1"><x path="Int"/></SCISSOR_TEST>
		<SHADER_TYPE public="1"><x path="Int"/></SHADER_TYPE>
		<SHADING_LANGUAGE_VERSION public="1"><x path="Int"/></SHADING_LANGUAGE_VERSION>
		<SHORT public="1"><x path="Int"/></SHORT>
		<SRC_ALPHA public="1"><x path="Int"/></SRC_ALPHA>
		<SRC_ALPHA_SATURATE public="1"><x path="Int"/></SRC_ALPHA_SATURATE>
		<SRC_COLOR public="1"><x path="Int"/></SRC_COLOR>
		<STATIC_DRAW public="1"><x path="Int"/></STATIC_DRAW>
		<STENCIL_ATTACHMENT public="1"><x path="Int"/></STENCIL_ATTACHMENT>
		<STENCIL_BACK_FAIL public="1"><x path="Int"/></STENCIL_BACK_FAIL>
		<STENCIL_BACK_FUNC public="1"><x path="Int"/></STENCIL_BACK_FUNC>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1"><x path="Int"/></STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1"><x path="Int"/></STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1"><x path="Int"/></STENCIL_BACK_WRITEMASK>
		<STENCIL_BITS public="1"><x path="Int"/></STENCIL_BITS>
		<STENCIL_BUFFER_BIT public="1"><x path="Int"/></STENCIL_BUFFER_BIT>
		<STENCIL_CLEAR_VALUE public="1"><x path="Int"/></STENCIL_CLEAR_VALUE>
		<STENCIL_FAIL public="1"><x path="Int"/></STENCIL_FAIL>
		<STENCIL_FUNC public="1"><x path="Int"/></STENCIL_FUNC>
		<STENCIL_INDEX public="1"><x path="Int"/></STENCIL_INDEX>
		<STENCIL_INDEX8 public="1"><x path="Int"/></STENCIL_INDEX8>
		<STENCIL_PASS_DEPTH_FAIL public="1"><x path="Int"/></STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1"><x path="Int"/></STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1"><x path="Int"/></STENCIL_REF>
		<STENCIL_TEST public="1"><x path="Int"/></STENCIL_TEST>
		<STENCIL_VALUE_MASK public="1"><x path="Int"/></STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1"><x path="Int"/></STENCIL_WRITEMASK>
		<STREAM_DRAW public="1"><x path="Int"/></STREAM_DRAW>
		<SUBPIXEL_BITS public="1"><x path="Int"/></SUBPIXEL_BITS>
		<TEXTURE public="1"><x path="Int"/></TEXTURE>
		<TEXTURE0 public="1"><x path="Int"/></TEXTURE0>
		<TEXTURE1 public="1"><x path="Int"/></TEXTURE1>
		<TEXTURE10 public="1"><x path="Int"/></TEXTURE10>
		<TEXTURE11 public="1"><x path="Int"/></TEXTURE11>
		<TEXTURE12 public="1"><x path="Int"/></TEXTURE12>
		<TEXTURE13 public="1"><x path="Int"/></TEXTURE13>
		<TEXTURE14 public="1"><x path="Int"/></TEXTURE14>
		<TEXTURE15 public="1"><x path="Int"/></TEXTURE15>
		<TEXTURE16 public="1"><x path="Int"/></TEXTURE16>
		<TEXTURE17 public="1"><x path="Int"/></TEXTURE17>
		<TEXTURE18 public="1"><x path="Int"/></TEXTURE18>
		<TEXTURE19 public="1"><x path="Int"/></TEXTURE19>
		<TEXTURE2 public="1"><x path="Int"/></TEXTURE2>
		<TEXTURE20 public="1"><x path="Int"/></TEXTURE20>
		<TEXTURE21 public="1"><x path="Int"/></TEXTURE21>
		<TEXTURE22 public="1"><x path="Int"/></TEXTURE22>
		<TEXTURE23 public="1"><x path="Int"/></TEXTURE23>
		<TEXTURE24 public="1"><x path="Int"/></TEXTURE24>
		<TEXTURE25 public="1"><x path="Int"/></TEXTURE25>
		<TEXTURE26 public="1"><x path="Int"/></TEXTURE26>
		<TEXTURE27 public="1"><x path="Int"/></TEXTURE27>
		<TEXTURE28 public="1"><x path="Int"/></TEXTURE28>
		<TEXTURE29 public="1"><x path="Int"/></TEXTURE29>
		<TEXTURE3 public="1"><x path="Int"/></TEXTURE3>
		<TEXTURE30 public="1"><x path="Int"/></TEXTURE30>
		<TEXTURE31 public="1"><x path="Int"/></TEXTURE31>
		<TEXTURE4 public="1"><x path="Int"/></TEXTURE4>
		<TEXTURE5 public="1"><x path="Int"/></TEXTURE5>
		<TEXTURE6 public="1"><x path="Int"/></TEXTURE6>
		<TEXTURE7 public="1"><x path="Int"/></TEXTURE7>
		<TEXTURE8 public="1"><x path="Int"/></TEXTURE8>
		<TEXTURE9 public="1"><x path="Int"/></TEXTURE9>
		<TEXTURE_2D public="1"><x path="Int"/></TEXTURE_2D>
		<TEXTURE_BINDING_2D public="1"><x path="Int"/></TEXTURE_BINDING_2D>
		<TEXTURE_BINDING_CUBE_MAP public="1"><x path="Int"/></TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP public="1"><x path="Int"/></TEXTURE_CUBE_MAP>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_MAG_FILTER public="1"><x path="Int"/></TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1"><x path="Int"/></TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1"><x path="Int"/></TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1"><x path="Int"/></TEXTURE_WRAP_T>
		<TRIANGLES public="1"><x path="Int"/></TRIANGLES>
		<TRIANGLE_FAN public="1"><x path="Int"/></TRIANGLE_FAN>
		<TRIANGLE_STRIP public="1"><x path="Int"/></TRIANGLE_STRIP>
		<UNPACK_ALIGNMENT public="1"><x path="Int"/></UNPACK_ALIGNMENT>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1"><x path="Int"/></UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<UNPACK_FLIP_Y_WEBGL public="1"><x path="Int"/></UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1"><x path="Int"/></UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<UNSIGNED_BYTE public="1"><x path="Int"/></UNSIGNED_BYTE>
		<UNSIGNED_INT public="1"><x path="Int"/></UNSIGNED_INT>
		<UNSIGNED_SHORT public="1"><x path="Int"/></UNSIGNED_SHORT>
		<UNSIGNED_SHORT_4_4_4_4 public="1"><x path="Int"/></UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1"><x path="Int"/></UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1"><x path="Int"/></UNSIGNED_SHORT_5_6_5>
		<VALIDATE_STATUS public="1"><x path="Int"/></VALIDATE_STATUS>
		<VENDOR public="1"><x path="Int"/></VENDOR>
		<VERSION public="1"><x path="Int"/></VERSION>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_SHADER public="1"><x path="Int"/></VERTEX_SHADER>
		<VIEWPORT public="1"><x path="Int"/></VIEWPORT>
		<ZERO public="1"><x path="Int"/></ZERO>
		<POINT_SPRITE public="1"><x path="Int"/></POINT_SPRITE>
		<VERTEX_PROGRAM_POINT_SIZE public="1"><x path="Int"/></VERTEX_PROGRAM_POINT_SIZE>
		<READ_BUFFER public="1"><x path="Int"/></READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1"><x path="Int"/></UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1"><x path="Int"/></UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1"><x path="Int"/></UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1"><x path="Int"/></PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1"><x path="Int"/></PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1"><x path="Int"/></PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1"><x path="Int"/></TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1"><x path="Int"/></UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1"><x path="Int"/></UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1"><x path="Int"/></MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1"><x path="Int"/></MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1"><x path="Int"/></MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1"><x path="Int"/></MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1"><x path="Int"/></MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1"><x path="Int"/></MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1"><x path="Int"/></MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1"><x path="Int"/></MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1"><x path="Int"/></MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1"><x path="Int"/></MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1"><x path="Int"/></FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1"><x path="Int"/></RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1"><x path="Int"/></VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1"><x path="Int"/></MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1"><x path="Int"/></MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1"><x path="Int"/></MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1"><x path="Int"/></MAX_ELEMENT_INDEX>
		<RED public="1"><x path="Int"/></RED>
		<RGB8 public="1"><x path="Int"/></RGB8>
		<RGBA8 public="1"><x path="Int"/></RGBA8>
		<RGB10_A2 public="1"><x path="Int"/></RGB10_A2>
		<TEXTURE_3D public="1"><x path="Int"/></TEXTURE_3D>
		<TEXTURE_WRAP_R public="1"><x path="Int"/></TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1"><x path="Int"/></TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1"><x path="Int"/></TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1"><x path="Int"/></TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1"><x path="Int"/></TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1"><x path="Int"/></TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1"><x path="Int"/></TEXTURE_COMPARE_FUNC>
		<SRGB public="1"><x path="Int"/></SRGB>
		<SRGB8 public="1"><x path="Int"/></SRGB8>
		<SRGB8_ALPHA8 public="1"><x path="Int"/></SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1"><x path="Int"/></COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1"><x path="Int"/></RGBA32F>
		<RGB32F public="1"><x path="Int"/></RGB32F>
		<RGBA16F public="1"><x path="Int"/></RGBA16F>
		<RGB16F public="1"><x path="Int"/></RGB16F>
		<TEXTURE_2D_ARRAY public="1"><x path="Int"/></TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1"><x path="Int"/></TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1"><x path="Int"/></R11F_G11F_B10F>
		<RGB9_E5 public="1"><x path="Int"/></RGB9_E5>
		<RGBA32UI public="1"><x path="Int"/></RGBA32UI>
		<RGB32UI public="1"><x path="Int"/></RGB32UI>
		<RGBA16UI public="1"><x path="Int"/></RGBA16UI>
		<RGB16UI public="1"><x path="Int"/></RGB16UI>
		<RGBA8UI public="1"><x path="Int"/></RGBA8UI>
		<RGB8UI public="1"><x path="Int"/></RGB8UI>
		<RGBA32I public="1"><x path="Int"/></RGBA32I>
		<RGB32I public="1"><x path="Int"/></RGB32I>
		<RGBA16I public="1"><x path="Int"/></RGBA16I>
		<RGB16I public="1"><x path="Int"/></RGB16I>
		<RGBA8I public="1"><x path="Int"/></RGBA8I>
		<RGB8I public="1"><x path="Int"/></RGB8I>
		<RED_INTEGER public="1"><x path="Int"/></RED_INTEGER>
		<RGB_INTEGER public="1"><x path="Int"/></RGB_INTEGER>
		<RGBA_INTEGER public="1"><x path="Int"/></RGBA_INTEGER>
		<R8 public="1"><x path="Int"/></R8>
		<RG8 public="1"><x path="Int"/></RG8>
		<R16F public="1"><x path="Int"/></R16F>
		<R32F public="1"><x path="Int"/></R32F>
		<RG16F public="1"><x path="Int"/></RG16F>
		<RG32F public="1"><x path="Int"/></RG32F>
		<R8I public="1"><x path="Int"/></R8I>
		<R8UI public="1"><x path="Int"/></R8UI>
		<R16I public="1"><x path="Int"/></R16I>
		<R16UI public="1"><x path="Int"/></R16UI>
		<R32I public="1"><x path="Int"/></R32I>
		<R32UI public="1"><x path="Int"/></R32UI>
		<RG8I public="1"><x path="Int"/></RG8I>
		<RG8UI public="1"><x path="Int"/></RG8UI>
		<RG16I public="1"><x path="Int"/></RG16I>
		<RG16UI public="1"><x path="Int"/></RG16UI>
		<RG32I public="1"><x path="Int"/></RG32I>
		<RG32UI public="1"><x path="Int"/></RG32UI>
		<R8_SNORM public="1"><x path="Int"/></R8_SNORM>
		<RG8_SNORM public="1"><x path="Int"/></RG8_SNORM>
		<RGB8_SNORM public="1"><x path="Int"/></RGB8_SNORM>
		<RGBA8_SNORM public="1"><x path="Int"/></RGBA8_SNORM>
		<RGB10_A2UI public="1"><x path="Int"/></RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1"><x path="Int"/></TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1"><x path="Int"/></TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1"><x path="Int"/></UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1"><x path="Int"/></UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1"><x path="Int"/></UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1"><x path="Int"/></FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1"><x path="Int"/></UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1"><x path="Int"/></HALF_FLOAT>
		<RG public="1"><x path="Int"/></RG>
		<RG_INTEGER public="1"><x path="Int"/></RG_INTEGER>
		<INT_2_10_10_10_REV public="1"><x path="Int"/></INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1"><x path="Int"/></CURRENT_QUERY>
		<QUERY_RESULT public="1"><x path="Int"/></QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1"><x path="Int"/></QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1"><x path="Int"/></ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1"><x path="Int"/></ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1"><x path="Int"/></MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1"><x path="Int"/></DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1"><x path="Int"/></DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1"><x path="Int"/></DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1"><x path="Int"/></DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1"><x path="Int"/></DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1"><x path="Int"/></DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1"><x path="Int"/></DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1"><x path="Int"/></DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1"><x path="Int"/></DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1"><x path="Int"/></DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1"><x path="Int"/></DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1"><x path="Int"/></DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1"><x path="Int"/></DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1"><x path="Int"/></DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1"><x path="Int"/></DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1"><x path="Int"/></DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1"><x path="Int"/></MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1"><x path="Int"/></COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1"><x path="Int"/></COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1"><x path="Int"/></COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1"><x path="Int"/></COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1"><x path="Int"/></COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1"><x path="Int"/></COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1"><x path="Int"/></COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1"><x path="Int"/></COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1"><x path="Int"/></COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1"><x path="Int"/></COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1"><x path="Int"/></COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1"><x path="Int"/></COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1"><x path="Int"/></COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1"><x path="Int"/></COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1"><x path="Int"/></COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1"><x path="Int"/></SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1"><x path="Int"/></SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1"><x path="Int"/></SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1"><x path="Int"/></SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1"><x path="Int"/></SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1"><x path="Int"/></INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1"><x path="Int"/></INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1"><x path="Int"/></INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1"><x path="Int"/></INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1"><x path="Int"/></UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1"><x path="Int"/></UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1"><x path="Int"/></UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1"><x path="Int"/></UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1"><x path="Int"/></MAX_SAMPLES>
		<SAMPLER_BINDING public="1"><x path="Int"/></SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1"><x path="Int"/></PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1"><x path="Int"/></PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1"><x path="Int"/></PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1"><x path="Int"/></PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1"><x path="Int"/></COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1"><x path="Int"/></COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1"><x path="Int"/></COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1"><x path="Int"/></COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1"><x path="Int"/></FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1"><x path="Int"/></FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1"><x path="Int"/></FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1"><x path="Int"/></FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1"><x path="Int"/></FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1"><x path="Int"/></FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1"><x path="Int"/></UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1"><x path="Int"/></UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1"><x path="Int"/></UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1"><x path="Int"/></UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1"><x path="Int"/></SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1"><x path="Int"/></TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1"><x path="Int"/></MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1"><x path="Int"/></TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1"><x path="Int"/></TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1"><x path="Int"/></TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1"><x path="Int"/></TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1"><x path="Int"/></MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1"><x path="Int"/></MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1"><x path="Int"/></INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1"><x path="Int"/></SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1"><x path="Int"/></TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1"><x path="Int"/></TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1"><x path="Int"/></TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1"><x path="Int"/></TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1"><x path="Int"/></TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1"><x path="Int"/></TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1"><x path="Int"/></FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1"><x path="Int"/></DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1"><x path="Int"/></DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1"><x path="Int"/></READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1"><x path="Int"/></DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1"><x path="Int"/></READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1"><x path="Int"/></RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1"><x path="Int"/></UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1"><x path="Int"/></UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1"><x path="Int"/></UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1"><x path="Int"/></UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1"><x path="Int"/></MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1"><x path="Int"/></MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1"><x path="Int"/></MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1"><x path="Int"/></MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1"><x path="Int"/></MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1"><x path="Int"/></MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1"><x path="Int"/></MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1"><x path="Int"/></UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1"><x path="Int"/></ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1"><x path="Int"/></UNIFORM_TYPE>
		<UNIFORM_SIZE public="1"><x path="Int"/></UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1"><x path="Int"/></UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1"><x path="Int"/></UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1"><x path="Int"/></UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1"><x path="Int"/></UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1"><x path="Int"/></UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1"><x path="Int"/></UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1"><x path="Int"/></UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1"><x path="Int"/></UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1"><x path="Int"/></UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1"><x path="Int"/></UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1"><x path="Int"/></UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1"><x path="Int"/></OBJECT_TYPE>
		<SYNC_CONDITION public="1"><x path="Int"/></SYNC_CONDITION>
		<SYNC_STATUS public="1"><x path="Int"/></SYNC_STATUS>
		<SYNC_FLAGS public="1"><x path="Int"/></SYNC_FLAGS>
		<SYNC_FENCE public="1"><x path="Int"/></SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1"><x path="Int"/></SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1"><x path="Int"/></UNSIGNALED>
		<SIGNALED public="1"><x path="Int"/></SIGNALED>
		<ALREADY_SIGNALED public="1"><x path="Int"/></ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1"><x path="Int"/></TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1"><x path="Int"/></CONDITION_SATISFIED>
		<WAIT_FAILED public="1"><x path="Int"/></WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1"><x path="Int"/></SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1"><x path="Int"/></COLOR>
		<DEPTH public="1"><x path="Int"/></DEPTH>
		<STENCIL public="1"><x path="Int"/></STENCIL>
		<MIN public="1"><x path="Int"/></MIN>
		<MAX public="1"><x path="Int"/></MAX>
		<DEPTH_COMPONENT24 public="1"><x path="Int"/></DEPTH_COMPONENT24>
		<STREAM_READ public="1"><x path="Int"/></STREAM_READ>
		<STREAM_COPY public="1"><x path="Int"/></STREAM_COPY>
		<STATIC_READ public="1"><x path="Int"/></STATIC_READ>
		<STATIC_COPY public="1"><x path="Int"/></STATIC_COPY>
		<DYNAMIC_READ public="1"><x path="Int"/></DYNAMIC_READ>
		<DYNAMIC_COPY public="1"><x path="Int"/></DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1"><x path="Int"/></DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1"><x path="Int"/></DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1"><x path="Int"/></INVALID_INDEX>
		<TIMEOUT_IGNORED public="1"><x path="Int"/></TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1"><x path="Int"/></MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<type public="1" set="null"><e path="lime.graphics.opengl.GLContextType"/></type>
		<version public="1" set="null"><x path="Float"/></version>
		<activeTexture public="1" set="method" line="631"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" set="method" line="632"><f a="program:shader">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></attachShader>
		<beginQuery public="1" set="method" line="633"><f a="target:query">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></beginQuery>
		<beginTransformFeedback public="1" set="method" line="634"><f a="primitiveNode">
	<x path="Int"/>
	<x path="Void"/>
</f></beginTransformFeedback>
		<bindAttribLocation public="1" set="method" line="635"><f a="program:index:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" set="method" line="636"><f a="target:buffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindBufferBase public="1" set="method" line="637"><f a="target:index:buffer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBufferBase>
		<bindBufferRange public="1" set="method" line="638"><f a="target:index:buffer:offset:size">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bindBufferRange>
		<bindFramebuffer public="1" set="method" line="639"><f a="target:framebuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" set="method" line="640"><f a="target:renderbuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindSampler public="1" set="method" line="641"><f a="unit:sampler">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></bindSampler>
		<bindTexture public="1" set="method" line="642"><f a="target:texture">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></bindTexture>
		<bindTransformFeedback public="1" set="method" line="643"><f a="target:transformFeedback">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></bindTransformFeedback>
		<bindVertexArray public="1" set="method" line="644"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></bindVertexArray>
		<blitFramebuffer public="1" set="method" line="645"><f a="srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blitFramebuffer>
		<blendColor public="1" set="method" line="646"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" set="method" line="647"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" set="method" line="648"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" set="method" line="649"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" set="method" line="650"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" set="method" line="651"><f a="target:size:data:usage">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<bufferSubData public="1" set="method" line="655"><f a="target:dstByteOffset:size:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></bufferSubData>
		<checkFramebufferStatus public="1" set="method" line="659"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" set="method" line="660"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearBufferfi public="1" set="method" line="661"><f a="buffer:drawbuffer:depth:stencil">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearBufferfi>
		<clearBufferfv public="1" set="method" line="662"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferfv>
		<clearBufferiv public="1" set="method" line="666"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferiv>
		<clearBufferuiv public="1" set="method" line="670"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferuiv>
		<clearColor public="1" set="method" line="674"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepthf public="1" set="method" line="675"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepthf>
		<clearStencil public="1" set="method" line="676"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<clientWaitSync public="1" set="method" line="677"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></clientWaitSync>
		<colorMask public="1" set="method" line="678"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" set="method" line="679"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" set="method" line="680"><f a="target:level:internalformat:width:height:border:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexImage3D public="1" set="method" line="684"><f a="target:level:internalformat:width:height:depth:border:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexImage3D>
		<compressedTexSubImage2D public="1" set="method" line="688"><f a="target:level:xoffset:yoffset:width:height:format:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<compressedTexSubImage3D public="1" set="method" line="692"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexSubImage3D>
		<copyBufferSubData public="1" set="method" line="696"><f a="readTarget:writeTarget:readOffset:writeOffset:size">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyBufferSubData>
		<copyTexImage2D public="1" set="method" line="697"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" set="method" line="698"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<copyTexSubImage3D public="1" set="method" line="699"><f a="target:level:xoffset:yoffset:zoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage3D>
		<createBuffer public="1" set="method" line="700"><f a=""><t path="lime.graphics.opengl.GLBuffer"/></f></createBuffer>
		<createFramebuffer public="1" set="method" line="701"><f a=""><t path="lime.graphics.opengl.GLFramebuffer"/></f></createFramebuffer>
		<createProgram public="1" set="method" line="702"><f a=""><t path="lime.graphics.opengl.GLProgram"/></f></createProgram>
		<createQuery public="1" set="method" line="703"><f a=""><t path="lime.graphics.opengl.GLQuery"/></f></createQuery>
		<createRenderbuffer public="1" set="method" line="704"><f a=""><t path="lime.graphics.opengl.GLRenderbuffer"/></f></createRenderbuffer>
		<createSampler public="1" set="method" line="705"><f a=""><t path="lime.graphics.opengl.GLSampler"/></f></createSampler>
		<createShader public="1" set="method" line="706"><f a="type">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShader"/>
</f></createShader>
		<createTexture public="1" set="method" line="707"><f a=""><t path="lime.graphics.opengl.GLTexture"/></f></createTexture>
		<createTransformFeedback public="1" set="method" line="708"><f a=""><t path="lime.graphics.opengl.GLTransformFeedback"/></f></createTransformFeedback>
		<createVertexArray public="1" set="method" line="709"><f a=""><t path="lime.graphics.opengl.GLVertexArrayObject"/></f></createVertexArray>
		<cullFace public="1" set="method" line="710"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" set="method" line="711"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" set="method" line="712"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" set="method" line="713"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteQuery public="1" set="method" line="714"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></deleteQuery>
		<deleteRenderbuffer public="1" set="method" line="715"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteSampler public="1" set="method" line="716"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></deleteSampler>
		<deleteShader public="1" set="method" line="717"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteSync public="1" set="method" line="718"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Void"/>
</f></deleteSync>
		<deleteTexture public="1" set="method" line="719"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></deleteTexture>
		<deleteTransformFeedback public="1" set="method" line="720"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></deleteTransformFeedback>
		<deleteVertexArray public="1" set="method" line="721"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></deleteVertexArray>
		<depthFunc public="1" set="method" line="722"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" set="method" line="723"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRangef public="1" set="method" line="724"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRangef>
		<detachShader public="1" set="method" line="725"><f a="program:shader">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" set="method" line="726"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" set="method" line="727"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" set="method" line="728"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawArraysInstanced public="1" set="method" line="729"><f a="mode:first:count:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArraysInstanced>
		<drawBuffers public="1" set="method" line="730"><f a="buffers">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></drawBuffers>
		<drawElements public="1" set="method" line="731"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></drawElements>
		<drawElementsInstanced public="1" set="method" line="732"><f a="mode:count:type:offset:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElementsInstanced>
		<drawRangeElements public="1" set="method" line="733"><f a="mode:start:end:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></drawRangeElements>
		<enable public="1" set="method" line="734"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" set="method" line="735"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<endQuery public="1" set="method" line="736"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></endQuery>
		<endTransformFeedback public="1" set="method" line="737"><f a=""><x path="Void"/></f></endTransformFeedback>
		<fenceSync public="1" set="method" line="738"><f a="condition:flags">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSync"/>
</f></fenceSync>
		<finish public="1" set="method" line="739"><f a=""><x path="Void"/></f></finish>
		<flush public="1" set="method" line="740"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" set="method" line="741"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" set="method" line="742"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<framebufferTextureLayer public="1" set="method" line="743"><f a="target:attachment:texture:level:layer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTextureLayer>
		<frontFace public="1" set="method" line="744"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" set="method" line="745"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" set="method" line="746"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" set="method" line="747"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveUniform>
		<getActiveUniformBlocki public="1" set="method" line="748"><f a="program:uniformBlockIndex:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getActiveUniformBlocki>
		<getActiveUniformBlockiv public="1" set="method" line="749"><f a="program:uniformBlockIndex:pname:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getActiveUniformBlockiv>
		<getActiveUniformBlockName public="1" set="method" line="750"><f a="program:uniformBlockIndex">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
</f></getActiveUniformBlockName>
		<getActiveUniformBlockParameter public="1" set="method" line="751"><f a="program:uniformBlockIndex:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getActiveUniformBlockParameter>
		<getActiveUniforms public="1" set="method" line="752"><f a="program:uniformIndices:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<d/>
</f></getActiveUniforms>
		<getActiveUniformsiv public="1" set="method" line="753"><f a="program:uniformIndices:pname:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getActiveUniformsiv>
		<getAttachedShaders public="1" set="method" line="754"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
</f></getAttachedShaders>
		<getAttribLocation public="1" set="method" line="755"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBoolean public="1" set="method" line="756"><f a="pname">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" set="method" line="757"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBooleanv>
		<getBufferParameter public="1" set="method" line="758"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getBufferParameter>
		<getBufferParameteri public="1" set="method" line="759"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferParameteri>
		<getBufferParameteri64v public="1" set="method" line="760"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferParameteri64v>
		<getBufferParameteriv public="1" set="method" line="761"><f a="target:pname:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferParameteriv>
		<getBufferPointerv public="1" set="method" line="762"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></getBufferPointerv>
		<getBufferSubData public="1" set="method" line="763"><f a="target:offset:size:data">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferSubData>
		<getContextAttributes public="1" set="method" line="767"><f a=""><t path="lime.graphics.opengl.GLContextAttributes"/></f></getContextAttributes>
		<getError public="1" set="method" line="768"><f a=""><x path="Int"/></f></getError>
		<getExtension public="1" set="method" line="769"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFloat public="1" set="method" line="770"><f a="pname">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" set="method" line="771"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getFloatv>
		<getFragDataLocation public="1" set="method" line="772"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getFragDataLocation>
		<getFramebufferAttachmentParameter public="1" set="method" line="773"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getFramebufferAttachmentParameter>
		<getFramebufferAttachmentParameteri public="1" set="method" line="774"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getFramebufferAttachmentParameteri>
		<getFramebufferAttachmentParameteriv public="1" set="method" line="775"><f a="target:attachment:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getFramebufferAttachmentParameteriv>
		<getIndexedParameter public="1" set="method" line="776"><f a="target:index">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getIndexedParameter>
		<getInteger public="1" set="method" line="777"><f a="pname">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getInteger64 public="1" set="method" line="778"><f a="pname">
	<x path="Int"/>
	<x path="haxe.Int64"/>
</f></getInteger64>
		<getInteger64i public="1" set="method" line="779"><f a="pname">
	<x path="Int"/>
	<x path="haxe.Int64"/>
</f></getInteger64i>
		<getInteger64i_v public="1" set="method" line="780"><f a="pname:index:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInteger64i_v>
		<getInteger64v public="1" set="method" line="781"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInteger64v>
		<getIntegeri public="1" set="method" line="782"><f a="pname">
	<x path="Int"/>
	<x path="Int"/>
</f></getIntegeri>
		<getIntegeri_v public="1" set="method" line="783"><f a="pname:index:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getIntegeri_v>
		<getIntegerv public="1" set="method" line="784"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getIntegerv>
		<getInternalformati public="1" set="method" line="785"><f a="target:internalformat:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getInternalformati>
		<getInternalformativ public="1" set="method" line="786"><f a="target:internalformat:pname:bufSize:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInternalformativ>
		<getInternalformatParameter public="1" set="method" line="787"><f a="target:internalformat:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getInternalformatParameter>
		<getParameter public="1" set="method" line="788"><f a="pname">
	<x path="Int"/>
	<d/>
</f></getParameter>
		<getProgrami public="1" set="method" line="789"><f a="program:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getProgrami>
		<getProgramiv public="1" set="method" line="790"><f a="program:pname:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getProgramiv>
		<getProgramBinary public="1" set="method" line="791"><f a="program:binaryFormat">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></getProgramBinary>
		<getProgramInfoLog public="1" set="method" line="792"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" set="method" line="793"><f a="program:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<d/>
</f></getProgramParameter>
		<getQuery public="1" set="method" line="794"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
</f></getQuery>
		<getQueryi public="1" set="method" line="795"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getQueryi>
		<getQueryiv public="1" set="method" line="796"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getQueryiv>
		<getQueryObjectui public="1" set="method" line="797"><f a="query:pname">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getQueryObjectui>
		<getQueryObjectuiv public="1" set="method" line="798"><f a="query:pname:params">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getQueryObjectuiv>
		<getQueryParameter public="1" set="method" line="799"><f a="query:pname">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<d/>
</f></getQueryParameter>
		<getRenderbufferParameter public="1" set="method" line="800"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getRenderbufferParameter>
		<getRenderbufferParameteri public="1" set="method" line="801"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getRenderbufferParameteri>
		<getRenderbufferParameteriv public="1" set="method" line="802"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getRenderbufferParameteriv>
		<getSamplerParameter public="1" set="method" line="803"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<d/>
</f></getSamplerParameter>
		<getSamplerParameterf public="1" set="method" line="804"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSamplerParameterf>
		<getSamplerParameterfv public="1" set="method" line="805"><f a="sampler:pname:params">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSamplerParameterfv>
		<getSamplerParameteri public="1" set="method" line="806"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSamplerParameteri>
		<getSamplerParameteriv public="1" set="method" line="807"><f a="sampler:pname:params">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSamplerParameteriv>
		<getShaderi public="1" set="method" line="808"><f a="shader:pname">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getShaderi>
		<getShaderiv public="1" set="method" line="809"><f a="shader:pname:params">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getShaderiv>
		<getShaderInfoLog public="1" set="method" line="810"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" set="method" line="811"><f a="shader:pname">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<d/>
</f></getShaderParameter>
		<getShaderPrecisionFormat public="1" set="method" line="812"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" set="method" line="813"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderSource>
		<getString public="1" set="method" line="814"><f a="pname">
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<getStringi public="1" set="method" line="815"><f a="name:index">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></getStringi>
		<getSupportedExtensions public="1" set="method" line="816"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getSyncParameter public="1" set="method" line="817"><f a="sync:pname">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<d/>
</f></getSyncParameter>
		<getSyncParameteri public="1" set="method" line="818"><f a="sync:pname">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSyncParameteri>
		<getSyncParameteriv public="1" set="method" line="819"><f a="sync:pname:params">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSyncParameteriv>
		<getTexParameter public="1" set="method" line="820"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getTexParameter>
		<getTexParameterf public="1" set="method" line="821"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getTexParameterf>
		<getTexParameterfv public="1" set="method" line="822"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getTexParameterfv>
		<getTexParameteri public="1" set="method" line="823"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getTexParameteri>
		<getTexParameteriv public="1" set="method" line="824"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getTexParameteriv>
		<getTransformFeedbackVarying public="1" set="method" line="825"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getTransformFeedbackVarying>
		<getUniform public="1" set="method" line="826"><f a="program:location">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
</f></getUniform>
		<getUniformf public="1" set="method" line="827"><f a="program:location">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
</f></getUniformf>
		<getUniformfv public="1" set="method" line="828"><f a="program:location:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformfv>
		<getUniformi public="1" set="method" line="829"><f a="program:location">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
</f></getUniformi>
		<getUniformiv public="1" set="method" line="830"><f a="program:location:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformiv>
		<getUniformui public="1" set="method" line="831"><f a="program:location">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
</f></getUniformui>
		<getUniformuiv public="1" set="method" line="832"><f a="program:location:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformuiv>
		<getUniformBlockIndex public="1" set="method" line="833"><f a="program:uniformBlockName">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getUniformBlockIndex>
		<getUniformIndices public="1" set="method" line="834"><f a="program:uniformNames">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><x path="Int"/></c>
</f></getUniformIndices>
		<getUniformLocation public="1" set="method" line="835"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" set="method" line="836"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getVertexAttrib>
		<getVertexAttribf public="1" set="method" line="837"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getVertexAttribf>
		<getVertexAttribfv public="1" set="method" line="838"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribfv>
		<getVertexAttribi public="1" set="method" line="839"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribi>
		<getVertexAttribIi public="1" set="method" line="840"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribIi>
		<getVertexAttribIiv public="1" set="method" line="841"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribIiv>
		<getVertexAttribIui public="1" set="method" line="842"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribIui>
		<getVertexAttribIuiv public="1" set="method" line="843"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribIuiv>
		<getVertexAttribiv public="1" set="method" line="844"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribiv>
		<getVertexAttribPointerv public="1" set="method" line="845"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribPointerv>
		<hint public="1" set="method" line="846"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<invalidateFramebuffer public="1" set="method" line="847"><f a="target:attachments">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" set="method" line="848"><f a="target:attachments:x:y:width:height">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></invalidateSubFramebuffer>
		<isBuffer public="1" set="method" line="849"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isContextLost public="1" set="method" line="850"><f a=""><x path="Bool"/></f></isContextLost>
		<isEnabled public="1" set="method" line="851"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" set="method" line="852"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" set="method" line="853"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Bool"/>
</f></isProgram>
		<isQuery public="1" set="method" line="854"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Bool"/>
</f></isQuery>
		<isRenderbuffer public="1" set="method" line="855"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isSampler public="1" set="method" line="856"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Bool"/>
</f></isSampler>
		<isShader public="1" set="method" line="857"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Bool"/>
</f></isShader>
		<isSync public="1" set="method" line="858"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Bool"/>
</f></isSync>
		<isTexture public="1" set="method" line="859"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Bool"/>
</f></isTexture>
		<isTransformFeedback public="1" set="method" line="860"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Bool"/>
</f></isTransformFeedback>
		<isVertexArray public="1" set="method" line="861"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Bool"/>
</f></isVertexArray>
		<lineWidth public="1" set="method" line="862"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" set="method" line="863"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></linkProgram>
		<mapBufferRange public="1" set="method" line="864"><f a="target:offset:length:access">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></mapBufferRange>
		<pauseTransformFeedback public="1" set="method" line="865"><f a=""><x path="Void"/></f></pauseTransformFeedback>
		<pixelStorei public="1" set="method" line="866"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" set="method" line="867"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<programBinary public="1" set="method" line="868"><f a="program:binaryFormat:binary:length">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></programBinary>
		<programParameteri public="1" set="method" line="869"><f a="program:pname:value">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></programParameteri>
		<readBuffer public="1" set="method" line="870"><f a="src">
	<x path="Int"/>
	<x path="Void"/>
</f></readBuffer>
		<readPixels public="1" set="method" line="871"><f a="x:y:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></readPixels>
		<releaseShaderCompiler public="1" set="method" line="875"><f a=""><x path="Void"/></f></releaseShaderCompiler>
		<renderbufferStorage public="1" set="method" line="876"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<renderbufferStorageMultisample public="1" set="method" line="877"><f a="target:samples:internalFormat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" set="method" line="878"><f a=""><x path="Void"/></f></resumeTransformFeedback>
		<sampleCoverage public="1" set="method" line="879"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<samplerParameterf public="1" set="method" line="880"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></samplerParameterf>
		<samplerParameteri public="1" set="method" line="881"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></samplerParameteri>
		<scissor public="1" set="method" line="882"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderBinary public="1" set="method" line="883"><f a="shaders:binaryformat:binary:length">
	<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></shaderBinary>
		<shaderSource public="1" set="method" line="884"><f a="shader:string">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" set="method" line="885"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" set="method" line="886"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" set="method" line="887"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" set="method" line="888"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" set="method" line="889"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" set="method" line="890"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" set="method" line="891"><f a="target:level:internalformat:width:height:border:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texImage2D>
		<texImage3D public="1" set="method" line="895"><f a="target:level:internalformat:width:height:depth:border:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texImage3D>
		<texStorage2D public="1" set="method" line="899"><f a="target:level:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage2D>
		<texStorage3D public="1" set="method" line="900"><f a="target:level:internalformat:width:height:depth">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage3D>
		<texParameterf public="1" set="method" line="901"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" set="method" line="902"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" set="method" line="903"><f a="target:level:xoffset:yoffset:width:height:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texSubImage2D>
		<texSubImage3D public="1" set="method" line="907"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texSubImage3D>
		<transformFeedbackVaryings public="1" set="method" line="911"><f a="program:varyings:bufferMode">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></transformFeedbackVaryings>
		<uniform1f public="1" set="method" line="912"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" set="method" line="913"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" set="method" line="917"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" set="method" line="918"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1iv>
		<uniform1ui public="1" set="method" line="922"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1ui>
		<uniform1uiv public="1" set="method" line="923"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1uiv>
		<uniform2f public="1" set="method" line="927"><f a="location:v0:v1">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" set="method" line="928"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" set="method" line="932"><f a="location:v0:v1">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" set="method" line="933"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2iv>
		<uniform2ui public="1" set="method" line="937"><f a="location:v0:v1">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2ui>
		<uniform2uiv public="1" set="method" line="938"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2uiv>
		<uniform3f public="1" set="method" line="942"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" set="method" line="943"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" set="method" line="947"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" set="method" line="948"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3iv>
		<uniform3ui public="1" set="method" line="952"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3ui>
		<uniform3uiv public="1" set="method" line="953"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3uiv>
		<uniform4f public="1" set="method" line="957"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" set="method" line="958"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" set="method" line="962"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" set="method" line="963"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4iv>
		<uniform4ui public="1" set="method" line="967"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4ui>
		<uniform4uiv public="1" set="method" line="968"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4uiv>
		<uniformBlockBinding public="1" set="method" line="972"><f a="program:uniformBlockIndex:uniformBlockBinding">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformBlockBinding>
		<uniformMatrix2fv public="1" set="method" line="973"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix2x3fv public="1" set="method" line="977"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2x3fv>
		<uniformMatrix2x4fv public="1" set="method" line="981"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2x4fv>
		<uniformMatrix3fv public="1" set="method" line="985"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix3x2fv public="1" set="method" line="989"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3x2fv>
		<uniformMatrix3x4fv public="1" set="method" line="993"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3x4fv>
		<uniformMatrix4fv public="1" set="method" line="997"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4fv>
		<uniformMatrix4x2fv public="1" set="method" line="1001"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4x2fv>
		<uniformMatrix4x3fv public="1" set="method" line="1005"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4x3fv>
		<unmapBuffer public="1" set="method" line="1009"><f a="target">
	<x path="Int"/>
	<x path="Bool"/>
</f></unmapBuffer>
		<useProgram public="1" set="method" line="1010"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" set="method" line="1011"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" set="method" line="1012"><f a="indx:v0">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" set="method" line="1013"><f a="indx:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" set="method" line="1017"><f a="indx:v0:v1">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" set="method" line="1018"><f a="indx:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" set="method" line="1022"><f a="indx:v0:v1:v2">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" set="method" line="1023"><f a="indx:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" set="method" line="1027"><f a="indx:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" set="method" line="1028"><f a="indx:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribDivisor public="1" set="method" line="1032"><f a="index:divisor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribDivisor>
		<vertexAttribI4i public="1" set="method" line="1033"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4i>
		<vertexAttribI4iv public="1" set="method" line="1034"><f a="index:value">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4iv>
		<vertexAttribI4ui public="1" set="method" line="1038"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4ui>
		<vertexAttribI4uiv public="1" set="method" line="1039"><f a="index:value">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4uiv>
		<vertexAttribIPointer public="1" set="method" line="1043"><f a="index:size:type:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribIPointer>
		<vertexAttribPointer public="1" set="method" line="1044"><f a="index:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" set="method" line="1045"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<waitSync public="1" set="method" line="1046"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></waitSync>
		<new set="method" line="629"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.graphics.Image" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/Image.hx">
		<__base64Chars expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;" line="91" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</e></m></meta>
		</__base64Chars>
		<__base64Encoder static="1"><c path="haxe.crypto.BaseCode"/></__base64Encoder>
		<fromBase64 public="1" set="method" line="502" static="1"><f a="base64:type">
	<c path="String"/>
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</f></fromBase64>
		<fromBitmapData public="1" set="method" line="513" static="1"><f a="bitmapData">
	<t path="flash.display.BitmapData"/>
	<c path="lime.graphics.Image"/>
</f></fromBitmapData>
		<fromBytes public="1" set="method" line="530" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.graphics.Image"/>
</f></fromBytes>
		<fromCanvas public="1" set="method" line="543" static="1"><f a="canvas">
	<d/>
	<c path="lime.graphics.Image"/>
</f></fromCanvas>
		<fromFile public="1" set="method" line="556" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</f></fromFile>
		<fromImageElement public="1" set="method" line="569" static="1"><f a="image">
	<d/>
	<c path="lime.graphics.Image"/>
</f></fromImageElement>
		<loadFromBase64 public="1" set="method" line="764" static="1"><f a="base64:type">
	<c path="String"/>
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
</f></loadFromBase64>
		<loadFromBytes public="1" set="method" line="781" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
</f></loadFromBytes>
		<loadFromFile public="1" set="method" line="851" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
</f></loadFromFile>
		<__base64Encode set="method" line="1212" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="String"/>
</f></__base64Encode>
		<__isGIF set="method" line="1579" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isGIF>
		<__isJPG set="method" line="1589" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isJPG>
		<__isPNG set="method" line="1598" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isPNG>
		<__isWebP set="method" line="1607" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isWebP>
		<buffer public="1"><c path="lime.graphics.ImageBuffer"/></buffer>
		<data public="1" get="accessor" set="accessor"><x path="lime.utils.UInt8Array"/></data>
		<dirty public="1"><x path="Bool"/></dirty>
		<format public="1" get="accessor" set="accessor"><x path="lime.graphics.PixelFormat"/></format>
		<height public="1"><x path="Int"/></height>
		<offsetX public="1"><x path="Int"/></offsetX>
		<offsetY public="1"><x path="Int"/></offsetY>
		<powerOfTwo public="1" get="accessor" set="accessor"><x path="Bool"/></powerOfTwo>
		<premultiplied public="1" get="accessor" set="accessor"><x path="Bool"/></premultiplied>
		<rect public="1" get="accessor" set="null"><c path="lime.math.Rectangle"/></rect>
		<src public="1" get="accessor" set="accessor"><d/></src>
		<transparent public="1" get="accessor" set="accessor"><x path="Bool"/></transparent>
		<type public="1"><e path="lime.graphics.ImageType"/></type>
		<version public="1"><x path="Int"/></version>
		<width public="1"><x path="Int"/></width>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<clone public="1" set="method" line="185"><f a=""><c path="lime.graphics.Image"/></f></clone>
		<colorTransform public="1" set="method" line="214"><f a="rect:colorMatrix">
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<copyChannel public="1" set="method" line="245"><f a="sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="297">
			<f a="sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v=":::null:null:false">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaImage : null }</e></m></meta>
		</copyPixels>
		<encode public="1" set="method" line="398">
			<f a="?format:?quality" v="&quot;png&quot;:90">
				<c path="String"/>
				<x path="Int"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ quality : 90, format : "png" }</e></m></meta>
		</encode>
		<fillRect public="1" set="method" line="423">
			<f a="rect:color:?format" v="::null">
				<c path="lime.math.Rectangle"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
		</fillRect>
		<floodFill public="1" set="method" line="465">
			<f a="x:y:color:?format" v=":::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
		</floodFill>
		<getColorBoundsRect public="1" set="method" line="582">
			<f a="mask:color:?findColor:?format" v="::true:null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.graphics.PixelFormat"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ format : null, findColor : true }</e></m></meta>
		</getColorBoundsRect>
		<getPixel public="1" set="method" line="613">
			<f a="x:y:?format" v="::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
		</getPixel>
		<getPixel32 public="1" set="method" line="652">
			<f a="x:y:?format" v="::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
		</getPixel32>
		<getPixels public="1" set="method" line="691">
			<f a="rect:?format" v=":null">
				<c path="lime.math.Rectangle"/>
				<x path="lime.graphics.PixelFormat"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
		</getPixels>
		<merge public="1" set="method" line="909"><f a="sourceImage:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></merge>
		<resize public="1" set="method" line="943"><f a="newWidth:newHeight">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<scroll public="1" set="method" line="980"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scroll>
		<setPixel public="1" set="method" line="1005">
			<f a="x:y:color:?format" v=":::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
		</setPixel>
		<setPixel32 public="1" set="method" line="1042">
			<f a="x:y:color:?format" v=":::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
		</setPixel32>
		<setPixels public="1" set="method" line="1079">
			<f a="rect:bytePointer:?format:?endian" v="::null:null">
				<c path="lime.math.Rectangle"/>
				<x path="lime.utils.BytePointer"/>
				<x path="lime.graphics.PixelFormat"/>
				<e path="lime.system.Endian"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ endian : null, format : null }</e></m></meta>
		</setPixels>
		<threshold public="1" set="method" line="1165">
			<f a="sourceImage:sourceRect:destPoint:operation:threshold:?color:?mask:?copySource:?format" v=":::::0x00000000:0xFFFFFFFF:false:null">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ format : null, copySource : false, mask : 0xFFFFFFFF, color : 0x00000000 }</e></m></meta>
		</threshold>
		<__clipRect set="method" line="1241"><f a="r">
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Rectangle"/>
</f></__clipRect>
		<__fromBase64 set="method" line="1284">
			<f a="base64:type:?onload" v="::null">
				<c path="String"/>
				<c path="String"/>
				<f a="">
					<c path="lime.graphics.Image"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ onload : null }</e></m></meta>
		</__fromBase64>
		<__fromBytes set="method" line="1314">
			<f a="bytes:?onload" v=":null">
				<c path="haxe.io.Bytes"/>
				<f a="">
					<c path="lime.graphics.Image"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ onload : null }</e></m></meta>
		</__fromBytes>
		<__fromFile set="method" line="1379">
			<f a="path:?onload:?onerror" v=":null:null">
				<c path="String"/>
				<f a="">
					<c path="lime.graphics.Image"/>
					<x path="Void"/>
				</f>
				<f a=""><x path="Void"/></f>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ onerror : null, onload : null }</e></m></meta>
		</__fromFile>
		<__fromImageBuffer set="method" line="1556"><f a="buffer">
	<c path="lime.graphics.ImageBuffer"/>
	<x path="Void"/>
</f></__fromImageBuffer>
		<get_data set="method" line="1623"><f a=""><x path="lime.utils.UInt8Array"/></f></get_data>
		<set_data set="method" line="1645"><f a="value">
	<x path="lime.utils.UInt8Array"/>
	<x path="lime.utils.UInt8Array"/>
</f></set_data>
		<get_format set="method" line="1652"><f a=""><x path="lime.graphics.PixelFormat"/></f></get_format>
		<set_format set="method" line="1659"><f a="value">
	<x path="lime.graphics.PixelFormat"/>
	<x path="lime.graphics.PixelFormat"/>
</f></set_format>
		<get_powerOfTwo set="method" line="1680"><f a=""><x path="Bool"/></f></get_powerOfTwo>
		<set_powerOfTwo set="method" line="1687"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_powerOfTwo>
		<get_premultiplied set="method" line="1737"><f a=""><x path="Bool"/></f></get_premultiplied>
		<set_premultiplied set="method" line="1744"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_premultiplied>
		<get_rect set="method" line="1789"><f a=""><c path="lime.math.Rectangle"/></f></get_rect>
		<get_src set="method" line="1796"><f a=""><d/></f></get_src>
		<set_src set="method" line="1811"><f a="value">
	<d/>
	<d/>
</f></set_src>
		<get_transparent set="method" line="1818"><f a=""><x path="Bool"/></f></get_transparent>
		<set_transparent set="method" line="1826"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_transparent>
		<new public="1" set="method" line="113">
			<f a="?buffer:?offsetX:?offsetY:?width:?height:?color:?type" v="null:0:0:-1:-1:null:null">
				<c path="lime.graphics.ImageBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<e path="lime.graphics.ImageType"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ type : null, color : null, height : -1, width : -1, offsetY : 0, offsetX : 0, buffer : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":autoBuild"><e>lime._macros.AssetsMacro.embedImage()</e></m>
			<m n=":allow"><e>lime.graphics.util.ImageCanvasUtil</e></m>
			<m n=":allow"><e>lime.graphics.util.ImageDataUtil</e></m>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.app.Application</e></m>
			<m n=":access"><e>lime.math.ColorMatrix</e></m>
			<m n=":access"><e>lime.math.Rectangle</e></m>
			<m n=":access"><e>lime.math.Vector2</e></m>
		</meta>
	</class>
	<class path="lime.graphics.ImageBuffer" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/ImageBuffer.hx">
		<bitsPerPixel public="1"><x path="Int"/></bitsPerPixel>
		<data public="1"><x path="lime.utils.UInt8Array"/></data>
		<format public="1"><x path="lime.graphics.PixelFormat"/></format>
		<height public="1"><x path="Int"/></height>
		<premultiplied public="1"><x path="Bool"/></premultiplied>
		<src public="1" get="accessor" set="accessor"><d/></src>
		<stride public="1" get="accessor" set="null"><x path="Int"/></stride>
		<transparent public="1"><x path="Bool"/></transparent>
		<width public="1"><x path="Int"/></width>
		<__srcBitmapData>
			<t path="flash.display.BitmapData"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcBitmapData>
		<__srcCanvas>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCanvas>
		<__srcContext>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcContext>
		<__srcCustom>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCustom>
		<__srcImage>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcImage>
		<__srcImageData>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcImageData>
		<clone public="1" set="method" line="62"><f a=""><c path="lime.graphics.ImageBuffer"/></f></clone>
		<get_src set="method" line="133"><f a=""><d/></f></get_src>
		<set_src set="method" line="153"><f a="value">
	<d/>
	<d/>
</f></set_src>
		<get_stride set="method" line="183"><f a=""><x path="Int"/></f></get_stride>
		<new public="1" set="method" line="49">
			<f a="?data:?width:?height:?bitsPerPixel:?format" v="null:0:0:32:null">
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null, bitsPerPixel : 32, height : 0, width : 0, data : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":allow"><e>lime.graphics.Image</e></m>
		</meta>
	</class>
	<enum path="lime.graphics.ImageChannel" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/ImageChannel.hx">
		<RED/>
		<GREEN/>
		<BLUE/>
		<ALPHA/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<enum path="lime.graphics.ImageType" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/ImageType.hx">
		<CANVAS/>
		<DATA/>
		<FLASH/>
		<CUSTOM/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<abstract path="lime.graphics.PixelFormat" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/PixelFormat.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics._PixelFormat.PixelFormat_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/PixelFormat.hx" private="1" module="lime.graphics.PixelFormat" extern="1">
	<RGBA32 public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGBA32>
	<ARGB32 public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ARGB32>
	<BGRA32 public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BGRA32>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._PixelFormat.PixelFormat_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/PixelFormat.hx" private="1" module="lime.graphics.PixelFormat" extern="1">
		<RGBA32 public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGBA32>
		<ARGB32 public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ARGB32>
		<BGRA32 public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BGRA32>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<enum path="lime.graphics.RenderContext" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/RenderContext.hx">
		<OPENGL a="gl"><c path="lime.graphics.GLRenderContext"/></OPENGL>
		<CANVAS a="context"><c path="lime.graphics.CanvasRenderContext"/></CANVAS>
		<DOM a="element"><c path="lime.graphics.DOMRenderContext"/></DOM>
		<FLASH a="stage"><c path="lime.graphics.FlashRenderContext"/></FLASH>
		<CAIRO a="cairo"><t path="lime.graphics.CairoRenderContext"/></CAIRO>
		<CONSOLE a="context"><c path="lime.graphics.ConsoleRenderContext"/></CONSOLE>
		<CUSTOM a="data"><d/></CUSTOM>
		<NONE/>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="lime.graphics.Renderer" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/Renderer.hx">
		<context public="1"><e path="lime.graphics.RenderContext"/></context>
		<onContextLost public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onContextLost>
		<onContextRestored public="1" expr="new Event&lt;RenderContext&gt;()">
			<c path="lime.app.Event"><f a="">
	<e path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<RenderContext>()]]></e></m></meta>
		</onContextRestored>
		<onRender public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onRender>
		<type public="1"><e path="lime.graphics.RendererType"/></type>
		<window public="1"><c path="lime.ui.Window"/></window>
		<backend>
			<t path="lime.graphics._Renderer.RendererBackend"/>
			<meta><m n=":noCompletion"/></meta>
		</backend>
		<create public="1" set="method" line="38"><f a=""><x path="Void"/></f></create>
		<flip public="1" set="method" line="45"><f a=""><x path="Void"/></f></flip>
		<readPixels public="1" set="method" line="52">
			<f a="?rect" v="null">
				<c path="lime.math.Rectangle"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ rect : null }</e></m></meta>
		</readPixels>
		<render set="method" line="59"><f a=""><x path="Void"/></f></render>
		<new public="1" set="method" line="27"><f a="window">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.graphics._Renderer.RendererBackend" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/Renderer.hx" private="1" module="lime.graphics.Renderer">
		<c path="lime._backend.flash.FlashRenderer"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<enum path="lime.graphics.RendererType" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/RendererType.hx">
		<OPENGL/>
		<CANVAS/>
		<DOM/>
		<FLASH/>
		<CAIRO/>
		<CONSOLE/>
		<CUSTOM/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime.graphics.cairo.Cairo" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/Cairo.hx">
		<version public="1" get="accessor" set="null" static="1"><x path="Int"/></version>
		<versionString public="1" get="accessor" set="null" static="1"><c path="String"/></versionString>
		<get_version set="method" line="870" static="1"><f a=""><x path="Int"/></f></get_version>
		<get_versionString set="method" line="881" static="1"><f a=""><c path="String"/></f></get_versionString>
		<antialias public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoAntialias"/></antialias>
		<currentPoint public="1" get="accessor" set="null"><c path="lime.math.Vector2"/></currentPoint>
		<dash public="1" get="accessor" set="accessor"><c path="Array"><x path="Float"/></c></dash>
		<dashCount public="1" get="accessor" set="null"><x path="Int"/></dashCount>
		<fillRule public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoFillRule"/></fillRule>
		<fontFace public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoFontFace"/></fontFace>
		<fontOptions public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoFontOptions"/></fontOptions>
		<groupTarget public="1" get="accessor" set="null"><x path="lime.graphics.cairo.CairoSurface"/></groupTarget>
		<hasCurrentPoint public="1" get="accessor" set="null"><x path="Bool"/></hasCurrentPoint>
		<lineCap public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoLineCap"/></lineCap>
		<lineJoin public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoLineJoin"/></lineJoin>
		<lineWidth public="1" get="accessor" set="accessor"><x path="Float"/></lineWidth>
		<matrix public="1" get="accessor" set="accessor"><c path="lime.math.Matrix3"/></matrix>
		<miterLimit public="1" get="accessor" set="accessor"><x path="Float"/></miterLimit>
		<operator public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoOperator"/></operator>
		<source public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoPattern"/></source>
		<target public="1" get="accessor" set="null"><x path="lime.graphics.cairo.CairoSurface"/></target>
		<tolerance public="1" get="accessor" set="accessor"><x path="Float"/></tolerance>
		<userData public="1"><d/></userData>
		<handle>
			<x path="lime.system.CFFIPointer"/>
			<meta><m n=":noCompletion"/></meta>
		</handle>
		<arc public="1" set="method" line="61"><f a="xc:yc:radius:angle1:angle2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></arc>
		<arcNegative public="1" set="method" line="70"><f a="xc:yc:radius:angle1:angle2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></arcNegative>
		<clip public="1" set="method" line="79"><f a=""><x path="Void"/></f></clip>
		<clipExtents public="1" set="method" line="88"><f a="x1:y1:x2:y2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clipExtents>
		<clipPreserve public="1" set="method" line="97"><f a=""><x path="Void"/></f></clipPreserve>
		<closePath public="1" set="method" line="106"><f a=""><x path="Void"/></f></closePath>
		<copyPage public="1" set="method" line="115"><f a=""><x path="Void"/></f></copyPage>
		<curveTo public="1" set="method" line="124"><f a="x1:y1:x2:y2:x3:y3">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></curveTo>
		<fill public="1" set="method" line="133"><f a=""><x path="Void"/></f></fill>
		<fillExtents public="1" set="method" line="142"><f a="x1:y1:x2:y2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></fillExtents>
		<fillPreserve public="1" set="method" line="151"><f a=""><x path="Void"/></f></fillPreserve>
		<identityMatrix public="1" set="method" line="160"><f a=""><x path="Void"/></f></identityMatrix>
		<inClip public="1" set="method" line="169"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></inClip>
		<inFill public="1" set="method" line="180"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></inFill>
		<inStroke public="1" set="method" line="191"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></inStroke>
		<lineTo public="1" set="method" line="202"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></lineTo>
		<moveTo public="1" set="method" line="211"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<mask public="1" set="method" line="220"><f a="pattern">
	<x path="lime.graphics.cairo.CairoPattern"/>
	<x path="Void"/>
</f></mask>
		<maskSurface public="1" set="method" line="229"><f a="surface:x:y">
	<x path="lime.graphics.cairo.CairoSurface"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></maskSurface>
		<newPath public="1" set="method" line="238"><f a=""><x path="Void"/></f></newPath>
		<paint public="1" set="method" line="247"><f a=""><x path="Void"/></f></paint>
		<paintWithAlpha public="1" set="method" line="256"><f a="alpha">
	<x path="Float"/>
	<x path="Void"/>
</f></paintWithAlpha>
		<popGroup public="1" set="method" line="265"><f a=""><x path="lime.graphics.cairo.CairoPattern"/></f></popGroup>
		<popGroupToSource public="1" set="method" line="276"><f a=""><x path="Void"/></f></popGroupToSource>
		<pushGroup public="1" set="method" line="285"><f a=""><x path="Void"/></f></pushGroup>
		<pushGroupWithContent public="1" set="method" line="294"><f a="content">
	<x path="lime.graphics.cairo.CairoContent"/>
	<x path="Void"/>
</f></pushGroupWithContent>
		<recreate set="method" line="303"><f a="surface">
	<x path="lime.graphics.cairo.CairoSurface"/>
	<x path="Void"/>
</f></recreate>
		<rectangle public="1" set="method" line="311"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></rectangle>
		<relCurveTo public="1" set="method" line="320"><f a="dx1:dy1:dx2:dy2:dx3:dy3">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></relCurveTo>
		<relLineTo public="1" set="method" line="329"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></relLineTo>
		<relMoveTo public="1" set="method" line="338"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></relMoveTo>
		<resetClip public="1" set="method" line="347"><f a=""><x path="Void"/></f></resetClip>
		<restore public="1" set="method" line="356"><f a=""><x path="Void"/></f></restore>
		<save public="1" set="method" line="365"><f a=""><x path="Void"/></f></save>
		<setFontSize public="1" set="method" line="374"><f a="size">
	<x path="Float"/>
	<x path="Void"/>
</f></setFontSize>
		<setSourceRGB public="1" set="method" line="383"><f a="r:g:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setSourceRGB>
		<setSourceRGBA public="1" set="method" line="392"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setSourceRGBA>
		<setSourceSurface public="1" set="method" line="401"><f a="surface:x:y">
	<x path="lime.graphics.cairo.CairoSurface"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setSourceSurface>
		<showGlyphs public="1" set="method" line="410"><f a="glyphs">
	<c path="Array"><c path="lime.graphics.cairo.CairoGlyph"/></c>
	<x path="Void"/>
</f></showGlyphs>
		<showPage public="1" set="method" line="419"><f a=""><x path="Void"/></f></showPage>
		<showText public="1" set="method" line="428"><f a="utf8">
	<c path="String"/>
	<x path="Void"/>
</f></showText>
		<status public="1" set="method" line="437"><f a=""><x path="lime.graphics.cairo.CairoStatus"/></f></status>
		<stroke public="1" set="method" line="448"><f a=""><x path="Void"/></f></stroke>
		<strokeExtents public="1" set="method" line="457"><f a="x1:y1:x2:y2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></strokeExtents>
		<strokePreserve public="1" set="method" line="466"><f a=""><x path="Void"/></f></strokePreserve>
		<textPath public="1" set="method" line="475"><f a="utf8">
	<c path="String"/>
	<x path="Void"/>
</f></textPath>
		<transform public="1" set="method" line="484"><f a="matrix">
	<c path="lime.math.Matrix3"/>
	<x path="Void"/>
</f></transform>
		<rotate public="1" set="method" line="492"><f a="amount">
	<x path="Float"/>
	<x path="Void"/>
</f></rotate>
		<scale public="1" set="method" line="500"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scale>
		<translate public="1" set="method" line="509"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></translate>
		<get_antialias set="method" line="525">
			<f a=""><x path="lime.graphics.cairo.CairoAntialias"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_antialias>
		<set_antialias set="method" line="536">
			<f a="value">
				<x path="lime.graphics.cairo.CairoAntialias"/>
				<x path="lime.graphics.cairo.CairoAntialias"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_antialias>
		<get_currentPoint set="method" line="547">
			<f a=""><c path="lime.math.Vector2"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_currentPoint>
		<get_dash set="method" line="559">
			<f a=""><c path="Array"><x path="Float"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_dash>
		<set_dash set="method" line="571">
			<f a="value">
				<c path="Array"><x path="Float"/></c>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_dash>
		<get_dashCount set="method" line="582">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_dashCount>
		<get_fillRule set="method" line="593">
			<f a=""><x path="lime.graphics.cairo.CairoFillRule"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_fillRule>
		<set_fillRule set="method" line="604">
			<f a="value">
				<x path="lime.graphics.cairo.CairoFillRule"/>
				<x path="lime.graphics.cairo.CairoFillRule"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_fillRule>
		<get_fontFace set="method" line="615">
			<f a=""><x path="lime.graphics.cairo.CairoFontFace"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_fontFace>
		<set_fontFace set="method" line="626">
			<f a="value">
				<x path="lime.graphics.cairo.CairoFontFace"/>
				<x path="lime.graphics.cairo.CairoFontFace"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_fontFace>
		<get_fontOptions set="method" line="637">
			<f a=""><x path="lime.graphics.cairo.CairoFontOptions"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_fontOptions>
		<set_fontOptions set="method" line="648">
			<f a="value">
				<x path="lime.graphics.cairo.CairoFontOptions"/>
				<x path="lime.graphics.cairo.CairoFontOptions"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_fontOptions>
		<get_groupTarget set="method" line="659">
			<f a=""><x path="lime.graphics.cairo.CairoSurface"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_groupTarget>
		<get_hasCurrentPoint set="method" line="670">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_hasCurrentPoint>
		<get_lineCap set="method" line="681">
			<f a=""><x path="lime.graphics.cairo.CairoLineCap"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lineCap>
		<set_lineCap set="method" line="692">
			<f a="value">
				<x path="lime.graphics.cairo.CairoLineCap"/>
				<x path="lime.graphics.cairo.CairoLineCap"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_lineCap>
		<get_lineJoin set="method" line="703">
			<f a=""><x path="lime.graphics.cairo.CairoLineJoin"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lineJoin>
		<set_lineJoin set="method" line="714">
			<f a="value">
				<x path="lime.graphics.cairo.CairoLineJoin"/>
				<x path="lime.graphics.cairo.CairoLineJoin"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_lineJoin>
		<get_lineWidth set="method" line="725">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lineWidth>
		<set_lineWidth set="method" line="736">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_lineWidth>
		<get_matrix set="method" line="747">
			<f a=""><c path="lime.math.Matrix3"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_matrix>
		<set_matrix set="method" line="759">
			<f a="value">
				<c path="lime.math.Matrix3"/>
				<c path="lime.math.Matrix3"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_matrix>
		<get_miterLimit set="method" line="771">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_miterLimit>
		<set_miterLimit set="method" line="782">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_miterLimit>
		<get_operator set="method" line="793">
			<f a=""><x path="lime.graphics.cairo.CairoOperator"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_operator>
		<set_operator set="method" line="804">
			<f a="value">
				<x path="lime.graphics.cairo.CairoOperator"/>
				<x path="lime.graphics.cairo.CairoOperator"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_operator>
		<get_source set="method" line="815">
			<f a=""><x path="lime.graphics.cairo.CairoPattern"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_source>
		<set_source set="method" line="826">
			<f a="value">
				<x path="lime.graphics.cairo.CairoPattern"/>
				<x path="lime.graphics.cairo.CairoPattern"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_source>
		<get_target set="method" line="837">
			<f a=""><x path="lime.graphics.cairo.CairoSurface"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_target>
		<get_tolerance set="method" line="848">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_tolerance>
		<set_tolerance set="method" line="859">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_tolerance>
		<new public="1" set="method" line="48">
			<f a="?surface" v="null">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ surface : null }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoAntialias" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoAntialias.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoAntialias.CairoAntialias_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoAntialias.hx" private="1" module="lime.graphics.cairo.CairoAntialias" extern="1">
	<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<GRAY public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRAY>
	<SUBPIXEL public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SUBPIXEL>
	<FAST public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FAST>
	<GOOD public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GOOD>
	<BEST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BEST>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoAntialias.CairoAntialias_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoAntialias.hx" private="1" module="lime.graphics.cairo.CairoAntialias" extern="1">
		<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<GRAY public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRAY>
		<SUBPIXEL public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SUBPIXEL>
		<FAST public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FAST>
		<GOOD public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GOOD>
		<BEST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BEST>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoContent" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoContent.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoContent.CairoContent_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoContent.hx" private="1" module="lime.graphics.cairo.CairoContent" extern="1">
	<COLOR public="1" get="inline" set="null" expr="cast 0x1000" line="6" static="1">
		<x path="lime.graphics.cairo.CairoContent"/>
		<meta>
			<m n=":value"><e>cast 0x1000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR>
	<ALPHA public="1" get="inline" set="null" expr="cast 0x2000" line="7" static="1">
		<x path="lime.graphics.cairo.CairoContent"/>
		<meta>
			<m n=":value"><e>cast 0x2000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALPHA>
	<COLOR_ALPHA public="1" get="inline" set="null" expr="cast 0x3000" line="8" static="1">
		<x path="lime.graphics.cairo.CairoContent"/>
		<meta>
			<m n=":value"><e>cast 0x3000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_ALPHA>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoContent.CairoContent_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoContent.hx" private="1" module="lime.graphics.cairo.CairoContent" extern="1">
		<COLOR public="1" get="inline" set="null" expr="cast 0x1000" line="6" static="1">
			<x path="lime.graphics.cairo.CairoContent"/>
			<meta>
				<m n=":value"><e>cast 0x1000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR>
		<ALPHA public="1" get="inline" set="null" expr="cast 0x2000" line="7" static="1">
			<x path="lime.graphics.cairo.CairoContent"/>
			<meta>
				<m n=":value"><e>cast 0x2000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALPHA>
		<COLOR_ALPHA public="1" get="inline" set="null" expr="cast 0x3000" line="8" static="1">
			<x path="lime.graphics.cairo.CairoContent"/>
			<meta>
				<m n=":value"><e>cast 0x3000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_ALPHA>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoExtend" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoExtend.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoExtend.CairoExtend_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoExtend.hx" private="1" module="lime.graphics.cairo.CairoExtend" extern="1">
	<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<REPEAT public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REPEAT>
	<REFLECT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REFLECT>
	<PAD public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAD>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoExtend.CairoExtend_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoExtend.hx" private="1" module="lime.graphics.cairo.CairoExtend" extern="1">
		<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<REPEAT public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REPEAT>
		<REFLECT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REFLECT>
		<PAD public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAD>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFTFontFace" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFTFontFace.hx">
		<from>
			<icast><x path="lime.system.CFFIPointer"/></icast>
			<icast><x path="lime.graphics.cairo.CairoFontFace"/></icast>
		</from>
		<this><x path="lime.graphics.cairo.CairoFontFace"/></this>
		<to>
			<icast><x path="lime.system.CFFIPointer"/></icast>
			<icast><x path="lime.graphics.cairo.CairoFontFace"/></icast>
		</to>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.graphics.cairo._CairoFTFontFace.CairoFTFontFace_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFTFontFace.hx" private="1" module="lime.graphics.cairo.CairoFTFontFace">
	<FT_LOAD_FORCE_AUTOHINT public="1" get="inline" set="null" expr="(1 &lt;&lt; 5)" line="14" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e><![CDATA[(1 << 5)]]></e></m></meta>
	</FT_LOAD_FORCE_AUTOHINT>
	<_new set="method" line="17" static="1">
		<f a=""><x path="lime.graphics.cairo.CairoFTFontFace"/></f>
		<meta><m n=":impl"/></meta>
	</_new>
	<create public="1" set="method" line="24" static="1"><f a="face:loadFlags">
	<c path="lime.text.Font"/>
	<x path="Int"/>
	<x path="lime.graphics.cairo.CairoFTFontFace"/>
</f></create>
	<meta>
		<m n=":final"/>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFTFontFace.CairoFTFontFace_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFTFontFace.hx" private="1" module="lime.graphics.cairo.CairoFTFontFace">
		<FT_LOAD_FORCE_AUTOHINT public="1" get="inline" set="null" expr="(1 &lt;&lt; 5)" line="14" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e><![CDATA[(1 << 5)]]></e></m></meta>
		</FT_LOAD_FORCE_AUTOHINT>
		<_new set="method" line="17" static="1">
			<f a=""><x path="lime.graphics.cairo.CairoFTFontFace"/></f>
			<meta><m n=":impl"/></meta>
		</_new>
		<create public="1" set="method" line="24" static="1"><f a="face:loadFlags">
	<c path="lime.text.Font"/>
	<x path="Int"/>
	<x path="lime.graphics.cairo.CairoFTFontFace"/>
</f></create>
		<meta>
			<m n=":final"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFillRule" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFillRule.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoFillRule.CairoFillRule_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFillRule.hx" private="1" module="lime.graphics.cairo.CairoFillRule" extern="1">
	<WINDING public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoFillRule"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDING>
	<EVEN_ODD public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoFillRule"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EVEN_ODD>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFillRule.CairoFillRule_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFillRule.hx" private="1" module="lime.graphics.cairo.CairoFillRule" extern="1">
		<WINDING public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoFillRule"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDING>
		<EVEN_ODD public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoFillRule"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EVEN_ODD>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFilter" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFilter.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoFilter.CairoFilter_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFilter.hx" private="1" module="lime.graphics.cairo.CairoFilter" extern="1">
	<FAST public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FAST>
	<GOOD public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GOOD>
	<BEST public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BEST>
	<NEAREST public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEAREST>
	<BILINEAR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BILINEAR>
	<GAUSSIAN public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GAUSSIAN>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFilter.CairoFilter_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFilter.hx" private="1" module="lime.graphics.cairo.CairoFilter" extern="1">
		<FAST public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FAST>
		<GOOD public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GOOD>
		<BEST public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BEST>
		<NEAREST public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEAREST>
		<BILINEAR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BILINEAR>
		<GAUSSIAN public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GAUSSIAN>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFontFace" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFontFace.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.graphics.cairo._CairoFontFace.CairoFontFace_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFontFace.hx" private="1" module="lime.graphics.cairo.CairoFontFace">
	<_new set="method" line="13" static="1">
		<f a=""><x path="lime.graphics.cairo.CairoFontFace"/></f>
		<meta><m n=":impl"/></meta>
	</_new>
	<status public="1" set="method" line="20" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoStatus"/>
		</f>
		<meta><m n=":impl"/></meta>
	</status>
	<meta>
		<m n=":final"/>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFontFace.CairoFontFace_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFontFace.hx" private="1" module="lime.graphics.cairo.CairoFontFace">
		<_new set="method" line="13" static="1">
			<f a=""><x path="lime.graphics.cairo.CairoFontFace"/></f>
			<meta><m n=":impl"/></meta>
		</_new>
		<status public="1" set="method" line="20" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoStatus"/>
			</f>
			<meta><m n=":impl"/></meta>
		</status>
		<meta>
			<m n=":final"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFontOptions" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFontOptions.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.graphics.cairo._CairoFontOptions.CairoFontOptions_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFontOptions.hx" private="1" module="lime.graphics.cairo.CairoFontOptions">
	<antialias public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta><m n=":impl"/></meta>
	</antialias>
	<hintMetrics public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoHintMetrics"/>
		<meta><m n=":impl"/></meta>
	</hintMetrics>
	<hintStyle public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta><m n=":impl"/></meta>
	</hintStyle>
	<subpixelOrder public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta><m n=":impl"/></meta>
	</subpixelOrder>
	<_new public="1" set="method" line="20" static="1">
		<f a=""><x path="lime.graphics.cairo.CairoFontOptions"/></f>
		<meta><m n=":impl"/></meta>
	</_new>
	<get_antialias set="method" line="38" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoAntialias"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_antialias>
	<set_antialias set="method" line="49" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<x path="lime.graphics.cairo.CairoAntialias"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_antialias>
	<get_hintMetrics set="method" line="60" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_hintMetrics>
	<set_hintMetrics set="method" line="71" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_hintMetrics>
	<get_hintStyle set="method" line="83" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoHintStyle"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_hintStyle>
	<set_hintStyle set="method" line="94" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<x path="lime.graphics.cairo.CairoHintStyle"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_hintStyle>
	<get_subpixelOrder set="method" line="105" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_subpixelOrder>
	<set_subpixelOrder set="method" line="116" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_subpixelOrder>
	<meta>
		<m n=":final"/>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFontOptions.CairoFontOptions_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFontOptions.hx" private="1" module="lime.graphics.cairo.CairoFontOptions">
		<antialias public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta><m n=":impl"/></meta>
		</antialias>
		<hintMetrics public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<meta><m n=":impl"/></meta>
		</hintMetrics>
		<hintStyle public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta><m n=":impl"/></meta>
		</hintStyle>
		<subpixelOrder public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta><m n=":impl"/></meta>
		</subpixelOrder>
		<_new public="1" set="method" line="20" static="1">
			<f a=""><x path="lime.graphics.cairo.CairoFontOptions"/></f>
			<meta><m n=":impl"/></meta>
		</_new>
		<get_antialias set="method" line="38" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoAntialias"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_antialias>
		<set_antialias set="method" line="49" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoAntialias"/>
				<x path="lime.graphics.cairo.CairoAntialias"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_antialias>
		<get_hintMetrics set="method" line="60" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoHintMetrics"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_hintMetrics>
		<set_hintMetrics set="method" line="71" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoHintMetrics"/>
				<x path="lime.graphics.cairo.CairoHintMetrics"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_hintMetrics>
		<get_hintStyle set="method" line="83" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoHintStyle"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_hintStyle>
		<set_hintStyle set="method" line="94" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoHintStyle"/>
				<x path="lime.graphics.cairo.CairoHintStyle"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_hintStyle>
		<get_subpixelOrder set="method" line="105" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_subpixelOrder>
		<set_subpixelOrder set="method" line="116" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
				<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_subpixelOrder>
		<meta>
			<m n=":final"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFormat" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFormat.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoFormat.CairoFormat_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFormat.hx" private="1" module="lime.graphics.cairo.CairoFormat" extern="1">
	<INVALID public="1" get="inline" set="null" expr="cast -1" line="6" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast -1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID>
	<ARGB32 public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ARGB32>
	<RGB24 public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB24>
	<A8 public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A8>
	<A1 public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A1>
	<RGB16_565 public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB16_565>
	<RGB30 public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB30>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFormat.CairoFormat_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoFormat.hx" private="1" module="lime.graphics.cairo.CairoFormat" extern="1">
		<INVALID public="1" get="inline" set="null" expr="cast -1" line="6" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast -1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID>
		<ARGB32 public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ARGB32>
		<RGB24 public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB24>
		<A8 public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A8>
		<A1 public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A1>
		<RGB16_565 public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB16_565>
		<RGB30 public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB30>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.graphics.cairo.CairoGlyph" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoGlyph.hx">
		<index public="1"><x path="Int"/></index>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<new public="1" set="method" line="18">
			<f a="index:?x:?y" v=":0:0">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ y : 0, x : 0 }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoHintMetrics" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoHintMetrics.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoHintMetrics.CairoHintMetrics_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoHintMetrics.hx" private="1" module="lime.graphics.cairo.CairoHintMetrics" extern="1">
	<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoHintMetrics"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<OFF public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoHintMetrics"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OFF>
	<ON public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoHintMetrics"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ON>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoHintMetrics.CairoHintMetrics_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoHintMetrics.hx" private="1" module="lime.graphics.cairo.CairoHintMetrics" extern="1">
		<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<OFF public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OFF>
		<ON public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ON>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoHintStyle" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoHintStyle.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoHintStyle.CairoHintStyle_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoHintStyle.hx" private="1" module="lime.graphics.cairo.CairoHintStyle" extern="1">
	<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<SLIGHT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLIGHT>
	<MEDIUM public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIUM>
	<FULL public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FULL>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoHintStyle.CairoHintStyle_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoHintStyle.hx" private="1" module="lime.graphics.cairo.CairoHintStyle" extern="1">
		<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<SLIGHT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLIGHT>
		<MEDIUM public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIUM>
		<FULL public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FULL>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoImageSurface" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoImageSurface.hx">
		<from>
			<icast><x path="lime.system.CFFIPointer"/></icast>
			<icast><x path="lime.graphics.cairo.CairoSurface"/></icast>
		</from>
		<this><x path="lime.graphics.cairo.CairoSurface"/></this>
		<to>
			<icast><x path="lime.system.CFFIPointer"/></icast>
			<icast><x path="lime.graphics.cairo.CairoSurface"/></icast>
		</to>
		<meta>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.graphics.cairo._CairoImageSurface.CairoImageSurface_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoImageSurface.hx" private="1" module="lime.graphics.cairo.CairoImageSurface">
	<data public="1" get="accessor" set="null" static="1">
		<x path="lime.utils.DataPointer"/>
		<meta><m n=":impl"/></meta>
	</data>
	<format public="1" get="accessor" set="null" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta><m n=":impl"/></meta>
	</format>
	<height public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</height>
	<stride public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</stride>
	<width public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</width>
	<_new public="1" set="method" line="21" static="1">
		<f a="format:width:height">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.graphics.cairo.CairoImageSurface"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<create public="1" set="method" line="32" static="1"><f a="data:format:width:height:stride">
	<x path="lime.utils.DataPointer"/>
	<x path="lime.graphics.cairo.CairoFormat"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.cairo.CairoSurface"/>
</f></create>
	<fromImage public="1" set="method" line="43" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="lime.graphics.cairo.CairoSurface"/>
</f></fromImage>
	<get_data set="method" line="61" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_data>
	<get_format set="method" line="72" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="lime.graphics.cairo.CairoFormat"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_format>
	<get_height set="method" line="83" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_height>
	<get_stride set="method" line="94" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_stride>
	<get_width set="method" line="105" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_width>
	<meta>
		<m n=":final"/>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoImageSurface.CairoImageSurface_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoImageSurface.hx" private="1" module="lime.graphics.cairo.CairoImageSurface">
		<data public="1" get="accessor" set="null" static="1">
			<x path="lime.utils.DataPointer"/>
			<meta><m n=":impl"/></meta>
		</data>
		<format public="1" get="accessor" set="null" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta><m n=":impl"/></meta>
		</format>
		<height public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</height>
		<stride public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</stride>
		<width public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</width>
		<_new public="1" set="method" line="21" static="1">
			<f a="format:width:height">
				<x path="lime.graphics.cairo.CairoFormat"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.cairo.CairoImageSurface"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<create public="1" set="method" line="32" static="1"><f a="data:format:width:height:stride">
	<x path="lime.utils.DataPointer"/>
	<x path="lime.graphics.cairo.CairoFormat"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.cairo.CairoSurface"/>
</f></create>
		<fromImage public="1" set="method" line="43" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="lime.graphics.cairo.CairoSurface"/>
</f></fromImage>
		<get_data set="method" line="61" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_data>
		<get_format set="method" line="72" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="lime.graphics.cairo.CairoFormat"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_format>
		<get_height set="method" line="83" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_height>
		<get_stride set="method" line="94" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_stride>
		<get_width set="method" line="105" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_width>
		<meta>
			<m n=":final"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoLineCap" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoLineCap.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoLineCap.CairoLineCap_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoLineCap.hx" private="1" module="lime.graphics.cairo.CairoLineCap" extern="1">
	<BUTT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoLineCap"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUTT>
	<ROUND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoLineCap"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ROUND>
	<SQUARE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoLineCap"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SQUARE>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoLineCap.CairoLineCap_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoLineCap.hx" private="1" module="lime.graphics.cairo.CairoLineCap" extern="1">
		<BUTT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoLineCap"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUTT>
		<ROUND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoLineCap"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ROUND>
		<SQUARE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoLineCap"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SQUARE>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoLineJoin" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoLineJoin.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoLineJoin.CairoLineJoin_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoLineJoin.hx" private="1" module="lime.graphics.cairo.CairoLineJoin" extern="1">
	<MITER public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoLineJoin"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MITER>
	<ROUND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoLineJoin"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ROUND>
	<BEVEL public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoLineJoin"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BEVEL>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoLineJoin.CairoLineJoin_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoLineJoin.hx" private="1" module="lime.graphics.cairo.CairoLineJoin" extern="1">
		<MITER public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoLineJoin"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MITER>
		<ROUND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoLineJoin"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ROUND>
		<BEVEL public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoLineJoin"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BEVEL>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoOperator" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoOperator.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoOperator.CairoOperator_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoOperator.hx" private="1" module="lime.graphics.cairo.CairoOperator" extern="1">
	<CLEAR public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR>
	<SOURCE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOURCE>
	<OVER public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OVER>
	<IN public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IN>
	<OUT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT>
	<ATOP public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ATOP>
	<DEST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST>
	<DEST_OVER public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST_OVER>
	<DEST_IN public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST_IN>
	<DEST_OUT public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST_OUT>
	<DEST_ATOP public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST_ATOP>
	<XOR public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</XOR>
	<ADD public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ADD>
	<SATURATE public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SATURATE>
	<MULTIPLY public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MULTIPLY>
	<SCREEN public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCREEN>
	<OVERLAY public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OVERLAY>
	<DARKEN public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DARKEN>
	<LIGHTEN public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LIGHTEN>
	<COLOR_DODGE public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_DODGE>
	<COLOR_BURN public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_BURN>
	<HARD_LIGHT public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HARD_LIGHT>
	<SOFT_LIGHT public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOFT_LIGHT>
	<DIFFERENCE public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DIFFERENCE>
	<EXCLUSION public="1" get="inline" set="null" expr="cast 24" line="30" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXCLUSION>
	<HSL_HUE public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HSL_HUE>
	<HSL_SATURATION public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HSL_SATURATION>
	<HSL_COLOR public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HSL_COLOR>
	<HSL_LUMINOSITY public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HSL_LUMINOSITY>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoOperator.CairoOperator_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoOperator.hx" private="1" module="lime.graphics.cairo.CairoOperator" extern="1">
		<CLEAR public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR>
		<SOURCE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOURCE>
		<OVER public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OVER>
		<IN public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IN>
		<OUT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT>
		<ATOP public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ATOP>
		<DEST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST>
		<DEST_OVER public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST_OVER>
		<DEST_IN public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST_IN>
		<DEST_OUT public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST_OUT>
		<DEST_ATOP public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST_ATOP>
		<XOR public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</XOR>
		<ADD public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ADD>
		<SATURATE public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SATURATE>
		<MULTIPLY public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MULTIPLY>
		<SCREEN public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCREEN>
		<OVERLAY public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OVERLAY>
		<DARKEN public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DARKEN>
		<LIGHTEN public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LIGHTEN>
		<COLOR_DODGE public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_DODGE>
		<COLOR_BURN public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_BURN>
		<HARD_LIGHT public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HARD_LIGHT>
		<SOFT_LIGHT public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOFT_LIGHT>
		<DIFFERENCE public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DIFFERENCE>
		<EXCLUSION public="1" get="inline" set="null" expr="cast 24" line="30" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXCLUSION>
		<HSL_HUE public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HSL_HUE>
		<HSL_SATURATION public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HSL_SATURATION>
		<HSL_COLOR public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HSL_COLOR>
		<HSL_LUMINOSITY public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HSL_LUMINOSITY>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoPattern" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoPattern.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.graphics.cairo._CairoPattern.CairoPattern_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoPattern.hx" private="1" module="lime.graphics.cairo.CairoPattern">
	<colorStopCount public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</colorStopCount>
	<extend public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta><m n=":impl"/></meta>
	</extend>
	<filter public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta><m n=":impl"/></meta>
	</filter>
	<matrix public="1" get="accessor" set="accessor" static="1">
		<c path="lime.math.Matrix3"/>
		<meta><m n=":impl"/></meta>
	</matrix>
	<_new public="1" set="method" line="20" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoPattern"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<addColorStopRGB public="1" set="method" line="27" static="1">
		<f a="this:offset:r:g:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</addColorStopRGB>
	<addColorStopRGBA public="1" set="method" line="36" static="1">
		<f a="this:offset:r:g:b:a">
			<x path="lime.system.CFFIPointer"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</addColorStopRGBA>
	<createForSurface public="1" set="method" line="45" static="1"><f a="surface">
	<x path="lime.graphics.cairo.CairoSurface"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createForSurface>
	<createLinear public="1" set="method" line="56" static="1"><f a="x0:y0:x1:y1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createLinear>
	<createRadial public="1" set="method" line="67" static="1"><f a="cx0:cy0:radius0:cx1:cy1:radius1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRadial>
	<createRGB public="1" set="method" line="78" static="1"><f a="r:g:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRGB>
	<createRGBA public="1" set="method" line="89" static="1"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRGBA>
	<get_colorStopCount set="method" line="107" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_colorStopCount>
	<get_extend set="method" line="118" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoExtend"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_extend>
	<set_extend set="method" line="129" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoExtend"/>
			<x path="lime.graphics.cairo.CairoExtend"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_extend>
	<get_filter set="method" line="140" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoFilter"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_filter>
	<set_filter set="method" line="151" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoFilter"/>
			<x path="lime.graphics.cairo.CairoFilter"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_filter>
	<get_matrix set="method" line="162" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<c path="lime.math.Matrix3"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_matrix>
	<set_matrix set="method" line="174" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<c path="lime.math.Matrix3"/>
			<c path="lime.math.Matrix3"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_matrix>
	<meta>
		<m n=":final"/>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoPattern.CairoPattern_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoPattern.hx" private="1" module="lime.graphics.cairo.CairoPattern">
		<colorStopCount public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</colorStopCount>
		<extend public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta><m n=":impl"/></meta>
		</extend>
		<filter public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta><m n=":impl"/></meta>
		</filter>
		<matrix public="1" get="accessor" set="accessor" static="1">
			<c path="lime.math.Matrix3"/>
			<meta><m n=":impl"/></meta>
		</matrix>
		<_new public="1" set="method" line="20" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoPattern"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<addColorStopRGB public="1" set="method" line="27" static="1">
			<f a="this:offset:r:g:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</addColorStopRGB>
		<addColorStopRGBA public="1" set="method" line="36" static="1">
			<f a="this:offset:r:g:b:a">
				<x path="lime.system.CFFIPointer"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</addColorStopRGBA>
		<createForSurface public="1" set="method" line="45" static="1"><f a="surface">
	<x path="lime.graphics.cairo.CairoSurface"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createForSurface>
		<createLinear public="1" set="method" line="56" static="1"><f a="x0:y0:x1:y1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createLinear>
		<createRadial public="1" set="method" line="67" static="1"><f a="cx0:cy0:radius0:cx1:cy1:radius1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRadial>
		<createRGB public="1" set="method" line="78" static="1"><f a="r:g:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRGB>
		<createRGBA public="1" set="method" line="89" static="1"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRGBA>
		<get_colorStopCount set="method" line="107" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_colorStopCount>
		<get_extend set="method" line="118" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoExtend"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_extend>
		<set_extend set="method" line="129" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoExtend"/>
				<x path="lime.graphics.cairo.CairoExtend"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_extend>
		<get_filter set="method" line="140" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoFilter"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_filter>
		<set_filter set="method" line="151" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoFilter"/>
				<x path="lime.graphics.cairo.CairoFilter"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_filter>
		<get_matrix set="method" line="162" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<c path="lime.math.Matrix3"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_matrix>
		<set_matrix set="method" line="174" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<c path="lime.math.Matrix3"/>
				<c path="lime.math.Matrix3"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_matrix>
		<meta>
			<m n=":final"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoStatus" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoStatus.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoStatus.CairoStatus_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoStatus.hx" private="1" module="lime.graphics.cairo.CairoStatus" extern="1">
	<SUCCESS public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SUCCESS>
	<NO_MEMORY public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_MEMORY>
	<INVALID_RESTORE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_RESTORE>
	<INVALID_POP_GROUP public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_POP_GROUP>
	<NO_CURRENT_POINT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_CURRENT_POINT>
	<INVALID_MATRIX public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_MATRIX>
	<INVALID_STATUS public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_STATUS>
	<NULL_POINTER public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NULL_POINTER>
	<INVALID_STRING public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_STRING>
	<INVALID_PATH_DATA public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_PATH_DATA>
	<READ_ERROR public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</READ_ERROR>
	<WRITE_ERROR public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITE_ERROR>
	<SURFACE_FINISHED public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SURFACE_FINISHED>
	<SURFACE_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SURFACE_TYPE_MISMATCH>
	<PATTERN_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PATTERN_TYPE_MISMATCH>
	<INVALID_CONTENT public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_CONTENT>
	<INVALID_FORMAT public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_FORMAT>
	<INVALID_VISUAL public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_VISUAL>
	<FILE_NOT_FOUND public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILE_NOT_FOUND>
	<INVALID_DASH public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_DASH>
	<INVALID_DSC_COMMENT public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_DSC_COMMENT>
	<INVALID_INDEX public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_INDEX>
	<CLIP_NOT_REPRESENTABLE public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLIP_NOT_REPRESENTABLE>
	<TEMP_FILE_ERROR public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEMP_FILE_ERROR>
	<INVALID_STRIDE public="1" get="inline" set="null" expr="cast 24" line="30" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_STRIDE>
	<FONT_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONT_TYPE_MISMATCH>
	<USER_FONT_IMMUTABLE public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USER_FONT_IMMUTABLE>
	<USER_FONT_ERROR public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USER_FONT_ERROR>
	<NEGATIVE_COUNT public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEGATIVE_COUNT>
	<INVALID_CLUSTERS public="1" get="inline" set="null" expr="cast 29" line="35" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_CLUSTERS>
	<INVALID_SLANT public="1" get="inline" set="null" expr="cast 30" line="36" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_SLANT>
	<INVALID_WEIGHT public="1" get="inline" set="null" expr="cast 31" line="37" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_WEIGHT>
	<INVALID_SIZE public="1" get="inline" set="null" expr="cast 32" line="38" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_SIZE>
	<USER_FONT_NOT_IMPLEMENTED public="1" get="inline" set="null" expr="cast 33" line="39" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USER_FONT_NOT_IMPLEMENTED>
	<DEVICE_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 34" line="40" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEVICE_TYPE_MISMATCH>
	<DEVICE_ERROR public="1" get="inline" set="null" expr="cast 35" line="41" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEVICE_ERROR>
	<INVALID_MESH_CONSTRUCTION public="1" get="inline" set="null" expr="cast 36" line="42" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_MESH_CONSTRUCTION>
	<DEVICE_FINISHED public="1" get="inline" set="null" expr="cast 37" line="43" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEVICE_FINISHED>
	<JBIG2_GLOBAL_MISSING public="1" get="inline" set="null" expr="cast 38" line="44" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</JBIG2_GLOBAL_MISSING>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoStatus.CairoStatus_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoStatus.hx" private="1" module="lime.graphics.cairo.CairoStatus" extern="1">
		<SUCCESS public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SUCCESS>
		<NO_MEMORY public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_MEMORY>
		<INVALID_RESTORE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_RESTORE>
		<INVALID_POP_GROUP public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_POP_GROUP>
		<NO_CURRENT_POINT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_CURRENT_POINT>
		<INVALID_MATRIX public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_MATRIX>
		<INVALID_STATUS public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_STATUS>
		<NULL_POINTER public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NULL_POINTER>
		<INVALID_STRING public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_STRING>
		<INVALID_PATH_DATA public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_PATH_DATA>
		<READ_ERROR public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</READ_ERROR>
		<WRITE_ERROR public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITE_ERROR>
		<SURFACE_FINISHED public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SURFACE_FINISHED>
		<SURFACE_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SURFACE_TYPE_MISMATCH>
		<PATTERN_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PATTERN_TYPE_MISMATCH>
		<INVALID_CONTENT public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_CONTENT>
		<INVALID_FORMAT public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_FORMAT>
		<INVALID_VISUAL public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_VISUAL>
		<FILE_NOT_FOUND public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILE_NOT_FOUND>
		<INVALID_DASH public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_DASH>
		<INVALID_DSC_COMMENT public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_DSC_COMMENT>
		<INVALID_INDEX public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_INDEX>
		<CLIP_NOT_REPRESENTABLE public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLIP_NOT_REPRESENTABLE>
		<TEMP_FILE_ERROR public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEMP_FILE_ERROR>
		<INVALID_STRIDE public="1" get="inline" set="null" expr="cast 24" line="30" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_STRIDE>
		<FONT_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONT_TYPE_MISMATCH>
		<USER_FONT_IMMUTABLE public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USER_FONT_IMMUTABLE>
		<USER_FONT_ERROR public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USER_FONT_ERROR>
		<NEGATIVE_COUNT public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEGATIVE_COUNT>
		<INVALID_CLUSTERS public="1" get="inline" set="null" expr="cast 29" line="35" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_CLUSTERS>
		<INVALID_SLANT public="1" get="inline" set="null" expr="cast 30" line="36" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_SLANT>
		<INVALID_WEIGHT public="1" get="inline" set="null" expr="cast 31" line="37" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_WEIGHT>
		<INVALID_SIZE public="1" get="inline" set="null" expr="cast 32" line="38" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_SIZE>
		<USER_FONT_NOT_IMPLEMENTED public="1" get="inline" set="null" expr="cast 33" line="39" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USER_FONT_NOT_IMPLEMENTED>
		<DEVICE_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 34" line="40" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEVICE_TYPE_MISMATCH>
		<DEVICE_ERROR public="1" get="inline" set="null" expr="cast 35" line="41" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEVICE_ERROR>
		<INVALID_MESH_CONSTRUCTION public="1" get="inline" set="null" expr="cast 36" line="42" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_MESH_CONSTRUCTION>
		<DEVICE_FINISHED public="1" get="inline" set="null" expr="cast 37" line="43" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEVICE_FINISHED>
		<JBIG2_GLOBAL_MISSING public="1" get="inline" set="null" expr="cast 38" line="44" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</JBIG2_GLOBAL_MISSING>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoSubpixelOrder" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoSubpixelOrder.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoSubpixelOrder.CairoSubpixelOrder_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoSubpixelOrder.hx" private="1" module="lime.graphics.cairo.CairoSubpixelOrder" extern="1">
	<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<RGB public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB>
	<BGR public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BGR>
	<VRGB public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VRGB>
	<VBGR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VBGR>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoSubpixelOrder.CairoSubpixelOrder_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoSubpixelOrder.hx" private="1" module="lime.graphics.cairo.CairoSubpixelOrder" extern="1">
		<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<RGB public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB>
		<BGR public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BGR>
		<VRGB public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VRGB>
		<VBGR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VBGR>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoSurface" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoSurface.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.graphics.cairo._CairoSurface.CairoSurface_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoSurface.hx" private="1" module="lime.graphics.cairo.CairoSurface">
	<flush public="1" set="method" line="13" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</flush>
	<meta>
		<m n=":final"/>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoSurface.CairoSurface_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/cairo/CairoSurface.hx" private="1" module="lime.graphics.cairo.CairoSurface">
		<flush public="1" set="method" line="13" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</flush>
		<meta>
			<m n=":final"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.graphics.console.IndexBuffer" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/console/IndexBuffer.hx">
		<new public="1" set="method" line="24"><f a=""><x path="Void"/></f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<enum path="lime.graphics.console.Primitive" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/console/Primitive.hx">
		<Point/>
		<Line/>
		<LineStrip/>
		<Triangle/>
		<TriangleStrip/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="lime.graphics.console.Shader" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/console/Shader.hx">
		<new public="1" set="method" line="20"><f a=""><x path="Void"/></f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.graphics.console.VertexBuffer" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/console/VertexBuffer.hx">
		<lock public="1" set="method" line="28"><f a=""><c path="lime.graphics.console.VertexOutput"/></f></lock>
		<unlock public="1" set="method" line="29"><f a=""><x path="Void"/></f></unlock>
		<new public="1" set="method" line="26"><f a=""><x path="Void"/></f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.graphics.console.VertexOutput" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/console/VertexOutput.hx">
		<vec2 public="1" set="method" line="27"><f a="x:y">
	<unknown/>
	<unknown/>
	<x path="Void"/>
</f></vec2>
		<vec3 public="1" set="method" line="28"><f a="x:y:z">
	<unknown/>
	<unknown/>
	<unknown/>
	<x path="Void"/>
</f></vec3>
		<color public="1" set="method" line="29"><f a="r:g:b:a">
	<unknown/>
	<unknown/>
	<unknown/>
	<unknown/>
	<x path="Void"/>
</f></color>
		<new public="1" set="method" line="25"><f a=""><x path="Void"/></f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.graphics.format.BMP" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/format/BMP.hx">
		<encode public="1" set="method" line="17" static="1">
			<f a="image:?type" v=":null">
				<c path="lime.graphics.Image"/>
				<e path="lime.graphics.format.BMPType"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</encode>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.graphics.format.BMPType" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/format/BMP.hx" module="lime.graphics.format.BMP">
		<RGB/>
		<BITFIELD/>
		<ICO/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime.graphics.format.JPEG" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/format/JPEG.hx">
		<decodeBytes public="1" set="method" line="28" static="1">
			<f a="bytes:?decodeData" v=":true">
				<c path="haxe.io.Bytes"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeBytes>
		<decodeFile public="1" set="method" line="53" static="1">
			<f a="path:?decodeData" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeFile>
		<encode public="1" set="method" line="78" static="1"><f a="image:quality">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></encode>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
		</meta>
	</class>
	<class path="lime.graphics.format.PNG" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/format/PNG.hx">
		<decodeBytes public="1" set="method" line="35" static="1">
			<f a="bytes:?decodeData" v=":true">
				<c path="haxe.io.Bytes"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeBytes>
		<decodeFile public="1" set="method" line="60" static="1">
			<f a="path:?decodeData" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeFile>
		<encode public="1" set="method" line="85" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<c path="haxe.io.Bytes"/>
</f></encode>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
		</meta>
	</class>
	<class path="lime.graphics.opengl.GL" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GL.hx">
		<DEPTH_BUFFER_BIT public="1" get="inline" set="null" expr="0x00000100" line="28" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000100</e></m></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="inline" set="null" expr="0x00000400" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000400</e></m></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="inline" set="null" expr="0x00004000" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00004000</e></m></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" get="inline" set="null" expr="0x0000" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</POINTS>
		<LINES public="1" get="inline" set="null" expr="0x0001" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</LINES>
		<LINE_LOOP public="1" get="inline" set="null" expr="0x0002" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="inline" set="null" expr="0x0003" line="35" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="inline" set="null" expr="0x0004" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="inline" set="null" expr="0x0005" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="inline" set="null" expr="0x0006" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" get="inline" set="null" expr="0" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</ZERO>
		<ONE public="1" get="inline" set="null" expr="1" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ONE>
		<SRC_COLOR public="1" get="inline" set="null" expr="0x0300" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0300</e></m></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" expr="0x0301" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0301</e></m></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="inline" set="null" expr="0x0302" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0302</e></m></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" expr="0x0303" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0303</e></m></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="inline" set="null" expr="0x0304" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0304</e></m></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" expr="0x0305" line="47" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0305</e></m></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="inline" set="null" expr="0x0306" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0306</e></m></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" expr="0x0307" line="50" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0307</e></m></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="inline" set="null" expr="0x0308" line="51" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0308</e></m></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="inline" set="null" expr="0x8006" line="53" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8006</e></m></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" get="inline" set="null" expr="0x8009" line="54" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="inline" set="null" expr="0x8009" line="55" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" expr="0x883D" line="56" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x883D</e></m></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="inline" set="null" expr="0x800A" line="58" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800A</e></m></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" expr="0x800B" line="59" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800B</e></m></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="inline" set="null" expr="0x80C8" line="61" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C8</e></m></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="inline" set="null" expr="0x80C9" line="62" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C9</e></m></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="inline" set="null" expr="0x80CA" line="63" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CA</e></m></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="inline" set="null" expr="0x80CB" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CB</e></m></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="inline" set="null" expr="0x8001" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8001</e></m></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" expr="0x8002" line="66" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8002</e></m></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="inline" set="null" expr="0x8003" line="67" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8003</e></m></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" expr="0x8004" line="68" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8004</e></m></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="inline" set="null" expr="0x8005" line="69" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8005</e></m></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="inline" set="null" expr="0x8892" line="71" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8892</e></m></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" expr="0x8893" line="72" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8893</e></m></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8894" line="73" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8894</e></m></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8895" line="74" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8895</e></m></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="inline" set="null" expr="0x88E0" line="76" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E0</e></m></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="inline" set="null" expr="0x88E4" line="77" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E4</e></m></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="inline" set="null" expr="0x88E8" line="78" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E8</e></m></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="inline" set="null" expr="0x8764" line="80" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8764</e></m></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="inline" set="null" expr="0x8765" line="81" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8765</e></m></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" expr="0x8626" line="83" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8626</e></m></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="inline" set="null" expr="0x0404" line="85" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0404</e></m></meta>
		</FRONT>
		<BACK public="1" get="inline" set="null" expr="0x0405" line="86" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0405</e></m></meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="inline" set="null" expr="0x0408" line="87" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0408</e></m></meta>
		</FRONT_AND_BACK>
		<CULL_FACE public="1" get="inline" set="null" expr="0x0B44" line="89" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B44</e></m></meta>
		</CULL_FACE>
		<BLEND public="1" get="inline" set="null" expr="0x0BE2" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BE2</e></m></meta>
		</BLEND>
		<DITHER public="1" get="inline" set="null" expr="0x0BD0" line="91" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BD0</e></m></meta>
		</DITHER>
		<STENCIL_TEST public="1" get="inline" set="null" expr="0x0B90" line="92" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B90</e></m></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="inline" set="null" expr="0x0B71" line="93" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B71</e></m></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="inline" set="null" expr="0x0C11" line="94" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C11</e></m></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" expr="0x8037" line="95" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8037</e></m></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" expr="0x809E" line="96" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x809E</e></m></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="inline" set="null" expr="0x80A0" line="97" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A0</e></m></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="inline" set="null" expr="0" line="99" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="inline" set="null" expr="0x0500" line="100" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0500</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" expr="0x0501" line="101" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0501</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" expr="0x0502" line="102" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0502</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="0x0505" line="103" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0505</e></m></meta>
		</OUT_OF_MEMORY>
		<CW public="1" get="inline" set="null" expr="0x0900" line="105" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0900</e></m></meta>
		</CW>
		<CCW public="1" get="inline" set="null" expr="0x0901" line="106" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0901</e></m></meta>
		</CCW>
		<LINE_WIDTH public="1" get="inline" set="null" expr="0x0B21" line="108" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B21</e></m></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" expr="0x846D" line="109" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846D</e></m></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" expr="0x846E" line="110" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846E</e></m></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="inline" set="null" expr="0x0B45" line="111" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B45</e></m></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" get="inline" set="null" expr="0x0B46" line="112" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B46</e></m></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" get="inline" set="null" expr="0x0B70" line="113" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B70</e></m></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="inline" set="null" expr="0x0B72" line="114" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B72</e></m></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" expr="0x0B73" line="115" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B73</e></m></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="inline" set="null" expr="0x0B74" line="116" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B74</e></m></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" expr="0x0B91" line="117" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B91</e></m></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="inline" set="null" expr="0x0B92" line="118" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B92</e></m></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="inline" set="null" expr="0x0B94" line="119" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B94</e></m></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="0x0B95" line="120" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B95</e></m></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="0x0B96" line="121" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B96</e></m></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="inline" set="null" expr="0x0B97" line="122" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B97</e></m></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="inline" set="null" expr="0x0B93" line="123" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B93</e></m></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="inline" set="null" expr="0x0B98" line="124" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B98</e></m></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="inline" set="null" expr="0x8800" line="125" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8800</e></m></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="inline" set="null" expr="0x8801" line="126" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8801</e></m></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="0x8802" line="127" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8802</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="0x8803" line="128" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8803</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="inline" set="null" expr="0x8CA3" line="129" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA3</e></m></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" expr="0x8CA4" line="130" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA4</e></m></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" expr="0x8CA5" line="131" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA5</e></m></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="inline" set="null" expr="0x0BA2" line="132" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BA2</e></m></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" get="inline" set="null" expr="0x0C10" line="133" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C10</e></m></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="inline" set="null" expr="0x0C22" line="135" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C22</e></m></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="inline" set="null" expr="0x0C23" line="136" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C23</e></m></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" expr="0x0CF5" line="137" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF5</e></m></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="inline" set="null" expr="0x0D05" line="138" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D05</e></m></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="inline" set="null" expr="0x0D33" line="139" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D33</e></m></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" expr="0x0D3A" line="140" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D3A</e></m></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="inline" set="null" expr="0x0D50" line="141" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D50</e></m></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" get="inline" set="null" expr="0x0D52" line="142" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D52</e></m></meta>
		</RED_BITS>
		<GREEN_BITS public="1" get="inline" set="null" expr="0x0D53" line="143" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D53</e></m></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" get="inline" set="null" expr="0x0D54" line="144" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D54</e></m></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" get="inline" set="null" expr="0x0D55" line="145" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D55</e></m></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" get="inline" set="null" expr="0x0D56" line="146" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D56</e></m></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" get="inline" set="null" expr="0x0D57" line="147" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D57</e></m></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" expr="0x2A00" line="148" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2A00</e></m></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" expr="0x8038" line="150" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8038</e></m></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="inline" set="null" expr="0x8069" line="151" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8069</e></m></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="inline" set="null" expr="0x80A8" line="152" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A8</e></m></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" get="inline" set="null" expr="0x80A9" line="153" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A9</e></m></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" expr="0x80AA" line="154" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AA</e></m></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" expr="0x80AB" line="155" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AB</e></m></meta>
		</SAMPLE_COVERAGE_INVERT>
		<NUM_COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" expr="0x86A2" line="157" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A2</e></m></meta>
		</NUM_COMPRESSED_TEXTURE_FORMATS>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" expr="0x86A3" line="158" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A3</e></m></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="inline" set="null" expr="0x1100" line="160" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1100</e></m></meta>
		</DONT_CARE>
		<FASTEST public="1" get="inline" set="null" expr="0x1101" line="161" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1101</e></m></meta>
		</FASTEST>
		<NICEST public="1" get="inline" set="null" expr="0x1102" line="162" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1102</e></m></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" expr="0x8192" line="164" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8192</e></m></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="inline" set="null" expr="0x1400" line="166" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1400</e></m></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="inline" set="null" expr="0x1401" line="167" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1401</e></m></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="inline" set="null" expr="0x1402" line="168" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1402</e></m></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="inline" set="null" expr="0x1403" line="169" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1403</e></m></meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="inline" set="null" expr="0x1404" line="170" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1404</e></m></meta>
		</INT>
		<UNSIGNED_INT public="1" get="inline" set="null" expr="0x1405" line="171" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1405</e></m></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="inline" set="null" expr="0x1406" line="172" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1406</e></m></meta>
		</FLOAT>
		<DEPTH_COMPONENT public="1" get="inline" set="null" expr="0x1902" line="174" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1902</e></m></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="inline" set="null" expr="0x1906" line="175" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1906</e></m></meta>
		</ALPHA>
		<RGB public="1" get="inline" set="null" expr="0x1907" line="176" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1907</e></m></meta>
		</RGB>
		<RGBA public="1" get="inline" set="null" expr="0x1908" line="177" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1908</e></m></meta>
		</RGBA>
		<LUMINANCE public="1" get="inline" set="null" expr="0x1909" line="178" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1909</e></m></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="inline" set="null" expr="0x190A" line="179" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x190A</e></m></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" expr="0x8033" line="181" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8033</e></m></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" expr="0x8034" line="182" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8034</e></m></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" expr="0x8363" line="183" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8363</e></m></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="inline" set="null" expr="0x8B30" line="185" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B30</e></m></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="inline" set="null" expr="0x8B31" line="186" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B31</e></m></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" expr="0x8869" line="187" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8869</e></m></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" expr="0x8DFB" line="188" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFB</e></m></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="inline" set="null" expr="0x8DFC" line="189" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFC</e></m></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="0x8B4D" line="190" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4D</e></m></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="0x8B4C" line="191" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4C</e></m></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="0x8872" line="192" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8872</e></m></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" expr="0x8DFD" line="193" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFD</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="inline" set="null" expr="0x8B4F" line="194" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4F</e></m></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="inline" set="null" expr="0x8B80" line="195" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B80</e></m></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="inline" set="null" expr="0x8B82" line="196" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B82</e></m></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="inline" set="null" expr="0x8B83" line="197" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B83</e></m></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="inline" set="null" expr="0x8B85" line="198" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B85</e></m></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="inline" set="null" expr="0x8B86" line="199" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B86</e></m></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" expr="0x8B89" line="200" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B89</e></m></meta>
		</ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" expr="0x8B8C" line="201" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8C</e></m></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="inline" set="null" expr="0x8B8D" line="202" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8D</e></m></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" get="inline" set="null" expr="0x0200" line="204" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0200</e></m></meta>
		</NEVER>
		<LESS public="1" get="inline" set="null" expr="0x0201" line="205" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0201</e></m></meta>
		</LESS>
		<EQUAL public="1" get="inline" set="null" expr="0x0202" line="206" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0202</e></m></meta>
		</EQUAL>
		<LEQUAL public="1" get="inline" set="null" expr="0x0203" line="207" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0203</e></m></meta>
		</LEQUAL>
		<GREATER public="1" get="inline" set="null" expr="0x0204" line="208" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0204</e></m></meta>
		</GREATER>
		<NOTEQUAL public="1" get="inline" set="null" expr="0x0205" line="209" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0205</e></m></meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="inline" set="null" expr="0x0206" line="210" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0206</e></m></meta>
		</GEQUAL>
		<ALWAYS public="1" get="inline" set="null" expr="0x0207" line="211" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0207</e></m></meta>
		</ALWAYS>
		<KEEP public="1" get="inline" set="null" expr="0x1E00" line="213" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E00</e></m></meta>
		</KEEP>
		<REPLACE public="1" get="inline" set="null" expr="0x1E01" line="214" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E01</e></m></meta>
		</REPLACE>
		<INCR public="1" get="inline" set="null" expr="0x1E02" line="215" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E02</e></m></meta>
		</INCR>
		<DECR public="1" get="inline" set="null" expr="0x1E03" line="216" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E03</e></m></meta>
		</DECR>
		<INVERT public="1" get="inline" set="null" expr="0x150A" line="217" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x150A</e></m></meta>
		</INVERT>
		<INCR_WRAP public="1" get="inline" set="null" expr="0x8507" line="218" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8507</e></m></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="inline" set="null" expr="0x8508" line="219" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8508</e></m></meta>
		</DECR_WRAP>
		<VENDOR public="1" get="inline" set="null" expr="0x1F00" line="221" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F00</e></m></meta>
		</VENDOR>
		<RENDERER public="1" get="inline" set="null" expr="0x1F01" line="222" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F01</e></m></meta>
		</RENDERER>
		<VERSION public="1" get="inline" set="null" expr="0x1F02" line="223" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F02</e></m></meta>
		</VERSION>
		<EXTENSIONS public="1" get="inline" set="null" expr="0x1F03" line="224" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F03</e></m></meta>
		</EXTENSIONS>
		<NEAREST public="1" get="inline" set="null" expr="0x2600" line="226" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2600</e></m></meta>
		</NEAREST>
		<LINEAR public="1" get="inline" set="null" expr="0x2601" line="227" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2601</e></m></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" expr="0x2700" line="229" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2700</e></m></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" expr="0x2701" line="230" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2701</e></m></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" expr="0x2702" line="231" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2702</e></m></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" expr="0x2703" line="232" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2703</e></m></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="inline" set="null" expr="0x2800" line="234" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2800</e></m></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="inline" set="null" expr="0x2801" line="235" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2801</e></m></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="inline" set="null" expr="0x2802" line="236" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2802</e></m></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="inline" set="null" expr="0x2803" line="237" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2803</e></m></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="inline" set="null" expr="0x0DE1" line="239" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0DE1</e></m></meta>
		</TEXTURE_2D>
		<TEXTURE public="1" get="inline" set="null" expr="0x1702" line="240" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1702</e></m></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="inline" set="null" expr="0x8513" line="242" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8513</e></m></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" expr="0x8514" line="243" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8514</e></m></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" expr="0x8515" line="244" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8515</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" expr="0x8516" line="245" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8516</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" expr="0x8517" line="246" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8517</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" expr="0x8518" line="247" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8518</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" expr="0x8519" line="248" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8519</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" expr="0x851A" line="249" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851A</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" expr="0x851C" line="250" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851C</e></m></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="inline" set="null" expr="0x84C0" line="252" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C0</e></m></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="inline" set="null" expr="0x84C1" line="253" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C1</e></m></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="inline" set="null" expr="0x84C2" line="254" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C2</e></m></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="inline" set="null" expr="0x84C3" line="255" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C3</e></m></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="inline" set="null" expr="0x84C4" line="256" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C4</e></m></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="inline" set="null" expr="0x84C5" line="257" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C5</e></m></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="inline" set="null" expr="0x84C6" line="258" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C6</e></m></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="inline" set="null" expr="0x84C7" line="259" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C7</e></m></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="inline" set="null" expr="0x84C8" line="260" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C8</e></m></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="inline" set="null" expr="0x84C9" line="261" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C9</e></m></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="inline" set="null" expr="0x84CA" line="262" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CA</e></m></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="inline" set="null" expr="0x84CB" line="263" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CB</e></m></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="inline" set="null" expr="0x84CC" line="264" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CC</e></m></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="inline" set="null" expr="0x84CD" line="265" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CD</e></m></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="inline" set="null" expr="0x84CE" line="266" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CE</e></m></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="inline" set="null" expr="0x84CF" line="267" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CF</e></m></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="inline" set="null" expr="0x84D0" line="268" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D0</e></m></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="inline" set="null" expr="0x84D1" line="269" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D1</e></m></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="inline" set="null" expr="0x84D2" line="270" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D2</e></m></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="inline" set="null" expr="0x84D3" line="271" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D3</e></m></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="inline" set="null" expr="0x84D4" line="272" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D4</e></m></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="inline" set="null" expr="0x84D5" line="273" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D5</e></m></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="inline" set="null" expr="0x84D6" line="274" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D6</e></m></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="inline" set="null" expr="0x84D7" line="275" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D7</e></m></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="inline" set="null" expr="0x84D8" line="276" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D8</e></m></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="inline" set="null" expr="0x84D9" line="277" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D9</e></m></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="inline" set="null" expr="0x84DA" line="278" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DA</e></m></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="inline" set="null" expr="0x84DB" line="279" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DB</e></m></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="inline" set="null" expr="0x84DC" line="280" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DC</e></m></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="inline" set="null" expr="0x84DD" line="281" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DD</e></m></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="inline" set="null" expr="0x84DE" line="282" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DE</e></m></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="inline" set="null" expr="0x84DF" line="283" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DF</e></m></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="inline" set="null" expr="0x84E0" line="284" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E0</e></m></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" get="inline" set="null" expr="0x2901" line="286" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2901</e></m></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="inline" set="null" expr="0x812F" line="287" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x812F</e></m></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="inline" set="null" expr="0x8370" line="288" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8370</e></m></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="inline" set="null" expr="0x8B50" line="290" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B50</e></m></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" expr="0x8B51" line="291" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B51</e></m></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" expr="0x8B52" line="292" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B52</e></m></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" get="inline" set="null" expr="0x8B53" line="293" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B53</e></m></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="inline" set="null" expr="0x8B54" line="294" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B54</e></m></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="inline" set="null" expr="0x8B55" line="295" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B55</e></m></meta>
		</INT_VEC4>
		<BOOL public="1" get="inline" set="null" expr="0x8B56" line="296" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B56</e></m></meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="inline" set="null" expr="0x8B57" line="297" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B57</e></m></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="inline" set="null" expr="0x8B58" line="298" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B58</e></m></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="inline" set="null" expr="0x8B59" line="299" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B59</e></m></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="inline" set="null" expr="0x8B5A" line="300" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5A</e></m></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" expr="0x8B5B" line="301" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5B</e></m></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" expr="0x8B5C" line="302" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5C</e></m></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="inline" set="null" expr="0x8B5E" line="303" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5E</e></m></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="inline" set="null" expr="0x8B60" line="304" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B60</e></m></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" expr="0x8622" line="306" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8622</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" expr="0x8623" line="307" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8623</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" expr="0x8624" line="308" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8624</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" expr="0x8625" line="309" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8625</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" expr="0x886A" line="310" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x886A</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" expr="0x8645" line="311" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8645</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="0x889F" line="312" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x889F</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<IMPLEMENTATION_COLOR_READ_TYPE public="1" get="inline" set="null" expr="0x8B9A" line="314" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9A</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_TYPE>
		<IMPLEMENTATION_COLOR_READ_FORMAT public="1" get="inline" set="null" expr="0x8B9B" line="315" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9B</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_FORMAT>
		<VERTEX_PROGRAM_POINT_SIZE public="1" get="inline" set="null" expr="0x8642" line="317" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8642</e></m></meta>
		</VERTEX_PROGRAM_POINT_SIZE>
		<POINT_SPRITE public="1" get="inline" set="null" expr="0x8861" line="318" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8861</e></m></meta>
		</POINT_SPRITE>
		<COMPILE_STATUS public="1" get="inline" set="null" expr="0x8B81" line="320" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B81</e></m></meta>
		</COMPILE_STATUS>
		<LOW_FLOAT public="1" get="inline" set="null" expr="0x8DF0" line="322" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF0</e></m></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="inline" set="null" expr="0x8DF1" line="323" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF1</e></m></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="inline" set="null" expr="0x8DF2" line="324" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF2</e></m></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="inline" set="null" expr="0x8DF3" line="325" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF3</e></m></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="inline" set="null" expr="0x8DF4" line="326" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF4</e></m></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="inline" set="null" expr="0x8DF5" line="327" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF5</e></m></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" get="inline" set="null" expr="0x8D40" line="329" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D40</e></m></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="inline" set="null" expr="0x8D41" line="330" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D41</e></m></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" get="inline" set="null" expr="0x8056" line="332" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8056</e></m></meta>
		</RGBA4>
		<RGB5_A1 public="1" get="inline" set="null" expr="0x8057" line="333" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8057</e></m></meta>
		</RGB5_A1>
		<RGB565 public="1" get="inline" set="null" expr="0x8D62" line="334" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D62</e></m></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="inline" set="null" expr="0x81A5" line="335" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A5</e></m></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="inline" set="null" expr="0x1901" line="336" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1901</e></m></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="inline" set="null" expr="0x8D48" line="337" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D48</e></m></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="inline" set="null" expr="0x84F9" line="338" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F9</e></m></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="inline" set="null" expr="0x8D42" line="340" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D42</e></m></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" expr="0x8D43" line="341" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D43</e></m></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" expr="0x8D44" line="342" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D44</e></m></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" expr="0x8D50" line="343" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D50</e></m></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" expr="0x8D51" line="344" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D51</e></m></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" expr="0x8D52" line="345" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D52</e></m></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" expr="0x8D53" line="346" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D53</e></m></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" expr="0x8D54" line="347" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D54</e></m></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" expr="0x8D55" line="348" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D55</e></m></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" expr="0x8CD0" line="350" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD0</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" expr="0x8CD1" line="351" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD1</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" expr="0x8CD2" line="352" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD2</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" expr="0x8CD3" line="353" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD3</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="inline" set="null" expr="0x8CE0" line="355" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE0</e></m></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="inline" set="null" expr="0x8D00" line="356" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D00</e></m></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="0x8D20" line="357" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D20</e></m></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="0x821A" line="358" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x821A</e></m></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="inline" set="null" expr="0" line="360" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" expr="0x8CD5" line="362" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD5</e></m></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" expr="0x8CD6" line="363" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD6</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" expr="0x8CD7" line="364" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD7</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" expr="0x8CD9" line="365" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD9</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" expr="0x8CDD" line="366" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDD</e></m></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CA6" line="368" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CA7" line="369" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA7</e></m></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" expr="0x84E8" line="370" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E8</e></m></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" expr="0x0506" line="372" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0506</e></m></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="inline" set="null" expr="0x9240" line="374" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9240</e></m></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="inline" set="null" expr="0x9241" line="375" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9241</e></m></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="inline" set="null" expr="0x9242" line="376" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9242</e></m></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="inline" set="null" expr="0x9243" line="377" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9243</e></m></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="inline" set="null" expr="0x9244" line="378" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9244</e></m></meta>
		</BROWSER_DEFAULT_WEBGL>
		<READ_BUFFER public="1" get="inline" set="null" expr="0x0C02" line="380" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C02</e></m></meta>
		</READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1" get="inline" set="null" expr="0x0CF2" line="381" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF2</e></m></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" get="inline" set="null" expr="0x0CF3" line="382" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF3</e></m></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" get="inline" set="null" expr="0x0CF4" line="383" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF4</e></m></meta>
		</UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1" get="inline" set="null" expr="0x0D02" line="384" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D02</e></m></meta>
		</PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1" get="inline" set="null" expr="0x0D03" line="385" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D03</e></m></meta>
		</PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1" get="inline" set="null" expr="0x0D04" line="386" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D04</e></m></meta>
		</PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1" get="inline" set="null" expr="0x806A" line="387" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806A</e></m></meta>
		</TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1" get="inline" set="null" expr="0x806D" line="388" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806D</e></m></meta>
		</UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1" get="inline" set="null" expr="0x806E" line="389" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806E</e></m></meta>
		</UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1" get="inline" set="null" expr="0x8073" line="390" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8073</e></m></meta>
		</MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1" get="inline" set="null" expr="0x80E8" line="391" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E8</e></m></meta>
		</MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1" get="inline" set="null" expr="0x80E9" line="392" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E9</e></m></meta>
		</MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1" get="inline" set="null" expr="0x84FD" line="393" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FD</e></m></meta>
		</MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8B49" line="394" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B49</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8B4A" line="395" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4A</e></m></meta>
		</MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1" get="inline" set="null" expr="0x88FF" line="396" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FF</e></m></meta>
		</MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1" get="inline" set="null" expr="0x8904" line="397" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8904</e></m></meta>
		</MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1" get="inline" set="null" expr="0x8905" line="398" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8905</e></m></meta>
		</MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1" get="inline" set="null" expr="0x8B4B" line="399" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4B</e></m></meta>
		</MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="inline" set="null" expr="0x8B8B" line="400" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8B</e></m></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1" get="inline" set="null" expr="0x8C89" line="401" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C89</e></m></meta>
		</RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1" get="inline" set="null" expr="0x85B5" line="402" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x85B5</e></m></meta>
		</VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="inline" set="null" expr="0x9122" line="403" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9122</e></m></meta>
		</MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="inline" set="null" expr="0x9125" line="404" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9125</e></m></meta>
		</MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1" get="inline" set="null" expr="0x9111" line="405" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9111</e></m></meta>
		</MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1" get="inline" set="null" expr="0x8D6B" line="406" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6B</e></m></meta>
		</MAX_ELEMENT_INDEX>
		<RED public="1" get="inline" set="null" expr="0x1903" line="408" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1903</e></m></meta>
		</RED>
		<RGB8 public="1" get="inline" set="null" expr="0x8051" line="409" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8051</e></m></meta>
		</RGB8>
		<RGBA8 public="1" get="inline" set="null" expr="0x8058" line="410" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8058</e></m></meta>
		</RGBA8>
		<RGB10_A2 public="1" get="inline" set="null" expr="0x8059" line="411" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8059</e></m></meta>
		</RGB10_A2>
		<TEXTURE_3D public="1" get="inline" set="null" expr="0x806F" line="412" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806F</e></m></meta>
		</TEXTURE_3D>
		<TEXTURE_WRAP_R public="1" get="inline" set="null" expr="0x8072" line="413" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8072</e></m></meta>
		</TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1" get="inline" set="null" expr="0x813A" line="414" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813A</e></m></meta>
		</TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1" get="inline" set="null" expr="0x813B" line="415" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813B</e></m></meta>
		</TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1" get="inline" set="null" expr="0x813C" line="416" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813C</e></m></meta>
		</TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1" get="inline" set="null" expr="0x813D" line="417" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813D</e></m></meta>
		</TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1" get="inline" set="null" expr="0x884C" line="418" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884C</e></m></meta>
		</TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1" get="inline" set="null" expr="0x884D" line="419" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884D</e></m></meta>
		</TEXTURE_COMPARE_FUNC>
		<SRGB public="1" get="inline" set="null" expr="0x8C40" line="420" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C40</e></m></meta>
		</SRGB>
		<SRGB8 public="1" get="inline" set="null" expr="0x8C41" line="421" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C41</e></m></meta>
		</SRGB8>
		<SRGB8_ALPHA8 public="1" get="inline" set="null" expr="0x8C43" line="422" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C43</e></m></meta>
		</SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1" get="inline" set="null" expr="0x884E" line="423" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884E</e></m></meta>
		</COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1" get="inline" set="null" expr="0x8814" line="424" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8814</e></m></meta>
		</RGBA32F>
		<RGB32F public="1" get="inline" set="null" expr="0x8815" line="425" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8815</e></m></meta>
		</RGB32F>
		<RGBA16F public="1" get="inline" set="null" expr="0x881A" line="426" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881A</e></m></meta>
		</RGBA16F>
		<RGB16F public="1" get="inline" set="null" expr="0x881B" line="427" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881B</e></m></meta>
		</RGB16F>
		<TEXTURE_2D_ARRAY public="1" get="inline" set="null" expr="0x8C1A" line="428" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C1A</e></m></meta>
		</TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1" get="inline" set="null" expr="0x8C1D" line="429" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C1D</e></m></meta>
		</TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1" get="inline" set="null" expr="0x8C3A" line="430" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3A</e></m></meta>
		</R11F_G11F_B10F>
		<RGB9_E5 public="1" get="inline" set="null" expr="0x8C3D" line="431" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3D</e></m></meta>
		</RGB9_E5>
		<RGBA32UI public="1" get="inline" set="null" expr="0x8D70" line="432" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D70</e></m></meta>
		</RGBA32UI>
		<RGB32UI public="1" get="inline" set="null" expr="0x8D71" line="433" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D71</e></m></meta>
		</RGB32UI>
		<RGBA16UI public="1" get="inline" set="null" expr="0x8D76" line="434" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D76</e></m></meta>
		</RGBA16UI>
		<RGB16UI public="1" get="inline" set="null" expr="0x8D77" line="435" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D77</e></m></meta>
		</RGB16UI>
		<RGBA8UI public="1" get="inline" set="null" expr="0x8D7C" line="436" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D7C</e></m></meta>
		</RGBA8UI>
		<RGB8UI public="1" get="inline" set="null" expr="0x8D7D" line="437" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D7D</e></m></meta>
		</RGB8UI>
		<RGBA32I public="1" get="inline" set="null" expr="0x8D82" line="438" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D82</e></m></meta>
		</RGBA32I>
		<RGB32I public="1" get="inline" set="null" expr="0x8D83" line="439" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D83</e></m></meta>
		</RGB32I>
		<RGBA16I public="1" get="inline" set="null" expr="0x8D88" line="440" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D88</e></m></meta>
		</RGBA16I>
		<RGB16I public="1" get="inline" set="null" expr="0x8D89" line="441" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D89</e></m></meta>
		</RGB16I>
		<RGBA8I public="1" get="inline" set="null" expr="0x8D8E" line="442" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D8E</e></m></meta>
		</RGBA8I>
		<RGB8I public="1" get="inline" set="null" expr="0x8D8F" line="443" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D8F</e></m></meta>
		</RGB8I>
		<RED_INTEGER public="1" get="inline" set="null" expr="0x8D94" line="444" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D94</e></m></meta>
		</RED_INTEGER>
		<RGB_INTEGER public="1" get="inline" set="null" expr="0x8D98" line="445" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D98</e></m></meta>
		</RGB_INTEGER>
		<RGBA_INTEGER public="1" get="inline" set="null" expr="0x8D99" line="446" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D99</e></m></meta>
		</RGBA_INTEGER>
		<R8 public="1" get="inline" set="null" expr="0x8229" line="447" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8229</e></m></meta>
		</R8>
		<RG8 public="1" get="inline" set="null" expr="0x822B" line="448" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822B</e></m></meta>
		</RG8>
		<R16F public="1" get="inline" set="null" expr="0x822D" line="449" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822D</e></m></meta>
		</R16F>
		<R32F public="1" get="inline" set="null" expr="0x822E" line="450" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822E</e></m></meta>
		</R32F>
		<RG16F public="1" get="inline" set="null" expr="0x822F" line="451" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822F</e></m></meta>
		</RG16F>
		<RG32F public="1" get="inline" set="null" expr="0x8230" line="452" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8230</e></m></meta>
		</RG32F>
		<R8I public="1" get="inline" set="null" expr="0x8231" line="453" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8231</e></m></meta>
		</R8I>
		<R8UI public="1" get="inline" set="null" expr="0x8232" line="454" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8232</e></m></meta>
		</R8UI>
		<R16I public="1" get="inline" set="null" expr="0x8233" line="455" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8233</e></m></meta>
		</R16I>
		<R16UI public="1" get="inline" set="null" expr="0x8234" line="456" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8234</e></m></meta>
		</R16UI>
		<R32I public="1" get="inline" set="null" expr="0x8235" line="457" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8235</e></m></meta>
		</R32I>
		<R32UI public="1" get="inline" set="null" expr="0x8236" line="458" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8236</e></m></meta>
		</R32UI>
		<RG8I public="1" get="inline" set="null" expr="0x8237" line="459" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8237</e></m></meta>
		</RG8I>
		<RG8UI public="1" get="inline" set="null" expr="0x8238" line="460" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8238</e></m></meta>
		</RG8UI>
		<RG16I public="1" get="inline" set="null" expr="0x8239" line="461" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8239</e></m></meta>
		</RG16I>
		<RG16UI public="1" get="inline" set="null" expr="0x823A" line="462" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823A</e></m></meta>
		</RG16UI>
		<RG32I public="1" get="inline" set="null" expr="0x823B" line="463" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823B</e></m></meta>
		</RG32I>
		<RG32UI public="1" get="inline" set="null" expr="0x823C" line="464" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823C</e></m></meta>
		</RG32UI>
		<R8_SNORM public="1" get="inline" set="null" expr="0x8F94" line="465" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F94</e></m></meta>
		</R8_SNORM>
		<RG8_SNORM public="1" get="inline" set="null" expr="0x8F95" line="466" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F95</e></m></meta>
		</RG8_SNORM>
		<RGB8_SNORM public="1" get="inline" set="null" expr="0x8F96" line="467" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F96</e></m></meta>
		</RGB8_SNORM>
		<RGBA8_SNORM public="1" get="inline" set="null" expr="0x8F97" line="468" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F97</e></m></meta>
		</RGBA8_SNORM>
		<RGB10_A2UI public="1" get="inline" set="null" expr="0x906F" line="469" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x906F</e></m></meta>
		</RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1" get="inline" set="null" expr="0x912F" line="470" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x912F</e></m></meta>
		</TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1" get="inline" set="null" expr="0x82DF" line="471" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82DF</e></m></meta>
		</TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1" get="inline" set="null" expr="0x8368" line="473" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8368</e></m></meta>
		</UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1" get="inline" set="null" expr="0x8C3B" line="474" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3B</e></m></meta>
		</UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1" get="inline" set="null" expr="0x8C3E" line="475" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3E</e></m></meta>
		</UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="inline" set="null" expr="0x8DAD" line="476" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DAD</e></m></meta>
		</FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1" get="inline" set="null" expr="0x84FA" line="477" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FA</e></m></meta>
		</UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1" get="inline" set="null" expr="0x140B" line="478" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x140B</e></m></meta>
		</HALF_FLOAT>
		<RG public="1" get="inline" set="null" expr="0x8227" line="479" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8227</e></m></meta>
		</RG>
		<RG_INTEGER public="1" get="inline" set="null" expr="0x8228" line="480" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8228</e></m></meta>
		</RG_INTEGER>
		<INT_2_10_10_10_REV public="1" get="inline" set="null" expr="0x8D9F" line="481" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D9F</e></m></meta>
		</INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1" get="inline" set="null" expr="0x8865" line="483" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8865</e></m></meta>
		</CURRENT_QUERY>
		<QUERY_RESULT public="1" get="inline" set="null" expr="0x8866" line="484" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8866</e></m></meta>
		</QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1" get="inline" set="null" expr="0x8867" line="485" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8867</e></m></meta>
		</QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1" get="inline" set="null" expr="0x8C2F" line="486" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C2F</e></m></meta>
		</ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="inline" set="null" expr="0x8D6A" line="487" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6A</e></m></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1" get="inline" set="null" expr="0x8824" line="489" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8824</e></m></meta>
		</MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1" get="inline" set="null" expr="0x8825" line="490" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8825</e></m></meta>
		</DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1" get="inline" set="null" expr="0x8826" line="491" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8826</e></m></meta>
		</DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1" get="inline" set="null" expr="0x8827" line="492" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8827</e></m></meta>
		</DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1" get="inline" set="null" expr="0x8828" line="493" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8828</e></m></meta>
		</DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1" get="inline" set="null" expr="0x8829" line="494" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8829</e></m></meta>
		</DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1" get="inline" set="null" expr="0x882A" line="495" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882A</e></m></meta>
		</DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1" get="inline" set="null" expr="0x882B" line="496" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882B</e></m></meta>
		</DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1" get="inline" set="null" expr="0x882C" line="497" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882C</e></m></meta>
		</DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1" get="inline" set="null" expr="0x882D" line="498" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882D</e></m></meta>
		</DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1" get="inline" set="null" expr="0x882E" line="499" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882E</e></m></meta>
		</DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1" get="inline" set="null" expr="0x882F" line="500" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882F</e></m></meta>
		</DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1" get="inline" set="null" expr="0x8830" line="501" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8830</e></m></meta>
		</DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1" get="inline" set="null" expr="0x8831" line="502" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8831</e></m></meta>
		</DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1" get="inline" set="null" expr="0x8832" line="503" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8832</e></m></meta>
		</DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1" get="inline" set="null" expr="0x8833" line="504" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8833</e></m></meta>
		</DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1" get="inline" set="null" expr="0x8834" line="505" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8834</e></m></meta>
		</DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1" get="inline" set="null" expr="0x8CDF" line="506" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDF</e></m></meta>
		</MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1" get="inline" set="null" expr="0x8CE1" line="507" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE1</e></m></meta>
		</COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1" get="inline" set="null" expr="0x8CE2" line="508" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE2</e></m></meta>
		</COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1" get="inline" set="null" expr="0x8CE3" line="509" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE3</e></m></meta>
		</COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1" get="inline" set="null" expr="0x8CE4" line="510" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE4</e></m></meta>
		</COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1" get="inline" set="null" expr="0x8CE5" line="511" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE5</e></m></meta>
		</COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1" get="inline" set="null" expr="0x8CE6" line="512" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE6</e></m></meta>
		</COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1" get="inline" set="null" expr="0x8CE7" line="513" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE7</e></m></meta>
		</COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1" get="inline" set="null" expr="0x8CE8" line="514" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE8</e></m></meta>
		</COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1" get="inline" set="null" expr="0x8CE9" line="515" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE9</e></m></meta>
		</COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1" get="inline" set="null" expr="0x8CEA" line="516" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEA</e></m></meta>
		</COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1" get="inline" set="null" expr="0x8CEB" line="517" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEB</e></m></meta>
		</COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1" get="inline" set="null" expr="0x8CEC" line="518" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEC</e></m></meta>
		</COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1" get="inline" set="null" expr="0x8CED" line="519" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CED</e></m></meta>
		</COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1" get="inline" set="null" expr="0x8CEE" line="520" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEE</e></m></meta>
		</COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1" get="inline" set="null" expr="0x8CEF" line="521" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEF</e></m></meta>
		</COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1" get="inline" set="null" expr="0x8B5F" line="523" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5F</e></m></meta>
		</SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1" get="inline" set="null" expr="0x8B62" line="524" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B62</e></m></meta>
		</SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1" get="inline" set="null" expr="0x8DC1" line="525" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC1</e></m></meta>
		</SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1" get="inline" set="null" expr="0x8DC4" line="526" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC4</e></m></meta>
		</SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1" get="inline" set="null" expr="0x8DC5" line="527" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC5</e></m></meta>
		</SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1" get="inline" set="null" expr="0x8DCA" line="528" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCA</e></m></meta>
		</INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1" get="inline" set="null" expr="0x8DCB" line="529" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCB</e></m></meta>
		</INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1" get="inline" set="null" expr="0x8DCC" line="530" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCC</e></m></meta>
		</INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1" get="inline" set="null" expr="0x8DCF" line="531" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCF</e></m></meta>
		</INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1" get="inline" set="null" expr="0x8DD2" line="532" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD2</e></m></meta>
		</UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1" get="inline" set="null" expr="0x8DD3" line="533" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD3</e></m></meta>
		</UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1" get="inline" set="null" expr="0x8DD4" line="534" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD4</e></m></meta>
		</UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="inline" set="null" expr="0x8DD7" line="535" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD7</e></m></meta>
		</UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1" get="inline" set="null" expr="0x8D57" line="536" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D57</e></m></meta>
		</MAX_SAMPLES>
		<SAMPLER_BINDING public="1" get="inline" set="null" expr="0x8919" line="537" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8919</e></m></meta>
		</SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1" get="inline" set="null" expr="0x88EB" line="539" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EB</e></m></meta>
		</PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1" get="inline" set="null" expr="0x88EC" line="540" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EC</e></m></meta>
		</PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1" get="inline" set="null" expr="0x88ED" line="541" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88ED</e></m></meta>
		</PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1" get="inline" set="null" expr="0x88EF" line="542" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EF</e></m></meta>
		</PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1" get="inline" set="null" expr="0x8F36" line="543" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F36</e></m></meta>
		</COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1" get="inline" set="null" expr="0x8F37" line="544" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F37</e></m></meta>
		</COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8F36" line="545" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F36</e></m></meta>
		</COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8F37" line="546" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F37</e></m></meta>
		</COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1" get="inline" set="null" expr="0x8B65" line="548" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B65</e></m></meta>
		</FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1" get="inline" set="null" expr="0x8B66" line="549" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B66</e></m></meta>
		</FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1" get="inline" set="null" expr="0x8B67" line="550" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B67</e></m></meta>
		</FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1" get="inline" set="null" expr="0x8B68" line="551" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B68</e></m></meta>
		</FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1" get="inline" set="null" expr="0x8B69" line="552" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B69</e></m></meta>
		</FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1" get="inline" set="null" expr="0x8B6A" line="553" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B6A</e></m></meta>
		</FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1" get="inline" set="null" expr="0x8DC6" line="554" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC6</e></m></meta>
		</UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1" get="inline" set="null" expr="0x8DC7" line="555" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC7</e></m></meta>
		</UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1" get="inline" set="null" expr="0x8DC8" line="556" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC8</e></m></meta>
		</UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1" get="inline" set="null" expr="0x8C17" line="557" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C17</e></m></meta>
		</UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1" get="inline" set="null" expr="0x8F9C" line="558" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F9C</e></m></meta>
		</SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="inline" set="null" expr="0x88FD" line="560" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FD</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="inline" set="null" expr="0x88FE" line="561" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FE</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="inline" set="null" expr="0x8C7F" line="563" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C7F</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="inline" set="null" expr="0x8C80" line="564" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C80</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1" get="inline" set="null" expr="0x8C83" line="565" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C83</e></m></meta>
		</TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="inline" set="null" expr="0x8C84" line="566" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C84</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="inline" set="null" expr="0x8C85" line="567" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C85</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="inline" set="null" expr="0x8C88" line="568" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C88</e></m></meta>
		</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="inline" set="null" expr="0x8C8A" line="569" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8A</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="inline" set="null" expr="0x8C8B" line="570" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8B</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1" get="inline" set="null" expr="0x8C8C" line="571" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8C</e></m></meta>
		</INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1" get="inline" set="null" expr="0x8C8D" line="572" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8D</e></m></meta>
		</SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1" get="inline" set="null" expr="0x8C8E" line="573" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8E</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8C8F" line="574" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8F</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1" get="inline" set="null" expr="0x8E22" line="575" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E22</e></m></meta>
		</TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1" get="inline" set="null" expr="0x8E23" line="576" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E23</e></m></meta>
		</TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1" get="inline" set="null" expr="0x8E24" line="577" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E24</e></m></meta>
		</TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1" get="inline" set="null" expr="0x8E25" line="578" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E25</e></m></meta>
		</TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="inline" set="null" expr="0x8210" line="580" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8210</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="inline" set="null" expr="0x8211" line="581" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8211</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="inline" set="null" expr="0x8212" line="582" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8212</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="inline" set="null" expr="0x8213" line="583" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8213</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="inline" set="null" expr="0x8214" line="584" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8214</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="inline" set="null" expr="0x8215" line="585" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8215</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="inline" set="null" expr="0x8216" line="586" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8216</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="inline" set="null" expr="0x8217" line="587" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8217</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1" get="inline" set="null" expr="0x8218" line="588" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8218</e></m></meta>
		</FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1" get="inline" set="null" expr="0x88F0" line="589" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88F0</e></m></meta>
		</DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CA6" line="590" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1" get="inline" set="null" expr="0x8CA8" line="591" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA8</e></m></meta>
		</READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1" get="inline" set="null" expr="0x8CA9" line="592" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA9</e></m></meta>
		</DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CAA" line="593" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAA</e></m></meta>
		</READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1" get="inline" set="null" expr="0x8CAB" line="594" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAB</e></m></meta>
		</RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="inline" set="null" expr="0x8CD4" line="595" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD4</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="inline" set="null" expr="0x8D56" line="596" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D56</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1" get="inline" set="null" expr="0x8A11" line="598" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A11</e></m></meta>
		</UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8A28" line="599" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A28</e></m></meta>
		</UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1" get="inline" set="null" expr="0x8A29" line="600" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A29</e></m></meta>
		</UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1" get="inline" set="null" expr="0x8A2A" line="601" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2A</e></m></meta>
		</UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A2B" line="602" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2B</e></m></meta>
		</MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A2D" line="603" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2D</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A2E" line="604" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2E</e></m></meta>
		</MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="inline" set="null" expr="0x8A2F" line="605" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2F</e></m></meta>
		</MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1" get="inline" set="null" expr="0x8A30" line="606" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A30</e></m></meta>
		</MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8A31" line="607" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A31</e></m></meta>
		</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8A33" line="608" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A33</e></m></meta>
		</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="inline" set="null" expr="0x8A34" line="609" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A34</e></m></meta>
		</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A36" line="610" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A36</e></m></meta>
		</ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1" get="inline" set="null" expr="0x8A37" line="611" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A37</e></m></meta>
		</UNIFORM_TYPE>
		<UNIFORM_SIZE public="1" get="inline" set="null" expr="0x8A38" line="612" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A38</e></m></meta>
		</UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1" get="inline" set="null" expr="0x8A3A" line="613" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3A</e></m></meta>
		</UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1" get="inline" set="null" expr="0x8A3B" line="614" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3B</e></m></meta>
		</UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1" get="inline" set="null" expr="0x8A3C" line="615" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3C</e></m></meta>
		</UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1" get="inline" set="null" expr="0x8A3D" line="616" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3D</e></m></meta>
		</UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1" get="inline" set="null" expr="0x8A3E" line="617" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3E</e></m></meta>
		</UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1" get="inline" set="null" expr="0x8A3F" line="618" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3F</e></m></meta>
		</UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1" get="inline" set="null" expr="0x8A40" line="619" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A40</e></m></meta>
		</UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="inline" set="null" expr="0x8A42" line="620" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A42</e></m></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="inline" set="null" expr="0x8A43" line="621" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A43</e></m></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="inline" set="null" expr="0x8A44" line="622" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A44</e></m></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="inline" set="null" expr="0x8A46" line="623" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A46</e></m></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1" get="inline" set="null" expr="0x9112" line="625" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9112</e></m></meta>
		</OBJECT_TYPE>
		<SYNC_CONDITION public="1" get="inline" set="null" expr="0x9113" line="626" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9113</e></m></meta>
		</SYNC_CONDITION>
		<SYNC_STATUS public="1" get="inline" set="null" expr="0x9114" line="627" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9114</e></m></meta>
		</SYNC_STATUS>
		<SYNC_FLAGS public="1" get="inline" set="null" expr="0x9115" line="628" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9115</e></m></meta>
		</SYNC_FLAGS>
		<SYNC_FENCE public="1" get="inline" set="null" expr="0x9116" line="629" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9116</e></m></meta>
		</SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1" get="inline" set="null" expr="0x9117" line="630" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9117</e></m></meta>
		</SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1" get="inline" set="null" expr="0x9118" line="631" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9118</e></m></meta>
		</UNSIGNALED>
		<SIGNALED public="1" get="inline" set="null" expr="0x9119" line="632" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9119</e></m></meta>
		</SIGNALED>
		<ALREADY_SIGNALED public="1" get="inline" set="null" expr="0x911A" line="633" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911A</e></m></meta>
		</ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1" get="inline" set="null" expr="0x911B" line="634" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911B</e></m></meta>
		</TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1" get="inline" set="null" expr="0x911C" line="635" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911C</e></m></meta>
		</CONDITION_SATISFIED>
		<WAIT_FAILED public="1" get="inline" set="null" expr="0x911D" line="636" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911D</e></m></meta>
		</WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1" get="inline" set="null" expr="0x00000001" line="637" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000001</e></m></meta>
		</SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1" get="inline" set="null" expr="0x1800" line="639" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1800</e></m></meta>
		</COLOR>
		<DEPTH public="1" get="inline" set="null" expr="0x1801" line="640" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1801</e></m></meta>
		</DEPTH>
		<STENCIL public="1" get="inline" set="null" expr="0x1802" line="641" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1802</e></m></meta>
		</STENCIL>
		<MIN public="1" get="inline" set="null" expr="0x8007" line="642" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8007</e></m></meta>
		</MIN>
		<MAX public="1" get="inline" set="null" expr="0x8008" line="643" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8008</e></m></meta>
		</MAX>
		<DEPTH_COMPONENT24 public="1" get="inline" set="null" expr="0x81A6" line="644" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A6</e></m></meta>
		</DEPTH_COMPONENT24>
		<STREAM_READ public="1" get="inline" set="null" expr="0x88E1" line="645" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E1</e></m></meta>
		</STREAM_READ>
		<STREAM_COPY public="1" get="inline" set="null" expr="0x88E2" line="646" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E2</e></m></meta>
		</STREAM_COPY>
		<STATIC_READ public="1" get="inline" set="null" expr="0x88E5" line="647" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E5</e></m></meta>
		</STATIC_READ>
		<STATIC_COPY public="1" get="inline" set="null" expr="0x88E6" line="648" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E6</e></m></meta>
		</STATIC_COPY>
		<DYNAMIC_READ public="1" get="inline" set="null" expr="0x88E9" line="649" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E9</e></m></meta>
		</DYNAMIC_READ>
		<DYNAMIC_COPY public="1" get="inline" set="null" expr="0x88EA" line="650" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EA</e></m></meta>
		</DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1" get="inline" set="null" expr="0x8CAC" line="651" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAC</e></m></meta>
		</DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1" get="inline" set="null" expr="0x8CAD" line="652" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAD</e></m></meta>
		</DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1" get="inline" set="null" expr="0xFFFFFFFF" line="653" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xFFFFFFFF</e></m></meta>
		</INVALID_INDEX>
		<TIMEOUT_IGNORED public="1" get="inline" set="null" expr="-1" line="654" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-1</e></m></meta>
		</TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="inline" set="null" expr="0x9247" line="655" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9247</e></m></meta>
		</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<context public="1" set="null" static="1"><c path="lime.graphics.GLRenderContext"/></context>
		<type public="1" get="accessor" set="null" static="1"><e path="lime.graphics.opengl.GLContextType"/></type>
		<version public="1" get="accessor" set="null" static="1"><x path="Float"/></version>
		<__currentProgram static="1"><t path="lime.graphics.opengl.GLProgram"/></__currentProgram>
		<activeTexture public="1" get="inline" set="null" line="664" static="1"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" get="inline" set="null" line="671" static="1"><f a="program:shader">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></attachShader>
		<beginQuery public="1" get="inline" set="null" line="678" static="1"><f a="target:query">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></beginQuery>
		<beginTransformFeedback public="1" get="inline" set="null" line="685" static="1"><f a="primitiveNode">
	<x path="Int"/>
	<x path="Void"/>
</f></beginTransformFeedback>
		<bindAttribLocation public="1" get="inline" set="null" line="692" static="1"><f a="program:index:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="699" static="1"><f a="target:buffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindBufferBase public="1" get="inline" set="null" line="706" static="1"><f a="target:index:buffer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBufferBase>
		<bindBufferRange public="1" get="inline" set="null" line="713" static="1"><f a="target:index:buffer:offset:size">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bindBufferRange>
		<bindFramebuffer public="1" get="inline" set="null" line="720" static="1"><f a="target:framebuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="727" static="1"><f a="target:renderbuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindSampler public="1" get="inline" set="null" line="734" static="1"><f a="unit:sampler">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></bindSampler>
		<bindTexture public="1" get="inline" set="null" line="741" static="1"><f a="target:texture">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></bindTexture>
		<bindTransformFeedback public="1" get="inline" set="null" line="748" static="1"><f a="target:transformFeedback">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></bindTransformFeedback>
		<bindVertexArray public="1" get="inline" set="null" line="755" static="1"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></bindVertexArray>
		<blitFramebuffer public="1" get="inline" set="null" line="762" static="1"><f a="srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blitFramebuffer>
		<blendColor public="1" get="inline" set="null" line="769" static="1"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" get="inline" set="null" line="776" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="783" static="1"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="790" static="1"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="797" static="1"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" get="inline" set="null" line="804" static="1"><f a="target:size:srcData:usage">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<bufferSubData public="1" get="inline" set="null" line="820" static="1"><f a="target:dstByteOffset:size:srcData">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="836" static="1"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="843" static="1"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearBufferfi public="1" get="inline" set="null" line="850" static="1"><f a="buffer:drawbuffer:depth:stencil">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearBufferfi>
		<clearBufferfv public="1" get="inline" set="null" line="857" static="1"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferfv>
		<clearBufferiv public="1" get="inline" set="null" line="873" static="1"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferiv>
		<clearBufferuiv public="1" get="inline" set="null" line="889" static="1"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferuiv>
		<clearColor public="1" get="inline" set="null" line="905" static="1"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepthf public="1" get="inline" set="null" line="923" static="1"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepthf>
		<clearStencil public="1" get="inline" set="null" line="930" static="1"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<clientWaitSync public="1" get="inline" set="null" line="937" static="1"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></clientWaitSync>
		<colorMask public="1" get="inline" set="null" line="944" static="1"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" get="inline" set="null" line="951" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" get="inline" set="null" line="958" static="1"><f a="target:level:internalformat:width:height:border:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexImage3D public="1" get="inline" set="null" line="974" static="1"><f a="target:level:internalformat:width:height:depth:border:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexImage3D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="990" static="1"><f a="target:level:xoffset:yoffset:width:height:format:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<compressedTexSubImage3D public="1" get="inline" set="null" line="1006" static="1"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexSubImage3D>
		<copyBufferSubData public="1" get="inline" set="null" line="1022" static="1"><f a="readTarget:writeTarget:readOffset:writeOffset:size">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyBufferSubData>
		<copyTexImage2D public="1" get="inline" set="null" line="1029" static="1"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="1036" static="1"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<copyTexSubImage3D public="1" get="inline" set="null" line="1043" static="1"><f a="target:level:xoffset:yoffset:zoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage3D>
		<createBuffer public="1" get="inline" set="null" line="1050" static="1"><f a=""><t path="lime.graphics.opengl.GLBuffer"/></f></createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="1057" static="1"><f a=""><t path="lime.graphics.opengl.GLFramebuffer"/></f></createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="1064" static="1"><f a=""><t path="lime.graphics.opengl.GLProgram"/></f></createProgram>
		<createQuery public="1" get="inline" set="null" line="1071" static="1"><f a=""><t path="lime.graphics.opengl.GLQuery"/></f></createQuery>
		<createRenderbuffer public="1" get="inline" set="null" line="1078" static="1"><f a=""><t path="lime.graphics.opengl.GLRenderbuffer"/></f></createRenderbuffer>
		<createSampler public="1" get="inline" set="null" line="1085" static="1"><f a=""><t path="lime.graphics.opengl.GLSampler"/></f></createSampler>
		<createShader public="1" get="inline" set="null" line="1092" static="1"><f a="type">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShader"/>
</f></createShader>
		<createTexture public="1" get="inline" set="null" line="1099" static="1"><f a=""><t path="lime.graphics.opengl.GLTexture"/></f></createTexture>
		<createTransformFeedback public="1" get="inline" set="null" line="1106" static="1"><f a=""><t path="lime.graphics.opengl.GLTransformFeedback"/></f></createTransformFeedback>
		<createVertexArray public="1" get="inline" set="null" line="1113" static="1"><f a=""><t path="lime.graphics.opengl.GLVertexArrayObject"/></f></createVertexArray>
		<cullFace public="1" get="inline" set="null" line="1120" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="1127" static="1"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="1134" static="1"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="1141" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteQuery public="1" get="inline" set="null" line="1148" static="1"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></deleteQuery>
		<deleteRenderbuffer public="1" get="inline" set="null" line="1155" static="1"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteSampler public="1" get="inline" set="null" line="1162" static="1"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></deleteSampler>
		<deleteShader public="1" get="inline" set="null" line="1169" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteSync public="1" get="inline" set="null" line="1176" static="1"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Void"/>
</f></deleteSync>
		<deleteTexture public="1" get="inline" set="null" line="1183" static="1"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></deleteTexture>
		<deleteTransformFeedback public="1" get="inline" set="null" line="1190" static="1"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></deleteTransformFeedback>
		<deleteVertexArray public="1" get="inline" set="null" line="1197" static="1"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></deleteVertexArray>
		<depthFunc public="1" get="inline" set="null" line="1204" static="1"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" get="inline" set="null" line="1211" static="1"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRangef public="1" get="inline" set="null" line="1229" static="1"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRangef>
		<detachShader public="1" get="inline" set="null" line="1236" static="1"><f a="program:shader">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" get="inline" set="null" line="1243" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="1250" static="1"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="1257" static="1"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawArraysInstanced public="1" get="inline" set="null" line="1264" static="1"><f a="mode:first:count:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArraysInstanced>
		<drawBuffers public="1" get="inline" set="null" line="1271" static="1"><f a="buffers">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></drawBuffers>
		<drawElements public="1" get="inline" set="null" line="1278" static="1"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElements>
		<drawElementsInstanced public="1" get="inline" set="null" line="1285" static="1"><f a="mode:count:type:offset:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElementsInstanced>
		<drawRangeElements public="1" get="inline" set="null" line="1292" static="1"><f a="mode:start:end:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></drawRangeElements>
		<enable public="1" get="inline" set="null" line="1299" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="1306" static="1"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<endQuery public="1" get="inline" set="null" line="1313" static="1"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></endQuery>
		<endTransformFeedback public="1" get="inline" set="null" line="1320" static="1"><f a=""><x path="Void"/></f></endTransformFeedback>
		<fenceSync public="1" get="inline" set="null" line="1327" static="1"><f a="condition:flags">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSync"/>
</f></fenceSync>
		<finish public="1" get="inline" set="null" line="1334" static="1"><f a=""><x path="Void"/></f></finish>
		<flush public="1" get="inline" set="null" line="1341" static="1"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="1348" static="1"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="1355" static="1"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<framebufferTextureLayer public="1" get="inline" set="null" line="1362" static="1"><f a="target:attachment:texture:level:layer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTextureLayer>
		<frontFace public="1" get="inline" set="null" line="1369" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" get="inline" set="null" line="1376" static="1"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" get="inline" set="null" line="1383" static="1"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="1390" static="1"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveUniform>
		<getActiveUniformBlocki public="1" get="inline" set="null" line="1398" static="1"><f a="program:uniformBlockIndex:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getActiveUniformBlocki>
		<getActiveUniformBlockiv public="1" get="inline" set="null" line="1405" static="1"><f a="program:uniformBlockIndex:pname:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getActiveUniformBlockiv>
		<getActiveUniformBlockName public="1" get="inline" set="null" line="1412" static="1"><f a="program:uniformBlockIndex">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
</f></getActiveUniformBlockName>
		<getActiveUniformBlockParameter public="1" get="inline" set="null" line="1419" static="1"><f a="program:uniformBlockIndex:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getActiveUniformBlockParameter>
		<getActiveUniforms public="1" get="inline" set="null" line="1426" static="1"><f a="program:uniformIndices:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<d/>
</f></getActiveUniforms>
		<getActiveUniformsiv public="1" get="inline" set="null" line="1433" static="1"><f a="program:uniformIndices:pname:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getActiveUniformsiv>
		<getAttachedShaders public="1" get="inline" set="null" line="1440" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
</f></getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="1447" static="1"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBoolean public="1" get="inline" set="null" line="1454" static="1"><f a="pname">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" get="inline" set="null" line="1461" static="1"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBooleanv>
		<getBufferParameter public="1" get="inline" set="null" line="1468" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getBufferParameter>
		<getBufferParameteri public="1" get="inline" set="null" line="1475" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferParameteri>
		<getBufferParameteri64v public="1" get="inline" set="null" line="1482" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferParameteri64v>
		<getBufferParameteriv public="1" get="inline" set="null" line="1489" static="1"><f a="target:pname:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferParameteriv>
		<getBufferPointerv public="1" get="inline" set="null" line="1496" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></getBufferPointerv>
		<getBufferSubData public="1" get="inline" set="null" line="1503" static="1"><f a="target:offset:size:data">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferSubData>
		<getContextAttributes public="1" get="inline" set="null" line="1519" static="1"><f a=""><t path="lime.graphics.opengl.GLContextAttributes"/></f></getContextAttributes>
		<getError public="1" get="inline" set="null" line="1526" static="1"><f a=""><x path="Int"/></f></getError>
		<getExtension public="1" get="inline" set="null" line="1533" static="1"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFloat public="1" get="inline" set="null" line="1540" static="1"><f a="pname">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" get="inline" set="null" line="1547" static="1"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getFloatv>
		<getFragDataLocation public="1" get="inline" set="null" line="1554" static="1"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getFragDataLocation>
		<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="1561" static="1"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getFramebufferAttachmentParameter>
		<getFramebufferAttachmentParameteri public="1" get="inline" set="null" line="1568" static="1"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getFramebufferAttachmentParameteri>
		<getFramebufferAttachmentParameteriv public="1" get="inline" set="null" line="1575" static="1"><f a="target:attachment:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getFramebufferAttachmentParameteriv>
		<getIndexedParameter public="1" get="inline" set="null" line="1582" static="1"><f a="target:index">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getIndexedParameter>
		<getInteger public="1" get="inline" set="null" line="1589" static="1"><f a="pname">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getInteger64 public="1" get="inline" set="null" line="1596" static="1"><f a="pname">
	<x path="Int"/>
	<x path="haxe.Int64"/>
</f></getInteger64>
		<getInteger64i public="1" get="inline" set="null" line="1603" static="1"><f a="pname">
	<x path="Int"/>
	<x path="haxe.Int64"/>
</f></getInteger64i>
		<getInteger64i_v public="1" get="inline" set="null" line="1610" static="1"><f a="pname:index:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInteger64i_v>
		<getInteger64v public="1" get="inline" set="null" line="1617" static="1"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInteger64v>
		<getIntegeri_v public="1" get="inline" set="null" line="1624" static="1"><f a="pname:index:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getIntegeri_v>
		<getIntegerv public="1" get="inline" set="null" line="1631" static="1"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getIntegerv>
		<getInternalformati public="1" get="inline" set="null" line="1638" static="1"><f a="target:internalformat:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getInternalformati>
		<getInternalformativ public="1" get="inline" set="null" line="1645" static="1"><f a="target:internalformat:pname:bufSize:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInternalformativ>
		<getInternalformatParameter public="1" get="inline" set="null" line="1652" static="1"><f a="target:internalformat:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getInternalformatParameter>
		<getParameter public="1" get="inline" set="null" line="1659" static="1"><f a="pname">
	<x path="Int"/>
	<d/>
</f></getParameter>
		<getProgrami public="1" get="inline" set="null" line="1666" static="1"><f a="program:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getProgrami>
		<getProgramiv public="1" get="inline" set="null" line="1673" static="1"><f a="program:pname:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getProgramiv>
		<getProgramBinary public="1" get="inline" set="null" line="1680" static="1"><f a="program:binaryFormat">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></getProgramBinary>
		<getProgramInfoLog public="1" get="inline" set="null" line="1687" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" get="inline" set="null" line="1694" static="1"><f a="program:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<d/>
</f></getProgramParameter>
		<getQuery public="1" get="inline" set="null" line="1701" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
</f></getQuery>
		<getQueryi public="1" get="inline" set="null" line="1708" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getQueryi>
		<getQueryiv public="1" get="inline" set="null" line="1715" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getQueryiv>
		<getQueryObjectui public="1" get="inline" set="null" line="1722" static="1"><f a="query:pname">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getQueryObjectui>
		<getQueryObjectuiv public="1" get="inline" set="null" line="1729" static="1"><f a="query:pname:params">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getQueryObjectuiv>
		<getQueryParameter public="1" get="inline" set="null" line="1736" static="1"><f a="query:pname">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<d/>
</f></getQueryParameter>
		<getRenderbufferParameter public="1" get="inline" set="null" line="1743" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getRenderbufferParameter>
		<getRenderbufferParameteri public="1" get="inline" set="null" line="1750" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getRenderbufferParameteri>
		<getRenderbufferParameteriv public="1" get="inline" set="null" line="1757" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getRenderbufferParameteriv>
		<getSamplerParameter public="1" get="inline" set="null" line="1764" static="1"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<d/>
</f></getSamplerParameter>
		<getSamplerParameterf public="1" get="inline" set="null" line="1771" static="1"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSamplerParameterf>
		<getSamplerParameterfv public="1" get="inline" set="null" line="1778" static="1"><f a="sampler:pname:params">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSamplerParameterfv>
		<getSamplerParameteri public="1" get="inline" set="null" line="1785" static="1"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSamplerParameteri>
		<getSamplerParameteriv public="1" get="inline" set="null" line="1792" static="1"><f a="sampler:pname:params">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSamplerParameteriv>
		<getShaderi public="1" get="inline" set="null" line="1799" static="1"><f a="shader:pname">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getShaderi>
		<getShaderiv public="1" get="inline" set="null" line="1806" static="1"><f a="shader:pname:params">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getShaderiv>
		<getShaderInfoLog public="1" get="inline" set="null" line="1813" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" get="inline" set="null" line="1820" static="1"><f a="shader:pname">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<d/>
</f></getShaderParameter>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="1827" static="1"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" get="inline" set="null" line="1834" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderSource>
		<getString public="1" get="inline" set="null" line="1841" static="1"><f a="name">
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<getStringi public="1" get="inline" set="null" line="1848" static="1"><f a="name:index">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></getStringi>
		<getSupportedExtensions public="1" get="inline" set="null" line="1855" static="1"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getSyncParameter public="1" get="inline" set="null" line="1862" static="1"><f a="sync:pname">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<d/>
</f></getSyncParameter>
		<getSyncParameteri public="1" get="inline" set="null" line="1869" static="1"><f a="sync:pname">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSyncParameteri>
		<getSyncParameteriv public="1" get="inline" set="null" line="1876" static="1"><f a="sync:pname:params">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSyncParameteriv>
		<getTexParameter public="1" get="inline" set="null" line="1883" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getTexParameter>
		<getTexParameterf public="1" get="inline" set="null" line="1890" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getTexParameterf>
		<getTexParameterfv public="1" get="inline" set="null" line="1897" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getTexParameterfv>
		<getTexParameteri public="1" get="inline" set="null" line="1904" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getTexParameteri>
		<getTexParameteriv public="1" get="inline" set="null" line="1911" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getTexParameteriv>
		<getTransformFeedbackVarying public="1" get="inline" set="null" line="1918" static="1"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getTransformFeedbackVarying>
		<getUniform public="1" get="inline" set="null" line="1925" static="1"><f a="program:location">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
</f></getUniform>
		<getUniformf public="1" get="inline" set="null" line="1932" static="1"><f a="program:location">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
</f></getUniformf>
		<getUniformfv public="1" get="inline" set="null" line="1939" static="1"><f a="program:location:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformfv>
		<getUniformi public="1" get="inline" set="null" line="1946" static="1"><f a="program:location">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
</f></getUniformi>
		<getUniformiv public="1" get="inline" set="null" line="1953" static="1"><f a="program:location:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformiv>
		<getUniformui public="1" get="inline" set="null" line="1960" static="1"><f a="program:location">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
</f></getUniformui>
		<getUniformuiv public="1" get="inline" set="null" line="1967" static="1"><f a="program:location:params">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformuiv>
		<getUniformBlockIndex public="1" get="inline" set="null" line="1974" static="1"><f a="program:uniformBlockName">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getUniformBlockIndex>
		<getUniformIndices public="1" get="inline" set="null" line="1981" static="1"><f a="program:uniformNames">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><x path="Int"/></c>
</f></getUniformIndices>
		<getUniformLocation public="1" get="inline" set="null" line="1988" static="1"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" get="inline" set="null" line="1995" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getVertexAttrib>
		<getVertexAttribf public="1" get="inline" set="null" line="2002" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getVertexAttribf>
		<getVertexAttribfv public="1" get="inline" set="null" line="2009" static="1"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribfv>
		<getVertexAttribi public="1" get="inline" set="null" line="2016" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribi>
		<getVertexAttribIi public="1" get="inline" set="null" line="2023" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribIi>
		<getVertexAttribIiv public="1" get="inline" set="null" line="2030" static="1"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribIiv>
		<getVertexAttribIui public="1" get="inline" set="null" line="2037" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribIui>
		<getVertexAttribIuiv public="1" get="inline" set="null" line="2044" static="1"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribIuiv>
		<getVertexAttribiv public="1" get="inline" set="null" line="2051" static="1"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribiv>
		<getVertexAttribPointerv public="1" get="inline" set="null" line="2071" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></getVertexAttribPointerv>
		<hint public="1" get="inline" set="null" line="2078" static="1"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<invalidateFramebuffer public="1" get="inline" set="null" line="2085" static="1"><f a="target:attachments">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" get="inline" set="null" line="2092" static="1"><f a="target:attachments:x:y:width:height">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></invalidateSubFramebuffer>
		<isBuffer public="1" get="inline" set="null" line="2099" static="1"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isContextLost public="1" get="inline" set="null" line="2106" static="1"><f a=""><x path="Bool"/></f></isContextLost>
		<isEnabled public="1" get="inline" set="null" line="2113" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" get="inline" set="null" line="2120" static="1"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="2127" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Bool"/>
</f></isProgram>
		<isQuery public="1" get="inline" set="null" line="2134" static="1"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Bool"/>
</f></isQuery>
		<isRenderbuffer public="1" get="inline" set="null" line="2141" static="1"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isSampler public="1" get="inline" set="null" line="2148" static="1"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Bool"/>
</f></isSampler>
		<isShader public="1" get="inline" set="null" line="2155" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Bool"/>
</f></isShader>
		<isSync public="1" get="inline" set="null" line="2162" static="1"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Bool"/>
</f></isSync>
		<isTexture public="1" get="inline" set="null" line="2169" static="1"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Bool"/>
</f></isTexture>
		<isTransformFeedback public="1" get="inline" set="null" line="2176" static="1"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Bool"/>
</f></isTransformFeedback>
		<isVertexArray public="1" get="inline" set="null" line="2183" static="1"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Bool"/>
</f></isVertexArray>
		<lineWidth public="1" get="inline" set="null" line="2190" static="1"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" get="inline" set="null" line="2197" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></linkProgram>
		<mapBufferRange public="1" get="inline" set="null" line="2204" static="1"><f a="target:offset:length:access">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></mapBufferRange>
		<pauseTransformFeedback public="1" get="inline" set="null" line="2211" static="1"><f a=""><x path="Void"/></f></pauseTransformFeedback>
		<pixelStorei public="1" get="inline" set="null" line="2218" static="1"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="2225" static="1"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<programBinary public="1" get="inline" set="null" line="2232" static="1"><f a="program:binaryFormat:binary:length">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></programBinary>
		<programParameteri public="1" get="inline" set="null" line="2239" static="1"><f a="program:pname:value">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></programParameteri>
		<readBuffer public="1" get="inline" set="null" line="2246" static="1"><f a="src">
	<x path="Int"/>
	<x path="Void"/>
</f></readBuffer>
		<readPixels public="1" get="inline" set="null" line="2253" static="1"><f a="x:y:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.BytePointer"/>
	<x path="Void"/>
</f></readPixels>
		<releaseShaderCompiler public="1" get="inline" set="null" line="2269" static="1"><f a=""><x path="Void"/></f></releaseShaderCompiler>
		<renderbufferStorage public="1" get="inline" set="null" line="2276" static="1"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<renderbufferStorageMultisample public="1" get="inline" set="null" line="2283" static="1"><f a="target:samples:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" get="inline" set="null" line="2290" static="1"><f a=""><x path="Void"/></f></resumeTransformFeedback>
		<sampleCoverage public="1" get="inline" set="null" line="2297" static="1"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<samplerParameterf public="1" get="inline" set="null" line="2304" static="1"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></samplerParameterf>
		<samplerParameteri public="1" get="inline" set="null" line="2311" static="1"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></samplerParameteri>
		<scissor public="1" get="inline" set="null" line="2318" static="1"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderBinary public="1" get="inline" set="null" line="2325" static="1"><f a="shaders:binaryformat:binary:length">
	<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></shaderBinary>
		<shaderSource public="1" get="inline" set="null" line="2332" static="1"><f a="shader:source">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="2339" static="1"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="2346" static="1"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="2353" static="1"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="2360" static="1"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="2367" static="1"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="2374" static="1"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="2381" static="1"><f a="target:level:internalformat:width:height:border:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texImage2D>
		<texImage3D public="1" get="inline" set="null" line="2397" static="1"><f a="target:level:internalformat:width:height:depth:border:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texImage3D>
		<texStorage2D public="1" get="inline" set="null" line="2413" static="1"><f a="target:level:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage2D>
		<texStorage3D public="1" get="inline" set="null" line="2420" static="1"><f a="target:level:internalformat:width:height:depth">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage3D>
		<texParameterf public="1" get="inline" set="null" line="2427" static="1"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" get="inline" set="null" line="2434" static="1"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="2441" static="1"><f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></texSubImage2D>
		<texSubImage3D public="1" get="inline" set="null" line="2457" static="1"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texSubImage3D>
		<transformFeedbackVaryings public="1" get="inline" set="null" line="2473" static="1"><f a="program:varyings:bufferMode">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></transformFeedbackVaryings>
		<uniform1f public="1" get="inline" set="null" line="2480" static="1"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="2487" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="2503" static="1"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="2510" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1iv>
		<uniform1ui public="1" get="inline" set="null" line="2526" static="1"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1ui>
		<uniform1uiv public="1" get="inline" set="null" line="2533" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1uiv>
		<uniform2f public="1" get="inline" set="null" line="2549" static="1"><f a="location:v0:v1">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" get="inline" set="null" line="2556" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="2572" static="1"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="2579" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2iv>
		<uniform2ui public="1" get="inline" set="null" line="2595" static="1"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2ui>
		<uniform2uiv public="1" get="inline" set="null" line="2602" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2uiv>
		<uniform3f public="1" get="inline" set="null" line="2618" static="1"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="2625" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="2641" static="1"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="2648" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3iv>
		<uniform3ui public="1" get="inline" set="null" line="2664" static="1"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3ui>
		<uniform3uiv public="1" get="inline" set="null" line="2671" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3uiv>
		<uniform4f public="1" get="inline" set="null" line="2687" static="1"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="2694" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="2710" static="1"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="2717" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4iv>
		<uniform4ui public="1" get="inline" set="null" line="2733" static="1"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4ui>
		<uniform4uiv public="1" get="inline" set="null" line="2740" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4uiv>
		<uniformBlockBinding public="1" get="inline" set="null" line="2756" static="1"><f a="program:uniformBlockIndex:uniformBlockBinding">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformBlockBinding>
		<uniformMatrix2fv public="1" get="inline" set="null" line="2763" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix2x3fv public="1" get="inline" set="null" line="2779" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2x3fv>
		<uniformMatrix2x4fv public="1" get="inline" set="null" line="2795" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2x4fv>
		<uniformMatrix3fv public="1" get="inline" set="null" line="2811" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix3x2fv public="1" get="inline" set="null" line="2827" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3x2fv>
		<uniformMatrix3x4fv public="1" get="inline" set="null" line="2843" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3x4fv>
		<uniformMatrix4fv public="1" get="inline" set="null" line="2859" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4fv>
		<uniformMatrix4x2fv public="1" get="inline" set="null" line="2875" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4x2fv>
		<uniformMatrix4x3fv public="1" get="inline" set="null" line="2891" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4x3fv>
		<unmapBuffer public="1" get="inline" set="null" line="2907" static="1"><f a="target">
	<x path="Int"/>
	<x path="Bool"/>
</f></unmapBuffer>
		<useProgram public="1" get="inline" set="null" line="2914" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" get="inline" set="null" line="2923" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="2930" static="1"><f a="index:v0">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="2937" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="2953" static="1"><f a="index:v0:v1">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="2960" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="2976" static="1"><f a="index:v0:v1:v2">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="2983" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="2999" static="1"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="3006" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribDivisor public="1" get="inline" set="null" line="3022" static="1"><f a="index:divisor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribDivisor>
		<vertexAttribI4i public="1" get="inline" set="null" line="3029" static="1"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4i>
		<vertexAttribI4iv public="1" get="inline" set="null" line="3036" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4iv>
		<vertexAttribI4ui public="1" get="inline" set="null" line="3052" static="1"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4ui>
		<vertexAttribI4uiv public="1" get="inline" set="null" line="3059" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4uiv>
		<vertexAttribIPointer public="1" get="inline" set="null" line="3075" static="1"><f a="index:size:type:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribIPointer>
		<vertexAttribPointer public="1" get="inline" set="null" line="3082" static="1"><f a="index:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="3089" static="1"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<waitSync public="1" get="inline" set="null" line="3096" static="1"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Void"/>
</f></waitSync>
		<get_type set="method" line="3103" static="1"><f a=""><e path="lime.graphics.opengl.GLContextType"/></f></get_type>
		<get_version set="method" line="3104" static="1"><f a=""><x path="Float"/></f></get_version>
		<__getObjectID get="inline" set="null" line="3107" static="1"><f a="object">
	<c path="lime.graphics.opengl.GLObject"/>
	<x path="Int"/>
</f></__getObjectID>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>lime.ui.Window</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.GLObject" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GL.hx" module="lime.graphics.opengl.GL">
		<fromInt public="1" set="method" line="3133" static="1"><f a="type:id">
	<x path="lime.graphics.opengl.GLObjectType"/>
	<x path="Int"/>
	<c path="lime.graphics.opengl.GLObject"/>
</f></fromInt>
		<id><x path="Int"/></id>
		<refs><c path="Array"><c path="lime.graphics.opengl.GLObject"/></c></refs>
		<new set="method" line="3126"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<abstract path="lime.graphics.opengl.GLObjectType" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GL.hx" module="lime.graphics.opengl.GL">
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.graphics.opengl._GL.GLObjectType_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GL.hx" private="1" module="lime.graphics.opengl.GL" extern="1">
	<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="3161" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<PROGRAM public="1" get="inline" set="null" expr="cast 1" line="3162" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROGRAM>
	<SHADER public="1" get="inline" set="null" expr="cast 2" line="3163" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHADER>
	<BUFFER public="1" get="inline" set="null" expr="cast 3" line="3164" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUFFER>
	<TEXTURE public="1" get="inline" set="null" expr="cast 4" line="3165" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE>
	<FRAMEBUFFER public="1" get="inline" set="null" expr="cast 5" line="3166" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER>
	<RENDERBUFFER public="1" get="inline" set="null" expr="cast 6" line="3167" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER>
	<VERTEX_ARRAY_OBJECT public="1" get="inline" set="null" expr="cast 7" line="3168" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ARRAY_OBJECT>
	<QUERY public="1" get="inline" set="null" expr="cast 8" line="3169" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUERY>
	<SAMPLER public="1" get="inline" set="null" expr="cast 9" line="3170" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLER>
	<SYNC public="1" get="inline" set="null" expr="cast 10" line="3171" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYNC>
	<TRANSFORM_FEEDBACK public="1" get="inline" set="null" expr="cast 11" line="3172" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRANSFORM_FEEDBACK>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.opengl._GL.GLObjectType_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GL.hx" private="1" module="lime.graphics.opengl.GL" extern="1">
		<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="3161" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<PROGRAM public="1" get="inline" set="null" expr="cast 1" line="3162" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROGRAM>
		<SHADER public="1" get="inline" set="null" expr="cast 2" line="3163" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHADER>
		<BUFFER public="1" get="inline" set="null" expr="cast 3" line="3164" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUFFER>
		<TEXTURE public="1" get="inline" set="null" expr="cast 4" line="3165" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE>
		<FRAMEBUFFER public="1" get="inline" set="null" expr="cast 5" line="3166" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="inline" set="null" expr="cast 6" line="3167" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER>
		<VERTEX_ARRAY_OBJECT public="1" get="inline" set="null" expr="cast 7" line="3168" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ARRAY_OBJECT>
		<QUERY public="1" get="inline" set="null" expr="cast 8" line="3169" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUERY>
		<SAMPLER public="1" get="inline" set="null" expr="cast 9" line="3170" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLER>
		<SYNC public="1" get="inline" set="null" expr="cast 10" line="3171" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYNC>
		<TRANSFORM_FEEDBACK public="1" get="inline" set="null" expr="cast 11" line="3172" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRANSFORM_FEEDBACK>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<typedef path="lime.graphics.opengl.GLActiveInfo" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLActiveInfo.hx">
		<a>
			<type><x path="Int"/></type>
			<size><x path="Int"/></size>
			<name><c path="String"/></name>
		</a>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</typedef>
	<typedef path="lime.graphics.opengl.GLBuffer" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLBuffer.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLContextAttributes" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLContextAttributes.hx">
		<a>
			<stencil><x path="Bool"/></stencil>
			<preserveDrawingBuffer><x path="Bool"/></preserveDrawingBuffer>
			<premultipliedAlpha><x path="Bool"/></premultipliedAlpha>
			<depth><x path="Bool"/></depth>
			<antialias><x path="Bool"/></antialias>
			<alpha><x path="Bool"/></alpha>
		</a>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</typedef>
	<enum path="lime.graphics.opengl.GLContextType" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLContextType.hx">
		<OPENGL/>
		<GLES/>
		<WEBGL/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<abstract path="lime.graphics.opengl.GLES2Context" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLES2Context.hx">
		<from>
			<icast><c path="lime.graphics.GLRenderContext"/></icast>
			<icast><x path="lime.graphics.opengl.GLES3Context"/></icast>
			<icast field="fromGL"><d/></icast>
		</from>
		<this><x path="lime.graphics.opengl.GLES3Context"/></this>
		<to><icast><x path="lime.graphics.opengl.WebGLContext"/></icast></to>
		<meta><m n=":forward">
	<e>ACTIVE_ATTRIBUTES</e>
	<e>ACTIVE_TEXTURE</e>
	<e>ACTIVE_UNIFORMS</e>
	<e>ALIASED_LINE_WIDTH_RANGE</e>
	<e>ALIASED_POINT_SIZE_RANGE</e>
	<e>ALPHA</e>
	<e>ALPHA_BITS</e>
	<e>ALWAYS</e>
	<e>ARRAY_BUFFER</e>
	<e>ARRAY_BUFFER_BINDING</e>
	<e>ATTACHED_SHADERS</e>
	<e>BACK</e>
	<e>BLEND</e>
	<e>BLEND_COLOR</e>
	<e>BLEND_DST_ALPHA</e>
	<e>BLEND_DST_RGB</e>
	<e>BLEND_EQUATION</e>
	<e>BLEND_EQUATION_ALPHA</e>
	<e>BLEND_EQUATION_RGB</e>
	<e>BLEND_SRC_ALPHA</e>
	<e>BLEND_SRC_RGB</e>
	<e>BLUE_BITS</e>
	<e>BOOL</e>
	<e>BOOL_VEC2</e>
	<e>BOOL_VEC3</e>
	<e>BOOL_VEC4</e>
	<e>BROWSER_DEFAULT_WEBGL</e>
	<e>BUFFER_SIZE</e>
	<e>BUFFER_USAGE</e>
	<e>BYTE</e>
	<e>CCW</e>
	<e>CLAMP_TO_EDGE</e>
	<e>COLOR_ATTACHMENT0</e>
	<e>COLOR_BUFFER_BIT</e>
	<e>COLOR_CLEAR_VALUE</e>
	<e>COLOR_WRITEMASK</e>
	<e>COMPILE_STATUS</e>
	<e>COMPRESSED_TEXTURE_FORMATS</e>
	<e>CONSTANT_ALPHA</e>
	<e>CONSTANT_COLOR</e>
	<e>CULL_FACE</e>
	<e>CULL_FACE_MODE</e>
	<e>CURRENT_PROGRAM</e>
	<e>CURRENT_VERTEX_ATTRIB</e>
	<e>CW</e>
	<e>DECR</e>
	<e>DECR_WRAP</e>
	<e>DELETE_STATUS</e>
	<e>DEPTH_ATTACHMENT</e>
	<e>DEPTH_BITS</e>
	<e>DEPTH_BUFFER_BIT</e>
	<e>DEPTH_CLEAR_VALUE</e>
	<e>DEPTH_COMPONENT</e>
	<e>DEPTH_COMPONENT16</e>
	<e>DEPTH_FUNC</e>
	<e>DEPTH_RANGE</e>
	<e>DEPTH_STENCIL</e>
	<e>DEPTH_STENCIL_ATTACHMENT</e>
	<e>DEPTH_TEST</e>
	<e>DEPTH_WRITEMASK</e>
	<e>DITHER</e>
	<e>DONT_CARE</e>
	<e>DST_ALPHA</e>
	<e>DST_COLOR</e>
	<e>DYNAMIC_DRAW</e>
	<e>ELEMENT_ARRAY_BUFFER</e>
	<e>ELEMENT_ARRAY_BUFFER_BINDING</e>
	<e>EQUAL</e>
	<e>FASTEST</e>
	<e>FLOAT</e>
	<e>FLOAT_MAT2</e>
	<e>FLOAT_MAT3</e>
	<e>FLOAT_MAT4</e>
	<e>FLOAT_VEC2</e>
	<e>FLOAT_VEC3</e>
	<e>FLOAT_VEC4</e>
	<e>FRAGMENT_SHADER</e>
	<e>FRAMEBUFFER</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</e>
	<e>FRAMEBUFFER_BINDING</e>
	<e>FRAMEBUFFER_COMPLETE</e>
	<e>FRAMEBUFFER_INCOMPLETE_ATTACHMENT</e>
	<e>FRAMEBUFFER_INCOMPLETE_DIMENSIONS</e>
	<e>FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</e>
	<e>FRAMEBUFFER_UNSUPPORTED</e>
	<e>FRONT</e>
	<e>FRONT_AND_BACK</e>
	<e>FRONT_FACE</e>
	<e>FUNC_ADD</e>
	<e>FUNC_REVERSE_SUBTRACT</e>
	<e>FUNC_SUBTRACT</e>
	<e>GENERATE_MIPMAP_HINT</e>
	<e>GEQUAL</e>
	<e>GREATER</e>
	<e>GREEN_BITS</e>
	<e>HIGH_FLOAT</e>
	<e>HIGH_INT</e>
	<e>INCR</e>
	<e>INCR_WRAP</e>
	<e>INT</e>
	<e>INT_VEC2</e>
	<e>INT_VEC3</e>
	<e>INT_VEC4</e>
	<e>INVALID_ENUM</e>
	<e>INVALID_FRAMEBUFFER_OPERATION</e>
	<e>INVALID_OPERATION</e>
	<e>INVALID_VALUE</e>
	<e>INVERT</e>
	<e>KEEP</e>
	<e>LEQUAL</e>
	<e>LESS</e>
	<e>LINEAR</e>
	<e>LINEAR_MIPMAP_LINEAR</e>
	<e>LINEAR_MIPMAP_NEAREST</e>
	<e>LINES</e>
	<e>LINE_LOOP</e>
	<e>LINE_STRIP</e>
	<e>LINE_WIDTH</e>
	<e>LINK_STATUS</e>
	<e>LOW_FLOAT</e>
	<e>LOW_INT</e>
	<e>LUMINANCE</e>
	<e>LUMINANCE_ALPHA</e>
	<e>MAX_COMBINED_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_CUBE_MAP_TEXTURE_SIZE</e>
	<e>MAX_FRAGMENT_UNIFORM_VECTORS</e>
	<e>MAX_RENDERBUFFER_SIZE</e>
	<e>MAX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_TEXTURE_SIZE</e>
	<e>MAX_VARYING_VECTORS</e>
	<e>MAX_VERTEX_ATTRIBS</e>
	<e>MAX_VERTEX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_VERTEX_UNIFORM_VECTORS</e>
	<e>MAX_VIEWPORT_DIMS</e>
	<e>MEDIUM_FLOAT</e>
	<e>MEDIUM_INT</e>
	<e>MIRRORED_REPEAT</e>
	<e>NEAREST</e>
	<e>NEAREST_MIPMAP_LINEAR</e>
	<e>NEAREST_MIPMAP_NEAREST</e>
	<e>NEVER</e>
	<e>NICEST</e>
	<e>NONE</e>
	<e>NOTEQUAL</e>
	<e>NO_ERROR</e>
	<e>ONE</e>
	<e>ONE_MINUS_CONSTANT_ALPHA</e>
	<e>ONE_MINUS_CONSTANT_COLOR</e>
	<e>ONE_MINUS_DST_ALPHA</e>
	<e>ONE_MINUS_DST_COLOR</e>
	<e>ONE_MINUS_SRC_ALPHA</e>
	<e>ONE_MINUS_SRC_COLOR</e>
	<e>OUT_OF_MEMORY</e>
	<e>PACK_ALIGNMENT</e>
	<e>POINTS</e>
	<e>POLYGON_OFFSET_FACTOR</e>
	<e>POLYGON_OFFSET_FILL</e>
	<e>POLYGON_OFFSET_UNITS</e>
	<e>RED_BITS</e>
	<e>RENDERBUFFER</e>
	<e>RENDERBUFFER_ALPHA_SIZE</e>
	<e>RENDERBUFFER_BINDING</e>
	<e>RENDERBUFFER_BLUE_SIZE</e>
	<e>RENDERBUFFER_DEPTH_SIZE</e>
	<e>RENDERBUFFER_GREEN_SIZE</e>
	<e>RENDERBUFFER_HEIGHT</e>
	<e>RENDERBUFFER_INTERNAL_FORMAT</e>
	<e>RENDERBUFFER_RED_SIZE</e>
	<e>RENDERBUFFER_STENCIL_SIZE</e>
	<e>RENDERBUFFER_WIDTH</e>
	<e>RENDERER</e>
	<e>REPEAT</e>
	<e>REPLACE</e>
	<e>RGB</e>
	<e>RGB565</e>
	<e>RGB5_A1</e>
	<e>RGBA</e>
	<e>RGBA4</e>
	<e>SAMPLER_2D</e>
	<e>SAMPLER_CUBE</e>
	<e>SAMPLES</e>
	<e>SAMPLE_ALPHA_TO_COVERAGE</e>
	<e>SAMPLE_BUFFERS</e>
	<e>SAMPLE_COVERAGE</e>
	<e>SAMPLE_COVERAGE_INVERT</e>
	<e>SAMPLE_COVERAGE_VALUE</e>
	<e>SCISSOR_BOX</e>
	<e>SCISSOR_TEST</e>
	<e>SHADER_TYPE</e>
	<e>SHADING_LANGUAGE_VERSION</e>
	<e>SHORT</e>
	<e>SRC_ALPHA</e>
	<e>SRC_ALPHA_SATURATE</e>
	<e>SRC_COLOR</e>
	<e>STATIC_DRAW</e>
	<e>STENCIL_ATTACHMENT</e>
	<e>STENCIL_BACK_FAIL</e>
	<e>STENCIL_BACK_FUNC</e>
	<e>STENCIL_BACK_PASS_DEPTH_FAIL</e>
	<e>STENCIL_BACK_PASS_DEPTH_PASS</e>
	<e>STENCIL_BACK_REF</e>
	<e>STENCIL_BACK_VALUE_MASK</e>
	<e>STENCIL_BACK_WRITEMASK</e>
	<e>STENCIL_BITS</e>
	<e>STENCIL_BUFFER_BIT</e>
	<e>STENCIL_CLEAR_VALUE</e>
	<e>STENCIL_FAIL</e>
	<e>STENCIL_FUNC</e>
	<e>STENCIL_INDEX</e>
	<e>STENCIL_INDEX8</e>
	<e>STENCIL_PASS_DEPTH_FAIL</e>
	<e>STENCIL_PASS_DEPTH_PASS</e>
	<e>STENCIL_REF</e>
	<e>STENCIL_TEST</e>
	<e>STENCIL_VALUE_MASK</e>
	<e>STENCIL_WRITEMASK</e>
	<e>STREAM_DRAW</e>
	<e>SUBPIXEL_BITS</e>
	<e>TEXTURE</e>
	<e>TEXTURE0</e>
	<e>TEXTURE1</e>
	<e>TEXTURE10</e>
	<e>TEXTURE11</e>
	<e>TEXTURE12</e>
	<e>TEXTURE13</e>
	<e>TEXTURE14</e>
	<e>TEXTURE15</e>
	<e>TEXTURE16</e>
	<e>TEXTURE17</e>
	<e>TEXTURE18</e>
	<e>TEXTURE19</e>
	<e>TEXTURE2</e>
	<e>TEXTURE20</e>
	<e>TEXTURE21</e>
	<e>TEXTURE22</e>
	<e>TEXTURE23</e>
	<e>TEXTURE24</e>
	<e>TEXTURE25</e>
	<e>TEXTURE26</e>
	<e>TEXTURE27</e>
	<e>TEXTURE28</e>
	<e>TEXTURE29</e>
	<e>TEXTURE3</e>
	<e>TEXTURE30</e>
	<e>TEXTURE31</e>
	<e>TEXTURE4</e>
	<e>TEXTURE5</e>
	<e>TEXTURE6</e>
	<e>TEXTURE7</e>
	<e>TEXTURE8</e>
	<e>TEXTURE9</e>
	<e>TEXTURE_2D</e>
	<e>TEXTURE_BINDING_2D</e>
	<e>TEXTURE_BINDING_CUBE_MAP</e>
	<e>TEXTURE_CUBE_MAP</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_X</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Z</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_X</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Z</e>
	<e>TEXTURE_MAG_FILTER</e>
	<e>TEXTURE_MIN_FILTER</e>
	<e>TEXTURE_WRAP_S</e>
	<e>TEXTURE_WRAP_T</e>
	<e>TRIANGLES</e>
	<e>TRIANGLE_FAN</e>
	<e>TRIANGLE_STRIP</e>
	<e>UNPACK_ALIGNMENT</e>
	<e>UNSIGNED_BYTE</e>
	<e>UNSIGNED_INT</e>
	<e>UNSIGNED_SHORT</e>
	<e>UNSIGNED_SHORT_4_4_4_4</e>
	<e>UNSIGNED_SHORT_5_5_5_1</e>
	<e>UNSIGNED_SHORT_5_6_5</e>
	<e>VALIDATE_STATUS</e>
	<e>VENDOR</e>
	<e>VERSION</e>
	<e>VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</e>
	<e>VERTEX_ATTRIB_ARRAY_ENABLED</e>
	<e>VERTEX_ATTRIB_ARRAY_NORMALIZED</e>
	<e>VERTEX_ATTRIB_ARRAY_POINTER</e>
	<e>VERTEX_ATTRIB_ARRAY_SIZE</e>
	<e>VERTEX_ATTRIB_ARRAY_STRIDE</e>
	<e>VERTEX_ATTRIB_ARRAY_TYPE</e>
	<e>VERTEX_SHADER</e>
	<e>VIEWPORT</e>
	<e>ZERO</e>
	<e>activeTexture</e>
	<e>attachShader</e>
	<e>bindAttribLocation</e>
	<e>bindBuffer</e>
	<e>bindFramebuffer</e>
	<e>bindTexture</e>
	<e>blendColor</e>
	<e>blendEquation</e>
	<e>blendEquationSeparate</e>
	<e>blendFunc</e>
	<e>blendFuncSeparate</e>
	<e>bufferData</e>
	<e>bufferSubData</e>
	<e>checkFramebufferStatus</e>
	<e>clear</e>
	<e>clearColor</e>
	<e>clearDepthf</e>
	<e>clearStencil</e>
	<e>colorMask</e>
	<e>compileShader</e>
	<e>compressedTexImage2D</e>
	<e>compressedTexSubImage2D</e>
	<e>copyTexImage2D</e>
	<e>copyTexSubImage2D</e>
	<e>createBuffer</e>
	<e>createFramebuffer</e>
	<e>createProgram</e>
	<e>createRenderbuffer</e>
	<e>createShader</e>
	<e>createTexture</e>
	<e>cullFace</e>
	<e>deleteBuffer</e>
	<e>deleteFramebuffer</e>
	<e>deleteProgram</e>
	<e>deleteRenderbuffer</e>
	<e>deleteShader</e>
	<e>deleteTexture</e>
	<e>depthFunc</e>
	<e>depthMask</e>
	<e>depthRangef</e>
	<e>detachShader</e>
	<e>disable</e>
	<e>disableVertexAttribArray</e>
	<e>drawArrays</e>
	<e>drawElements</e>
	<e>enable</e>
	<e>enableVertexAttribArray</e>
	<e>finish</e>
	<e>flush</e>
	<e>framebufferRenderbuffer</e>
	<e>framebufferTexture2D</e>
	<e>frontFace</e>
	<e>genBuffers</e>
	<e>generateMipmap</e>
	<e>genFramebuffers</e>
	<e>genRenderbuffers</e>
	<e>genTextures</e>
	<e>getActiveAttrib</e>
	<e>getActiveUniform</e>
	<e>getAttachedShaders</e>
	<e>getAttribLocation</e>
	<e>getBoolean</e>
	<e>getBooleanv</e>
	<e>getBufferParameteri</e>
	<e>getBufferParameteriv</e>
	<e>getError</e>
	<e>getFloat</e>
	<e>getFloatv</e>
	<e>getFramebufferAttachmentParameteri</e>
	<e>getFramebufferAttachmentParameteriv</e>
	<e>getInteger</e>
	<e>getIntegerv</e>
	<e>getProgramInfoLog</e>
	<e>getProgrami</e>
	<e>getProgramiv</e>
	<e>getRenderbufferParameteri</e>
	<e>getRenderbufferParameteriv</e>
	<e>getShaderi</e>
	<e>getShaderInfoLog</e>
	<e>getShaderiv</e>
	<e>getShaderPrecisionFormat</e>
	<e>getShaderSource</e>
	<e>getString</e>
	<e>getTexParameterf</e>
	<e>getTexParameterfv</e>
	<e>getTexParameteri</e>
	<e>getTexParameteriv</e>
	<e>getUniform</e>
	<e>getUniformLocation</e>
	<e>getVertexAttribf</e>
	<e>getVertexAttribfv</e>
	<e>getVertexAttribi</e>
	<e>getVertexAttribiv</e>
	<e>getVertexAttribPointerv</e>
	<e>hint</e>
	<e>isBuffer</e>
	<e>isEnabled</e>
	<e>isFramebuffer</e>
	<e>isProgram</e>
	<e>isRenderbuffer</e>
	<e>isShader</e>
	<e>isTexture</e>
	<e>lineWidth</e>
	<e>linkProgram</e>
	<e>pixelStorei</e>
	<e>polygonOffset</e>
	<e>readPixels</e>
	<e>releaseShaderCompiler</e>
	<e>renderbufferStorage</e>
	<e>sampleCoverage</e>
	<e>scissor</e>
	<e>shaderBinary</e>
	<e>shaderSource</e>
	<e>stencilFunc</e>
	<e>stencilFuncSeparate</e>
	<e>stencilMask</e>
	<e>stencilMaskSeparate</e>
	<e>stencilOp</e>
	<e>stencilOpSeparate</e>
	<e>texImage2D</e>
	<e>texParameterf</e>
	<e>texParameteri</e>
	<e>texSubImage2D</e>
	<e>uniform1f</e>
	<e>uniform1fv</e>
	<e>uniform1i</e>
	<e>uniform1iv</e>
	<e>uniform2f</e>
	<e>uniform2fv</e>
	<e>uniform2i</e>
	<e>uniform2iv</e>
	<e>uniform3f</e>
	<e>uniform3fv</e>
	<e>uniform3i</e>
	<e>uniform3iv</e>
	<e>uniform4f</e>
	<e>uniform4fv</e>
	<e>uniform4i</e>
	<e>uniform4iv</e>
	<e>uniformMatrix2fv</e>
	<e>uniformMatrix3fv</e>
	<e>uniformMatrix4fv</e>
	<e>useProgram</e>
	<e>validateProgram</e>
	<e>vertexAttrib1f</e>
	<e>vertexAttrib1fv</e>
	<e>vertexAttrib2f</e>
	<e>vertexAttrib2fv</e>
	<e>vertexAttrib3f</e>
	<e>vertexAttrib3fv</e>
	<e>vertexAttrib4f</e>
	<e>vertexAttrib4fv</e>
	<e>vertexAttribPointer</e>
	<e>viewport</e>
	<e>EXTENSIONS</e>
	<e>type</e>
	<e>version</e>
</m></meta>
		<impl><class path="lime.graphics.opengl._GLES2Context.GLES2Context_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLES2Context.hx" private="1" module="lime.graphics.opengl.GLES2Context">
	<fromGL set="method" line="94" static="1">
		<f a="gl">
			<d/>
			<x path="lime.graphics.opengl.GLES2Context"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.opengl._GLES2Context.GLES2Context_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLES2Context.hx" private="1" module="lime.graphics.opengl.GLES2Context">
		<fromGL set="method" line="94" static="1">
			<f a="gl">
				<d/>
				<x path="lime.graphics.opengl.GLES2Context"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.graphics.opengl.GLES3Context" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLES3Context.hx">
		<from>
			<icast><c path="lime.graphics.GLRenderContext"/></icast>
			<icast field="fromGL"><d/></icast>
		</from>
		<this><c path="lime.graphics.GLRenderContext"/></this>
		<to>
			<icast><x path="lime.graphics.opengl.WebGLContext"/></icast>
			<icast><x path="lime.graphics.opengl.WebGL2Context"/></icast>
			<icast><x path="lime.graphics.opengl.GLES2Context"/></icast>
			<icast><c path="lime.graphics.GLRenderContext"/></icast>
		</to>
		<impl><class path="lime.graphics.opengl._GLES3Context.GLES3Context_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLES3Context.hx" private="1" module="lime.graphics.opengl.GLES3Context">
	<__extensions static="1"><c path="String"/></__extensions>
	<EXTENSIONS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</EXTENSIONS>
	<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BUFFER_BIT>
	<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BUFFER_BIT>
	<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_BUFFER_BIT>
	<POINTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POINTS>
	<LINES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINES>
	<LINE_LOOP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_LOOP>
	<LINE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_STRIP>
	<TRIANGLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLES>
	<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_STRIP>
	<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_FAN>
	<ZERO public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ZERO>
	<ONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE>
	<SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_COLOR>
	<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_COLOR>
	<SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA>
	<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_ALPHA>
	<DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_ALPHA>
	<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_ALPHA>
	<DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_COLOR>
	<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_COLOR>
	<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA_SATURATE>
	<FUNC_ADD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_ADD>
	<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION>
	<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_RGB>
	<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_ALPHA>
	<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_SUBTRACT>
	<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_REVERSE_SUBTRACT>
	<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_RGB>
	<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_RGB>
	<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_ALPHA>
	<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_ALPHA>
	<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_COLOR>
	<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_COLOR>
	<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_ALPHA>
	<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_ALPHA>
	<BLEND_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_COLOR>
	<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER>
	<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER>
	<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER_BINDING>
	<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER_BINDING>
	<STREAM_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_DRAW>
	<STATIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_DRAW>
	<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_DRAW>
	<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_SIZE>
	<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_USAGE>
	<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_VERTEX_ATTRIB>
	<FRONT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT>
	<BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BACK>
	<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_AND_BACK>
	<CULL_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE>
	<BLEND public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND>
	<DITHER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DITHER>
	<STENCIL_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_TEST>
	<DEPTH_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_TEST>
	<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_TEST>
	<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FILL>
	<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_ALPHA_TO_COVERAGE>
	<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE>
	<NO_ERROR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NO_ERROR>
	<INVALID_ENUM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_ENUM>
	<INVALID_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_VALUE>
	<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_OPERATION>
	<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OUT_OF_MEMORY>
	<CW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CW>
	<CCW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CCW>
	<LINE_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_WIDTH>
	<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_POINT_SIZE_RANGE>
	<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_LINE_WIDTH_RANGE>
	<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE_MODE>
	<FRONT_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_FACE>
	<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_RANGE>
	<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_WRITEMASK>
	<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_CLEAR_VALUE>
	<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_FUNC>
	<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_CLEAR_VALUE>
	<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FUNC>
	<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FAIL>
	<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_FAIL>
	<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_PASS>
	<STENCIL_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_REF>
	<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_VALUE_MASK>
	<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_WRITEMASK>
	<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FUNC>
	<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FAIL>
	<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_FAIL>
	<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_PASS>
	<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_REF>
	<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_VALUE_MASK>
	<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_WRITEMASK>
	<VIEWPORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VIEWPORT>
	<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_BOX>
	<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_CLEAR_VALUE>
	<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_WRITEMASK>
	<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ALIGNMENT>
	<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ALIGNMENT>
	<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_SIZE>
	<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VIEWPORT_DIMS>
	<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SUBPIXEL_BITS>
	<RED_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_BITS>
	<GREEN_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREEN_BITS>
	<BLUE_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLUE_BITS>
	<ALPHA_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA_BITS>
	<DEPTH_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BITS>
	<STENCIL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BITS>
	<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_UNITS>
	<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FACTOR>
	<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D>
	<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_BUFFERS>
	<SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLES>
	<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_VALUE>
	<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_INVERT>
	<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPRESSED_TEXTURE_FORMATS>
	<DONT_CARE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DONT_CARE>
	<FASTEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FASTEST>
	<NICEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NICEST>
	<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GENERATE_MIPMAP_HINT>
	<BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BYTE>
	<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_BYTE>
	<SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHORT>
	<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT>
	<INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT>
	<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT>
	<FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT>
	<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT>
	<ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA>
	<RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB>
	<RGBA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA>
	<LUMINANCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE>
	<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE_ALPHA>
	<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_4_4_4_4>
	<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_5_5_1>
	<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_6_5>
	<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER>
	<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_SHADER>
	<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_ATTRIBS>
	<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_VECTORS>
	<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_VECTORS>
	<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_IMAGE_UNITS>
	<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_VECTORS>
	<SHADER_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADER_TYPE>
	<DELETE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DELETE_STATUS>
	<LINK_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINK_STATUS>
	<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VALIDATE_STATUS>
	<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ATTACHED_SHADERS>
	<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORMS>
	<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_ATTRIBUTES>
	<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADING_LANGUAGE_VERSION>
	<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_PROGRAM>
	<NEVER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEVER>
	<LESS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LESS>
	<EQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</EQUAL>
	<LEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LEQUAL>
	<GREATER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREATER>
	<NOTEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NOTEQUAL>
	<GEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GEQUAL>
	<ALWAYS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALWAYS>
	<KEEP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</KEEP>
	<REPLACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPLACE>
	<INCR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR>
	<DECR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR>
	<INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVERT>
	<INCR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR_WRAP>
	<DECR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR_WRAP>
	<VENDOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VENDOR>
	<RENDERER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERER>
	<VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERSION>
	<NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST>
	<LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR>
	<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_NEAREST>
	<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_NEAREST>
	<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_LINEAR>
	<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_LINEAR>
	<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAG_FILTER>
	<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_FILTER>
	<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_S>
	<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_T>
	<TEXTURE_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D>
	<TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE>
	<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP>
	<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_CUBE_MAP>
	<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_X>
	<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_X>
	<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Y>
	<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Z>
	<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CUBE_MAP_TEXTURE_SIZE>
	<TEXTURE0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE0>
	<TEXTURE1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE1>
	<TEXTURE2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE2>
	<TEXTURE3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE3>
	<TEXTURE4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE4>
	<TEXTURE5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE5>
	<TEXTURE6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE6>
	<TEXTURE7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE7>
	<TEXTURE8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE8>
	<TEXTURE9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE9>
	<TEXTURE10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE10>
	<TEXTURE11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE11>
	<TEXTURE12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE12>
	<TEXTURE13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE13>
	<TEXTURE14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE14>
	<TEXTURE15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE15>
	<TEXTURE16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE16>
	<TEXTURE17 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE17>
	<TEXTURE18 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE18>
	<TEXTURE19 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE19>
	<TEXTURE20 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE20>
	<TEXTURE21 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE21>
	<TEXTURE22 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE22>
	<TEXTURE23 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE23>
	<TEXTURE24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE24>
	<TEXTURE25 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE25>
	<TEXTURE26 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE26>
	<TEXTURE27 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE27>
	<TEXTURE28 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE28>
	<TEXTURE29 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE29>
	<TEXTURE30 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE30>
	<TEXTURE31 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE31>
	<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_TEXTURE>
	<REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPEAT>
	<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CLAMP_TO_EDGE>
	<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIRRORED_REPEAT>
	<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC2>
	<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC3>
	<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC4>
	<INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC2>
	<INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC3>
	<INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC4>
	<BOOL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL>
	<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC2>
	<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC3>
	<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC4>
	<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2>
	<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3>
	<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4>
	<SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D>
	<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE>
	<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_ENABLED>
	<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_SIZE>
	<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_STRIDE>
	<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_TYPE>
	<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_POINTER>
	<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<VERTEX_PROGRAM_POINT_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_PROGRAM_POINT_SIZE>
	<POINT_SPRITE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POINT_SPRITE>
	<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPILE_STATUS>
	<LOW_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_FLOAT>
	<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_FLOAT>
	<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_FLOAT>
	<LOW_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_INT>
	<MEDIUM_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_INT>
	<HIGH_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_INT>
	<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER>
	<RENDERBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER>
	<RGBA4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA4>
	<RGB5_A1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB5_A1>
	<RGB565 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB565>
	<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT16>
	<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX>
	<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX8>
	<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL>
	<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_WIDTH>
	<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_HEIGHT>
	<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_INTERNAL_FORMAT>
	<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_RED_SIZE>
	<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_GREEN_SIZE>
	<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BLUE_SIZE>
	<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_ALPHA_SIZE>
	<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_DEPTH_SIZE>
	<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_STENCIL_SIZE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT0>
	<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_ATTACHMENT>
	<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_ATTACHMENT>
	<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL_ATTACHMENT>
	<NONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NONE>
	<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_COMPLETE>
	<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_UNSUPPORTED>
	<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_BINDING>
	<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BINDING>
	<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_RENDERBUFFER_SIZE>
	<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_FRAMEBUFFER_OPERATION>
	<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_FLIP_Y_WEBGL>
	<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONTEXT_LOST_WEBGL>
	<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BROWSER_DEFAULT_WEBGL>
	<READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_BUFFER>
	<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ROW_LENGTH>
	<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_ROWS>
	<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_PIXELS>
	<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ROW_LENGTH>
	<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_ROWS>
	<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_PIXELS>
	<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_3D>
	<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_IMAGES>
	<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_IMAGE_HEIGHT>
	<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_3D_TEXTURE_SIZE>
	<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_VERTICES>
	<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_INDICES>
	<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_LOD_BIAS>
	<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_COMPONENTS>
	<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ARRAY_TEXTURE_LAYERS>
	<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN_PROGRAM_TEXEL_OFFSET>
	<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_PROGRAM_TEXEL_OFFSET>
	<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_COMPONENTS>
	<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER_DERIVATIVE_HINT>
	<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RASTERIZER_DISCARD>
	<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ARRAY_BINDING>
	<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_OUTPUT_COMPONENTS>
	<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_INPUT_COMPONENTS>
	<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SERVER_WAIT_TIMEOUT>
	<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENT_INDEX>
	<RED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED>
	<RGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8>
	<RGBA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8>
	<RGB10_A2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2>
	<TEXTURE_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_3D>
	<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_R>
	<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_LOD>
	<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LOD>
	<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BASE_LEVEL>
	<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LEVEL>
	<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_MODE>
	<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_FUNC>
	<SRGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB>
	<SRGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8>
	<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8_ALPHA8>
	<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPARE_REF_TO_TEXTURE>
	<RGBA32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32F>
	<RGB32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32F>
	<RGBA16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16F>
	<RGB16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16F>
	<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D_ARRAY>
	<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D_ARRAY>
	<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R11F_G11F_B10F>
	<RGB9_E5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB9_E5>
	<RGBA32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32UI>
	<RGB32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32UI>
	<RGBA16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16UI>
	<RGB16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16UI>
	<RGBA8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8UI>
	<RGB8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8UI>
	<RGBA32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32I>
	<RGB32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32I>
	<RGBA16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16I>
	<RGB16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16I>
	<RGBA8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8I>
	<RGB8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8I>
	<RED_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_INTEGER>
	<RGB_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB_INTEGER>
	<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA_INTEGER>
	<R8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8>
	<RG8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8>
	<R16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16F>
	<R32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32F>
	<RG16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16F>
	<RG32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32F>
	<R8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8I>
	<R8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8UI>
	<R16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16I>
	<R16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16UI>
	<R32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32I>
	<R32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32UI>
	<RG8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8I>
	<RG8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8UI>
	<RG16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16I>
	<RG16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16UI>
	<RG32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32I>
	<RG32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32UI>
	<R8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8_SNORM>
	<RG8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8_SNORM>
	<RGB8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8_SNORM>
	<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8_SNORM>
	<RGB10_A2UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2UI>
	<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_FORMAT>
	<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_LEVELS>
	<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_2_10_10_10_REV>
	<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_10F_11F_11F_REV>
	<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_5_9_9_9_REV>
	<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_32_UNSIGNED_INT_24_8_REV>
	<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_24_8>
	<HALF_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HALF_FLOAT>
	<RG public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG>
	<RG_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG_INTEGER>
	<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_2_10_10_10_REV>
	<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_QUERY>
	<QUERY_RESULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT>
	<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT_AVAILABLE>
	<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED>
	<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED_CONSERVATIVE>
	<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_DRAW_BUFFERS>
	<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER0>
	<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER1>
	<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER2>
	<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER3>
	<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER4>
	<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER5>
	<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER6>
	<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER7>
	<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER8>
	<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER9>
	<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER10>
	<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER11>
	<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER12>
	<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER13>
	<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER14>
	<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER15>
	<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COLOR_ATTACHMENTS>
	<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT1>
	<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT2>
	<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT3>
	<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT4>
	<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT5>
	<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT6>
	<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT7>
	<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT8>
	<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT9>
	<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT10>
	<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT11>
	<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT12>
	<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT13>
	<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT14>
	<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT15>
	<SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_3D>
	<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_SHADOW>
	<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY>
	<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY_SHADOW>
	<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE_SHADOW>
	<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D>
	<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_3D>
	<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_CUBE>
	<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D_ARRAY>
	<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D>
	<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_3D>
	<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_CUBE>
	<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SAMPLES>
	<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_BINDING>
	<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER>
	<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER>
	<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER_BINDING>
	<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER_BINDING>
	<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER>
	<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER>
	<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER_BINDING>
	<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER_BINDING>
	<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x3>
	<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x4>
	<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x2>
	<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x4>
	<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x2>
	<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x3>
	<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC2>
	<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC3>
	<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC4>
	<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_NORMALIZED>
	<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNED_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_INTEGER>
	<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_DIVISOR>
	<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_MODE>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_VARYINGS>
	<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_START>
	<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INTERLEAVED_ATTRIBS>
	<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SEPARATE_ATTRIBS>
	<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER>
	<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK>
	<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PAUSED>
	<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_ACTIVE>
	<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BINDING>
	<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_DEFAULT>
	<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH24_STENCIL8>
	<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER_BINDING>
	<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER>
	<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER>
	<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER_BINDING>
	<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_SAMPLES>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER>
	<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_BINDING>
	<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_START>
	<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_SIZE>
	<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_BLOCKS>
	<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_BLOCKS>
	<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_UNIFORM_BLOCKS>
	<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BUFFER_BINDINGS>
	<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BLOCK_SIZE>
	<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORM_BLOCKS>
	<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_TYPE>
	<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_SIZE>
	<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_INDEX>
	<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_OFFSET>
	<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_ARRAY_STRIDE>
	<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_MATRIX_STRIDE>
	<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_IS_ROW_MAJOR>
	<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_BINDING>
	<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_DATA_SIZE>
	<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OBJECT_TYPE>
	<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_CONDITION>
	<SYNC_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_STATUS>
	<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLAGS>
	<SYNC_FENCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FENCE>
	<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_GPU_COMMANDS_COMPLETE>
	<UNSIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNALED>
	<SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNALED>
	<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALREADY_SIGNALED>
	<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_EXPIRED>
	<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONDITION_SATISFIED>
	<WAIT_FAILED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</WAIT_FAILED>
	<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLUSH_COMMANDS_BIT>
	<COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR>
	<DEPTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH>
	<STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL>
	<MIN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN>
	<MAX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX>
	<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT24>
	<STREAM_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_READ>
	<STREAM_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_COPY>
	<STATIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_READ>
	<STATIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_COPY>
	<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_READ>
	<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_COPY>
	<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT32F>
	<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH32F_STENCIL8>
	<INVALID_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_INDEX>
	<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_IGNORED>
	<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<type public="1" get="accessor" set="null" static="1">
		<e path="lime.graphics.opengl.GLContextType"/>
		<meta><m n=":impl"/></meta>
	</type>
	<version public="1" get="accessor" set="null" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</version>
	<get_EXTENSIONS get="inline" set="null" line="645" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_EXTENSIONS>
	<get_DEPTH_BUFFER_BIT get="inline" set="null" line="646" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_BUFFER_BIT>
	<get_STENCIL_BUFFER_BIT get="inline" set="null" line="647" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BUFFER_BIT>
	<get_COLOR_BUFFER_BIT get="inline" set="null" line="648" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_BUFFER_BIT>
	<get_POINTS get="inline" set="null" line="649" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_POINTS>
	<get_LINES get="inline" set="null" line="650" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINES>
	<get_LINE_LOOP get="inline" set="null" line="651" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINE_LOOP>
	<get_LINE_STRIP get="inline" set="null" line="652" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINE_STRIP>
	<get_TRIANGLES get="inline" set="null" line="653" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRIANGLES>
	<get_TRIANGLE_STRIP get="inline" set="null" line="654" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRIANGLE_STRIP>
	<get_TRIANGLE_FAN get="inline" set="null" line="655" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRIANGLE_FAN>
	<get_ZERO get="inline" set="null" line="656" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ZERO>
	<get_ONE get="inline" set="null" line="657" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE>
	<get_SRC_COLOR get="inline" set="null" line="658" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRC_COLOR>
	<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="659" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_SRC_COLOR>
	<get_SRC_ALPHA get="inline" set="null" line="660" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRC_ALPHA>
	<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="661" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_SRC_ALPHA>
	<get_DST_ALPHA get="inline" set="null" line="662" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DST_ALPHA>
	<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="663" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_DST_ALPHA>
	<get_DST_COLOR get="inline" set="null" line="664" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DST_COLOR>
	<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="665" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_DST_COLOR>
	<get_SRC_ALPHA_SATURATE get="inline" set="null" line="666" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRC_ALPHA_SATURATE>
	<get_FUNC_ADD get="inline" set="null" line="667" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FUNC_ADD>
	<get_BLEND_EQUATION get="inline" set="null" line="668" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_EQUATION>
	<get_BLEND_EQUATION_RGB get="inline" set="null" line="669" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_EQUATION_RGB>
	<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="670" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_EQUATION_ALPHA>
	<get_FUNC_SUBTRACT get="inline" set="null" line="671" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FUNC_SUBTRACT>
	<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="672" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FUNC_REVERSE_SUBTRACT>
	<get_BLEND_DST_RGB get="inline" set="null" line="673" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_DST_RGB>
	<get_BLEND_SRC_RGB get="inline" set="null" line="674" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_SRC_RGB>
	<get_BLEND_DST_ALPHA get="inline" set="null" line="675" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_DST_ALPHA>
	<get_BLEND_SRC_ALPHA get="inline" set="null" line="676" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_SRC_ALPHA>
	<get_CONSTANT_COLOR get="inline" set="null" line="677" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CONSTANT_COLOR>
	<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="678" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_CONSTANT_COLOR>
	<get_CONSTANT_ALPHA get="inline" set="null" line="679" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CONSTANT_ALPHA>
	<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="680" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_CONSTANT_ALPHA>
	<get_BLEND_COLOR get="inline" set="null" line="681" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_COLOR>
	<get_ARRAY_BUFFER get="inline" set="null" line="682" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ARRAY_BUFFER>
	<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="683" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ELEMENT_ARRAY_BUFFER>
	<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="684" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ARRAY_BUFFER_BINDING>
	<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="685" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ELEMENT_ARRAY_BUFFER_BINDING>
	<get_STREAM_DRAW get="inline" set="null" line="686" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STREAM_DRAW>
	<get_STATIC_DRAW get="inline" set="null" line="687" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STATIC_DRAW>
	<get_DYNAMIC_DRAW get="inline" set="null" line="688" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DYNAMIC_DRAW>
	<get_BUFFER_SIZE get="inline" set="null" line="689" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BUFFER_SIZE>
	<get_BUFFER_USAGE get="inline" set="null" line="690" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BUFFER_USAGE>
	<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="691" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CURRENT_VERTEX_ATTRIB>
	<get_FRONT get="inline" set="null" line="692" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRONT>
	<get_BACK get="inline" set="null" line="693" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BACK>
	<get_FRONT_AND_BACK get="inline" set="null" line="694" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRONT_AND_BACK>
	<get_CULL_FACE get="inline" set="null" line="695" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CULL_FACE>
	<get_BLEND get="inline" set="null" line="696" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND>
	<get_DITHER get="inline" set="null" line="697" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DITHER>
	<get_STENCIL_TEST get="inline" set="null" line="698" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_TEST>
	<get_DEPTH_TEST get="inline" set="null" line="699" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_TEST>
	<get_SCISSOR_TEST get="inline" set="null" line="700" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SCISSOR_TEST>
	<get_POLYGON_OFFSET_FILL get="inline" set="null" line="701" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_POLYGON_OFFSET_FILL>
	<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="702" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_ALPHA_TO_COVERAGE>
	<get_SAMPLE_COVERAGE get="inline" set="null" line="703" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_COVERAGE>
	<get_NO_ERROR get="inline" set="null" line="704" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NO_ERROR>
	<get_INVALID_ENUM get="inline" set="null" line="705" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_ENUM>
	<get_INVALID_VALUE get="inline" set="null" line="706" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_VALUE>
	<get_INVALID_OPERATION get="inline" set="null" line="707" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_OPERATION>
	<get_OUT_OF_MEMORY get="inline" set="null" line="708" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_OUT_OF_MEMORY>
	<get_CW get="inline" set="null" line="709" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CW>
	<get_CCW get="inline" set="null" line="710" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CCW>
	<get_LINE_WIDTH get="inline" set="null" line="711" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINE_WIDTH>
	<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="712" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALIASED_POINT_SIZE_RANGE>
	<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="713" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALIASED_LINE_WIDTH_RANGE>
	<get_CULL_FACE_MODE get="inline" set="null" line="714" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CULL_FACE_MODE>
	<get_FRONT_FACE get="inline" set="null" line="715" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRONT_FACE>
	<get_DEPTH_RANGE get="inline" set="null" line="716" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_RANGE>
	<get_DEPTH_WRITEMASK get="inline" set="null" line="717" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_WRITEMASK>
	<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="718" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_CLEAR_VALUE>
	<get_DEPTH_FUNC get="inline" set="null" line="719" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_FUNC>
	<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="720" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_CLEAR_VALUE>
	<get_STENCIL_FUNC get="inline" set="null" line="721" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_FUNC>
	<get_STENCIL_FAIL get="inline" set="null" line="722" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_FAIL>
	<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="723" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_PASS_DEPTH_FAIL>
	<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="724" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_PASS_DEPTH_PASS>
	<get_STENCIL_REF get="inline" set="null" line="725" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_REF>
	<get_STENCIL_VALUE_MASK get="inline" set="null" line="726" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_VALUE_MASK>
	<get_STENCIL_WRITEMASK get="inline" set="null" line="727" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_WRITEMASK>
	<get_STENCIL_BACK_FUNC get="inline" set="null" line="728" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_FUNC>
	<get_STENCIL_BACK_FAIL get="inline" set="null" line="729" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="730" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_PASS_DEPTH_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="731" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_PASS_DEPTH_PASS>
	<get_STENCIL_BACK_REF get="inline" set="null" line="732" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_REF>
	<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="733" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_VALUE_MASK>
	<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="734" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_WRITEMASK>
	<get_VIEWPORT get="inline" set="null" line="735" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VIEWPORT>
	<get_SCISSOR_BOX get="inline" set="null" line="736" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SCISSOR_BOX>
	<get_COLOR_CLEAR_VALUE get="inline" set="null" line="737" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_CLEAR_VALUE>
	<get_COLOR_WRITEMASK get="inline" set="null" line="738" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_WRITEMASK>
	<get_UNPACK_ALIGNMENT get="inline" set="null" line="739" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_ALIGNMENT>
	<get_PACK_ALIGNMENT get="inline" set="null" line="740" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PACK_ALIGNMENT>
	<get_MAX_TEXTURE_SIZE get="inline" set="null" line="741" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TEXTURE_SIZE>
	<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="742" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VIEWPORT_DIMS>
	<get_SUBPIXEL_BITS get="inline" set="null" line="743" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SUBPIXEL_BITS>
	<get_RED_BITS get="inline" set="null" line="744" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RED_BITS>
	<get_GREEN_BITS get="inline" set="null" line="745" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_GREEN_BITS>
	<get_BLUE_BITS get="inline" set="null" line="746" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLUE_BITS>
	<get_ALPHA_BITS get="inline" set="null" line="747" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALPHA_BITS>
	<get_DEPTH_BITS get="inline" set="null" line="748" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_BITS>
	<get_STENCIL_BITS get="inline" set="null" line="749" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BITS>
	<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="750" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_POLYGON_OFFSET_UNITS>
	<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="751" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_POLYGON_OFFSET_FACTOR>
	<get_TEXTURE_BINDING_2D get="inline" set="null" line="752" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BINDING_2D>
	<get_SAMPLE_BUFFERS get="inline" set="null" line="753" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_BUFFERS>
	<get_SAMPLES get="inline" set="null" line="754" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLES>
	<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="755" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_COVERAGE_VALUE>
	<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="756" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_COVERAGE_INVERT>
	<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="757" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COMPRESSED_TEXTURE_FORMATS>
	<get_DONT_CARE get="inline" set="null" line="758" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DONT_CARE>
	<get_FASTEST get="inline" set="null" line="759" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FASTEST>
	<get_NICEST get="inline" set="null" line="760" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NICEST>
	<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="761" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_GENERATE_MIPMAP_HINT>
	<get_BYTE get="inline" set="null" line="762" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BYTE>
	<get_UNSIGNED_BYTE get="inline" set="null" line="763" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_BYTE>
	<get_SHORT get="inline" set="null" line="764" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SHORT>
	<get_UNSIGNED_SHORT get="inline" set="null" line="765" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_SHORT>
	<get_INT get="inline" set="null" line="766" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT>
	<get_UNSIGNED_INT get="inline" set="null" line="767" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT>
	<get_FLOAT get="inline" set="null" line="768" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT>
	<get_DEPTH_COMPONENT get="inline" set="null" line="769" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_COMPONENT>
	<get_ALPHA get="inline" set="null" line="770" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALPHA>
	<get_RGB get="inline" set="null" line="771" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB>
	<get_RGBA get="inline" set="null" line="772" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA>
	<get_LUMINANCE get="inline" set="null" line="773" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LUMINANCE>
	<get_LUMINANCE_ALPHA get="inline" set="null" line="774" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LUMINANCE_ALPHA>
	<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="775" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_SHORT_4_4_4_4>
	<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="776" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_SHORT_5_5_5_1>
	<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="777" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_SHORT_5_6_5>
	<get_FRAGMENT_SHADER get="inline" set="null" line="778" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAGMENT_SHADER>
	<get_VERTEX_SHADER get="inline" set="null" line="779" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_SHADER>
	<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="780" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_ATTRIBS>
	<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="781" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_UNIFORM_VECTORS>
	<get_MAX_VARYING_VECTORS get="inline" set="null" line="782" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VARYING_VECTORS>
	<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="783" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="784" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="785" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TEXTURE_IMAGE_UNITS>
	<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="786" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_FRAGMENT_UNIFORM_VECTORS>
	<get_SHADER_TYPE get="inline" set="null" line="787" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SHADER_TYPE>
	<get_DELETE_STATUS get="inline" set="null" line="788" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DELETE_STATUS>
	<get_LINK_STATUS get="inline" set="null" line="789" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINK_STATUS>
	<get_VALIDATE_STATUS get="inline" set="null" line="790" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VALIDATE_STATUS>
	<get_ATTACHED_SHADERS get="inline" set="null" line="791" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ATTACHED_SHADERS>
	<get_ACTIVE_UNIFORMS get="inline" set="null" line="792" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ACTIVE_UNIFORMS>
	<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="793" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ACTIVE_ATTRIBUTES>
	<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="794" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SHADING_LANGUAGE_VERSION>
	<get_CURRENT_PROGRAM get="inline" set="null" line="795" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CURRENT_PROGRAM>
	<get_NEVER get="inline" set="null" line="796" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NEVER>
	<get_LESS get="inline" set="null" line="797" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LESS>
	<get_EQUAL get="inline" set="null" line="798" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_EQUAL>
	<get_LEQUAL get="inline" set="null" line="799" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LEQUAL>
	<get_GREATER get="inline" set="null" line="800" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_GREATER>
	<get_NOTEQUAL get="inline" set="null" line="801" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NOTEQUAL>
	<get_GEQUAL get="inline" set="null" line="802" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_GEQUAL>
	<get_ALWAYS get="inline" set="null" line="803" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALWAYS>
	<get_KEEP get="inline" set="null" line="804" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_KEEP>
	<get_REPLACE get="inline" set="null" line="805" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_REPLACE>
	<get_INCR get="inline" set="null" line="806" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INCR>
	<get_DECR get="inline" set="null" line="807" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DECR>
	<get_INVERT get="inline" set="null" line="808" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVERT>
	<get_INCR_WRAP get="inline" set="null" line="809" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INCR_WRAP>
	<get_DECR_WRAP get="inline" set="null" line="810" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DECR_WRAP>
	<get_VENDOR get="inline" set="null" line="811" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VENDOR>
	<get_RENDERER get="inline" set="null" line="812" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERER>
	<get_VERSION get="inline" set="null" line="813" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERSION>
	<get_NEAREST get="inline" set="null" line="814" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NEAREST>
	<get_LINEAR get="inline" set="null" line="815" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINEAR>
	<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="816" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NEAREST_MIPMAP_NEAREST>
	<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="817" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINEAR_MIPMAP_NEAREST>
	<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="818" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NEAREST_MIPMAP_LINEAR>
	<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="819" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINEAR_MIPMAP_LINEAR>
	<get_TEXTURE_MAG_FILTER get="inline" set="null" line="820" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MAG_FILTER>
	<get_TEXTURE_MIN_FILTER get="inline" set="null" line="821" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MIN_FILTER>
	<get_TEXTURE_WRAP_S get="inline" set="null" line="822" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_WRAP_S>
	<get_TEXTURE_WRAP_T get="inline" set="null" line="823" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_WRAP_T>
	<get_TEXTURE_2D get="inline" set="null" line="824" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_2D>
	<get_TEXTURE get="inline" set="null" line="825" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE>
	<get_TEXTURE_CUBE_MAP get="inline" set="null" line="826" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP>
	<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="827" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BINDING_CUBE_MAP>
	<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="828" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_X>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="829" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="830" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="831" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="832" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="833" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="834" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_CUBE_MAP_TEXTURE_SIZE>
	<get_TEXTURE0 get="inline" set="null" line="835" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE0>
	<get_TEXTURE1 get="inline" set="null" line="836" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE1>
	<get_TEXTURE2 get="inline" set="null" line="837" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE2>
	<get_TEXTURE3 get="inline" set="null" line="838" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE3>
	<get_TEXTURE4 get="inline" set="null" line="839" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE4>
	<get_TEXTURE5 get="inline" set="null" line="840" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE5>
	<get_TEXTURE6 get="inline" set="null" line="841" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE6>
	<get_TEXTURE7 get="inline" set="null" line="842" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE7>
	<get_TEXTURE8 get="inline" set="null" line="843" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE8>
	<get_TEXTURE9 get="inline" set="null" line="844" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE9>
	<get_TEXTURE10 get="inline" set="null" line="845" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE10>
	<get_TEXTURE11 get="inline" set="null" line="846" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE11>
	<get_TEXTURE12 get="inline" set="null" line="847" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE12>
	<get_TEXTURE13 get="inline" set="null" line="848" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE13>
	<get_TEXTURE14 get="inline" set="null" line="849" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE14>
	<get_TEXTURE15 get="inline" set="null" line="850" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE15>
	<get_TEXTURE16 get="inline" set="null" line="851" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE16>
	<get_TEXTURE17 get="inline" set="null" line="852" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE17>
	<get_TEXTURE18 get="inline" set="null" line="853" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE18>
	<get_TEXTURE19 get="inline" set="null" line="854" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE19>
	<get_TEXTURE20 get="inline" set="null" line="855" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE20>
	<get_TEXTURE21 get="inline" set="null" line="856" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE21>
	<get_TEXTURE22 get="inline" set="null" line="857" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE22>
	<get_TEXTURE23 get="inline" set="null" line="858" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE23>
	<get_TEXTURE24 get="inline" set="null" line="859" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE24>
	<get_TEXTURE25 get="inline" set="null" line="860" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE25>
	<get_TEXTURE26 get="inline" set="null" line="861" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE26>
	<get_TEXTURE27 get="inline" set="null" line="862" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE27>
	<get_TEXTURE28 get="inline" set="null" line="863" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE28>
	<get_TEXTURE29 get="inline" set="null" line="864" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE29>
	<get_TEXTURE30 get="inline" set="null" line="865" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE30>
	<get_TEXTURE31 get="inline" set="null" line="866" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE31>
	<get_ACTIVE_TEXTURE get="inline" set="null" line="867" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ACTIVE_TEXTURE>
	<get_REPEAT get="inline" set="null" line="868" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_REPEAT>
	<get_CLAMP_TO_EDGE get="inline" set="null" line="869" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CLAMP_TO_EDGE>
	<get_MIRRORED_REPEAT get="inline" set="null" line="870" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MIRRORED_REPEAT>
	<get_FLOAT_VEC2 get="inline" set="null" line="871" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_VEC2>
	<get_FLOAT_VEC3 get="inline" set="null" line="872" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_VEC3>
	<get_FLOAT_VEC4 get="inline" set="null" line="873" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_VEC4>
	<get_INT_VEC2 get="inline" set="null" line="874" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_VEC2>
	<get_INT_VEC3 get="inline" set="null" line="875" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_VEC3>
	<get_INT_VEC4 get="inline" set="null" line="876" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_VEC4>
	<get_BOOL get="inline" set="null" line="877" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BOOL>
	<get_BOOL_VEC2 get="inline" set="null" line="878" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BOOL_VEC2>
	<get_BOOL_VEC3 get="inline" set="null" line="879" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BOOL_VEC3>
	<get_BOOL_VEC4 get="inline" set="null" line="880" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BOOL_VEC4>
	<get_FLOAT_MAT2 get="inline" set="null" line="881" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT2>
	<get_FLOAT_MAT3 get="inline" set="null" line="882" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT3>
	<get_FLOAT_MAT4 get="inline" set="null" line="883" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT4>
	<get_SAMPLER_2D get="inline" set="null" line="884" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_2D>
	<get_SAMPLER_CUBE get="inline" set="null" line="885" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_CUBE>
	<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="886" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_ENABLED>
	<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="887" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_SIZE>
	<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="888" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_STRIDE>
	<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="889" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_TYPE>
	<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="890" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="891" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_POINTER>
	<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="892" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<get_VERTEX_PROGRAM_POINT_SIZE get="inline" set="null" line="893" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_PROGRAM_POINT_SIZE>
	<get_POINT_SPRITE get="inline" set="null" line="894" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_POINT_SPRITE>
	<get_COMPILE_STATUS get="inline" set="null" line="895" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COMPILE_STATUS>
	<get_LOW_FLOAT get="inline" set="null" line="896" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LOW_FLOAT>
	<get_MEDIUM_FLOAT get="inline" set="null" line="897" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MEDIUM_FLOAT>
	<get_HIGH_FLOAT get="inline" set="null" line="898" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_HIGH_FLOAT>
	<get_LOW_INT get="inline" set="null" line="899" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LOW_INT>
	<get_MEDIUM_INT get="inline" set="null" line="900" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MEDIUM_INT>
	<get_HIGH_INT get="inline" set="null" line="901" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_HIGH_INT>
	<get_FRAMEBUFFER get="inline" set="null" line="902" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER>
	<get_RENDERBUFFER get="inline" set="null" line="903" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER>
	<get_RGBA4 get="inline" set="null" line="904" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA4>
	<get_RGB5_A1 get="inline" set="null" line="905" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB5_A1>
	<get_RGB565 get="inline" set="null" line="906" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB565>
	<get_DEPTH_COMPONENT16 get="inline" set="null" line="907" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_COMPONENT16>
	<get_STENCIL_INDEX get="inline" set="null" line="908" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_INDEX>
	<get_STENCIL_INDEX8 get="inline" set="null" line="909" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_INDEX8>
	<get_DEPTH_STENCIL get="inline" set="null" line="910" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_STENCIL>
	<get_RENDERBUFFER_WIDTH get="inline" set="null" line="911" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_WIDTH>
	<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="912" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_HEIGHT>
	<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="913" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_INTERNAL_FORMAT>
	<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="914" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_RED_SIZE>
	<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="915" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_GREEN_SIZE>
	<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="916" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_BLUE_SIZE>
	<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="917" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_ALPHA_SIZE>
	<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="918" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_DEPTH_SIZE>
	<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="919" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_STENCIL_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="920" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="921" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="922" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="923" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<get_COLOR_ATTACHMENT0 get="inline" set="null" line="924" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT0>
	<get_DEPTH_ATTACHMENT get="inline" set="null" line="925" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_ATTACHMENT>
	<get_STENCIL_ATTACHMENT get="inline" set="null" line="926" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_ATTACHMENT>
	<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="927" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_STENCIL_ATTACHMENT>
	<get_NONE get="inline" set="null" line="928" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NONE>
	<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="929" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_COMPLETE>
	<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="930" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="931" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="932" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="933" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_UNSUPPORTED>
	<get_FRAMEBUFFER_BINDING get="inline" set="null" line="934" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_BINDING get="inline" set="null" line="935" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_BINDING>
	<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="936" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_RENDERBUFFER_SIZE>
	<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="937" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_FRAMEBUFFER_OPERATION>
	<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="938" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_FLIP_Y_WEBGL>
	<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="939" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="940" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CONTEXT_LOST_WEBGL>
	<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="941" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="942" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BROWSER_DEFAULT_WEBGL>
	<get_type get="inline" set="null" line="943" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<e path="lime.graphics.opengl.GLContextType"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_type>
	<get_version get="inline" set="null" line="944" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_version>
	<get_READ_BUFFER get="inline" set="null" line="946" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_READ_BUFFER>
	<get_UNPACK_ROW_LENGTH get="inline" set="null" line="947" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_ROW_LENGTH>
	<get_UNPACK_SKIP_ROWS get="inline" set="null" line="948" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_SKIP_ROWS>
	<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="949" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_SKIP_PIXELS>
	<get_PACK_ROW_LENGTH get="inline" set="null" line="950" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PACK_ROW_LENGTH>
	<get_PACK_SKIP_ROWS get="inline" set="null" line="951" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PACK_SKIP_ROWS>
	<get_PACK_SKIP_PIXELS get="inline" set="null" line="952" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PACK_SKIP_PIXELS>
	<get_TEXTURE_BINDING_3D get="inline" set="null" line="953" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BINDING_3D>
	<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="954" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_SKIP_IMAGES>
	<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="955" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_IMAGE_HEIGHT>
	<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="956" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_3D_TEXTURE_SIZE>
	<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="957" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_ELEMENTS_VERTICES>
	<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="958" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_ELEMENTS_INDICES>
	<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="959" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TEXTURE_LOD_BIAS>
	<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="960" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="961" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="962" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_ARRAY_TEXTURE_LAYERS>
	<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="963" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MIN_PROGRAM_TEXEL_OFFSET>
	<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="964" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_PROGRAM_TEXEL_OFFSET>
	<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="965" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VARYING_COMPONENTS>
	<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="966" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
	<get_RASTERIZER_DISCARD get="inline" set="null" line="967" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RASTERIZER_DISCARD>
	<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="968" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ARRAY_BINDING>
	<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="969" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_OUTPUT_COMPONENTS>
	<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="970" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_FRAGMENT_INPUT_COMPONENTS>
	<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="971" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_SERVER_WAIT_TIMEOUT>
	<get_MAX_ELEMENT_INDEX get="inline" set="null" line="972" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_ELEMENT_INDEX>
	<get_RED get="inline" set="null" line="974" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RED>
	<get_RGB8 get="inline" set="null" line="975" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB8>
	<get_RGBA8 get="inline" set="null" line="976" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA8>
	<get_RGB10_A2 get="inline" set="null" line="977" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB10_A2>
	<get_TEXTURE_3D get="inline" set="null" line="978" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_3D>
	<get_TEXTURE_WRAP_R get="inline" set="null" line="979" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_WRAP_R>
	<get_TEXTURE_MIN_LOD get="inline" set="null" line="980" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MIN_LOD>
	<get_TEXTURE_MAX_LOD get="inline" set="null" line="981" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MAX_LOD>
	<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="982" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BASE_LEVEL>
	<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="983" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MAX_LEVEL>
	<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="984" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_COMPARE_MODE>
	<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="985" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_COMPARE_FUNC>
	<get_SRGB get="inline" set="null" line="986" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRGB>
	<get_SRGB8 get="inline" set="null" line="987" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRGB8>
	<get_SRGB8_ALPHA8 get="inline" set="null" line="988" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRGB8_ALPHA8>
	<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="989" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COMPARE_REF_TO_TEXTURE>
	<get_RGBA32F get="inline" set="null" line="990" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA32F>
	<get_RGB32F get="inline" set="null" line="991" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB32F>
	<get_RGBA16F get="inline" set="null" line="992" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA16F>
	<get_RGB16F get="inline" set="null" line="993" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB16F>
	<get_TEXTURE_2D_ARRAY get="inline" set="null" line="994" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_2D_ARRAY>
	<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="995" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BINDING_2D_ARRAY>
	<get_R11F_G11F_B10F get="inline" set="null" line="996" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R11F_G11F_B10F>
	<get_RGB9_E5 get="inline" set="null" line="997" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB9_E5>
	<get_RGBA32UI get="inline" set="null" line="998" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA32UI>
	<get_RGB32UI get="inline" set="null" line="999" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB32UI>
	<get_RGBA16UI get="inline" set="null" line="1000" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA16UI>
	<get_RGB16UI get="inline" set="null" line="1001" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB16UI>
	<get_RGBA8UI get="inline" set="null" line="1002" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA8UI>
	<get_RGB8UI get="inline" set="null" line="1003" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB8UI>
	<get_RGBA32I get="inline" set="null" line="1004" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA32I>
	<get_RGB32I get="inline" set="null" line="1005" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB32I>
	<get_RGBA16I get="inline" set="null" line="1006" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA16I>
	<get_RGB16I get="inline" set="null" line="1007" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB16I>
	<get_RGBA8I get="inline" set="null" line="1008" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA8I>
	<get_RGB8I get="inline" set="null" line="1009" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB8I>
	<get_RED_INTEGER get="inline" set="null" line="1010" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RED_INTEGER>
	<get_RGB_INTEGER get="inline" set="null" line="1011" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB_INTEGER>
	<get_RGBA_INTEGER get="inline" set="null" line="1012" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA_INTEGER>
	<get_R8 get="inline" set="null" line="1013" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R8>
	<get_RG8 get="inline" set="null" line="1014" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG8>
	<get_R16F get="inline" set="null" line="1015" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R16F>
	<get_R32F get="inline" set="null" line="1016" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R32F>
	<get_RG16F get="inline" set="null" line="1017" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG16F>
	<get_RG32F get="inline" set="null" line="1018" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG32F>
	<get_R8I get="inline" set="null" line="1019" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R8I>
	<get_R8UI get="inline" set="null" line="1020" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R8UI>
	<get_R16I get="inline" set="null" line="1021" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R16I>
	<get_R16UI get="inline" set="null" line="1022" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R16UI>
	<get_R32I get="inline" set="null" line="1023" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R32I>
	<get_R32UI get="inline" set="null" line="1024" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R32UI>
	<get_RG8I get="inline" set="null" line="1025" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG8I>
	<get_RG8UI get="inline" set="null" line="1026" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG8UI>
	<get_RG16I get="inline" set="null" line="1027" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG16I>
	<get_RG16UI get="inline" set="null" line="1028" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG16UI>
	<get_RG32I get="inline" set="null" line="1029" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG32I>
	<get_RG32UI get="inline" set="null" line="1030" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG32UI>
	<get_R8_SNORM get="inline" set="null" line="1031" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R8_SNORM>
	<get_RG8_SNORM get="inline" set="null" line="1032" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG8_SNORM>
	<get_RGB8_SNORM get="inline" set="null" line="1033" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB8_SNORM>
	<get_RGBA8_SNORM get="inline" set="null" line="1034" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA8_SNORM>
	<get_RGB10_A2UI get="inline" set="null" line="1035" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB10_A2UI>
	<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="1036" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_IMMUTABLE_FORMAT>
	<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="1037" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_IMMUTABLE_LEVELS>
	<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="1039" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_2_10_10_10_REV>
	<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="1040" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_10F_11F_11F_REV>
	<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="1041" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_5_9_9_9_REV>
	<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="1042" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
	<get_UNSIGNED_INT_24_8 get="inline" set="null" line="1043" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_24_8>
	<get_HALF_FLOAT get="inline" set="null" line="1044" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_HALF_FLOAT>
	<get_RG get="inline" set="null" line="1045" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG>
	<get_RG_INTEGER get="inline" set="null" line="1046" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG_INTEGER>
	<get_INT_2_10_10_10_REV get="inline" set="null" line="1047" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_2_10_10_10_REV>
	<get_CURRENT_QUERY get="inline" set="null" line="1049" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CURRENT_QUERY>
	<get_QUERY_RESULT get="inline" set="null" line="1050" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_QUERY_RESULT>
	<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="1051" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_QUERY_RESULT_AVAILABLE>
	<get_ANY_SAMPLES_PASSED get="inline" set="null" line="1052" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ANY_SAMPLES_PASSED>
	<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="1053" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
	<get_MAX_DRAW_BUFFERS get="inline" set="null" line="1055" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_DRAW_BUFFERS>
	<get_DRAW_BUFFER0 get="inline" set="null" line="1056" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER0>
	<get_DRAW_BUFFER1 get="inline" set="null" line="1057" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER1>
	<get_DRAW_BUFFER2 get="inline" set="null" line="1058" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER2>
	<get_DRAW_BUFFER3 get="inline" set="null" line="1059" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER3>
	<get_DRAW_BUFFER4 get="inline" set="null" line="1060" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER4>
	<get_DRAW_BUFFER5 get="inline" set="null" line="1061" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER5>
	<get_DRAW_BUFFER6 get="inline" set="null" line="1062" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER6>
	<get_DRAW_BUFFER7 get="inline" set="null" line="1063" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER7>
	<get_DRAW_BUFFER8 get="inline" set="null" line="1064" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER8>
	<get_DRAW_BUFFER9 get="inline" set="null" line="1065" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER9>
	<get_DRAW_BUFFER10 get="inline" set="null" line="1066" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER10>
	<get_DRAW_BUFFER11 get="inline" set="null" line="1067" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER11>
	<get_DRAW_BUFFER12 get="inline" set="null" line="1068" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER12>
	<get_DRAW_BUFFER13 get="inline" set="null" line="1069" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER13>
	<get_DRAW_BUFFER14 get="inline" set="null" line="1070" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER14>
	<get_DRAW_BUFFER15 get="inline" set="null" line="1071" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER15>
	<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="1072" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COLOR_ATTACHMENTS>
	<get_COLOR_ATTACHMENT1 get="inline" set="null" line="1073" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT1>
	<get_COLOR_ATTACHMENT2 get="inline" set="null" line="1074" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT2>
	<get_COLOR_ATTACHMENT3 get="inline" set="null" line="1075" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT3>
	<get_COLOR_ATTACHMENT4 get="inline" set="null" line="1076" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT4>
	<get_COLOR_ATTACHMENT5 get="inline" set="null" line="1077" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT5>
	<get_COLOR_ATTACHMENT6 get="inline" set="null" line="1078" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT6>
	<get_COLOR_ATTACHMENT7 get="inline" set="null" line="1079" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT7>
	<get_COLOR_ATTACHMENT8 get="inline" set="null" line="1080" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT8>
	<get_COLOR_ATTACHMENT9 get="inline" set="null" line="1081" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT9>
	<get_COLOR_ATTACHMENT10 get="inline" set="null" line="1082" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT10>
	<get_COLOR_ATTACHMENT11 get="inline" set="null" line="1083" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT11>
	<get_COLOR_ATTACHMENT12 get="inline" set="null" line="1084" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT12>
	<get_COLOR_ATTACHMENT13 get="inline" set="null" line="1085" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT13>
	<get_COLOR_ATTACHMENT14 get="inline" set="null" line="1086" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT14>
	<get_COLOR_ATTACHMENT15 get="inline" set="null" line="1087" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT15>
	<get_SAMPLER_3D get="inline" set="null" line="1089" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_3D>
	<get_SAMPLER_2D_SHADOW get="inline" set="null" line="1090" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_2D_SHADOW>
	<get_SAMPLER_2D_ARRAY get="inline" set="null" line="1091" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_2D_ARRAY>
	<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="1092" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_2D_ARRAY_SHADOW>
	<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="1093" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_CUBE_SHADOW>
	<get_INT_SAMPLER_2D get="inline" set="null" line="1094" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_SAMPLER_2D>
	<get_INT_SAMPLER_3D get="inline" set="null" line="1095" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_SAMPLER_3D>
	<get_INT_SAMPLER_CUBE get="inline" set="null" line="1096" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_SAMPLER_CUBE>
	<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1097" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_SAMPLER_2D_ARRAY>
	<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="1098" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_SAMPLER_2D>
	<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="1099" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_SAMPLER_3D>
	<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="1100" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_SAMPLER_CUBE>
	<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1101" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<get_MAX_SAMPLES get="inline" set="null" line="1102" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_SAMPLES>
	<get_SAMPLER_BINDING get="inline" set="null" line="1103" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_BINDING>
	<get_PIXEL_PACK_BUFFER get="inline" set="null" line="1105" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PIXEL_PACK_BUFFER>
	<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="1106" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PIXEL_UNPACK_BUFFER>
	<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="1107" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PIXEL_PACK_BUFFER_BINDING>
	<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="1108" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PIXEL_UNPACK_BUFFER_BINDING>
	<get_COPY_READ_BUFFER get="inline" set="null" line="1109" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COPY_READ_BUFFER>
	<get_COPY_WRITE_BUFFER get="inline" set="null" line="1110" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COPY_WRITE_BUFFER>
	<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="1111" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COPY_READ_BUFFER_BINDING>
	<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="1112" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COPY_WRITE_BUFFER_BINDING>
	<get_FLOAT_MAT2x3 get="inline" set="null" line="1114" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT2x3>
	<get_FLOAT_MAT2x4 get="inline" set="null" line="1115" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT2x4>
	<get_FLOAT_MAT3x2 get="inline" set="null" line="1116" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT3x2>
	<get_FLOAT_MAT3x4 get="inline" set="null" line="1117" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT3x4>
	<get_FLOAT_MAT4x2 get="inline" set="null" line="1118" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT4x2>
	<get_FLOAT_MAT4x3 get="inline" set="null" line="1119" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT4x3>
	<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="1120" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_VEC2>
	<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="1121" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_VEC3>
	<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="1122" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_VEC4>
	<get_UNSIGNED_NORMALIZED get="inline" set="null" line="1123" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_NORMALIZED>
	<get_SIGNED_NORMALIZED get="inline" set="null" line="1124" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SIGNED_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="1126" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_INTEGER>
	<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="1127" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
	<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="1129" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="1130" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="1131" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_VARYINGS>
	<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="1132" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_START>
	<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="1133" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="1134" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="1135" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="1136" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="1137" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INTERLEAVED_ATTRIBS>
	<get_SEPARATE_ATTRIBS get="inline" set="null" line="1138" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SEPARATE_ATTRIBS>
	<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="1139" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER>
	<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="1140" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<get_TRANSFORM_FEEDBACK get="inline" set="null" line="1141" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK>
	<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="1142" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_PAUSED>
	<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="1143" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_ACTIVE>
	<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="1144" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BINDING>
	<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="1146" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="1147" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="1148" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="1149" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="1150" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="1151" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="1152" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="1153" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="1154" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_DEFAULT>
	<get_DEPTH24_STENCIL8 get="inline" set="null" line="1155" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH24_STENCIL8>
	<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="1156" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_FRAMEBUFFER_BINDING>
	<get_READ_FRAMEBUFFER get="inline" set="null" line="1157" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_READ_FRAMEBUFFER>
	<get_DRAW_FRAMEBUFFER get="inline" set="null" line="1158" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_FRAMEBUFFER>
	<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="1159" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_READ_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="1160" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_SAMPLES>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="1161" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="1162" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<get_UNIFORM_BUFFER get="inline" set="null" line="1164" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER>
	<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="1165" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER_BINDING>
	<get_UNIFORM_BUFFER_START get="inline" set="null" line="1166" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER_START>
	<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="1167" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER_SIZE>
	<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="1168" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_UNIFORM_BLOCKS>
	<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="1169" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
	<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="1170" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COMBINED_UNIFORM_BLOCKS>
	<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="1171" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_UNIFORM_BUFFER_BINDINGS>
	<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="1172" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_UNIFORM_BLOCK_SIZE>
	<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="1173" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="1174" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="1175" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="1176" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ACTIVE_UNIFORM_BLOCKS>
	<get_UNIFORM_TYPE get="inline" set="null" line="1177" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_TYPE>
	<get_UNIFORM_SIZE get="inline" set="null" line="1178" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_SIZE>
	<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="1179" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_INDEX>
	<get_UNIFORM_OFFSET get="inline" set="null" line="1180" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_OFFSET>
	<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="1181" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_ARRAY_STRIDE>
	<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="1182" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_MATRIX_STRIDE>
	<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="1183" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_IS_ROW_MAJOR>
	<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="1184" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_BINDING>
	<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="1185" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_DATA_SIZE>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="1186" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="1187" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="1188" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="1189" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<get_OBJECT_TYPE get="inline" set="null" line="1191" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_OBJECT_TYPE>
	<get_SYNC_CONDITION get="inline" set="null" line="1192" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_CONDITION>
	<get_SYNC_STATUS get="inline" set="null" line="1193" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_STATUS>
	<get_SYNC_FLAGS get="inline" set="null" line="1194" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_FLAGS>
	<get_SYNC_FENCE get="inline" set="null" line="1195" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_FENCE>
	<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="1196" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_GPU_COMMANDS_COMPLETE>
	<get_UNSIGNALED get="inline" set="null" line="1197" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNALED>
	<get_SIGNALED get="inline" set="null" line="1198" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SIGNALED>
	<get_ALREADY_SIGNALED get="inline" set="null" line="1199" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALREADY_SIGNALED>
	<get_TIMEOUT_EXPIRED get="inline" set="null" line="1200" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TIMEOUT_EXPIRED>
	<get_CONDITION_SATISFIED get="inline" set="null" line="1201" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CONDITION_SATISFIED>
	<get_WAIT_FAILED get="inline" set="null" line="1202" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_WAIT_FAILED>
	<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="1203" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_FLUSH_COMMANDS_BIT>
	<get_COLOR get="inline" set="null" line="1205" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR>
	<get_DEPTH get="inline" set="null" line="1206" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH>
	<get_STENCIL get="inline" set="null" line="1207" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL>
	<get_MIN get="inline" set="null" line="1208" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MIN>
	<get_MAX get="inline" set="null" line="1209" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX>
	<get_DEPTH_COMPONENT24 get="inline" set="null" line="1210" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_COMPONENT24>
	<get_STREAM_READ get="inline" set="null" line="1211" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STREAM_READ>
	<get_STREAM_COPY get="inline" set="null" line="1212" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STREAM_COPY>
	<get_STATIC_READ get="inline" set="null" line="1213" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STATIC_READ>
	<get_STATIC_COPY get="inline" set="null" line="1214" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STATIC_COPY>
	<get_DYNAMIC_READ get="inline" set="null" line="1215" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DYNAMIC_READ>
	<get_DYNAMIC_COPY get="inline" set="null" line="1216" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DYNAMIC_COPY>
	<get_DEPTH_COMPONENT32F get="inline" set="null" line="1217" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_COMPONENT32F>
	<get_DEPTH32F_STENCIL8 get="inline" set="null" line="1218" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH32F_STENCIL8>
	<get_INVALID_INDEX get="inline" set="null" line="1219" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_INDEX>
	<get_TIMEOUT_IGNORED get="inline" set="null" line="1220" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TIMEOUT_IGNORED>
	<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="1221" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<activeTexture public="1" get="inline" set="null" line="1224" static="1">
		<f a="this:texture">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</activeTexture>
	<attachShader public="1" get="inline" set="null" line="1231" static="1">
		<f a="this:program:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</attachShader>
	<beginQuery public="1" get="inline" set="null" line="1238" static="1">
		<f a="this:target:query">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginQuery>
	<beginTransformFeedback public="1" get="inline" set="null" line="1245" static="1">
		<f a="this:primitiveNode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginTransformFeedback>
	<bindAttribLocation public="1" get="inline" set="null" line="1252" static="1">
		<f a="this:program:index:name">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindAttribLocation>
	<bindBuffer public="1" get="inline" set="null" line="1259" static="1">
		<f a="this:target:buffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBuffer>
	<bindBufferBase public="1" get="inline" set="null" line="1266" static="1">
		<f a="this:target:index:buffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferBase>
	<bindBufferRange public="1" get="inline" set="null" line="1273" static="1">
		<f a="this:target:index:buffer:offset:size">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferRange>
	<bindFramebuffer public="1" get="inline" set="null" line="1280" static="1">
		<f a="this:target:framebuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindFramebuffer>
	<bindRenderbuffer public="1" get="inline" set="null" line="1287" static="1">
		<f a="this:target:renderbuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindRenderbuffer>
	<bindSampler public="1" get="inline" set="null" line="1294" static="1">
		<f a="this:unit:sampler">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindSampler>
	<bindTexture public="1" get="inline" set="null" line="1301" static="1">
		<f a="this:target:texture">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTexture>
	<bindTransformFeedback public="1" get="inline" set="null" line="1308" static="1">
		<f a="this:target:transformFeedback">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTransformFeedback>
	<bindVertexArray public="1" get="inline" set="null" line="1315" static="1">
		<f a="this:vertexArray">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindVertexArray>
	<blendColor public="1" get="inline" set="null" line="1322" static="1">
		<f a="this:red:green:blue:alpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendColor>
	<blendEquation public="1" get="inline" set="null" line="1329" static="1">
		<f a="this:mode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquation>
	<blendEquationSeparate public="1" get="inline" set="null" line="1336" static="1">
		<f a="this:modeRGB:modeAlpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquationSeparate>
	<blendFunc public="1" get="inline" set="null" line="1343" static="1">
		<f a="this:sfactor:dfactor">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFunc>
	<blendFuncSeparate public="1" get="inline" set="null" line="1350" static="1">
		<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFuncSeparate>
	<blitFramebuffer public="1" get="inline" set="null" line="1357" static="1">
		<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blitFramebuffer>
	<bufferData public="1" get="inline" set="null" line="1364" static="1">
		<f a="this:target:size:data:usage">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferData>
	<bufferSubData public="1" get="inline" set="null" line="1371" static="1">
		<f a="this:target:offset:size:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferSubData>
	<checkFramebufferStatus public="1" get="inline" set="null" line="1378" static="1">
		<f a="this:target">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</checkFramebufferStatus>
	<clear public="1" get="inline" set="null" line="1385" static="1">
		<f a="this:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clear>
	<clearBufferfi public="1" get="inline" set="null" line="1392" static="1">
		<f a="this:buffer:drawbuffer:depth:stencil">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferfi>
	<clearBufferfv public="1" get="inline" set="null" line="1399" static="1">
		<f a="this:buffer:drawbuffer:value">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferfv>
	<clearBufferiv public="1" get="inline" set="null" line="1406" static="1">
		<f a="this:buffer:drawbuffer:value">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferiv>
	<clearBufferuiv public="1" get="inline" set="null" line="1413" static="1">
		<f a="this:buffer:drawbuffer:value">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferuiv>
	<clearColor public="1" get="inline" set="null" line="1420" static="1">
		<f a="this:red:green:blue:alpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearColor>
	<clearDepthf public="1" get="inline" set="null" line="1427" static="1">
		<f a="this:depth">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearDepthf>
	<clearStencil public="1" get="inline" set="null" line="1434" static="1">
		<f a="this:s">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearStencil>
	<clientWaitSync public="1" get="inline" set="null" line="1441" static="1">
		<f a="this:sync:flags:timeout">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clientWaitSync>
	<colorMask public="1" get="inline" set="null" line="1448" static="1">
		<f a="this:red:green:blue:alpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</colorMask>
	<compileShader public="1" get="inline" set="null" line="1455" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compileShader>
	<compressedTexImage2D public="1" get="inline" set="null" line="1462" static="1">
		<f a="this:target:level:internalformat:width:height:border:imageSize:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexImage2D>
	<compressedTexImage3D public="1" get="inline" set="null" line="1469" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:imageSize:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexImage3D>
	<compressedTexSubImage2D public="1" get="inline" set="null" line="1476" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:imageSize:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexSubImage2D>
	<compressedTexSubImage3D public="1" get="inline" set="null" line="1483" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:imageSize:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexSubImage3D>
	<copyBufferSubData public="1" get="inline" set="null" line="1490" static="1">
		<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyBufferSubData>
	<copyTexImage2D public="1" get="inline" set="null" line="1497" static="1">
		<f a="this:target:level:internalformat:x:y:width:height:border">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexImage2D>
	<copyTexSubImage2D public="1" get="inline" set="null" line="1504" static="1">
		<f a="this:target:level:xoffset:yoffset:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage2D>
	<copyTexSubImage3D public="1" get="inline" set="null" line="1511" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage3D>
	<createBuffer public="1" get="inline" set="null" line="1518" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createBuffer>
	<createFramebuffer public="1" get="inline" set="null" line="1525" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createFramebuffer>
	<createProgram public="1" get="inline" set="null" line="1532" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createProgram>
	<createQuery public="1" get="inline" set="null" line="1539" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createQuery>
	<createRenderbuffer public="1" get="inline" set="null" line="1546" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createRenderbuffer>
	<createSampler public="1" get="inline" set="null" line="1553" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createSampler>
	<createShader public="1" get="inline" set="null" line="1560" static="1">
		<f a="this:type">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLShader"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createShader>
	<createTexture public="1" get="inline" set="null" line="1567" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTexture"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTexture>
	<createTransformFeedback public="1" get="inline" set="null" line="1574" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTransformFeedback>
	<createVertexArray public="1" get="inline" set="null" line="1581" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createVertexArray>
	<cullFace public="1" get="inline" set="null" line="1588" static="1">
		<f a="this:mode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</cullFace>
	<deleteBuffer public="1" get="inline" set="null" line="1595" static="1">
		<f a="this:buffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteBuffer>
	<deleteFramebuffer public="1" get="inline" set="null" line="1602" static="1">
		<f a="this:framebuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteFramebuffer>
	<deleteProgram public="1" get="inline" set="null" line="1609" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteProgram>
	<deleteQuery public="1" get="inline" set="null" line="1616" static="1">
		<f a="this:query">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteQuery>
	<deleteRenderbuffer public="1" get="inline" set="null" line="1623" static="1">
		<f a="this:renderbuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteRenderbuffer>
	<deleteSampler public="1" get="inline" set="null" line="1630" static="1">
		<f a="this:sampler">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSampler>
	<deleteShader public="1" get="inline" set="null" line="1637" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteShader>
	<deleteSync public="1" get="inline" set="null" line="1644" static="1">
		<f a="this:sync">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSync>
	<deleteTexture public="1" get="inline" set="null" line="1651" static="1">
		<f a="this:texture">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTexture>
	<deleteTransformFeedback public="1" get="inline" set="null" line="1658" static="1">
		<f a="this:transformFeedback">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTransformFeedback>
	<deleteVertexArray public="1" get="inline" set="null" line="1665" static="1">
		<f a="this:vertexArray">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteVertexArray>
	<depthFunc public="1" get="inline" set="null" line="1672" static="1">
		<f a="this:func">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthFunc>
	<depthMask public="1" get="inline" set="null" line="1679" static="1">
		<f a="this:flag">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthMask>
	<depthRangef public="1" get="inline" set="null" line="1686" static="1">
		<f a="this:zNear:zFar">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthRangef>
	<detachShader public="1" get="inline" set="null" line="1693" static="1">
		<f a="this:program:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</detachShader>
	<disable public="1" get="inline" set="null" line="1700" static="1">
		<f a="this:cap">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disable>
	<disableVertexAttribArray public="1" get="inline" set="null" line="1707" static="1">
		<f a="this:index">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disableVertexAttribArray>
	<drawArrays public="1" get="inline" set="null" line="1714" static="1">
		<f a="this:mode:first:count">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArrays>
	<drawArraysInstanced public="1" get="inline" set="null" line="1721" static="1">
		<f a="this:mode:first:count:instanceCount">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArraysInstanced>
	<drawBuffers public="1" get="inline" set="null" line="1728" static="1">
		<f a="this:buffers">
			<c path="lime.graphics.GLRenderContext"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawBuffers>
	<drawElements public="1" get="inline" set="null" line="1735" static="1">
		<f a="this:mode:count:type:offset">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElements>
	<drawElementsInstanced public="1" get="inline" set="null" line="1742" static="1">
		<f a="this:mode:count:type:offset:instanceCount">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElementsInstanced>
	<drawRangeElements public="1" get="inline" set="null" line="1749" static="1">
		<f a="this:mode:start:end:count:type:offset">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawRangeElements>
	<enable public="1" get="inline" set="null" line="1756" static="1">
		<f a="this:cap">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enable>
	<enableVertexAttribArray public="1" get="inline" set="null" line="1763" static="1">
		<f a="this:index">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enableVertexAttribArray>
	<endQuery public="1" get="inline" set="null" line="1770" static="1">
		<f a="this:target">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endQuery>
	<endTransformFeedback public="1" get="inline" set="null" line="1777" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endTransformFeedback>
	<fenceSync public="1" get="inline" set="null" line="1784" static="1">
		<f a="this:condition:flags">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSync"/>
		</f>
		<meta><m n=":impl"/></meta>
	</fenceSync>
	<finish public="1" get="inline" set="null" line="1791" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</finish>
	<flush public="1" get="inline" set="null" line="1798" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</flush>
	<framebufferRenderbuffer public="1" get="inline" set="null" line="1805" static="1">
		<f a="this:target:attachment:renderbuffertarget:renderbuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferRenderbuffer>
	<framebufferTexture2D public="1" get="inline" set="null" line="1812" static="1">
		<f a="this:target:attachment:textarget:texture:level">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTexture2D>
	<framebufferTextureLayer public="1" get="inline" set="null" line="1819" static="1">
		<f a="this:target:attachment:texture:level:layer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTextureLayer>
	<frontFace public="1" get="inline" set="null" line="1826" static="1">
		<f a="this:mode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</frontFace>
	<genBuffers public="1" set="method" line="1833" static="1">
		<f a="this:n:?buffers" v="::null">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLBuffer"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLBuffer"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ buffers : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genBuffers>
	<generateMipmap public="1" get="inline" set="null" line="1848" static="1">
		<f a="this:target">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</generateMipmap>
	<genFramebuffers public="1" set="method" line="1854" static="1">
		<f a="this:n:?framebuffers" v="::null">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLFramebuffer"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLFramebuffer"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ framebuffers : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genFramebuffers>
	<genQueries public="1" set="method" line="1869" static="1">
		<f a="this:n:?queries" v="::null">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLQuery"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLQuery"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ queries : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genQueries>
	<genRenderbuffers public="1" set="method" line="1884" static="1">
		<f a="this:n:?renderbuffers" v="::null">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLRenderbuffer"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLRenderbuffer"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ renderbuffers : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genRenderbuffers>
	<genSamplers public="1" set="method" line="1899" static="1">
		<f a="this:n:?samplers" v="::null">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLSampler"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLSampler"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ samplers : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genSamplers>
	<genTextures public="1" set="method" line="1914" static="1">
		<f a="this:n:?textures" v="::null">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLTexture"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLTexture"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ textures : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genTextures>
	<genTransformFeedbacks public="1" set="method" line="1929" static="1">
		<f a="this:n:?transformFeedbacks" v="::null">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLTransformFeedback"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLTransformFeedback"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ transformFeedbacks : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genTransformFeedbacks>
	<getActiveAttrib public="1" get="inline" set="null" line="1944" static="1">
		<f a="this:program:index">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveAttrib>
	<getActiveUniform public="1" get="inline" set="null" line="1951" static="1">
		<f a="this:program:index">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniform>
	<getActiveUniformBlocki public="1" get="inline" set="null" line="1958" static="1">
		<f a="this:program:uniformBlockIndex:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlocki>
	<getActiveUniformBlockiv public="1" get="inline" set="null" line="1965" static="1">
		<f a="this:program:uniformBlockIndex:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockiv>
	<getActiveUniformBlockName public="1" get="inline" set="null" line="1972" static="1">
		<f a="this:program:uniformBlockIndex">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockName>
	<getActiveUniformsiv public="1" get="inline" set="null" line="1979" static="1">
		<f a="this:program:uniformIndices:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformsiv>
	<getAttachedShaders public="1" get="inline" set="null" line="1986" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttachedShaders>
	<getAttribLocation public="1" get="inline" set="null" line="1993" static="1">
		<f a="this:program:name">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttribLocation>
	<getBoolean public="1" get="inline" set="null" line="2000" static="1">
		<f a="this:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBoolean>
	<getBooleanv public="1" get="inline" set="null" line="2007" static="1">
		<f a="this:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBooleanv>
	<getBufferParameteri public="1" get="inline" set="null" line="2014" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameteri>
	<getBufferParameteri64v public="1" get="inline" set="null" line="2021" static="1">
		<f a="this:target:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameteri64v>
	<getBufferParameteriv public="1" get="inline" set="null" line="2028" static="1">
		<f a="this:target:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameteriv>
	<getBufferPointerv public="1" get="inline" set="null" line="2035" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferPointerv>
	<getError public="1" get="inline" set="null" line="2042" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getError>
	<getFloat public="1" get="inline" set="null" line="2049" static="1">
		<f a="this:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFloat>
	<getFloatv public="1" get="inline" set="null" line="2056" static="1">
		<f a="this:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFloatv>
	<getExtension public="1" get="inline" set="null" line="2063" static="1">
		<f a="this:name">
			<c path="lime.graphics.GLRenderContext"/>
			<c path="String"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getExtension>
	<getFragDataLocation public="1" get="inline" set="null" line="2070" static="1">
		<f a="this:program:name">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFragDataLocation>
	<getFramebufferAttachmentParameteri public="1" get="inline" set="null" line="2077" static="1">
		<f a="this:target:attachment:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFramebufferAttachmentParameteri>
	<getFramebufferAttachmentParameteriv public="1" get="inline" set="null" line="2084" static="1">
		<f a="this:target:attachment:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFramebufferAttachmentParameteriv>
	<getInteger public="1" get="inline" set="null" line="2091" static="1">
		<f a="this:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger>
	<getInteger64 public="1" get="inline" set="null" line="2098" static="1">
		<f a="this:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger64>
	<getInteger64i public="1" get="inline" set="null" line="2105" static="1">
		<f a="this:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger64i>
	<getInteger64i_v public="1" get="inline" set="null" line="2112" static="1">
		<f a="this:pname:index:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger64i_v>
	<getInteger64v public="1" get="inline" set="null" line="2119" static="1">
		<f a="this:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger64v>
	<getIntegeri_v public="1" get="inline" set="null" line="2126" static="1">
		<f a="this:pname:index:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getIntegeri_v>
	<getIntegerv public="1" get="inline" set="null" line="2133" static="1">
		<f a="this:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getIntegerv>
	<getInternalformati public="1" get="inline" set="null" line="2140" static="1">
		<f a="this:target:internalformat:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInternalformati>
	<getInternalformativ public="1" get="inline" set="null" line="2147" static="1">
		<f a="this:target:internalformat:pname:bufSize:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInternalformativ>
	<getProgramBinary public="1" get="inline" set="null" line="2154" static="1">
		<f a="this:program:binaryFormat">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramBinary>
	<getProgrami public="1" get="inline" set="null" line="2161" static="1">
		<f a="this:program:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgrami>
	<getProgramInfoLog public="1" get="inline" set="null" line="2168" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramInfoLog>
	<getProgramiv public="1" get="inline" set="null" line="2175" static="1">
		<f a="this:program:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramiv>
	<getQueryi public="1" get="inline" set="null" line="2182" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryi>
	<getQueryiv public="1" get="inline" set="null" line="2189" static="1">
		<f a="this:target:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryiv>
	<getQueryObjectui public="1" get="inline" set="null" line="2196" static="1">
		<f a="this:query:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryObjectui>
	<getQueryObjectuiv public="1" get="inline" set="null" line="2203" static="1">
		<f a="this:query:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryObjectuiv>
	<getRenderbufferParameteri public="1" get="inline" set="null" line="2210" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getRenderbufferParameteri>
	<getRenderbufferParameteriv public="1" get="inline" set="null" line="2217" static="1">
		<f a="this:target:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getRenderbufferParameteriv>
	<getSamplerParameteri public="1" get="inline" set="null" line="2224" static="1">
		<f a="this:sampler:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameteri>
	<getSamplerParameteriv public="1" get="inline" set="null" line="2231" static="1">
		<f a="this:sampler:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameteriv>
	<getSamplerParameterf public="1" get="inline" set="null" line="2238" static="1">
		<f a="this:sampler:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameterf>
	<getSamplerParameterfv public="1" get="inline" set="null" line="2245" static="1">
		<f a="this:sampler:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameterfv>
	<getShaderInfoLog public="1" get="inline" set="null" line="2252" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderInfoLog>
	<getShaderi public="1" get="inline" set="null" line="2259" static="1">
		<f a="this:shader:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderi>
	<getShaderiv public="1" get="inline" set="null" line="2266" static="1">
		<f a="this:shader:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderiv>
	<getShaderPrecisionFormat public="1" get="inline" set="null" line="2273" static="1">
		<f a="this:shadertype:precisiontype">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderPrecisionFormat>
	<getShaderSource public="1" get="inline" set="null" line="2280" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderSource>
	<getString public="1" get="inline" set="null" line="2287" static="1">
		<f a="this:name">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getString>
	<getStringi public="1" get="inline" set="null" line="2294" static="1">
		<f a="this:name:index">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getStringi>
	<getSyncParameteri public="1" get="inline" set="null" line="2301" static="1">
		<f a="this:sync:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSyncParameteri>
	<getSyncParameteriv public="1" get="inline" set="null" line="2308" static="1">
		<f a="this:sync:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSyncParameteriv>
	<getTexParameterf public="1" get="inline" set="null" line="2315" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameterf>
	<getTexParameterfv public="1" get="inline" set="null" line="2322" static="1">
		<f a="this:target:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameterfv>
	<getTexParameteri public="1" get="inline" set="null" line="2329" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameteri>
	<getTexParameteriv public="1" get="inline" set="null" line="2336" static="1">
		<f a="this:target:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameteriv>
	<getTransformFeedbackVarying public="1" get="inline" set="null" line="2343" static="1">
		<f a="this:program:index">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTransformFeedbackVarying>
	<getUniformf public="1" get="inline" set="null" line="2350" static="1">
		<f a="this:program:location">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformf>
	<getUniformfv public="1" get="inline" set="null" line="2357" static="1">
		<f a="this:program:location:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformfv>
	<getUniformi public="1" get="inline" set="null" line="2364" static="1">
		<f a="this:program:location">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformi>
	<getUniformiv public="1" get="inline" set="null" line="2371" static="1">
		<f a="this:program:location:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformiv>
	<getUniformui public="1" get="inline" set="null" line="2378" static="1">
		<f a="this:program:location">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformui>
	<getUniformuiv public="1" get="inline" set="null" line="2385" static="1">
		<f a="this:program:location:params">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformuiv>
	<getUniformBlockIndex public="1" get="inline" set="null" line="2392" static="1">
		<f a="this:program:uniformBlockName">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformBlockIndex>
	<getUniformIndices public="1" get="inline" set="null" line="2399" static="1">
		<f a="this:program:uniformNames">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<c path="Array"><x path="Int"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformIndices>
	<getUniformLocation public="1" get="inline" set="null" line="2406" static="1">
		<f a="this:program:name">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformLocation>
	<getVertexAttribf public="1" get="inline" set="null" line="2413" static="1">
		<f a="this:index:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribf>
	<getVertexAttribfv public="1" get="inline" set="null" line="2420" static="1">
		<f a="this:index:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribfv>
	<getVertexAttribi public="1" get="inline" set="null" line="2427" static="1">
		<f a="this:index:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribi>
	<getVertexAttribIi public="1" get="inline" set="null" line="2434" static="1">
		<f a="this:index:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribIi>
	<getVertexAttribIiv public="1" get="inline" set="null" line="2441" static="1">
		<f a="this:index:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribIiv>
	<getVertexAttribIui public="1" get="inline" set="null" line="2448" static="1">
		<f a="this:index:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribIui>
	<getVertexAttribIuiv public="1" get="inline" set="null" line="2455" static="1">
		<f a="this:index:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribIuiv>
	<getVertexAttribiv public="1" get="inline" set="null" line="2462" static="1">
		<f a="this:index:pname:params">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribiv>
	<getVertexAttribPointerv public="1" get="inline" set="null" line="2469" static="1">
		<f a="this:index:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribPointerv>
	<hint public="1" get="inline" set="null" line="2476" static="1">
		<f a="this:target:mode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</hint>
	<invalidateFramebuffer public="1" get="inline" set="null" line="2483" static="1">
		<f a="this:target:attachments">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateFramebuffer>
	<invalidateSubFramebuffer public="1" get="inline" set="null" line="2490" static="1">
		<f a="this:target:attachments:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateSubFramebuffer>
	<isBuffer public="1" get="inline" set="null" line="2497" static="1">
		<f a="this:buffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isBuffer>
	<isEnabled public="1" get="inline" set="null" line="2504" static="1">
		<f a="this:cap">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isEnabled>
	<isFramebuffer public="1" get="inline" set="null" line="2511" static="1">
		<f a="this:framebuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isFramebuffer>
	<isProgram public="1" get="inline" set="null" line="2518" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isProgram>
	<isQuery public="1" get="inline" set="null" line="2525" static="1">
		<f a="this:query">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isQuery>
	<isRenderbuffer public="1" get="inline" set="null" line="2532" static="1">
		<f a="this:renderbuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isRenderbuffer>
	<isSampler public="1" get="inline" set="null" line="2539" static="1">
		<f a="this:sampler">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isSampler>
	<isShader public="1" get="inline" set="null" line="2546" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isShader>
	<isTexture public="1" get="inline" set="null" line="2553" static="1">
		<f a="this:texture">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTexture>
	<isTransformFeedback public="1" get="inline" set="null" line="2560" static="1">
		<f a="this:transformFeedback">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTransformFeedback>
	<isVertexArray public="1" get="inline" set="null" line="2567" static="1">
		<f a="this:vertexArray">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isVertexArray>
	<lineWidth public="1" get="inline" set="null" line="2574" static="1">
		<f a="this:width">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</lineWidth>
	<linkProgram public="1" get="inline" set="null" line="2581" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</linkProgram>
	<mapBufferRange public="1" get="inline" set="null" line="2588" static="1">
		<f a="this:target:offset:length:access">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</mapBufferRange>
	<pauseTransformFeedback public="1" get="inline" set="null" line="2595" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pauseTransformFeedback>
	<pixelStorei public="1" get="inline" set="null" line="2602" static="1">
		<f a="this:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pixelStorei>
	<polygonOffset public="1" get="inline" set="null" line="2609" static="1">
		<f a="this:factor:units">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</polygonOffset>
	<programBinary public="1" get="inline" set="null" line="2616" static="1">
		<f a="this:program:binaryFormat:binary:length">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</programBinary>
	<programParameteri public="1" get="inline" set="null" line="2623" static="1">
		<f a="this:program:pname:value">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</programParameteri>
	<readBuffer public="1" get="inline" set="null" line="2630" static="1">
		<f a="this:src">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readBuffer>
	<readPixels public="1" get="inline" set="null" line="2637" static="1">
		<f a="this:x:y:width:height:format:type:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readPixels>
	<releaseShaderCompiler public="1" get="inline" set="null" line="2644" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</releaseShaderCompiler>
	<renderbufferStorage public="1" get="inline" set="null" line="2651" static="1">
		<f a="this:target:internalformat:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorage>
	<renderbufferStorageMultisample public="1" get="inline" set="null" line="2658" static="1">
		<f a="this:target:samples:internalformat:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorageMultisample>
	<resumeTransformFeedback public="1" get="inline" set="null" line="2665" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</resumeTransformFeedback>
	<sampleCoverage public="1" get="inline" set="null" line="2672" static="1">
		<f a="this:value:invert">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</sampleCoverage>
	<samplerParameterf public="1" get="inline" set="null" line="2679" static="1">
		<f a="this:sampler:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameterf>
	<samplerParameteri public="1" get="inline" set="null" line="2686" static="1">
		<f a="this:sampler:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameteri>
	<scissor public="1" get="inline" set="null" line="2693" static="1">
		<f a="this:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</scissor>
	<shaderBinary public="1" get="inline" set="null" line="2700" static="1">
		<f a="this:shaders:binaryformat:binary:length">
			<c path="lime.graphics.GLRenderContext"/>
			<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</shaderBinary>
	<shaderSource public="1" get="inline" set="null" line="2707" static="1">
		<f a="this:shader:source">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</shaderSource>
	<stencilFunc public="1" get="inline" set="null" line="2714" static="1">
		<f a="this:func:ref:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFunc>
	<stencilFuncSeparate public="1" get="inline" set="null" line="2721" static="1">
		<f a="this:face:func:ref:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFuncSeparate>
	<stencilMask public="1" get="inline" set="null" line="2728" static="1">
		<f a="this:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMask>
	<stencilMaskSeparate public="1" get="inline" set="null" line="2735" static="1">
		<f a="this:face:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMaskSeparate>
	<stencilOp public="1" get="inline" set="null" line="2742" static="1">
		<f a="this:fail:zfail:zpass">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOp>
	<stencilOpSeparate public="1" get="inline" set="null" line="2749" static="1">
		<f a="this:face:fail:zfail:zpass">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOpSeparate>
	<texImage2D public="1" get="inline" set="null" line="2756" static="1">
		<f a="this:target:level:internalformat:width:height:border:format:type:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage2D>
	<texImage3D public="1" get="inline" set="null" line="2763" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:format:type:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage3D>
	<texStorage2D public="1" get="inline" set="null" line="2770" static="1">
		<f a="this:target:level:internalformat:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage2D>
	<texStorage3D public="1" get="inline" set="null" line="2777" static="1">
		<f a="this:target:level:internalformat:width:height:depth">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage3D>
	<texParameterf public="1" get="inline" set="null" line="2784" static="1">
		<f a="this:target:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameterf>
	<texParameteri public="1" get="inline" set="null" line="2791" static="1">
		<f a="this:target:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameteri>
	<texSubImage2D public="1" get="inline" set="null" line="2798" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:type:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texSubImage2D>
	<texSubImage3D public="1" get="inline" set="null" line="2805" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:data">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texSubImage3D>
	<transformFeedbackVaryings public="1" get="inline" set="null" line="2812" static="1">
		<f a="this:program:varyings:bufferMode">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transformFeedbackVaryings>
	<uniform1f public="1" get="inline" set="null" line="2819" static="1">
		<f a="this:location:v0">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1f>
	<uniform1fv public="1" get="inline" set="null" line="2826" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1fv>
	<uniform1i public="1" get="inline" set="null" line="2833" static="1">
		<f a="this:location:v0">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1i>
	<uniform1iv public="1" get="inline" set="null" line="2840" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1iv>
	<uniform1ui public="1" get="inline" set="null" line="2847" static="1">
		<f a="this:location:v0">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1ui>
	<uniform1uiv public="1" get="inline" set="null" line="2854" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1uiv>
	<uniform2f public="1" get="inline" set="null" line="2861" static="1">
		<f a="this:location:v0:v1">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2f>
	<uniform2fv public="1" get="inline" set="null" line="2868" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2fv>
	<uniform2i public="1" get="inline" set="null" line="2875" static="1">
		<f a="this:location:v0:v1">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2i>
	<uniform2iv public="1" get="inline" set="null" line="2882" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2iv>
	<uniform2ui public="1" get="inline" set="null" line="2889" static="1">
		<f a="this:location:v0:v1">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2ui>
	<uniform2uiv public="1" get="inline" set="null" line="2896" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2uiv>
	<uniform3f public="1" get="inline" set="null" line="2903" static="1">
		<f a="this:location:v0:v1:v2">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3f>
	<uniform3fv public="1" get="inline" set="null" line="2910" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3fv>
	<uniform3i public="1" get="inline" set="null" line="2917" static="1">
		<f a="this:location:v0:v1:v2">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3i>
	<uniform3iv public="1" get="inline" set="null" line="2924" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3iv>
	<uniform3ui public="1" get="inline" set="null" line="2931" static="1">
		<f a="this:location:v0:v1:v2">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3ui>
	<uniform3uiv public="1" get="inline" set="null" line="2938" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3uiv>
	<uniform4f public="1" get="inline" set="null" line="2945" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4f>
	<uniform4fv public="1" get="inline" set="null" line="2952" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4fv>
	<uniform4i public="1" get="inline" set="null" line="2959" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4i>
	<uniform4iv public="1" get="inline" set="null" line="2966" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4iv>
	<uniform4ui public="1" get="inline" set="null" line="2973" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4ui>
	<uniform4uiv public="1" get="inline" set="null" line="2980" static="1">
		<f a="this:location:count:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4uiv>
	<uniformBlockBinding public="1" get="inline" set="null" line="2987" static="1">
		<f a="this:program:uniformBlockIndex:uniformBlockBinding">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformBlockBinding>
	<uniformMatrix2fv public="1" get="inline" set="null" line="2994" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2fv>
	<uniformMatrix2x3fv public="1" get="inline" set="null" line="3001" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2x3fv>
	<uniformMatrix2x4fv public="1" get="inline" set="null" line="3008" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2x4fv>
	<uniformMatrix3fv public="1" get="inline" set="null" line="3015" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3fv>
	<uniformMatrix3x2fv public="1" get="inline" set="null" line="3022" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3x2fv>
	<uniformMatrix3x4fv public="1" get="inline" set="null" line="3029" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3x4fv>
	<uniformMatrix4fv public="1" get="inline" set="null" line="3036" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4fv>
	<uniformMatrix4x2fv public="1" get="inline" set="null" line="3043" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4x2fv>
	<uniformMatrix4x3fv public="1" get="inline" set="null" line="3050" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4x3fv>
	<unmapBuffer public="1" get="inline" set="null" line="3057" static="1">
		<f a="this:target">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</unmapBuffer>
	<useProgram public="1" get="inline" set="null" line="3064" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</useProgram>
	<validateProgram public="1" get="inline" set="null" line="3071" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</validateProgram>
	<vertexAttrib1f public="1" get="inline" set="null" line="3078" static="1">
		<f a="this:indx:x">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1f>
	<vertexAttrib1fv public="1" get="inline" set="null" line="3085" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1fv>
	<vertexAttrib2f public="1" get="inline" set="null" line="3092" static="1">
		<f a="this:indx:x:y">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2f>
	<vertexAttrib2fv public="1" get="inline" set="null" line="3099" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2fv>
	<vertexAttrib3f public="1" get="inline" set="null" line="3106" static="1">
		<f a="this:indx:x:y:z">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3f>
	<vertexAttrib3fv public="1" get="inline" set="null" line="3113" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3fv>
	<vertexAttrib4f public="1" get="inline" set="null" line="3120" static="1">
		<f a="this:indx:x:y:z:w">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4f>
	<vertexAttrib4fv public="1" get="inline" set="null" line="3127" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4fv>
	<vertexAttribDivisor public="1" get="inline" set="null" line="3134" static="1">
		<f a="this:index:divisor">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribDivisor>
	<vertexAttribI4i public="1" get="inline" set="null" line="3141" static="1">
		<f a="this:indx:x:y:z:w">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4i>
	<vertexAttribI4iv public="1" get="inline" set="null" line="3148" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4iv>
	<vertexAttribI4ui public="1" get="inline" set="null" line="3155" static="1">
		<f a="this:indx:x:y:z:w">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4ui>
	<vertexAttribI4uiv public="1" get="inline" set="null" line="3162" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4uiv>
	<vertexAttribIPointer public="1" get="inline" set="null" line="3169" static="1">
		<f a="this:indx:size:type:stride:pointer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribIPointer>
	<vertexAttribPointer public="1" get="inline" set="null" line="3176" static="1">
		<f a="this:indx:size:type:normalized:stride:pointer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribPointer>
	<viewport public="1" get="inline" set="null" line="3183" static="1">
		<f a="this:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</viewport>
	<waitSync public="1" get="inline" set="null" line="3190" static="1">
		<f a="this:sync:flags:timeout">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</waitSync>
	<fromGL set="method" line="3197" static="1">
		<f a="gl">
			<d/>
			<x path="lime.graphics.opengl.GLES3Context"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.opengl._GLES3Context.GLES3Context_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLES3Context.hx" private="1" module="lime.graphics.opengl.GLES3Context">
		<__extensions static="1"><c path="String"/></__extensions>
		<EXTENSIONS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</EXTENSIONS>
		<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POINTS>
		<LINES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINES>
		<LINE_LOOP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ZERO>
		<ONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE>
		<SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT>
		<BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_AND_BACK>
		<CULL_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE>
		<BLEND public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND>
		<DITHER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DITHER>
		<STENCIL_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OUT_OF_MEMORY>
		<CW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CW>
		<CCW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CCW>
		<LINE_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_BITS>
		<GREEN_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_INVERT>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DONT_CARE>
		<FASTEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FASTEST>
		<NICEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT>
		<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT>
		<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA>
		<RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB>
		<RGBA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA>
		<LUMINANCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEVER>
		<LESS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LESS>
		<EQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</EQUAL>
		<LEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LEQUAL>
		<GREATER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREATER>
		<NOTEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GEQUAL>
		<ALWAYS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALWAYS>
		<KEEP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</KEEP>
		<REPLACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPLACE>
		<INCR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR>
		<DECR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR>
		<INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVERT>
		<INCR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR_WRAP>
		<VENDOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VENDOR>
		<RENDERER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERER>
		<VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERSION>
		<NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST>
		<LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D>
		<TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC4>
		<BOOL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<VERTEX_PROGRAM_POINT_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_PROGRAM_POINT_SIZE>
		<POINT_SPRITE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POINT_SPRITE>
		<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPILE_STATUS>
		<LOW_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA4>
		<RGB5_A1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB5_A1>
		<RGB565 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BROWSER_DEFAULT_WEBGL>
		<READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENT_INDEX>
		<RED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED>
		<RGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8>
		<RGBA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8>
		<RGB10_A2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2>
		<TEXTURE_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_3D>
		<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_FUNC>
		<SRGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB>
		<SRGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8>
		<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32F>
		<RGB32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32F>
		<RGBA16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16F>
		<RGB16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16F>
		<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R11F_G11F_B10F>
		<RGB9_E5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB9_E5>
		<RGBA32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32UI>
		<RGB32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32UI>
		<RGBA16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16UI>
		<RGB16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16UI>
		<RGBA8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8UI>
		<RGB8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8UI>
		<RGBA32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32I>
		<RGB32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32I>
		<RGBA16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16I>
		<RGB16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16I>
		<RGBA8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8I>
		<RGB8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8I>
		<RED_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_INTEGER>
		<RGB_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB_INTEGER>
		<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA_INTEGER>
		<R8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8>
		<RG8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8>
		<R16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16F>
		<R32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32F>
		<RG16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16F>
		<RG32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32F>
		<R8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8I>
		<R8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8UI>
		<R16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16I>
		<R16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16UI>
		<R32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32I>
		<R32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32UI>
		<RG8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8I>
		<RG8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8UI>
		<RG16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16I>
		<RG16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16UI>
		<RG32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32I>
		<RG32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32UI>
		<R8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8_SNORM>
		<RG8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8_SNORM>
		<RGB8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8_SNORM>
		<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8_SNORM>
		<RGB10_A2UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HALF_FLOAT>
		<RG public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG>
		<RG_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG_INTEGER>
		<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_QUERY>
		<QUERY_RESULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SAMPLES>
		<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_TYPE>
		<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OBJECT_TYPE>
		<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_CONDITION>
		<SYNC_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_STATUS>
		<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLAGS>
		<SYNC_FENCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNALED>
		<SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNALED>
		<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONDITION_SATISFIED>
		<WAIT_FAILED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR>
		<DEPTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH>
		<STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL>
		<MIN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN>
		<MAX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX>
		<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT24>
		<STREAM_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_READ>
		<STREAM_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_COPY>
		<STATIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_READ>
		<STATIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_COPY>
		<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_READ>
		<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_INDEX>
		<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<type public="1" get="accessor" set="null" static="1">
			<e path="lime.graphics.opengl.GLContextType"/>
			<meta><m n=":impl"/></meta>
		</type>
		<version public="1" get="accessor" set="null" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</version>
		<get_EXTENSIONS get="inline" set="null" line="645" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_EXTENSIONS>
		<get_DEPTH_BUFFER_BIT get="inline" set="null" line="646" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_BUFFER_BIT>
		<get_STENCIL_BUFFER_BIT get="inline" set="null" line="647" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BUFFER_BIT>
		<get_COLOR_BUFFER_BIT get="inline" set="null" line="648" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_BUFFER_BIT>
		<get_POINTS get="inline" set="null" line="649" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_POINTS>
		<get_LINES get="inline" set="null" line="650" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINES>
		<get_LINE_LOOP get="inline" set="null" line="651" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINE_LOOP>
		<get_LINE_STRIP get="inline" set="null" line="652" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINE_STRIP>
		<get_TRIANGLES get="inline" set="null" line="653" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRIANGLES>
		<get_TRIANGLE_STRIP get="inline" set="null" line="654" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRIANGLE_STRIP>
		<get_TRIANGLE_FAN get="inline" set="null" line="655" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRIANGLE_FAN>
		<get_ZERO get="inline" set="null" line="656" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ZERO>
		<get_ONE get="inline" set="null" line="657" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE>
		<get_SRC_COLOR get="inline" set="null" line="658" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRC_COLOR>
		<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="659" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_SRC_COLOR>
		<get_SRC_ALPHA get="inline" set="null" line="660" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRC_ALPHA>
		<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="661" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_SRC_ALPHA>
		<get_DST_ALPHA get="inline" set="null" line="662" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DST_ALPHA>
		<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="663" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_DST_ALPHA>
		<get_DST_COLOR get="inline" set="null" line="664" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DST_COLOR>
		<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="665" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_DST_COLOR>
		<get_SRC_ALPHA_SATURATE get="inline" set="null" line="666" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRC_ALPHA_SATURATE>
		<get_FUNC_ADD get="inline" set="null" line="667" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FUNC_ADD>
		<get_BLEND_EQUATION get="inline" set="null" line="668" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_EQUATION>
		<get_BLEND_EQUATION_RGB get="inline" set="null" line="669" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_EQUATION_RGB>
		<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="670" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_EQUATION_ALPHA>
		<get_FUNC_SUBTRACT get="inline" set="null" line="671" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FUNC_SUBTRACT>
		<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="672" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FUNC_REVERSE_SUBTRACT>
		<get_BLEND_DST_RGB get="inline" set="null" line="673" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_DST_RGB>
		<get_BLEND_SRC_RGB get="inline" set="null" line="674" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_SRC_RGB>
		<get_BLEND_DST_ALPHA get="inline" set="null" line="675" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_DST_ALPHA>
		<get_BLEND_SRC_ALPHA get="inline" set="null" line="676" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_SRC_ALPHA>
		<get_CONSTANT_COLOR get="inline" set="null" line="677" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CONSTANT_COLOR>
		<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="678" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_CONSTANT_COLOR>
		<get_CONSTANT_ALPHA get="inline" set="null" line="679" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CONSTANT_ALPHA>
		<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="680" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_CONSTANT_ALPHA>
		<get_BLEND_COLOR get="inline" set="null" line="681" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_COLOR>
		<get_ARRAY_BUFFER get="inline" set="null" line="682" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ARRAY_BUFFER>
		<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="683" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ELEMENT_ARRAY_BUFFER>
		<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="684" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ARRAY_BUFFER_BINDING>
		<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="685" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ELEMENT_ARRAY_BUFFER_BINDING>
		<get_STREAM_DRAW get="inline" set="null" line="686" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STREAM_DRAW>
		<get_STATIC_DRAW get="inline" set="null" line="687" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STATIC_DRAW>
		<get_DYNAMIC_DRAW get="inline" set="null" line="688" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DYNAMIC_DRAW>
		<get_BUFFER_SIZE get="inline" set="null" line="689" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BUFFER_SIZE>
		<get_BUFFER_USAGE get="inline" set="null" line="690" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BUFFER_USAGE>
		<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="691" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CURRENT_VERTEX_ATTRIB>
		<get_FRONT get="inline" set="null" line="692" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRONT>
		<get_BACK get="inline" set="null" line="693" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BACK>
		<get_FRONT_AND_BACK get="inline" set="null" line="694" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRONT_AND_BACK>
		<get_CULL_FACE get="inline" set="null" line="695" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CULL_FACE>
		<get_BLEND get="inline" set="null" line="696" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND>
		<get_DITHER get="inline" set="null" line="697" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DITHER>
		<get_STENCIL_TEST get="inline" set="null" line="698" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_TEST>
		<get_DEPTH_TEST get="inline" set="null" line="699" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_TEST>
		<get_SCISSOR_TEST get="inline" set="null" line="700" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SCISSOR_TEST>
		<get_POLYGON_OFFSET_FILL get="inline" set="null" line="701" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_POLYGON_OFFSET_FILL>
		<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="702" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_ALPHA_TO_COVERAGE>
		<get_SAMPLE_COVERAGE get="inline" set="null" line="703" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_COVERAGE>
		<get_NO_ERROR get="inline" set="null" line="704" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NO_ERROR>
		<get_INVALID_ENUM get="inline" set="null" line="705" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_ENUM>
		<get_INVALID_VALUE get="inline" set="null" line="706" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_VALUE>
		<get_INVALID_OPERATION get="inline" set="null" line="707" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_OPERATION>
		<get_OUT_OF_MEMORY get="inline" set="null" line="708" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_OUT_OF_MEMORY>
		<get_CW get="inline" set="null" line="709" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CW>
		<get_CCW get="inline" set="null" line="710" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CCW>
		<get_LINE_WIDTH get="inline" set="null" line="711" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINE_WIDTH>
		<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="712" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALIASED_POINT_SIZE_RANGE>
		<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="713" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALIASED_LINE_WIDTH_RANGE>
		<get_CULL_FACE_MODE get="inline" set="null" line="714" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CULL_FACE_MODE>
		<get_FRONT_FACE get="inline" set="null" line="715" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRONT_FACE>
		<get_DEPTH_RANGE get="inline" set="null" line="716" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_RANGE>
		<get_DEPTH_WRITEMASK get="inline" set="null" line="717" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_WRITEMASK>
		<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="718" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_CLEAR_VALUE>
		<get_DEPTH_FUNC get="inline" set="null" line="719" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_FUNC>
		<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="720" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_CLEAR_VALUE>
		<get_STENCIL_FUNC get="inline" set="null" line="721" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_FUNC>
		<get_STENCIL_FAIL get="inline" set="null" line="722" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_FAIL>
		<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="723" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_PASS_DEPTH_FAIL>
		<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="724" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_PASS_DEPTH_PASS>
		<get_STENCIL_REF get="inline" set="null" line="725" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_REF>
		<get_STENCIL_VALUE_MASK get="inline" set="null" line="726" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_VALUE_MASK>
		<get_STENCIL_WRITEMASK get="inline" set="null" line="727" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_WRITEMASK>
		<get_STENCIL_BACK_FUNC get="inline" set="null" line="728" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_FUNC>
		<get_STENCIL_BACK_FAIL get="inline" set="null" line="729" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="730" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_PASS_DEPTH_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="731" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_PASS_DEPTH_PASS>
		<get_STENCIL_BACK_REF get="inline" set="null" line="732" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_REF>
		<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="733" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_VALUE_MASK>
		<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="734" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_WRITEMASK>
		<get_VIEWPORT get="inline" set="null" line="735" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VIEWPORT>
		<get_SCISSOR_BOX get="inline" set="null" line="736" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SCISSOR_BOX>
		<get_COLOR_CLEAR_VALUE get="inline" set="null" line="737" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_CLEAR_VALUE>
		<get_COLOR_WRITEMASK get="inline" set="null" line="738" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_WRITEMASK>
		<get_UNPACK_ALIGNMENT get="inline" set="null" line="739" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_ALIGNMENT>
		<get_PACK_ALIGNMENT get="inline" set="null" line="740" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PACK_ALIGNMENT>
		<get_MAX_TEXTURE_SIZE get="inline" set="null" line="741" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TEXTURE_SIZE>
		<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="742" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VIEWPORT_DIMS>
		<get_SUBPIXEL_BITS get="inline" set="null" line="743" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SUBPIXEL_BITS>
		<get_RED_BITS get="inline" set="null" line="744" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RED_BITS>
		<get_GREEN_BITS get="inline" set="null" line="745" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_GREEN_BITS>
		<get_BLUE_BITS get="inline" set="null" line="746" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLUE_BITS>
		<get_ALPHA_BITS get="inline" set="null" line="747" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALPHA_BITS>
		<get_DEPTH_BITS get="inline" set="null" line="748" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_BITS>
		<get_STENCIL_BITS get="inline" set="null" line="749" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BITS>
		<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="750" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_POLYGON_OFFSET_UNITS>
		<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="751" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_POLYGON_OFFSET_FACTOR>
		<get_TEXTURE_BINDING_2D get="inline" set="null" line="752" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BINDING_2D>
		<get_SAMPLE_BUFFERS get="inline" set="null" line="753" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_BUFFERS>
		<get_SAMPLES get="inline" set="null" line="754" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLES>
		<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="755" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_COVERAGE_VALUE>
		<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="756" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_COVERAGE_INVERT>
		<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="757" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COMPRESSED_TEXTURE_FORMATS>
		<get_DONT_CARE get="inline" set="null" line="758" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DONT_CARE>
		<get_FASTEST get="inline" set="null" line="759" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FASTEST>
		<get_NICEST get="inline" set="null" line="760" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NICEST>
		<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="761" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_GENERATE_MIPMAP_HINT>
		<get_BYTE get="inline" set="null" line="762" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BYTE>
		<get_UNSIGNED_BYTE get="inline" set="null" line="763" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_BYTE>
		<get_SHORT get="inline" set="null" line="764" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SHORT>
		<get_UNSIGNED_SHORT get="inline" set="null" line="765" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_SHORT>
		<get_INT get="inline" set="null" line="766" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT>
		<get_UNSIGNED_INT get="inline" set="null" line="767" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT>
		<get_FLOAT get="inline" set="null" line="768" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT>
		<get_DEPTH_COMPONENT get="inline" set="null" line="769" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_COMPONENT>
		<get_ALPHA get="inline" set="null" line="770" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALPHA>
		<get_RGB get="inline" set="null" line="771" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB>
		<get_RGBA get="inline" set="null" line="772" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA>
		<get_LUMINANCE get="inline" set="null" line="773" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LUMINANCE>
		<get_LUMINANCE_ALPHA get="inline" set="null" line="774" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LUMINANCE_ALPHA>
		<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="775" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_SHORT_4_4_4_4>
		<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="776" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_SHORT_5_5_5_1>
		<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="777" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_SHORT_5_6_5>
		<get_FRAGMENT_SHADER get="inline" set="null" line="778" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAGMENT_SHADER>
		<get_VERTEX_SHADER get="inline" set="null" line="779" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_SHADER>
		<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="780" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_ATTRIBS>
		<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="781" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_UNIFORM_VECTORS>
		<get_MAX_VARYING_VECTORS get="inline" set="null" line="782" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VARYING_VECTORS>
		<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="783" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="784" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="785" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TEXTURE_IMAGE_UNITS>
		<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="786" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_FRAGMENT_UNIFORM_VECTORS>
		<get_SHADER_TYPE get="inline" set="null" line="787" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SHADER_TYPE>
		<get_DELETE_STATUS get="inline" set="null" line="788" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DELETE_STATUS>
		<get_LINK_STATUS get="inline" set="null" line="789" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINK_STATUS>
		<get_VALIDATE_STATUS get="inline" set="null" line="790" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VALIDATE_STATUS>
		<get_ATTACHED_SHADERS get="inline" set="null" line="791" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ATTACHED_SHADERS>
		<get_ACTIVE_UNIFORMS get="inline" set="null" line="792" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ACTIVE_UNIFORMS>
		<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="793" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ACTIVE_ATTRIBUTES>
		<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="794" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SHADING_LANGUAGE_VERSION>
		<get_CURRENT_PROGRAM get="inline" set="null" line="795" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CURRENT_PROGRAM>
		<get_NEVER get="inline" set="null" line="796" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NEVER>
		<get_LESS get="inline" set="null" line="797" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LESS>
		<get_EQUAL get="inline" set="null" line="798" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_EQUAL>
		<get_LEQUAL get="inline" set="null" line="799" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LEQUAL>
		<get_GREATER get="inline" set="null" line="800" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_GREATER>
		<get_NOTEQUAL get="inline" set="null" line="801" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NOTEQUAL>
		<get_GEQUAL get="inline" set="null" line="802" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_GEQUAL>
		<get_ALWAYS get="inline" set="null" line="803" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALWAYS>
		<get_KEEP get="inline" set="null" line="804" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_KEEP>
		<get_REPLACE get="inline" set="null" line="805" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_REPLACE>
		<get_INCR get="inline" set="null" line="806" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INCR>
		<get_DECR get="inline" set="null" line="807" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DECR>
		<get_INVERT get="inline" set="null" line="808" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVERT>
		<get_INCR_WRAP get="inline" set="null" line="809" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INCR_WRAP>
		<get_DECR_WRAP get="inline" set="null" line="810" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DECR_WRAP>
		<get_VENDOR get="inline" set="null" line="811" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VENDOR>
		<get_RENDERER get="inline" set="null" line="812" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERER>
		<get_VERSION get="inline" set="null" line="813" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERSION>
		<get_NEAREST get="inline" set="null" line="814" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NEAREST>
		<get_LINEAR get="inline" set="null" line="815" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINEAR>
		<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="816" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NEAREST_MIPMAP_NEAREST>
		<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="817" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINEAR_MIPMAP_NEAREST>
		<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="818" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NEAREST_MIPMAP_LINEAR>
		<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="819" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINEAR_MIPMAP_LINEAR>
		<get_TEXTURE_MAG_FILTER get="inline" set="null" line="820" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MAG_FILTER>
		<get_TEXTURE_MIN_FILTER get="inline" set="null" line="821" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MIN_FILTER>
		<get_TEXTURE_WRAP_S get="inline" set="null" line="822" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_WRAP_S>
		<get_TEXTURE_WRAP_T get="inline" set="null" line="823" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_WRAP_T>
		<get_TEXTURE_2D get="inline" set="null" line="824" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_2D>
		<get_TEXTURE get="inline" set="null" line="825" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE>
		<get_TEXTURE_CUBE_MAP get="inline" set="null" line="826" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP>
		<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="827" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BINDING_CUBE_MAP>
		<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="828" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_X>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="829" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="830" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="831" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="832" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="833" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="834" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_CUBE_MAP_TEXTURE_SIZE>
		<get_TEXTURE0 get="inline" set="null" line="835" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE0>
		<get_TEXTURE1 get="inline" set="null" line="836" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE1>
		<get_TEXTURE2 get="inline" set="null" line="837" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE2>
		<get_TEXTURE3 get="inline" set="null" line="838" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE3>
		<get_TEXTURE4 get="inline" set="null" line="839" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE4>
		<get_TEXTURE5 get="inline" set="null" line="840" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE5>
		<get_TEXTURE6 get="inline" set="null" line="841" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE6>
		<get_TEXTURE7 get="inline" set="null" line="842" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE7>
		<get_TEXTURE8 get="inline" set="null" line="843" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE8>
		<get_TEXTURE9 get="inline" set="null" line="844" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE9>
		<get_TEXTURE10 get="inline" set="null" line="845" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE10>
		<get_TEXTURE11 get="inline" set="null" line="846" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE11>
		<get_TEXTURE12 get="inline" set="null" line="847" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE12>
		<get_TEXTURE13 get="inline" set="null" line="848" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE13>
		<get_TEXTURE14 get="inline" set="null" line="849" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE14>
		<get_TEXTURE15 get="inline" set="null" line="850" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE15>
		<get_TEXTURE16 get="inline" set="null" line="851" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE16>
		<get_TEXTURE17 get="inline" set="null" line="852" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE17>
		<get_TEXTURE18 get="inline" set="null" line="853" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE18>
		<get_TEXTURE19 get="inline" set="null" line="854" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE19>
		<get_TEXTURE20 get="inline" set="null" line="855" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE20>
		<get_TEXTURE21 get="inline" set="null" line="856" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE21>
		<get_TEXTURE22 get="inline" set="null" line="857" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE22>
		<get_TEXTURE23 get="inline" set="null" line="858" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE23>
		<get_TEXTURE24 get="inline" set="null" line="859" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE24>
		<get_TEXTURE25 get="inline" set="null" line="860" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE25>
		<get_TEXTURE26 get="inline" set="null" line="861" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE26>
		<get_TEXTURE27 get="inline" set="null" line="862" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE27>
		<get_TEXTURE28 get="inline" set="null" line="863" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE28>
		<get_TEXTURE29 get="inline" set="null" line="864" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE29>
		<get_TEXTURE30 get="inline" set="null" line="865" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE30>
		<get_TEXTURE31 get="inline" set="null" line="866" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE31>
		<get_ACTIVE_TEXTURE get="inline" set="null" line="867" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ACTIVE_TEXTURE>
		<get_REPEAT get="inline" set="null" line="868" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_REPEAT>
		<get_CLAMP_TO_EDGE get="inline" set="null" line="869" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CLAMP_TO_EDGE>
		<get_MIRRORED_REPEAT get="inline" set="null" line="870" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MIRRORED_REPEAT>
		<get_FLOAT_VEC2 get="inline" set="null" line="871" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_VEC2>
		<get_FLOAT_VEC3 get="inline" set="null" line="872" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_VEC3>
		<get_FLOAT_VEC4 get="inline" set="null" line="873" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_VEC4>
		<get_INT_VEC2 get="inline" set="null" line="874" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_VEC2>
		<get_INT_VEC3 get="inline" set="null" line="875" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_VEC3>
		<get_INT_VEC4 get="inline" set="null" line="876" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_VEC4>
		<get_BOOL get="inline" set="null" line="877" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BOOL>
		<get_BOOL_VEC2 get="inline" set="null" line="878" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BOOL_VEC2>
		<get_BOOL_VEC3 get="inline" set="null" line="879" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BOOL_VEC3>
		<get_BOOL_VEC4 get="inline" set="null" line="880" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BOOL_VEC4>
		<get_FLOAT_MAT2 get="inline" set="null" line="881" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT2>
		<get_FLOAT_MAT3 get="inline" set="null" line="882" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT3>
		<get_FLOAT_MAT4 get="inline" set="null" line="883" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT4>
		<get_SAMPLER_2D get="inline" set="null" line="884" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_2D>
		<get_SAMPLER_CUBE get="inline" set="null" line="885" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_CUBE>
		<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="886" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_ENABLED>
		<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="887" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_SIZE>
		<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="888" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_STRIDE>
		<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="889" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_TYPE>
		<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="890" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="891" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_POINTER>
		<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="892" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<get_VERTEX_PROGRAM_POINT_SIZE get="inline" set="null" line="893" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_PROGRAM_POINT_SIZE>
		<get_POINT_SPRITE get="inline" set="null" line="894" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_POINT_SPRITE>
		<get_COMPILE_STATUS get="inline" set="null" line="895" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COMPILE_STATUS>
		<get_LOW_FLOAT get="inline" set="null" line="896" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LOW_FLOAT>
		<get_MEDIUM_FLOAT get="inline" set="null" line="897" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MEDIUM_FLOAT>
		<get_HIGH_FLOAT get="inline" set="null" line="898" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_HIGH_FLOAT>
		<get_LOW_INT get="inline" set="null" line="899" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LOW_INT>
		<get_MEDIUM_INT get="inline" set="null" line="900" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MEDIUM_INT>
		<get_HIGH_INT get="inline" set="null" line="901" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_HIGH_INT>
		<get_FRAMEBUFFER get="inline" set="null" line="902" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER>
		<get_RENDERBUFFER get="inline" set="null" line="903" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER>
		<get_RGBA4 get="inline" set="null" line="904" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA4>
		<get_RGB5_A1 get="inline" set="null" line="905" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB5_A1>
		<get_RGB565 get="inline" set="null" line="906" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB565>
		<get_DEPTH_COMPONENT16 get="inline" set="null" line="907" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_COMPONENT16>
		<get_STENCIL_INDEX get="inline" set="null" line="908" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_INDEX>
		<get_STENCIL_INDEX8 get="inline" set="null" line="909" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_INDEX8>
		<get_DEPTH_STENCIL get="inline" set="null" line="910" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_STENCIL>
		<get_RENDERBUFFER_WIDTH get="inline" set="null" line="911" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_WIDTH>
		<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="912" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_HEIGHT>
		<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="913" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_INTERNAL_FORMAT>
		<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="914" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_RED_SIZE>
		<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="915" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_GREEN_SIZE>
		<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="916" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_BLUE_SIZE>
		<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="917" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_ALPHA_SIZE>
		<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="918" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_DEPTH_SIZE>
		<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="919" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_STENCIL_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="920" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="921" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="922" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="923" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<get_COLOR_ATTACHMENT0 get="inline" set="null" line="924" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT0>
		<get_DEPTH_ATTACHMENT get="inline" set="null" line="925" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_ATTACHMENT>
		<get_STENCIL_ATTACHMENT get="inline" set="null" line="926" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_ATTACHMENT>
		<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="927" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_STENCIL_ATTACHMENT>
		<get_NONE get="inline" set="null" line="928" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NONE>
		<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="929" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_COMPLETE>
		<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="930" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="931" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="932" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="933" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_UNSUPPORTED>
		<get_FRAMEBUFFER_BINDING get="inline" set="null" line="934" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_BINDING get="inline" set="null" line="935" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_BINDING>
		<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="936" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_RENDERBUFFER_SIZE>
		<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="937" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_FRAMEBUFFER_OPERATION>
		<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="938" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_FLIP_Y_WEBGL>
		<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="939" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="940" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CONTEXT_LOST_WEBGL>
		<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="941" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="942" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BROWSER_DEFAULT_WEBGL>
		<get_type get="inline" set="null" line="943" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<e path="lime.graphics.opengl.GLContextType"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_type>
		<get_version get="inline" set="null" line="944" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_version>
		<get_READ_BUFFER get="inline" set="null" line="946" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_READ_BUFFER>
		<get_UNPACK_ROW_LENGTH get="inline" set="null" line="947" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_ROW_LENGTH>
		<get_UNPACK_SKIP_ROWS get="inline" set="null" line="948" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_SKIP_ROWS>
		<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="949" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_SKIP_PIXELS>
		<get_PACK_ROW_LENGTH get="inline" set="null" line="950" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PACK_ROW_LENGTH>
		<get_PACK_SKIP_ROWS get="inline" set="null" line="951" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PACK_SKIP_ROWS>
		<get_PACK_SKIP_PIXELS get="inline" set="null" line="952" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PACK_SKIP_PIXELS>
		<get_TEXTURE_BINDING_3D get="inline" set="null" line="953" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BINDING_3D>
		<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="954" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_SKIP_IMAGES>
		<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="955" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_IMAGE_HEIGHT>
		<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="956" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_3D_TEXTURE_SIZE>
		<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="957" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_ELEMENTS_VERTICES>
		<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="958" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_ELEMENTS_INDICES>
		<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="959" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TEXTURE_LOD_BIAS>
		<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="960" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="961" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="962" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_ARRAY_TEXTURE_LAYERS>
		<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="963" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MIN_PROGRAM_TEXEL_OFFSET>
		<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="964" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_PROGRAM_TEXEL_OFFSET>
		<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="965" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VARYING_COMPONENTS>
		<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="966" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
		<get_RASTERIZER_DISCARD get="inline" set="null" line="967" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RASTERIZER_DISCARD>
		<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="968" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ARRAY_BINDING>
		<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="969" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_OUTPUT_COMPONENTS>
		<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="970" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_FRAGMENT_INPUT_COMPONENTS>
		<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="971" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_SERVER_WAIT_TIMEOUT>
		<get_MAX_ELEMENT_INDEX get="inline" set="null" line="972" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_ELEMENT_INDEX>
		<get_RED get="inline" set="null" line="974" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RED>
		<get_RGB8 get="inline" set="null" line="975" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB8>
		<get_RGBA8 get="inline" set="null" line="976" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA8>
		<get_RGB10_A2 get="inline" set="null" line="977" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB10_A2>
		<get_TEXTURE_3D get="inline" set="null" line="978" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_3D>
		<get_TEXTURE_WRAP_R get="inline" set="null" line="979" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_WRAP_R>
		<get_TEXTURE_MIN_LOD get="inline" set="null" line="980" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MIN_LOD>
		<get_TEXTURE_MAX_LOD get="inline" set="null" line="981" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MAX_LOD>
		<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="982" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BASE_LEVEL>
		<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="983" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MAX_LEVEL>
		<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="984" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_COMPARE_MODE>
		<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="985" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_COMPARE_FUNC>
		<get_SRGB get="inline" set="null" line="986" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRGB>
		<get_SRGB8 get="inline" set="null" line="987" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRGB8>
		<get_SRGB8_ALPHA8 get="inline" set="null" line="988" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRGB8_ALPHA8>
		<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="989" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COMPARE_REF_TO_TEXTURE>
		<get_RGBA32F get="inline" set="null" line="990" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA32F>
		<get_RGB32F get="inline" set="null" line="991" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB32F>
		<get_RGBA16F get="inline" set="null" line="992" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA16F>
		<get_RGB16F get="inline" set="null" line="993" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB16F>
		<get_TEXTURE_2D_ARRAY get="inline" set="null" line="994" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_2D_ARRAY>
		<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="995" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BINDING_2D_ARRAY>
		<get_R11F_G11F_B10F get="inline" set="null" line="996" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R11F_G11F_B10F>
		<get_RGB9_E5 get="inline" set="null" line="997" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB9_E5>
		<get_RGBA32UI get="inline" set="null" line="998" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA32UI>
		<get_RGB32UI get="inline" set="null" line="999" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB32UI>
		<get_RGBA16UI get="inline" set="null" line="1000" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA16UI>
		<get_RGB16UI get="inline" set="null" line="1001" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB16UI>
		<get_RGBA8UI get="inline" set="null" line="1002" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA8UI>
		<get_RGB8UI get="inline" set="null" line="1003" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB8UI>
		<get_RGBA32I get="inline" set="null" line="1004" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA32I>
		<get_RGB32I get="inline" set="null" line="1005" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB32I>
		<get_RGBA16I get="inline" set="null" line="1006" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA16I>
		<get_RGB16I get="inline" set="null" line="1007" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB16I>
		<get_RGBA8I get="inline" set="null" line="1008" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA8I>
		<get_RGB8I get="inline" set="null" line="1009" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB8I>
		<get_RED_INTEGER get="inline" set="null" line="1010" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RED_INTEGER>
		<get_RGB_INTEGER get="inline" set="null" line="1011" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB_INTEGER>
		<get_RGBA_INTEGER get="inline" set="null" line="1012" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA_INTEGER>
		<get_R8 get="inline" set="null" line="1013" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R8>
		<get_RG8 get="inline" set="null" line="1014" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG8>
		<get_R16F get="inline" set="null" line="1015" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R16F>
		<get_R32F get="inline" set="null" line="1016" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R32F>
		<get_RG16F get="inline" set="null" line="1017" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG16F>
		<get_RG32F get="inline" set="null" line="1018" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG32F>
		<get_R8I get="inline" set="null" line="1019" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R8I>
		<get_R8UI get="inline" set="null" line="1020" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R8UI>
		<get_R16I get="inline" set="null" line="1021" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R16I>
		<get_R16UI get="inline" set="null" line="1022" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R16UI>
		<get_R32I get="inline" set="null" line="1023" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R32I>
		<get_R32UI get="inline" set="null" line="1024" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R32UI>
		<get_RG8I get="inline" set="null" line="1025" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG8I>
		<get_RG8UI get="inline" set="null" line="1026" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG8UI>
		<get_RG16I get="inline" set="null" line="1027" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG16I>
		<get_RG16UI get="inline" set="null" line="1028" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG16UI>
		<get_RG32I get="inline" set="null" line="1029" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG32I>
		<get_RG32UI get="inline" set="null" line="1030" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG32UI>
		<get_R8_SNORM get="inline" set="null" line="1031" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R8_SNORM>
		<get_RG8_SNORM get="inline" set="null" line="1032" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG8_SNORM>
		<get_RGB8_SNORM get="inline" set="null" line="1033" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB8_SNORM>
		<get_RGBA8_SNORM get="inline" set="null" line="1034" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA8_SNORM>
		<get_RGB10_A2UI get="inline" set="null" line="1035" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB10_A2UI>
		<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="1036" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_IMMUTABLE_FORMAT>
		<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="1037" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_IMMUTABLE_LEVELS>
		<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="1039" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_2_10_10_10_REV>
		<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="1040" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_10F_11F_11F_REV>
		<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="1041" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_5_9_9_9_REV>
		<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="1042" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
		<get_UNSIGNED_INT_24_8 get="inline" set="null" line="1043" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_24_8>
		<get_HALF_FLOAT get="inline" set="null" line="1044" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_HALF_FLOAT>
		<get_RG get="inline" set="null" line="1045" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG>
		<get_RG_INTEGER get="inline" set="null" line="1046" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG_INTEGER>
		<get_INT_2_10_10_10_REV get="inline" set="null" line="1047" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_2_10_10_10_REV>
		<get_CURRENT_QUERY get="inline" set="null" line="1049" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CURRENT_QUERY>
		<get_QUERY_RESULT get="inline" set="null" line="1050" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_QUERY_RESULT>
		<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="1051" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_QUERY_RESULT_AVAILABLE>
		<get_ANY_SAMPLES_PASSED get="inline" set="null" line="1052" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ANY_SAMPLES_PASSED>
		<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="1053" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
		<get_MAX_DRAW_BUFFERS get="inline" set="null" line="1055" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_DRAW_BUFFERS>
		<get_DRAW_BUFFER0 get="inline" set="null" line="1056" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER0>
		<get_DRAW_BUFFER1 get="inline" set="null" line="1057" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER1>
		<get_DRAW_BUFFER2 get="inline" set="null" line="1058" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER2>
		<get_DRAW_BUFFER3 get="inline" set="null" line="1059" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER3>
		<get_DRAW_BUFFER4 get="inline" set="null" line="1060" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER4>
		<get_DRAW_BUFFER5 get="inline" set="null" line="1061" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER5>
		<get_DRAW_BUFFER6 get="inline" set="null" line="1062" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER6>
		<get_DRAW_BUFFER7 get="inline" set="null" line="1063" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER7>
		<get_DRAW_BUFFER8 get="inline" set="null" line="1064" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER8>
		<get_DRAW_BUFFER9 get="inline" set="null" line="1065" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER9>
		<get_DRAW_BUFFER10 get="inline" set="null" line="1066" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER10>
		<get_DRAW_BUFFER11 get="inline" set="null" line="1067" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER11>
		<get_DRAW_BUFFER12 get="inline" set="null" line="1068" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER12>
		<get_DRAW_BUFFER13 get="inline" set="null" line="1069" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER13>
		<get_DRAW_BUFFER14 get="inline" set="null" line="1070" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER14>
		<get_DRAW_BUFFER15 get="inline" set="null" line="1071" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER15>
		<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="1072" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COLOR_ATTACHMENTS>
		<get_COLOR_ATTACHMENT1 get="inline" set="null" line="1073" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT1>
		<get_COLOR_ATTACHMENT2 get="inline" set="null" line="1074" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT2>
		<get_COLOR_ATTACHMENT3 get="inline" set="null" line="1075" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT3>
		<get_COLOR_ATTACHMENT4 get="inline" set="null" line="1076" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT4>
		<get_COLOR_ATTACHMENT5 get="inline" set="null" line="1077" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT5>
		<get_COLOR_ATTACHMENT6 get="inline" set="null" line="1078" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT6>
		<get_COLOR_ATTACHMENT7 get="inline" set="null" line="1079" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT7>
		<get_COLOR_ATTACHMENT8 get="inline" set="null" line="1080" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT8>
		<get_COLOR_ATTACHMENT9 get="inline" set="null" line="1081" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT9>
		<get_COLOR_ATTACHMENT10 get="inline" set="null" line="1082" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT10>
		<get_COLOR_ATTACHMENT11 get="inline" set="null" line="1083" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT11>
		<get_COLOR_ATTACHMENT12 get="inline" set="null" line="1084" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT12>
		<get_COLOR_ATTACHMENT13 get="inline" set="null" line="1085" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT13>
		<get_COLOR_ATTACHMENT14 get="inline" set="null" line="1086" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT14>
		<get_COLOR_ATTACHMENT15 get="inline" set="null" line="1087" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT15>
		<get_SAMPLER_3D get="inline" set="null" line="1089" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_3D>
		<get_SAMPLER_2D_SHADOW get="inline" set="null" line="1090" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_2D_SHADOW>
		<get_SAMPLER_2D_ARRAY get="inline" set="null" line="1091" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_2D_ARRAY>
		<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="1092" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_2D_ARRAY_SHADOW>
		<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="1093" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_CUBE_SHADOW>
		<get_INT_SAMPLER_2D get="inline" set="null" line="1094" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_SAMPLER_2D>
		<get_INT_SAMPLER_3D get="inline" set="null" line="1095" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_SAMPLER_3D>
		<get_INT_SAMPLER_CUBE get="inline" set="null" line="1096" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_SAMPLER_CUBE>
		<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1097" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_SAMPLER_2D_ARRAY>
		<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="1098" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_SAMPLER_2D>
		<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="1099" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_SAMPLER_3D>
		<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="1100" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_SAMPLER_CUBE>
		<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1101" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<get_MAX_SAMPLES get="inline" set="null" line="1102" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_SAMPLES>
		<get_SAMPLER_BINDING get="inline" set="null" line="1103" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_BINDING>
		<get_PIXEL_PACK_BUFFER get="inline" set="null" line="1105" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PIXEL_PACK_BUFFER>
		<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="1106" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PIXEL_UNPACK_BUFFER>
		<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="1107" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PIXEL_PACK_BUFFER_BINDING>
		<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="1108" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PIXEL_UNPACK_BUFFER_BINDING>
		<get_COPY_READ_BUFFER get="inline" set="null" line="1109" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COPY_READ_BUFFER>
		<get_COPY_WRITE_BUFFER get="inline" set="null" line="1110" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COPY_WRITE_BUFFER>
		<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="1111" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COPY_READ_BUFFER_BINDING>
		<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="1112" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COPY_WRITE_BUFFER_BINDING>
		<get_FLOAT_MAT2x3 get="inline" set="null" line="1114" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT2x3>
		<get_FLOAT_MAT2x4 get="inline" set="null" line="1115" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT2x4>
		<get_FLOAT_MAT3x2 get="inline" set="null" line="1116" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT3x2>
		<get_FLOAT_MAT3x4 get="inline" set="null" line="1117" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT3x4>
		<get_FLOAT_MAT4x2 get="inline" set="null" line="1118" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT4x2>
		<get_FLOAT_MAT4x3 get="inline" set="null" line="1119" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT4x3>
		<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="1120" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_VEC2>
		<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="1121" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_VEC3>
		<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="1122" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_VEC4>
		<get_UNSIGNED_NORMALIZED get="inline" set="null" line="1123" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_NORMALIZED>
		<get_SIGNED_NORMALIZED get="inline" set="null" line="1124" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SIGNED_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="1126" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_INTEGER>
		<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="1127" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
		<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="1129" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="1130" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="1131" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_VARYINGS>
		<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="1132" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_START>
		<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="1133" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="1134" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="1135" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="1136" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="1137" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INTERLEAVED_ATTRIBS>
		<get_SEPARATE_ATTRIBS get="inline" set="null" line="1138" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SEPARATE_ATTRIBS>
		<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="1139" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER>
		<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="1140" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<get_TRANSFORM_FEEDBACK get="inline" set="null" line="1141" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK>
		<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="1142" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_PAUSED>
		<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="1143" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_ACTIVE>
		<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="1144" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BINDING>
		<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="1146" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="1147" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="1148" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="1149" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="1150" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="1151" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="1152" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="1153" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="1154" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_DEFAULT>
		<get_DEPTH24_STENCIL8 get="inline" set="null" line="1155" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH24_STENCIL8>
		<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="1156" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_FRAMEBUFFER_BINDING>
		<get_READ_FRAMEBUFFER get="inline" set="null" line="1157" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_READ_FRAMEBUFFER>
		<get_DRAW_FRAMEBUFFER get="inline" set="null" line="1158" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_FRAMEBUFFER>
		<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="1159" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_READ_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="1160" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_SAMPLES>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="1161" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="1162" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<get_UNIFORM_BUFFER get="inline" set="null" line="1164" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER>
		<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="1165" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER_BINDING>
		<get_UNIFORM_BUFFER_START get="inline" set="null" line="1166" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER_START>
		<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="1167" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER_SIZE>
		<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="1168" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_UNIFORM_BLOCKS>
		<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="1169" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
		<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="1170" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COMBINED_UNIFORM_BLOCKS>
		<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="1171" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_UNIFORM_BUFFER_BINDINGS>
		<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="1172" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_UNIFORM_BLOCK_SIZE>
		<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="1173" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="1174" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="1175" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="1176" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ACTIVE_UNIFORM_BLOCKS>
		<get_UNIFORM_TYPE get="inline" set="null" line="1177" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_TYPE>
		<get_UNIFORM_SIZE get="inline" set="null" line="1178" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_SIZE>
		<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="1179" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_INDEX>
		<get_UNIFORM_OFFSET get="inline" set="null" line="1180" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_OFFSET>
		<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="1181" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_ARRAY_STRIDE>
		<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="1182" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_MATRIX_STRIDE>
		<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="1183" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_IS_ROW_MAJOR>
		<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="1184" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_BINDING>
		<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="1185" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_DATA_SIZE>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="1186" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="1187" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="1188" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="1189" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<get_OBJECT_TYPE get="inline" set="null" line="1191" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_OBJECT_TYPE>
		<get_SYNC_CONDITION get="inline" set="null" line="1192" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_CONDITION>
		<get_SYNC_STATUS get="inline" set="null" line="1193" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_STATUS>
		<get_SYNC_FLAGS get="inline" set="null" line="1194" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_FLAGS>
		<get_SYNC_FENCE get="inline" set="null" line="1195" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_FENCE>
		<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="1196" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_GPU_COMMANDS_COMPLETE>
		<get_UNSIGNALED get="inline" set="null" line="1197" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNALED>
		<get_SIGNALED get="inline" set="null" line="1198" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SIGNALED>
		<get_ALREADY_SIGNALED get="inline" set="null" line="1199" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALREADY_SIGNALED>
		<get_TIMEOUT_EXPIRED get="inline" set="null" line="1200" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TIMEOUT_EXPIRED>
		<get_CONDITION_SATISFIED get="inline" set="null" line="1201" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CONDITION_SATISFIED>
		<get_WAIT_FAILED get="inline" set="null" line="1202" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_WAIT_FAILED>
		<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="1203" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_FLUSH_COMMANDS_BIT>
		<get_COLOR get="inline" set="null" line="1205" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR>
		<get_DEPTH get="inline" set="null" line="1206" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH>
		<get_STENCIL get="inline" set="null" line="1207" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL>
		<get_MIN get="inline" set="null" line="1208" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MIN>
		<get_MAX get="inline" set="null" line="1209" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX>
		<get_DEPTH_COMPONENT24 get="inline" set="null" line="1210" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_COMPONENT24>
		<get_STREAM_READ get="inline" set="null" line="1211" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STREAM_READ>
		<get_STREAM_COPY get="inline" set="null" line="1212" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STREAM_COPY>
		<get_STATIC_READ get="inline" set="null" line="1213" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STATIC_READ>
		<get_STATIC_COPY get="inline" set="null" line="1214" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STATIC_COPY>
		<get_DYNAMIC_READ get="inline" set="null" line="1215" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DYNAMIC_READ>
		<get_DYNAMIC_COPY get="inline" set="null" line="1216" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DYNAMIC_COPY>
		<get_DEPTH_COMPONENT32F get="inline" set="null" line="1217" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_COMPONENT32F>
		<get_DEPTH32F_STENCIL8 get="inline" set="null" line="1218" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH32F_STENCIL8>
		<get_INVALID_INDEX get="inline" set="null" line="1219" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_INDEX>
		<get_TIMEOUT_IGNORED get="inline" set="null" line="1220" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TIMEOUT_IGNORED>
		<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="1221" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<activeTexture public="1" get="inline" set="null" line="1224" static="1">
			<f a="this:texture">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</activeTexture>
		<attachShader public="1" get="inline" set="null" line="1231" static="1">
			<f a="this:program:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</attachShader>
		<beginQuery public="1" get="inline" set="null" line="1238" static="1">
			<f a="this:target:query">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginQuery>
		<beginTransformFeedback public="1" get="inline" set="null" line="1245" static="1">
			<f a="this:primitiveNode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginTransformFeedback>
		<bindAttribLocation public="1" get="inline" set="null" line="1252" static="1">
			<f a="this:program:index:name">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="1259" static="1">
			<f a="this:target:buffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBuffer>
		<bindBufferBase public="1" get="inline" set="null" line="1266" static="1">
			<f a="this:target:index:buffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferBase>
		<bindBufferRange public="1" get="inline" set="null" line="1273" static="1">
			<f a="this:target:index:buffer:offset:size">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferRange>
		<bindFramebuffer public="1" get="inline" set="null" line="1280" static="1">
			<f a="this:target:framebuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="1287" static="1">
			<f a="this:target:renderbuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindRenderbuffer>
		<bindSampler public="1" get="inline" set="null" line="1294" static="1">
			<f a="this:unit:sampler">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindSampler>
		<bindTexture public="1" get="inline" set="null" line="1301" static="1">
			<f a="this:target:texture">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTexture>
		<bindTransformFeedback public="1" get="inline" set="null" line="1308" static="1">
			<f a="this:target:transformFeedback">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTransformFeedback>
		<bindVertexArray public="1" get="inline" set="null" line="1315" static="1">
			<f a="this:vertexArray">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindVertexArray>
		<blendColor public="1" get="inline" set="null" line="1322" static="1">
			<f a="this:red:green:blue:alpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendColor>
		<blendEquation public="1" get="inline" set="null" line="1329" static="1">
			<f a="this:mode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="1336" static="1">
			<f a="this:modeRGB:modeAlpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="1343" static="1">
			<f a="this:sfactor:dfactor">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="1350" static="1">
			<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFuncSeparate>
		<blitFramebuffer public="1" get="inline" set="null" line="1357" static="1">
			<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blitFramebuffer>
		<bufferData public="1" get="inline" set="null" line="1364" static="1">
			<f a="this:target:size:data:usage">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferData>
		<bufferSubData public="1" get="inline" set="null" line="1371" static="1">
			<f a="this:target:offset:size:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="1378" static="1">
			<f a="this:target">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="1385" static="1">
			<f a="this:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clear>
		<clearBufferfi public="1" get="inline" set="null" line="1392" static="1">
			<f a="this:buffer:drawbuffer:depth:stencil">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferfi>
		<clearBufferfv public="1" get="inline" set="null" line="1399" static="1">
			<f a="this:buffer:drawbuffer:value">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferfv>
		<clearBufferiv public="1" get="inline" set="null" line="1406" static="1">
			<f a="this:buffer:drawbuffer:value">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferiv>
		<clearBufferuiv public="1" get="inline" set="null" line="1413" static="1">
			<f a="this:buffer:drawbuffer:value">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferuiv>
		<clearColor public="1" get="inline" set="null" line="1420" static="1">
			<f a="this:red:green:blue:alpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearColor>
		<clearDepthf public="1" get="inline" set="null" line="1427" static="1">
			<f a="this:depth">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearDepthf>
		<clearStencil public="1" get="inline" set="null" line="1434" static="1">
			<f a="this:s">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearStencil>
		<clientWaitSync public="1" get="inline" set="null" line="1441" static="1">
			<f a="this:sync:flags:timeout">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clientWaitSync>
		<colorMask public="1" get="inline" set="null" line="1448" static="1">
			<f a="this:red:green:blue:alpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</colorMask>
		<compileShader public="1" get="inline" set="null" line="1455" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compileShader>
		<compressedTexImage2D public="1" get="inline" set="null" line="1462" static="1">
			<f a="this:target:level:internalformat:width:height:border:imageSize:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexImage2D>
		<compressedTexImage3D public="1" get="inline" set="null" line="1469" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:imageSize:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexImage3D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="1476" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:imageSize:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexSubImage2D>
		<compressedTexSubImage3D public="1" get="inline" set="null" line="1483" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:imageSize:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexSubImage3D>
		<copyBufferSubData public="1" get="inline" set="null" line="1490" static="1">
			<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyBufferSubData>
		<copyTexImage2D public="1" get="inline" set="null" line="1497" static="1">
			<f a="this:target:level:internalformat:x:y:width:height:border">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="1504" static="1">
			<f a="this:target:level:xoffset:yoffset:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage2D>
		<copyTexSubImage3D public="1" get="inline" set="null" line="1511" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage3D>
		<createBuffer public="1" get="inline" set="null" line="1518" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="1525" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="1532" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createProgram>
		<createQuery public="1" get="inline" set="null" line="1539" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createQuery>
		<createRenderbuffer public="1" get="inline" set="null" line="1546" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createRenderbuffer>
		<createSampler public="1" get="inline" set="null" line="1553" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createSampler>
		<createShader public="1" get="inline" set="null" line="1560" static="1">
			<f a="this:type">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLShader"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createShader>
		<createTexture public="1" get="inline" set="null" line="1567" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTexture"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTexture>
		<createTransformFeedback public="1" get="inline" set="null" line="1574" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTransformFeedback>
		<createVertexArray public="1" get="inline" set="null" line="1581" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createVertexArray>
		<cullFace public="1" get="inline" set="null" line="1588" static="1">
			<f a="this:mode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="1595" static="1">
			<f a="this:buffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="1602" static="1">
			<f a="this:framebuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="1609" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteProgram>
		<deleteQuery public="1" get="inline" set="null" line="1616" static="1">
			<f a="this:query">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteQuery>
		<deleteRenderbuffer public="1" get="inline" set="null" line="1623" static="1">
			<f a="this:renderbuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteRenderbuffer>
		<deleteSampler public="1" get="inline" set="null" line="1630" static="1">
			<f a="this:sampler">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSampler>
		<deleteShader public="1" get="inline" set="null" line="1637" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteShader>
		<deleteSync public="1" get="inline" set="null" line="1644" static="1">
			<f a="this:sync">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSync>
		<deleteTexture public="1" get="inline" set="null" line="1651" static="1">
			<f a="this:texture">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTexture>
		<deleteTransformFeedback public="1" get="inline" set="null" line="1658" static="1">
			<f a="this:transformFeedback">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTransformFeedback>
		<deleteVertexArray public="1" get="inline" set="null" line="1665" static="1">
			<f a="this:vertexArray">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteVertexArray>
		<depthFunc public="1" get="inline" set="null" line="1672" static="1">
			<f a="this:func">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthFunc>
		<depthMask public="1" get="inline" set="null" line="1679" static="1">
			<f a="this:flag">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthMask>
		<depthRangef public="1" get="inline" set="null" line="1686" static="1">
			<f a="this:zNear:zFar">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthRangef>
		<detachShader public="1" get="inline" set="null" line="1693" static="1">
			<f a="this:program:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</detachShader>
		<disable public="1" get="inline" set="null" line="1700" static="1">
			<f a="this:cap">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="1707" static="1">
			<f a="this:index">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="1714" static="1">
			<f a="this:mode:first:count">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArrays>
		<drawArraysInstanced public="1" get="inline" set="null" line="1721" static="1">
			<f a="this:mode:first:count:instanceCount">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArraysInstanced>
		<drawBuffers public="1" get="inline" set="null" line="1728" static="1">
			<f a="this:buffers">
				<c path="lime.graphics.GLRenderContext"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawBuffers>
		<drawElements public="1" get="inline" set="null" line="1735" static="1">
			<f a="this:mode:count:type:offset">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElements>
		<drawElementsInstanced public="1" get="inline" set="null" line="1742" static="1">
			<f a="this:mode:count:type:offset:instanceCount">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElementsInstanced>
		<drawRangeElements public="1" get="inline" set="null" line="1749" static="1">
			<f a="this:mode:start:end:count:type:offset">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawRangeElements>
		<enable public="1" get="inline" set="null" line="1756" static="1">
			<f a="this:cap">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="1763" static="1">
			<f a="this:index">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enableVertexAttribArray>
		<endQuery public="1" get="inline" set="null" line="1770" static="1">
			<f a="this:target">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endQuery>
		<endTransformFeedback public="1" get="inline" set="null" line="1777" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endTransformFeedback>
		<fenceSync public="1" get="inline" set="null" line="1784" static="1">
			<f a="this:condition:flags">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSync"/>
			</f>
			<meta><m n=":impl"/></meta>
		</fenceSync>
		<finish public="1" get="inline" set="null" line="1791" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</finish>
		<flush public="1" get="inline" set="null" line="1798" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="1805" static="1">
			<f a="this:target:attachment:renderbuffertarget:renderbuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="1812" static="1">
			<f a="this:target:attachment:textarget:texture:level">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTexture2D>
		<framebufferTextureLayer public="1" get="inline" set="null" line="1819" static="1">
			<f a="this:target:attachment:texture:level:layer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTextureLayer>
		<frontFace public="1" get="inline" set="null" line="1826" static="1">
			<f a="this:mode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</frontFace>
		<genBuffers public="1" set="method" line="1833" static="1">
			<f a="this:n:?buffers" v="::null">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLBuffer"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLBuffer"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ buffers : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genBuffers>
		<generateMipmap public="1" get="inline" set="null" line="1848" static="1">
			<f a="this:target">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</generateMipmap>
		<genFramebuffers public="1" set="method" line="1854" static="1">
			<f a="this:n:?framebuffers" v="::null">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLFramebuffer"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLFramebuffer"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ framebuffers : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genFramebuffers>
		<genQueries public="1" set="method" line="1869" static="1">
			<f a="this:n:?queries" v="::null">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLQuery"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLQuery"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ queries : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genQueries>
		<genRenderbuffers public="1" set="method" line="1884" static="1">
			<f a="this:n:?renderbuffers" v="::null">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLRenderbuffer"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLRenderbuffer"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ renderbuffers : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genRenderbuffers>
		<genSamplers public="1" set="method" line="1899" static="1">
			<f a="this:n:?samplers" v="::null">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLSampler"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLSampler"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ samplers : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genSamplers>
		<genTextures public="1" set="method" line="1914" static="1">
			<f a="this:n:?textures" v="::null">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLTexture"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLTexture"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ textures : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genTextures>
		<genTransformFeedbacks public="1" set="method" line="1929" static="1">
			<f a="this:n:?transformFeedbacks" v="::null">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLTransformFeedback"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLTransformFeedback"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ transformFeedbacks : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genTransformFeedbacks>
		<getActiveAttrib public="1" get="inline" set="null" line="1944" static="1">
			<f a="this:program:index">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="1951" static="1">
			<f a="this:program:index">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniform>
		<getActiveUniformBlocki public="1" get="inline" set="null" line="1958" static="1">
			<f a="this:program:uniformBlockIndex:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlocki>
		<getActiveUniformBlockiv public="1" get="inline" set="null" line="1965" static="1">
			<f a="this:program:uniformBlockIndex:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockiv>
		<getActiveUniformBlockName public="1" get="inline" set="null" line="1972" static="1">
			<f a="this:program:uniformBlockIndex">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockName>
		<getActiveUniformsiv public="1" get="inline" set="null" line="1979" static="1">
			<f a="this:program:uniformIndices:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformsiv>
		<getAttachedShaders public="1" get="inline" set="null" line="1986" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="1993" static="1">
			<f a="this:program:name">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttribLocation>
		<getBoolean public="1" get="inline" set="null" line="2000" static="1">
			<f a="this:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBoolean>
		<getBooleanv public="1" get="inline" set="null" line="2007" static="1">
			<f a="this:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBooleanv>
		<getBufferParameteri public="1" get="inline" set="null" line="2014" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameteri>
		<getBufferParameteri64v public="1" get="inline" set="null" line="2021" static="1">
			<f a="this:target:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameteri64v>
		<getBufferParameteriv public="1" get="inline" set="null" line="2028" static="1">
			<f a="this:target:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameteriv>
		<getBufferPointerv public="1" get="inline" set="null" line="2035" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferPointerv>
		<getError public="1" get="inline" set="null" line="2042" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getError>
		<getFloat public="1" get="inline" set="null" line="2049" static="1">
			<f a="this:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFloat>
		<getFloatv public="1" get="inline" set="null" line="2056" static="1">
			<f a="this:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFloatv>
		<getExtension public="1" get="inline" set="null" line="2063" static="1">
			<f a="this:name">
				<c path="lime.graphics.GLRenderContext"/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getExtension>
		<getFragDataLocation public="1" get="inline" set="null" line="2070" static="1">
			<f a="this:program:name">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFragDataLocation>
		<getFramebufferAttachmentParameteri public="1" get="inline" set="null" line="2077" static="1">
			<f a="this:target:attachment:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFramebufferAttachmentParameteri>
		<getFramebufferAttachmentParameteriv public="1" get="inline" set="null" line="2084" static="1">
			<f a="this:target:attachment:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFramebufferAttachmentParameteriv>
		<getInteger public="1" get="inline" set="null" line="2091" static="1">
			<f a="this:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger>
		<getInteger64 public="1" get="inline" set="null" line="2098" static="1">
			<f a="this:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger64>
		<getInteger64i public="1" get="inline" set="null" line="2105" static="1">
			<f a="this:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger64i>
		<getInteger64i_v public="1" get="inline" set="null" line="2112" static="1">
			<f a="this:pname:index:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger64i_v>
		<getInteger64v public="1" get="inline" set="null" line="2119" static="1">
			<f a="this:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger64v>
		<getIntegeri_v public="1" get="inline" set="null" line="2126" static="1">
			<f a="this:pname:index:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getIntegeri_v>
		<getIntegerv public="1" get="inline" set="null" line="2133" static="1">
			<f a="this:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getIntegerv>
		<getInternalformati public="1" get="inline" set="null" line="2140" static="1">
			<f a="this:target:internalformat:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInternalformati>
		<getInternalformativ public="1" get="inline" set="null" line="2147" static="1">
			<f a="this:target:internalformat:pname:bufSize:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInternalformativ>
		<getProgramBinary public="1" get="inline" set="null" line="2154" static="1">
			<f a="this:program:binaryFormat">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramBinary>
		<getProgrami public="1" get="inline" set="null" line="2161" static="1">
			<f a="this:program:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgrami>
		<getProgramInfoLog public="1" get="inline" set="null" line="2168" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramInfoLog>
		<getProgramiv public="1" get="inline" set="null" line="2175" static="1">
			<f a="this:program:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramiv>
		<getQueryi public="1" get="inline" set="null" line="2182" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryi>
		<getQueryiv public="1" get="inline" set="null" line="2189" static="1">
			<f a="this:target:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryiv>
		<getQueryObjectui public="1" get="inline" set="null" line="2196" static="1">
			<f a="this:query:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryObjectui>
		<getQueryObjectuiv public="1" get="inline" set="null" line="2203" static="1">
			<f a="this:query:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryObjectuiv>
		<getRenderbufferParameteri public="1" get="inline" set="null" line="2210" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getRenderbufferParameteri>
		<getRenderbufferParameteriv public="1" get="inline" set="null" line="2217" static="1">
			<f a="this:target:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getRenderbufferParameteriv>
		<getSamplerParameteri public="1" get="inline" set="null" line="2224" static="1">
			<f a="this:sampler:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameteri>
		<getSamplerParameteriv public="1" get="inline" set="null" line="2231" static="1">
			<f a="this:sampler:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameteriv>
		<getSamplerParameterf public="1" get="inline" set="null" line="2238" static="1">
			<f a="this:sampler:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameterf>
		<getSamplerParameterfv public="1" get="inline" set="null" line="2245" static="1">
			<f a="this:sampler:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameterfv>
		<getShaderInfoLog public="1" get="inline" set="null" line="2252" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderInfoLog>
		<getShaderi public="1" get="inline" set="null" line="2259" static="1">
			<f a="this:shader:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderi>
		<getShaderiv public="1" get="inline" set="null" line="2266" static="1">
			<f a="this:shader:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderiv>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="2273" static="1">
			<f a="this:shadertype:precisiontype">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderPrecisionFormat>
		<getShaderSource public="1" get="inline" set="null" line="2280" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderSource>
		<getString public="1" get="inline" set="null" line="2287" static="1">
			<f a="this:name">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getString>
		<getStringi public="1" get="inline" set="null" line="2294" static="1">
			<f a="this:name:index">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getStringi>
		<getSyncParameteri public="1" get="inline" set="null" line="2301" static="1">
			<f a="this:sync:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSyncParameteri>
		<getSyncParameteriv public="1" get="inline" set="null" line="2308" static="1">
			<f a="this:sync:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSyncParameteriv>
		<getTexParameterf public="1" get="inline" set="null" line="2315" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameterf>
		<getTexParameterfv public="1" get="inline" set="null" line="2322" static="1">
			<f a="this:target:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameterfv>
		<getTexParameteri public="1" get="inline" set="null" line="2329" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameteri>
		<getTexParameteriv public="1" get="inline" set="null" line="2336" static="1">
			<f a="this:target:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameteriv>
		<getTransformFeedbackVarying public="1" get="inline" set="null" line="2343" static="1">
			<f a="this:program:index">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTransformFeedbackVarying>
		<getUniformf public="1" get="inline" set="null" line="2350" static="1">
			<f a="this:program:location">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformf>
		<getUniformfv public="1" get="inline" set="null" line="2357" static="1">
			<f a="this:program:location:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformfv>
		<getUniformi public="1" get="inline" set="null" line="2364" static="1">
			<f a="this:program:location">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformi>
		<getUniformiv public="1" get="inline" set="null" line="2371" static="1">
			<f a="this:program:location:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformiv>
		<getUniformui public="1" get="inline" set="null" line="2378" static="1">
			<f a="this:program:location">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformui>
		<getUniformuiv public="1" get="inline" set="null" line="2385" static="1">
			<f a="this:program:location:params">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformuiv>
		<getUniformBlockIndex public="1" get="inline" set="null" line="2392" static="1">
			<f a="this:program:uniformBlockName">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformBlockIndex>
		<getUniformIndices public="1" get="inline" set="null" line="2399" static="1">
			<f a="this:program:uniformNames">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformIndices>
		<getUniformLocation public="1" get="inline" set="null" line="2406" static="1">
			<f a="this:program:name">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformLocation>
		<getVertexAttribf public="1" get="inline" set="null" line="2413" static="1">
			<f a="this:index:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribf>
		<getVertexAttribfv public="1" get="inline" set="null" line="2420" static="1">
			<f a="this:index:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribfv>
		<getVertexAttribi public="1" get="inline" set="null" line="2427" static="1">
			<f a="this:index:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribi>
		<getVertexAttribIi public="1" get="inline" set="null" line="2434" static="1">
			<f a="this:index:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribIi>
		<getVertexAttribIiv public="1" get="inline" set="null" line="2441" static="1">
			<f a="this:index:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribIiv>
		<getVertexAttribIui public="1" get="inline" set="null" line="2448" static="1">
			<f a="this:index:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribIui>
		<getVertexAttribIuiv public="1" get="inline" set="null" line="2455" static="1">
			<f a="this:index:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribIuiv>
		<getVertexAttribiv public="1" get="inline" set="null" line="2462" static="1">
			<f a="this:index:pname:params">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribiv>
		<getVertexAttribPointerv public="1" get="inline" set="null" line="2469" static="1">
			<f a="this:index:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribPointerv>
		<hint public="1" get="inline" set="null" line="2476" static="1">
			<f a="this:target:mode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</hint>
		<invalidateFramebuffer public="1" get="inline" set="null" line="2483" static="1">
			<f a="this:target:attachments">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" get="inline" set="null" line="2490" static="1">
			<f a="this:target:attachments:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateSubFramebuffer>
		<isBuffer public="1" get="inline" set="null" line="2497" static="1">
			<f a="this:buffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isBuffer>
		<isEnabled public="1" get="inline" set="null" line="2504" static="1">
			<f a="this:cap">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isEnabled>
		<isFramebuffer public="1" get="inline" set="null" line="2511" static="1">
			<f a="this:framebuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="2518" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isProgram>
		<isQuery public="1" get="inline" set="null" line="2525" static="1">
			<f a="this:query">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isQuery>
		<isRenderbuffer public="1" get="inline" set="null" line="2532" static="1">
			<f a="this:renderbuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isRenderbuffer>
		<isSampler public="1" get="inline" set="null" line="2539" static="1">
			<f a="this:sampler">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isSampler>
		<isShader public="1" get="inline" set="null" line="2546" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isShader>
		<isTexture public="1" get="inline" set="null" line="2553" static="1">
			<f a="this:texture">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTexture>
		<isTransformFeedback public="1" get="inline" set="null" line="2560" static="1">
			<f a="this:transformFeedback">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTransformFeedback>
		<isVertexArray public="1" get="inline" set="null" line="2567" static="1">
			<f a="this:vertexArray">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isVertexArray>
		<lineWidth public="1" get="inline" set="null" line="2574" static="1">
			<f a="this:width">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</lineWidth>
		<linkProgram public="1" get="inline" set="null" line="2581" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</linkProgram>
		<mapBufferRange public="1" get="inline" set="null" line="2588" static="1">
			<f a="this:target:offset:length:access">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</mapBufferRange>
		<pauseTransformFeedback public="1" get="inline" set="null" line="2595" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pauseTransformFeedback>
		<pixelStorei public="1" get="inline" set="null" line="2602" static="1">
			<f a="this:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="2609" static="1">
			<f a="this:factor:units">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</polygonOffset>
		<programBinary public="1" get="inline" set="null" line="2616" static="1">
			<f a="this:program:binaryFormat:binary:length">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</programBinary>
		<programParameteri public="1" get="inline" set="null" line="2623" static="1">
			<f a="this:program:pname:value">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</programParameteri>
		<readBuffer public="1" get="inline" set="null" line="2630" static="1">
			<f a="this:src">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readBuffer>
		<readPixels public="1" get="inline" set="null" line="2637" static="1">
			<f a="this:x:y:width:height:format:type:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readPixels>
		<releaseShaderCompiler public="1" get="inline" set="null" line="2644" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</releaseShaderCompiler>
		<renderbufferStorage public="1" get="inline" set="null" line="2651" static="1">
			<f a="this:target:internalformat:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorage>
		<renderbufferStorageMultisample public="1" get="inline" set="null" line="2658" static="1">
			<f a="this:target:samples:internalformat:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" get="inline" set="null" line="2665" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</resumeTransformFeedback>
		<sampleCoverage public="1" get="inline" set="null" line="2672" static="1">
			<f a="this:value:invert">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</sampleCoverage>
		<samplerParameterf public="1" get="inline" set="null" line="2679" static="1">
			<f a="this:sampler:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameterf>
		<samplerParameteri public="1" get="inline" set="null" line="2686" static="1">
			<f a="this:sampler:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameteri>
		<scissor public="1" get="inline" set="null" line="2693" static="1">
			<f a="this:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</scissor>
		<shaderBinary public="1" get="inline" set="null" line="2700" static="1">
			<f a="this:shaders:binaryformat:binary:length">
				<c path="lime.graphics.GLRenderContext"/>
				<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</shaderBinary>
		<shaderSource public="1" get="inline" set="null" line="2707" static="1">
			<f a="this:shader:source">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="2714" static="1">
			<f a="this:func:ref:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="2721" static="1">
			<f a="this:face:func:ref:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="2728" static="1">
			<f a="this:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="2735" static="1">
			<f a="this:face:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="2742" static="1">
			<f a="this:fail:zfail:zpass">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="2749" static="1">
			<f a="this:face:fail:zfail:zpass">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="2756" static="1">
			<f a="this:target:level:internalformat:width:height:border:format:type:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage2D>
		<texImage3D public="1" get="inline" set="null" line="2763" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:format:type:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage3D>
		<texStorage2D public="1" get="inline" set="null" line="2770" static="1">
			<f a="this:target:level:internalformat:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage2D>
		<texStorage3D public="1" get="inline" set="null" line="2777" static="1">
			<f a="this:target:level:internalformat:width:height:depth">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage3D>
		<texParameterf public="1" get="inline" set="null" line="2784" static="1">
			<f a="this:target:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameterf>
		<texParameteri public="1" get="inline" set="null" line="2791" static="1">
			<f a="this:target:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="2798" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:type:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texSubImage2D>
		<texSubImage3D public="1" get="inline" set="null" line="2805" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:data">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texSubImage3D>
		<transformFeedbackVaryings public="1" get="inline" set="null" line="2812" static="1">
			<f a="this:program:varyings:bufferMode">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transformFeedbackVaryings>
		<uniform1f public="1" get="inline" set="null" line="2819" static="1">
			<f a="this:location:v0">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="2826" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="2833" static="1">
			<f a="this:location:v0">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="2840" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1iv>
		<uniform1ui public="1" get="inline" set="null" line="2847" static="1">
			<f a="this:location:v0">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1ui>
		<uniform1uiv public="1" get="inline" set="null" line="2854" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1uiv>
		<uniform2f public="1" get="inline" set="null" line="2861" static="1">
			<f a="this:location:v0:v1">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2f>
		<uniform2fv public="1" get="inline" set="null" line="2868" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="2875" static="1">
			<f a="this:location:v0:v1">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="2882" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2iv>
		<uniform2ui public="1" get="inline" set="null" line="2889" static="1">
			<f a="this:location:v0:v1">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2ui>
		<uniform2uiv public="1" get="inline" set="null" line="2896" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2uiv>
		<uniform3f public="1" get="inline" set="null" line="2903" static="1">
			<f a="this:location:v0:v1:v2">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="2910" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="2917" static="1">
			<f a="this:location:v0:v1:v2">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="2924" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3iv>
		<uniform3ui public="1" get="inline" set="null" line="2931" static="1">
			<f a="this:location:v0:v1:v2">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3ui>
		<uniform3uiv public="1" get="inline" set="null" line="2938" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3uiv>
		<uniform4f public="1" get="inline" set="null" line="2945" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="2952" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="2959" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="2966" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4iv>
		<uniform4ui public="1" get="inline" set="null" line="2973" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4ui>
		<uniform4uiv public="1" get="inline" set="null" line="2980" static="1">
			<f a="this:location:count:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4uiv>
		<uniformBlockBinding public="1" get="inline" set="null" line="2987" static="1">
			<f a="this:program:uniformBlockIndex:uniformBlockBinding">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformBlockBinding>
		<uniformMatrix2fv public="1" get="inline" set="null" line="2994" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2fv>
		<uniformMatrix2x3fv public="1" get="inline" set="null" line="3001" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2x3fv>
		<uniformMatrix2x4fv public="1" get="inline" set="null" line="3008" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2x4fv>
		<uniformMatrix3fv public="1" get="inline" set="null" line="3015" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3fv>
		<uniformMatrix3x2fv public="1" get="inline" set="null" line="3022" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3x2fv>
		<uniformMatrix3x4fv public="1" get="inline" set="null" line="3029" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3x4fv>
		<uniformMatrix4fv public="1" get="inline" set="null" line="3036" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4fv>
		<uniformMatrix4x2fv public="1" get="inline" set="null" line="3043" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4x2fv>
		<uniformMatrix4x3fv public="1" get="inline" set="null" line="3050" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4x3fv>
		<unmapBuffer public="1" get="inline" set="null" line="3057" static="1">
			<f a="this:target">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</unmapBuffer>
		<useProgram public="1" get="inline" set="null" line="3064" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</useProgram>
		<validateProgram public="1" get="inline" set="null" line="3071" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="3078" static="1">
			<f a="this:indx:x">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="3085" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="3092" static="1">
			<f a="this:indx:x:y">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="3099" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="3106" static="1">
			<f a="this:indx:x:y:z">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="3113" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="3120" static="1">
			<f a="this:indx:x:y:z:w">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="3127" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4fv>
		<vertexAttribDivisor public="1" get="inline" set="null" line="3134" static="1">
			<f a="this:index:divisor">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribDivisor>
		<vertexAttribI4i public="1" get="inline" set="null" line="3141" static="1">
			<f a="this:indx:x:y:z:w">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4i>
		<vertexAttribI4iv public="1" get="inline" set="null" line="3148" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4iv>
		<vertexAttribI4ui public="1" get="inline" set="null" line="3155" static="1">
			<f a="this:indx:x:y:z:w">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4ui>
		<vertexAttribI4uiv public="1" get="inline" set="null" line="3162" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4uiv>
		<vertexAttribIPointer public="1" get="inline" set="null" line="3169" static="1">
			<f a="this:indx:size:type:stride:pointer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribIPointer>
		<vertexAttribPointer public="1" get="inline" set="null" line="3176" static="1">
			<f a="this:indx:size:type:normalized:stride:pointer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="3183" static="1">
			<f a="this:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</viewport>
		<waitSync public="1" get="inline" set="null" line="3190" static="1">
			<f a="this:sync:flags:timeout">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</waitSync>
		<fromGL set="method" line="3197" static="1">
			<f a="gl">
				<d/>
				<x path="lime.graphics.opengl.GLES3Context"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<meta><m n=":final"/></meta>
	</class>
	<typedef path="lime.graphics.opengl.GLFramebuffer" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLFramebuffer.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLProgram" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLProgram.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLQuery" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLQuery.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLRenderbuffer" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLRenderbuffer.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLSampler" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLSampler.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLShader" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLShader.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLShaderPrecisionFormat" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLShaderPrecisionFormat.hx">
		<a>
			<rangeMin><x path="Int"/></rangeMin>
			<rangeMax><x path="Int"/></rangeMax>
			<precision><x path="Int"/></precision>
		</a>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</typedef>
	<typedef path="lime.graphics.opengl.GLSync" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLSync.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLTexture" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLTexture.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLTransformFeedback" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLTransformFeedback.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLUniformLocation" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLUniformLocation.hx"><x path="Int"/></typedef>
	<typedef path="lime.graphics.opengl.GLVertexArrayObject" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/GLVertexArrayObject.hx"><d/></typedef>
	<abstract path="lime.graphics.opengl.WebGL2Context" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/WebGL2Context.hx">
		<from>
			<icast><c path="lime.graphics.GLRenderContext"/></icast>
			<icast field="fromGL"><d/></icast>
			<icast field="fromGLES3Context"><x path="lime.graphics.opengl.GLES3Context"/></icast>
			<icast field="toWebGLContext"><x path="lime.graphics.opengl.WebGLContext"/></icast>
		</from>
		<this><c path="lime.graphics.GLRenderContext"/></this>
		<to><icast><c path="lime.graphics.GLRenderContext"/></icast></to>
		<impl><class path="lime.graphics.opengl._WebGL2Context.WebGL2Context_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/WebGL2Context.hx" private="1" module="lime.graphics.opengl.WebGL2Context">
	<__tempPointer expr="new BytePointer()" line="17" static="1">
		<x path="lime.utils.BytePointer"/>
		<meta><m n=":value"><e>new BytePointer()</e></m></meta>
	</__tempPointer>
	<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BUFFER_BIT>
	<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BUFFER_BIT>
	<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_BUFFER_BIT>
	<POINTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POINTS>
	<LINES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINES>
	<LINE_LOOP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_LOOP>
	<LINE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_STRIP>
	<TRIANGLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLES>
	<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_STRIP>
	<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_FAN>
	<ZERO public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ZERO>
	<ONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE>
	<SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_COLOR>
	<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_COLOR>
	<SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA>
	<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_ALPHA>
	<DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_ALPHA>
	<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_ALPHA>
	<DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_COLOR>
	<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_COLOR>
	<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA_SATURATE>
	<FUNC_ADD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_ADD>
	<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION>
	<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_RGB>
	<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_ALPHA>
	<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_SUBTRACT>
	<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_REVERSE_SUBTRACT>
	<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_RGB>
	<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_RGB>
	<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_ALPHA>
	<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_ALPHA>
	<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_COLOR>
	<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_COLOR>
	<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_ALPHA>
	<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_ALPHA>
	<BLEND_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_COLOR>
	<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER>
	<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER>
	<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER_BINDING>
	<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER_BINDING>
	<STREAM_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_DRAW>
	<STATIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_DRAW>
	<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_DRAW>
	<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_SIZE>
	<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_USAGE>
	<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_VERTEX_ATTRIB>
	<FRONT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT>
	<BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BACK>
	<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_AND_BACK>
	<CULL_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE>
	<BLEND public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND>
	<DITHER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DITHER>
	<STENCIL_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_TEST>
	<DEPTH_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_TEST>
	<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_TEST>
	<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FILL>
	<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_ALPHA_TO_COVERAGE>
	<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE>
	<NO_ERROR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NO_ERROR>
	<INVALID_ENUM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_ENUM>
	<INVALID_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_VALUE>
	<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_OPERATION>
	<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OUT_OF_MEMORY>
	<CW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CW>
	<CCW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CCW>
	<LINE_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_WIDTH>
	<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_POINT_SIZE_RANGE>
	<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_LINE_WIDTH_RANGE>
	<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE_MODE>
	<FRONT_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_FACE>
	<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_RANGE>
	<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_WRITEMASK>
	<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_CLEAR_VALUE>
	<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_FUNC>
	<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_CLEAR_VALUE>
	<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FUNC>
	<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FAIL>
	<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_FAIL>
	<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_PASS>
	<STENCIL_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_REF>
	<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_VALUE_MASK>
	<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_WRITEMASK>
	<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FUNC>
	<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FAIL>
	<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_FAIL>
	<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_PASS>
	<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_REF>
	<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_VALUE_MASK>
	<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_WRITEMASK>
	<VIEWPORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VIEWPORT>
	<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_BOX>
	<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_CLEAR_VALUE>
	<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_WRITEMASK>
	<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ALIGNMENT>
	<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ALIGNMENT>
	<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_SIZE>
	<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VIEWPORT_DIMS>
	<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SUBPIXEL_BITS>
	<RED_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_BITS>
	<GREEN_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREEN_BITS>
	<BLUE_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLUE_BITS>
	<ALPHA_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA_BITS>
	<DEPTH_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BITS>
	<STENCIL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BITS>
	<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_UNITS>
	<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FACTOR>
	<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D>
	<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_BUFFERS>
	<SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLES>
	<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_VALUE>
	<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_INVERT>
	<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPRESSED_TEXTURE_FORMATS>
	<DONT_CARE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DONT_CARE>
	<FASTEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FASTEST>
	<NICEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NICEST>
	<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GENERATE_MIPMAP_HINT>
	<BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BYTE>
	<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_BYTE>
	<SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHORT>
	<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT>
	<INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT>
	<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT>
	<FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT>
	<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT>
	<ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA>
	<RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB>
	<RGBA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA>
	<LUMINANCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE>
	<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE_ALPHA>
	<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_4_4_4_4>
	<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_5_5_1>
	<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_6_5>
	<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER>
	<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_SHADER>
	<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_ATTRIBS>
	<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_VECTORS>
	<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_VECTORS>
	<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_IMAGE_UNITS>
	<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_VECTORS>
	<SHADER_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADER_TYPE>
	<DELETE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DELETE_STATUS>
	<LINK_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINK_STATUS>
	<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VALIDATE_STATUS>
	<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ATTACHED_SHADERS>
	<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORMS>
	<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_ATTRIBUTES>
	<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADING_LANGUAGE_VERSION>
	<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_PROGRAM>
	<NEVER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEVER>
	<LESS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LESS>
	<EQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</EQUAL>
	<LEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LEQUAL>
	<GREATER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREATER>
	<NOTEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NOTEQUAL>
	<GEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GEQUAL>
	<ALWAYS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALWAYS>
	<KEEP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</KEEP>
	<REPLACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPLACE>
	<INCR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR>
	<DECR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR>
	<INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVERT>
	<INCR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR_WRAP>
	<DECR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR_WRAP>
	<VENDOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VENDOR>
	<RENDERER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERER>
	<VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERSION>
	<NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST>
	<LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR>
	<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_NEAREST>
	<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_NEAREST>
	<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_LINEAR>
	<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_LINEAR>
	<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAG_FILTER>
	<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_FILTER>
	<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_S>
	<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_T>
	<TEXTURE_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D>
	<TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE>
	<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP>
	<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_CUBE_MAP>
	<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_X>
	<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_X>
	<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Y>
	<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Z>
	<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CUBE_MAP_TEXTURE_SIZE>
	<TEXTURE0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE0>
	<TEXTURE1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE1>
	<TEXTURE2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE2>
	<TEXTURE3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE3>
	<TEXTURE4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE4>
	<TEXTURE5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE5>
	<TEXTURE6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE6>
	<TEXTURE7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE7>
	<TEXTURE8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE8>
	<TEXTURE9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE9>
	<TEXTURE10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE10>
	<TEXTURE11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE11>
	<TEXTURE12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE12>
	<TEXTURE13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE13>
	<TEXTURE14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE14>
	<TEXTURE15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE15>
	<TEXTURE16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE16>
	<TEXTURE17 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE17>
	<TEXTURE18 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE18>
	<TEXTURE19 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE19>
	<TEXTURE20 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE20>
	<TEXTURE21 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE21>
	<TEXTURE22 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE22>
	<TEXTURE23 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE23>
	<TEXTURE24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE24>
	<TEXTURE25 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE25>
	<TEXTURE26 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE26>
	<TEXTURE27 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE27>
	<TEXTURE28 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE28>
	<TEXTURE29 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE29>
	<TEXTURE30 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE30>
	<TEXTURE31 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE31>
	<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_TEXTURE>
	<REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPEAT>
	<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CLAMP_TO_EDGE>
	<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIRRORED_REPEAT>
	<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC2>
	<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC3>
	<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC4>
	<INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC2>
	<INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC3>
	<INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC4>
	<BOOL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL>
	<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC2>
	<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC3>
	<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC4>
	<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2>
	<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3>
	<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4>
	<SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D>
	<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE>
	<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_ENABLED>
	<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_SIZE>
	<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_STRIDE>
	<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_TYPE>
	<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_POINTER>
	<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPILE_STATUS>
	<LOW_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_FLOAT>
	<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_FLOAT>
	<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_FLOAT>
	<LOW_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_INT>
	<MEDIUM_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_INT>
	<HIGH_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_INT>
	<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER>
	<RENDERBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER>
	<RGBA4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA4>
	<RGB5_A1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB5_A1>
	<RGB565 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB565>
	<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT16>
	<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX>
	<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX8>
	<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL>
	<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_WIDTH>
	<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_HEIGHT>
	<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_INTERNAL_FORMAT>
	<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_RED_SIZE>
	<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_GREEN_SIZE>
	<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BLUE_SIZE>
	<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_ALPHA_SIZE>
	<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_DEPTH_SIZE>
	<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_STENCIL_SIZE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT0>
	<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_ATTACHMENT>
	<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_ATTACHMENT>
	<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL_ATTACHMENT>
	<NONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NONE>
	<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_COMPLETE>
	<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_UNSUPPORTED>
	<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_BINDING>
	<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BINDING>
	<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_RENDERBUFFER_SIZE>
	<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_FRAMEBUFFER_OPERATION>
	<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_FLIP_Y_WEBGL>
	<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONTEXT_LOST_WEBGL>
	<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BROWSER_DEFAULT_WEBGL>
	<READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_BUFFER>
	<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ROW_LENGTH>
	<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_ROWS>
	<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_PIXELS>
	<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ROW_LENGTH>
	<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_ROWS>
	<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_PIXELS>
	<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_3D>
	<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_IMAGES>
	<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_IMAGE_HEIGHT>
	<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_3D_TEXTURE_SIZE>
	<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_VERTICES>
	<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_INDICES>
	<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_LOD_BIAS>
	<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_COMPONENTS>
	<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ARRAY_TEXTURE_LAYERS>
	<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN_PROGRAM_TEXEL_OFFSET>
	<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_PROGRAM_TEXEL_OFFSET>
	<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_COMPONENTS>
	<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER_DERIVATIVE_HINT>
	<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RASTERIZER_DISCARD>
	<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ARRAY_BINDING>
	<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_OUTPUT_COMPONENTS>
	<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_INPUT_COMPONENTS>
	<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SERVER_WAIT_TIMEOUT>
	<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENT_INDEX>
	<RED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED>
	<RGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8>
	<RGBA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8>
	<RGB10_A2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2>
	<TEXTURE_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_3D>
	<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_R>
	<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_LOD>
	<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LOD>
	<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BASE_LEVEL>
	<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LEVEL>
	<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_MODE>
	<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_FUNC>
	<SRGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB>
	<SRGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8>
	<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8_ALPHA8>
	<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPARE_REF_TO_TEXTURE>
	<RGBA32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32F>
	<RGB32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32F>
	<RGBA16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16F>
	<RGB16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16F>
	<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D_ARRAY>
	<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D_ARRAY>
	<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R11F_G11F_B10F>
	<RGB9_E5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB9_E5>
	<RGBA32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32UI>
	<RGB32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32UI>
	<RGBA16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16UI>
	<RGB16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16UI>
	<RGBA8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8UI>
	<RGB8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8UI>
	<RGBA32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32I>
	<RGB32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32I>
	<RGBA16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16I>
	<RGB16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16I>
	<RGBA8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8I>
	<RGB8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8I>
	<RED_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_INTEGER>
	<RGB_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB_INTEGER>
	<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA_INTEGER>
	<R8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8>
	<RG8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8>
	<R16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16F>
	<R32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32F>
	<RG16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16F>
	<RG32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32F>
	<R8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8I>
	<R8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8UI>
	<R16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16I>
	<R16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16UI>
	<R32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32I>
	<R32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32UI>
	<RG8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8I>
	<RG8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8UI>
	<RG16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16I>
	<RG16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16UI>
	<RG32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32I>
	<RG32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32UI>
	<R8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8_SNORM>
	<RG8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8_SNORM>
	<RGB8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8_SNORM>
	<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8_SNORM>
	<RGB10_A2UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2UI>
	<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_FORMAT>
	<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_LEVELS>
	<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_2_10_10_10_REV>
	<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_10F_11F_11F_REV>
	<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_5_9_9_9_REV>
	<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_32_UNSIGNED_INT_24_8_REV>
	<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_24_8>
	<HALF_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HALF_FLOAT>
	<RG public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG>
	<RG_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG_INTEGER>
	<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_2_10_10_10_REV>
	<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_QUERY>
	<QUERY_RESULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT>
	<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT_AVAILABLE>
	<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED>
	<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED_CONSERVATIVE>
	<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_DRAW_BUFFERS>
	<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER0>
	<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER1>
	<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER2>
	<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER3>
	<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER4>
	<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER5>
	<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER6>
	<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER7>
	<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER8>
	<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER9>
	<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER10>
	<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER11>
	<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER12>
	<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER13>
	<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER14>
	<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER15>
	<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COLOR_ATTACHMENTS>
	<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT1>
	<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT2>
	<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT3>
	<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT4>
	<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT5>
	<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT6>
	<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT7>
	<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT8>
	<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT9>
	<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT10>
	<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT11>
	<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT12>
	<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT13>
	<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT14>
	<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT15>
	<SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_3D>
	<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_SHADOW>
	<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY>
	<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY_SHADOW>
	<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE_SHADOW>
	<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D>
	<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_3D>
	<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_CUBE>
	<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D_ARRAY>
	<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D>
	<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_3D>
	<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_CUBE>
	<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SAMPLES>
	<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_BINDING>
	<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER>
	<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER>
	<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER_BINDING>
	<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER_BINDING>
	<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER>
	<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER>
	<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER_BINDING>
	<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER_BINDING>
	<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x3>
	<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x4>
	<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x2>
	<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x4>
	<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x2>
	<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x3>
	<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC2>
	<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC3>
	<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC4>
	<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_NORMALIZED>
	<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNED_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_INTEGER>
	<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_DIVISOR>
	<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_MODE>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_VARYINGS>
	<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_START>
	<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INTERLEAVED_ATTRIBS>
	<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SEPARATE_ATTRIBS>
	<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER>
	<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK>
	<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PAUSED>
	<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_ACTIVE>
	<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BINDING>
	<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_DEFAULT>
	<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH24_STENCIL8>
	<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER_BINDING>
	<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER>
	<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER>
	<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER_BINDING>
	<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_SAMPLES>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER>
	<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_BINDING>
	<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_START>
	<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_SIZE>
	<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_BLOCKS>
	<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_BLOCKS>
	<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_UNIFORM_BLOCKS>
	<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BUFFER_BINDINGS>
	<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BLOCK_SIZE>
	<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORM_BLOCKS>
	<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_TYPE>
	<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_SIZE>
	<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_INDEX>
	<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_OFFSET>
	<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_ARRAY_STRIDE>
	<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_MATRIX_STRIDE>
	<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_IS_ROW_MAJOR>
	<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_BINDING>
	<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_DATA_SIZE>
	<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OBJECT_TYPE>
	<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_CONDITION>
	<SYNC_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_STATUS>
	<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLAGS>
	<SYNC_FENCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FENCE>
	<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_GPU_COMMANDS_COMPLETE>
	<UNSIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNALED>
	<SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNALED>
	<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALREADY_SIGNALED>
	<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_EXPIRED>
	<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONDITION_SATISFIED>
	<WAIT_FAILED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</WAIT_FAILED>
	<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLUSH_COMMANDS_BIT>
	<COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR>
	<DEPTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH>
	<STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL>
	<MIN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN>
	<MAX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX>
	<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT24>
	<STREAM_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_READ>
	<STREAM_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_COPY>
	<STATIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_READ>
	<STATIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_COPY>
	<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_READ>
	<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_COPY>
	<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT32F>
	<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH32F_STENCIL8>
	<INVALID_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_INDEX>
	<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_IGNORED>
	<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<type public="1" get="accessor" set="null" static="1">
		<e path="lime.graphics.opengl.GLContextType"/>
		<meta><m n=":impl"/></meta>
	</type>
	<version public="1" get="accessor" set="null" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</version>
	<get_DEPTH_BUFFER_BIT get="inline" set="null" line="643" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_BUFFER_BIT>
	<get_STENCIL_BUFFER_BIT get="inline" set="null" line="644" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BUFFER_BIT>
	<get_COLOR_BUFFER_BIT get="inline" set="null" line="645" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_BUFFER_BIT>
	<get_POINTS get="inline" set="null" line="646" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_POINTS>
	<get_LINES get="inline" set="null" line="647" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINES>
	<get_LINE_LOOP get="inline" set="null" line="648" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINE_LOOP>
	<get_LINE_STRIP get="inline" set="null" line="649" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINE_STRIP>
	<get_TRIANGLES get="inline" set="null" line="650" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRIANGLES>
	<get_TRIANGLE_STRIP get="inline" set="null" line="651" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRIANGLE_STRIP>
	<get_TRIANGLE_FAN get="inline" set="null" line="652" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRIANGLE_FAN>
	<get_ZERO get="inline" set="null" line="653" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ZERO>
	<get_ONE get="inline" set="null" line="654" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE>
	<get_SRC_COLOR get="inline" set="null" line="655" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRC_COLOR>
	<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="656" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_SRC_COLOR>
	<get_SRC_ALPHA get="inline" set="null" line="657" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRC_ALPHA>
	<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="658" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_SRC_ALPHA>
	<get_DST_ALPHA get="inline" set="null" line="659" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DST_ALPHA>
	<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="660" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_DST_ALPHA>
	<get_DST_COLOR get="inline" set="null" line="661" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DST_COLOR>
	<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="662" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_DST_COLOR>
	<get_SRC_ALPHA_SATURATE get="inline" set="null" line="663" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRC_ALPHA_SATURATE>
	<get_FUNC_ADD get="inline" set="null" line="664" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FUNC_ADD>
	<get_BLEND_EQUATION get="inline" set="null" line="665" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_EQUATION>
	<get_BLEND_EQUATION_RGB get="inline" set="null" line="666" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_EQUATION_RGB>
	<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="667" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_EQUATION_ALPHA>
	<get_FUNC_SUBTRACT get="inline" set="null" line="668" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FUNC_SUBTRACT>
	<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="669" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FUNC_REVERSE_SUBTRACT>
	<get_BLEND_DST_RGB get="inline" set="null" line="670" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_DST_RGB>
	<get_BLEND_SRC_RGB get="inline" set="null" line="671" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_SRC_RGB>
	<get_BLEND_DST_ALPHA get="inline" set="null" line="672" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_DST_ALPHA>
	<get_BLEND_SRC_ALPHA get="inline" set="null" line="673" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_SRC_ALPHA>
	<get_CONSTANT_COLOR get="inline" set="null" line="674" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CONSTANT_COLOR>
	<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="675" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_CONSTANT_COLOR>
	<get_CONSTANT_ALPHA get="inline" set="null" line="676" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CONSTANT_ALPHA>
	<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="677" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ONE_MINUS_CONSTANT_ALPHA>
	<get_BLEND_COLOR get="inline" set="null" line="678" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND_COLOR>
	<get_ARRAY_BUFFER get="inline" set="null" line="679" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ARRAY_BUFFER>
	<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="680" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ELEMENT_ARRAY_BUFFER>
	<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="681" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ARRAY_BUFFER_BINDING>
	<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="682" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ELEMENT_ARRAY_BUFFER_BINDING>
	<get_STREAM_DRAW get="inline" set="null" line="683" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STREAM_DRAW>
	<get_STATIC_DRAW get="inline" set="null" line="684" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STATIC_DRAW>
	<get_DYNAMIC_DRAW get="inline" set="null" line="685" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DYNAMIC_DRAW>
	<get_BUFFER_SIZE get="inline" set="null" line="686" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BUFFER_SIZE>
	<get_BUFFER_USAGE get="inline" set="null" line="687" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BUFFER_USAGE>
	<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="688" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CURRENT_VERTEX_ATTRIB>
	<get_FRONT get="inline" set="null" line="689" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRONT>
	<get_BACK get="inline" set="null" line="690" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BACK>
	<get_FRONT_AND_BACK get="inline" set="null" line="691" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRONT_AND_BACK>
	<get_CULL_FACE get="inline" set="null" line="692" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CULL_FACE>
	<get_BLEND get="inline" set="null" line="693" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLEND>
	<get_DITHER get="inline" set="null" line="694" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DITHER>
	<get_STENCIL_TEST get="inline" set="null" line="695" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_TEST>
	<get_DEPTH_TEST get="inline" set="null" line="696" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_TEST>
	<get_SCISSOR_TEST get="inline" set="null" line="697" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SCISSOR_TEST>
	<get_POLYGON_OFFSET_FILL get="inline" set="null" line="698" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_POLYGON_OFFSET_FILL>
	<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="699" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_ALPHA_TO_COVERAGE>
	<get_SAMPLE_COVERAGE get="inline" set="null" line="700" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_COVERAGE>
	<get_NO_ERROR get="inline" set="null" line="701" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NO_ERROR>
	<get_INVALID_ENUM get="inline" set="null" line="702" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_ENUM>
	<get_INVALID_VALUE get="inline" set="null" line="703" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_VALUE>
	<get_INVALID_OPERATION get="inline" set="null" line="704" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_OPERATION>
	<get_OUT_OF_MEMORY get="inline" set="null" line="705" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_OUT_OF_MEMORY>
	<get_CW get="inline" set="null" line="706" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CW>
	<get_CCW get="inline" set="null" line="707" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CCW>
	<get_LINE_WIDTH get="inline" set="null" line="708" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINE_WIDTH>
	<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="709" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALIASED_POINT_SIZE_RANGE>
	<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="710" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALIASED_LINE_WIDTH_RANGE>
	<get_CULL_FACE_MODE get="inline" set="null" line="711" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CULL_FACE_MODE>
	<get_FRONT_FACE get="inline" set="null" line="712" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRONT_FACE>
	<get_DEPTH_RANGE get="inline" set="null" line="713" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_RANGE>
	<get_DEPTH_WRITEMASK get="inline" set="null" line="714" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_WRITEMASK>
	<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="715" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_CLEAR_VALUE>
	<get_DEPTH_FUNC get="inline" set="null" line="716" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_FUNC>
	<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="717" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_CLEAR_VALUE>
	<get_STENCIL_FUNC get="inline" set="null" line="718" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_FUNC>
	<get_STENCIL_FAIL get="inline" set="null" line="719" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_FAIL>
	<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="720" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_PASS_DEPTH_FAIL>
	<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="721" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_PASS_DEPTH_PASS>
	<get_STENCIL_REF get="inline" set="null" line="722" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_REF>
	<get_STENCIL_VALUE_MASK get="inline" set="null" line="723" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_VALUE_MASK>
	<get_STENCIL_WRITEMASK get="inline" set="null" line="724" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_WRITEMASK>
	<get_STENCIL_BACK_FUNC get="inline" set="null" line="725" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_FUNC>
	<get_STENCIL_BACK_FAIL get="inline" set="null" line="726" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="727" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_PASS_DEPTH_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="728" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_PASS_DEPTH_PASS>
	<get_STENCIL_BACK_REF get="inline" set="null" line="729" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_REF>
	<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="730" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_VALUE_MASK>
	<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="731" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BACK_WRITEMASK>
	<get_VIEWPORT get="inline" set="null" line="732" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VIEWPORT>
	<get_SCISSOR_BOX get="inline" set="null" line="733" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SCISSOR_BOX>
	<get_COLOR_CLEAR_VALUE get="inline" set="null" line="734" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_CLEAR_VALUE>
	<get_COLOR_WRITEMASK get="inline" set="null" line="735" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_WRITEMASK>
	<get_UNPACK_ALIGNMENT get="inline" set="null" line="736" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_ALIGNMENT>
	<get_PACK_ALIGNMENT get="inline" set="null" line="737" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PACK_ALIGNMENT>
	<get_MAX_TEXTURE_SIZE get="inline" set="null" line="738" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TEXTURE_SIZE>
	<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="739" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VIEWPORT_DIMS>
	<get_SUBPIXEL_BITS get="inline" set="null" line="740" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SUBPIXEL_BITS>
	<get_RED_BITS get="inline" set="null" line="741" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RED_BITS>
	<get_GREEN_BITS get="inline" set="null" line="742" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_GREEN_BITS>
	<get_BLUE_BITS get="inline" set="null" line="743" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BLUE_BITS>
	<get_ALPHA_BITS get="inline" set="null" line="744" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALPHA_BITS>
	<get_DEPTH_BITS get="inline" set="null" line="745" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_BITS>
	<get_STENCIL_BITS get="inline" set="null" line="746" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_BITS>
	<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="747" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_POLYGON_OFFSET_UNITS>
	<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="748" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_POLYGON_OFFSET_FACTOR>
	<get_TEXTURE_BINDING_2D get="inline" set="null" line="749" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BINDING_2D>
	<get_SAMPLE_BUFFERS get="inline" set="null" line="750" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_BUFFERS>
	<get_SAMPLES get="inline" set="null" line="751" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLES>
	<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="752" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_COVERAGE_VALUE>
	<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="753" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLE_COVERAGE_INVERT>
	<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="754" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COMPRESSED_TEXTURE_FORMATS>
	<get_DONT_CARE get="inline" set="null" line="755" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DONT_CARE>
	<get_FASTEST get="inline" set="null" line="756" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FASTEST>
	<get_NICEST get="inline" set="null" line="757" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NICEST>
	<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="758" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_GENERATE_MIPMAP_HINT>
	<get_BYTE get="inline" set="null" line="759" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BYTE>
	<get_UNSIGNED_BYTE get="inline" set="null" line="760" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_BYTE>
	<get_SHORT get="inline" set="null" line="761" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SHORT>
	<get_UNSIGNED_SHORT get="inline" set="null" line="762" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_SHORT>
	<get_INT get="inline" set="null" line="763" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT>
	<get_UNSIGNED_INT get="inline" set="null" line="764" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT>
	<get_FLOAT get="inline" set="null" line="765" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT>
	<get_DEPTH_COMPONENT get="inline" set="null" line="766" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_COMPONENT>
	<get_ALPHA get="inline" set="null" line="767" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALPHA>
	<get_RGB get="inline" set="null" line="768" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB>
	<get_RGBA get="inline" set="null" line="769" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA>
	<get_LUMINANCE get="inline" set="null" line="770" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LUMINANCE>
	<get_LUMINANCE_ALPHA get="inline" set="null" line="771" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LUMINANCE_ALPHA>
	<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="772" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_SHORT_4_4_4_4>
	<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="773" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_SHORT_5_5_5_1>
	<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="774" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_SHORT_5_6_5>
	<get_FRAGMENT_SHADER get="inline" set="null" line="775" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAGMENT_SHADER>
	<get_VERTEX_SHADER get="inline" set="null" line="776" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_SHADER>
	<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="777" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_ATTRIBS>
	<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="778" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_UNIFORM_VECTORS>
	<get_MAX_VARYING_VECTORS get="inline" set="null" line="779" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VARYING_VECTORS>
	<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="780" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="781" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="782" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TEXTURE_IMAGE_UNITS>
	<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="783" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_FRAGMENT_UNIFORM_VECTORS>
	<get_SHADER_TYPE get="inline" set="null" line="784" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SHADER_TYPE>
	<get_DELETE_STATUS get="inline" set="null" line="785" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DELETE_STATUS>
	<get_LINK_STATUS get="inline" set="null" line="786" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINK_STATUS>
	<get_VALIDATE_STATUS get="inline" set="null" line="787" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VALIDATE_STATUS>
	<get_ATTACHED_SHADERS get="inline" set="null" line="788" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ATTACHED_SHADERS>
	<get_ACTIVE_UNIFORMS get="inline" set="null" line="789" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ACTIVE_UNIFORMS>
	<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="790" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ACTIVE_ATTRIBUTES>
	<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="791" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SHADING_LANGUAGE_VERSION>
	<get_CURRENT_PROGRAM get="inline" set="null" line="792" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CURRENT_PROGRAM>
	<get_NEVER get="inline" set="null" line="793" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NEVER>
	<get_LESS get="inline" set="null" line="794" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LESS>
	<get_EQUAL get="inline" set="null" line="795" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_EQUAL>
	<get_LEQUAL get="inline" set="null" line="796" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LEQUAL>
	<get_GREATER get="inline" set="null" line="797" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_GREATER>
	<get_NOTEQUAL get="inline" set="null" line="798" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NOTEQUAL>
	<get_GEQUAL get="inline" set="null" line="799" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_GEQUAL>
	<get_ALWAYS get="inline" set="null" line="800" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALWAYS>
	<get_KEEP get="inline" set="null" line="801" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_KEEP>
	<get_REPLACE get="inline" set="null" line="802" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_REPLACE>
	<get_INCR get="inline" set="null" line="803" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INCR>
	<get_DECR get="inline" set="null" line="804" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DECR>
	<get_INVERT get="inline" set="null" line="805" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVERT>
	<get_INCR_WRAP get="inline" set="null" line="806" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INCR_WRAP>
	<get_DECR_WRAP get="inline" set="null" line="807" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DECR_WRAP>
	<get_VENDOR get="inline" set="null" line="808" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VENDOR>
	<get_RENDERER get="inline" set="null" line="809" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERER>
	<get_VERSION get="inline" set="null" line="810" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERSION>
	<get_NEAREST get="inline" set="null" line="811" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NEAREST>
	<get_LINEAR get="inline" set="null" line="812" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINEAR>
	<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="813" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NEAREST_MIPMAP_NEAREST>
	<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="814" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINEAR_MIPMAP_NEAREST>
	<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="815" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NEAREST_MIPMAP_LINEAR>
	<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="816" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LINEAR_MIPMAP_LINEAR>
	<get_TEXTURE_MAG_FILTER get="inline" set="null" line="817" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MAG_FILTER>
	<get_TEXTURE_MIN_FILTER get="inline" set="null" line="818" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MIN_FILTER>
	<get_TEXTURE_WRAP_S get="inline" set="null" line="819" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_WRAP_S>
	<get_TEXTURE_WRAP_T get="inline" set="null" line="820" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_WRAP_T>
	<get_TEXTURE_2D get="inline" set="null" line="821" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_2D>
	<get_TEXTURE get="inline" set="null" line="822" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE>
	<get_TEXTURE_CUBE_MAP get="inline" set="null" line="823" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP>
	<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="824" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BINDING_CUBE_MAP>
	<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="825" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_X>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="826" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="827" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="828" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="829" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="830" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="831" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_CUBE_MAP_TEXTURE_SIZE>
	<get_TEXTURE0 get="inline" set="null" line="832" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE0>
	<get_TEXTURE1 get="inline" set="null" line="833" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE1>
	<get_TEXTURE2 get="inline" set="null" line="834" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE2>
	<get_TEXTURE3 get="inline" set="null" line="835" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE3>
	<get_TEXTURE4 get="inline" set="null" line="836" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE4>
	<get_TEXTURE5 get="inline" set="null" line="837" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE5>
	<get_TEXTURE6 get="inline" set="null" line="838" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE6>
	<get_TEXTURE7 get="inline" set="null" line="839" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE7>
	<get_TEXTURE8 get="inline" set="null" line="840" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE8>
	<get_TEXTURE9 get="inline" set="null" line="841" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE9>
	<get_TEXTURE10 get="inline" set="null" line="842" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE10>
	<get_TEXTURE11 get="inline" set="null" line="843" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE11>
	<get_TEXTURE12 get="inline" set="null" line="844" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE12>
	<get_TEXTURE13 get="inline" set="null" line="845" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE13>
	<get_TEXTURE14 get="inline" set="null" line="846" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE14>
	<get_TEXTURE15 get="inline" set="null" line="847" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE15>
	<get_TEXTURE16 get="inline" set="null" line="848" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE16>
	<get_TEXTURE17 get="inline" set="null" line="849" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE17>
	<get_TEXTURE18 get="inline" set="null" line="850" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE18>
	<get_TEXTURE19 get="inline" set="null" line="851" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE19>
	<get_TEXTURE20 get="inline" set="null" line="852" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE20>
	<get_TEXTURE21 get="inline" set="null" line="853" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE21>
	<get_TEXTURE22 get="inline" set="null" line="854" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE22>
	<get_TEXTURE23 get="inline" set="null" line="855" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE23>
	<get_TEXTURE24 get="inline" set="null" line="856" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE24>
	<get_TEXTURE25 get="inline" set="null" line="857" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE25>
	<get_TEXTURE26 get="inline" set="null" line="858" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE26>
	<get_TEXTURE27 get="inline" set="null" line="859" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE27>
	<get_TEXTURE28 get="inline" set="null" line="860" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE28>
	<get_TEXTURE29 get="inline" set="null" line="861" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE29>
	<get_TEXTURE30 get="inline" set="null" line="862" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE30>
	<get_TEXTURE31 get="inline" set="null" line="863" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE31>
	<get_ACTIVE_TEXTURE get="inline" set="null" line="864" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ACTIVE_TEXTURE>
	<get_REPEAT get="inline" set="null" line="865" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_REPEAT>
	<get_CLAMP_TO_EDGE get="inline" set="null" line="866" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CLAMP_TO_EDGE>
	<get_MIRRORED_REPEAT get="inline" set="null" line="867" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MIRRORED_REPEAT>
	<get_FLOAT_VEC2 get="inline" set="null" line="868" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_VEC2>
	<get_FLOAT_VEC3 get="inline" set="null" line="869" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_VEC3>
	<get_FLOAT_VEC4 get="inline" set="null" line="870" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_VEC4>
	<get_INT_VEC2 get="inline" set="null" line="871" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_VEC2>
	<get_INT_VEC3 get="inline" set="null" line="872" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_VEC3>
	<get_INT_VEC4 get="inline" set="null" line="873" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_VEC4>
	<get_BOOL get="inline" set="null" line="874" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BOOL>
	<get_BOOL_VEC2 get="inline" set="null" line="875" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BOOL_VEC2>
	<get_BOOL_VEC3 get="inline" set="null" line="876" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BOOL_VEC3>
	<get_BOOL_VEC4 get="inline" set="null" line="877" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BOOL_VEC4>
	<get_FLOAT_MAT2 get="inline" set="null" line="878" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT2>
	<get_FLOAT_MAT3 get="inline" set="null" line="879" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT3>
	<get_FLOAT_MAT4 get="inline" set="null" line="880" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT4>
	<get_SAMPLER_2D get="inline" set="null" line="881" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_2D>
	<get_SAMPLER_CUBE get="inline" set="null" line="882" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_CUBE>
	<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="883" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_ENABLED>
	<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="884" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_SIZE>
	<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="885" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_STRIDE>
	<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="886" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_TYPE>
	<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="887" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="888" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_POINTER>
	<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="889" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<get_COMPILE_STATUS get="inline" set="null" line="890" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COMPILE_STATUS>
	<get_LOW_FLOAT get="inline" set="null" line="891" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LOW_FLOAT>
	<get_MEDIUM_FLOAT get="inline" set="null" line="892" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MEDIUM_FLOAT>
	<get_HIGH_FLOAT get="inline" set="null" line="893" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_HIGH_FLOAT>
	<get_LOW_INT get="inline" set="null" line="894" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_LOW_INT>
	<get_MEDIUM_INT get="inline" set="null" line="895" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MEDIUM_INT>
	<get_HIGH_INT get="inline" set="null" line="896" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_HIGH_INT>
	<get_FRAMEBUFFER get="inline" set="null" line="897" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER>
	<get_RENDERBUFFER get="inline" set="null" line="898" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER>
	<get_RGBA4 get="inline" set="null" line="899" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA4>
	<get_RGB5_A1 get="inline" set="null" line="900" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB5_A1>
	<get_RGB565 get="inline" set="null" line="901" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB565>
	<get_DEPTH_COMPONENT16 get="inline" set="null" line="902" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_COMPONENT16>
	<get_STENCIL_INDEX get="inline" set="null" line="903" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_INDEX>
	<get_STENCIL_INDEX8 get="inline" set="null" line="904" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_INDEX8>
	<get_DEPTH_STENCIL get="inline" set="null" line="905" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_STENCIL>
	<get_RENDERBUFFER_WIDTH get="inline" set="null" line="906" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_WIDTH>
	<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="907" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_HEIGHT>
	<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="908" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_INTERNAL_FORMAT>
	<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="909" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_RED_SIZE>
	<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="910" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_GREEN_SIZE>
	<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="911" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_BLUE_SIZE>
	<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="912" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_ALPHA_SIZE>
	<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="913" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_DEPTH_SIZE>
	<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="914" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_STENCIL_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="915" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="916" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="917" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="918" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<get_COLOR_ATTACHMENT0 get="inline" set="null" line="919" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT0>
	<get_DEPTH_ATTACHMENT get="inline" set="null" line="920" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_ATTACHMENT>
	<get_STENCIL_ATTACHMENT get="inline" set="null" line="921" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL_ATTACHMENT>
	<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="922" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_STENCIL_ATTACHMENT>
	<get_NONE get="inline" set="null" line="923" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_NONE>
	<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="924" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_COMPLETE>
	<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="925" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="926" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="927" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="928" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_UNSUPPORTED>
	<get_FRAMEBUFFER_BINDING get="inline" set="null" line="929" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_BINDING get="inline" set="null" line="930" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_BINDING>
	<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="931" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_RENDERBUFFER_SIZE>
	<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="932" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_FRAMEBUFFER_OPERATION>
	<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="933" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_FLIP_Y_WEBGL>
	<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="934" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="935" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CONTEXT_LOST_WEBGL>
	<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="936" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="937" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_BROWSER_DEFAULT_WEBGL>
	<get_type get="inline" set="null" line="938" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<e path="lime.graphics.opengl.GLContextType"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_type>
	<get_version get="inline" set="null" line="939" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_version>
	<get_READ_BUFFER get="inline" set="null" line="941" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_READ_BUFFER>
	<get_UNPACK_ROW_LENGTH get="inline" set="null" line="942" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_ROW_LENGTH>
	<get_UNPACK_SKIP_ROWS get="inline" set="null" line="943" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_SKIP_ROWS>
	<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="944" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_SKIP_PIXELS>
	<get_PACK_ROW_LENGTH get="inline" set="null" line="945" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PACK_ROW_LENGTH>
	<get_PACK_SKIP_ROWS get="inline" set="null" line="946" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PACK_SKIP_ROWS>
	<get_PACK_SKIP_PIXELS get="inline" set="null" line="947" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PACK_SKIP_PIXELS>
	<get_TEXTURE_BINDING_3D get="inline" set="null" line="948" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BINDING_3D>
	<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="949" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_SKIP_IMAGES>
	<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="950" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNPACK_IMAGE_HEIGHT>
	<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="951" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_3D_TEXTURE_SIZE>
	<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="952" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_ELEMENTS_VERTICES>
	<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="953" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_ELEMENTS_INDICES>
	<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="954" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TEXTURE_LOD_BIAS>
	<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="955" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="956" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="957" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_ARRAY_TEXTURE_LAYERS>
	<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="958" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MIN_PROGRAM_TEXEL_OFFSET>
	<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="959" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_PROGRAM_TEXEL_OFFSET>
	<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="960" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VARYING_COMPONENTS>
	<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="961" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
	<get_RASTERIZER_DISCARD get="inline" set="null" line="962" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RASTERIZER_DISCARD>
	<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="963" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ARRAY_BINDING>
	<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="964" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_OUTPUT_COMPONENTS>
	<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="965" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_FRAGMENT_INPUT_COMPONENTS>
	<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="966" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_SERVER_WAIT_TIMEOUT>
	<get_MAX_ELEMENT_INDEX get="inline" set="null" line="967" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_ELEMENT_INDEX>
	<get_RED get="inline" set="null" line="969" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RED>
	<get_RGB8 get="inline" set="null" line="970" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB8>
	<get_RGBA8 get="inline" set="null" line="971" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA8>
	<get_RGB10_A2 get="inline" set="null" line="972" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB10_A2>
	<get_TEXTURE_3D get="inline" set="null" line="973" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_3D>
	<get_TEXTURE_WRAP_R get="inline" set="null" line="974" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_WRAP_R>
	<get_TEXTURE_MIN_LOD get="inline" set="null" line="975" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MIN_LOD>
	<get_TEXTURE_MAX_LOD get="inline" set="null" line="976" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MAX_LOD>
	<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="977" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BASE_LEVEL>
	<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="978" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_MAX_LEVEL>
	<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="979" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_COMPARE_MODE>
	<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="980" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_COMPARE_FUNC>
	<get_SRGB get="inline" set="null" line="981" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRGB>
	<get_SRGB8 get="inline" set="null" line="982" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRGB8>
	<get_SRGB8_ALPHA8 get="inline" set="null" line="983" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SRGB8_ALPHA8>
	<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="984" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COMPARE_REF_TO_TEXTURE>
	<get_RGBA32F get="inline" set="null" line="985" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA32F>
	<get_RGB32F get="inline" set="null" line="986" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB32F>
	<get_RGBA16F get="inline" set="null" line="987" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA16F>
	<get_RGB16F get="inline" set="null" line="988" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB16F>
	<get_TEXTURE_2D_ARRAY get="inline" set="null" line="989" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_2D_ARRAY>
	<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="990" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_BINDING_2D_ARRAY>
	<get_R11F_G11F_B10F get="inline" set="null" line="991" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R11F_G11F_B10F>
	<get_RGB9_E5 get="inline" set="null" line="992" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB9_E5>
	<get_RGBA32UI get="inline" set="null" line="993" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA32UI>
	<get_RGB32UI get="inline" set="null" line="994" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB32UI>
	<get_RGBA16UI get="inline" set="null" line="995" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA16UI>
	<get_RGB16UI get="inline" set="null" line="996" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB16UI>
	<get_RGBA8UI get="inline" set="null" line="997" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA8UI>
	<get_RGB8UI get="inline" set="null" line="998" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB8UI>
	<get_RGBA32I get="inline" set="null" line="999" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA32I>
	<get_RGB32I get="inline" set="null" line="1000" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB32I>
	<get_RGBA16I get="inline" set="null" line="1001" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA16I>
	<get_RGB16I get="inline" set="null" line="1002" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB16I>
	<get_RGBA8I get="inline" set="null" line="1003" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA8I>
	<get_RGB8I get="inline" set="null" line="1004" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB8I>
	<get_RED_INTEGER get="inline" set="null" line="1005" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RED_INTEGER>
	<get_RGB_INTEGER get="inline" set="null" line="1006" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB_INTEGER>
	<get_RGBA_INTEGER get="inline" set="null" line="1007" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA_INTEGER>
	<get_R8 get="inline" set="null" line="1008" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R8>
	<get_RG8 get="inline" set="null" line="1009" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG8>
	<get_R16F get="inline" set="null" line="1010" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R16F>
	<get_R32F get="inline" set="null" line="1011" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R32F>
	<get_RG16F get="inline" set="null" line="1012" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG16F>
	<get_RG32F get="inline" set="null" line="1013" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG32F>
	<get_R8I get="inline" set="null" line="1014" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R8I>
	<get_R8UI get="inline" set="null" line="1015" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R8UI>
	<get_R16I get="inline" set="null" line="1016" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R16I>
	<get_R16UI get="inline" set="null" line="1017" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R16UI>
	<get_R32I get="inline" set="null" line="1018" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R32I>
	<get_R32UI get="inline" set="null" line="1019" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R32UI>
	<get_RG8I get="inline" set="null" line="1020" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG8I>
	<get_RG8UI get="inline" set="null" line="1021" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG8UI>
	<get_RG16I get="inline" set="null" line="1022" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG16I>
	<get_RG16UI get="inline" set="null" line="1023" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG16UI>
	<get_RG32I get="inline" set="null" line="1024" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG32I>
	<get_RG32UI get="inline" set="null" line="1025" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG32UI>
	<get_R8_SNORM get="inline" set="null" line="1026" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_R8_SNORM>
	<get_RG8_SNORM get="inline" set="null" line="1027" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG8_SNORM>
	<get_RGB8_SNORM get="inline" set="null" line="1028" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB8_SNORM>
	<get_RGBA8_SNORM get="inline" set="null" line="1029" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGBA8_SNORM>
	<get_RGB10_A2UI get="inline" set="null" line="1030" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RGB10_A2UI>
	<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="1031" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_IMMUTABLE_FORMAT>
	<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="1032" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TEXTURE_IMMUTABLE_LEVELS>
	<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="1034" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_2_10_10_10_REV>
	<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="1035" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_10F_11F_11F_REV>
	<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="1036" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_5_9_9_9_REV>
	<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="1037" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
	<get_UNSIGNED_INT_24_8 get="inline" set="null" line="1038" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_24_8>
	<get_HALF_FLOAT get="inline" set="null" line="1039" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_HALF_FLOAT>
	<get_RG get="inline" set="null" line="1040" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG>
	<get_RG_INTEGER get="inline" set="null" line="1041" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RG_INTEGER>
	<get_INT_2_10_10_10_REV get="inline" set="null" line="1042" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_2_10_10_10_REV>
	<get_CURRENT_QUERY get="inline" set="null" line="1044" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CURRENT_QUERY>
	<get_QUERY_RESULT get="inline" set="null" line="1045" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_QUERY_RESULT>
	<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="1046" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_QUERY_RESULT_AVAILABLE>
	<get_ANY_SAMPLES_PASSED get="inline" set="null" line="1047" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ANY_SAMPLES_PASSED>
	<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="1048" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
	<get_MAX_DRAW_BUFFERS get="inline" set="null" line="1050" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_DRAW_BUFFERS>
	<get_DRAW_BUFFER0 get="inline" set="null" line="1051" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER0>
	<get_DRAW_BUFFER1 get="inline" set="null" line="1052" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER1>
	<get_DRAW_BUFFER2 get="inline" set="null" line="1053" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER2>
	<get_DRAW_BUFFER3 get="inline" set="null" line="1054" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER3>
	<get_DRAW_BUFFER4 get="inline" set="null" line="1055" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER4>
	<get_DRAW_BUFFER5 get="inline" set="null" line="1056" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER5>
	<get_DRAW_BUFFER6 get="inline" set="null" line="1057" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER6>
	<get_DRAW_BUFFER7 get="inline" set="null" line="1058" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER7>
	<get_DRAW_BUFFER8 get="inline" set="null" line="1059" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER8>
	<get_DRAW_BUFFER9 get="inline" set="null" line="1060" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER9>
	<get_DRAW_BUFFER10 get="inline" set="null" line="1061" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER10>
	<get_DRAW_BUFFER11 get="inline" set="null" line="1062" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER11>
	<get_DRAW_BUFFER12 get="inline" set="null" line="1063" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER12>
	<get_DRAW_BUFFER13 get="inline" set="null" line="1064" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER13>
	<get_DRAW_BUFFER14 get="inline" set="null" line="1065" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER14>
	<get_DRAW_BUFFER15 get="inline" set="null" line="1066" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_BUFFER15>
	<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="1067" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COLOR_ATTACHMENTS>
	<get_COLOR_ATTACHMENT1 get="inline" set="null" line="1068" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT1>
	<get_COLOR_ATTACHMENT2 get="inline" set="null" line="1069" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT2>
	<get_COLOR_ATTACHMENT3 get="inline" set="null" line="1070" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT3>
	<get_COLOR_ATTACHMENT4 get="inline" set="null" line="1071" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT4>
	<get_COLOR_ATTACHMENT5 get="inline" set="null" line="1072" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT5>
	<get_COLOR_ATTACHMENT6 get="inline" set="null" line="1073" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT6>
	<get_COLOR_ATTACHMENT7 get="inline" set="null" line="1074" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT7>
	<get_COLOR_ATTACHMENT8 get="inline" set="null" line="1075" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT8>
	<get_COLOR_ATTACHMENT9 get="inline" set="null" line="1076" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT9>
	<get_COLOR_ATTACHMENT10 get="inline" set="null" line="1077" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT10>
	<get_COLOR_ATTACHMENT11 get="inline" set="null" line="1078" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT11>
	<get_COLOR_ATTACHMENT12 get="inline" set="null" line="1079" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT12>
	<get_COLOR_ATTACHMENT13 get="inline" set="null" line="1080" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT13>
	<get_COLOR_ATTACHMENT14 get="inline" set="null" line="1081" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT14>
	<get_COLOR_ATTACHMENT15 get="inline" set="null" line="1082" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR_ATTACHMENT15>
	<get_SAMPLER_3D get="inline" set="null" line="1084" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_3D>
	<get_SAMPLER_2D_SHADOW get="inline" set="null" line="1085" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_2D_SHADOW>
	<get_SAMPLER_2D_ARRAY get="inline" set="null" line="1086" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_2D_ARRAY>
	<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="1087" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_2D_ARRAY_SHADOW>
	<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="1088" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_CUBE_SHADOW>
	<get_INT_SAMPLER_2D get="inline" set="null" line="1089" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_SAMPLER_2D>
	<get_INT_SAMPLER_3D get="inline" set="null" line="1090" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_SAMPLER_3D>
	<get_INT_SAMPLER_CUBE get="inline" set="null" line="1091" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_SAMPLER_CUBE>
	<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1092" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INT_SAMPLER_2D_ARRAY>
	<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="1093" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_SAMPLER_2D>
	<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="1094" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_SAMPLER_3D>
	<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="1095" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_SAMPLER_CUBE>
	<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1096" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<get_MAX_SAMPLES get="inline" set="null" line="1097" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_SAMPLES>
	<get_SAMPLER_BINDING get="inline" set="null" line="1098" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SAMPLER_BINDING>
	<get_PIXEL_PACK_BUFFER get="inline" set="null" line="1100" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PIXEL_PACK_BUFFER>
	<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="1101" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PIXEL_UNPACK_BUFFER>
	<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="1102" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PIXEL_PACK_BUFFER_BINDING>
	<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="1103" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_PIXEL_UNPACK_BUFFER_BINDING>
	<get_COPY_READ_BUFFER get="inline" set="null" line="1104" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COPY_READ_BUFFER>
	<get_COPY_WRITE_BUFFER get="inline" set="null" line="1105" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COPY_WRITE_BUFFER>
	<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="1106" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COPY_READ_BUFFER_BINDING>
	<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="1107" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COPY_WRITE_BUFFER_BINDING>
	<get_FLOAT_MAT2x3 get="inline" set="null" line="1109" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT2x3>
	<get_FLOAT_MAT2x4 get="inline" set="null" line="1110" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT2x4>
	<get_FLOAT_MAT3x2 get="inline" set="null" line="1111" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT3x2>
	<get_FLOAT_MAT3x4 get="inline" set="null" line="1112" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT3x4>
	<get_FLOAT_MAT4x2 get="inline" set="null" line="1113" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT4x2>
	<get_FLOAT_MAT4x3 get="inline" set="null" line="1114" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FLOAT_MAT4x3>
	<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="1115" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_VEC2>
	<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="1116" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_VEC3>
	<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="1117" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_INT_VEC4>
	<get_UNSIGNED_NORMALIZED get="inline" set="null" line="1118" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNED_NORMALIZED>
	<get_SIGNED_NORMALIZED get="inline" set="null" line="1119" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SIGNED_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="1121" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_INTEGER>
	<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="1122" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
	<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="1124" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="1125" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="1126" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_VARYINGS>
	<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="1127" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_START>
	<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="1128" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="1129" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="1130" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="1131" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="1132" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INTERLEAVED_ATTRIBS>
	<get_SEPARATE_ATTRIBS get="inline" set="null" line="1133" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SEPARATE_ATTRIBS>
	<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="1134" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER>
	<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="1135" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<get_TRANSFORM_FEEDBACK get="inline" set="null" line="1136" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK>
	<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="1137" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_PAUSED>
	<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="1138" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_ACTIVE>
	<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="1139" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TRANSFORM_FEEDBACK_BINDING>
	<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="1141" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="1142" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="1143" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="1144" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="1145" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="1146" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="1147" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="1148" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="1149" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_DEFAULT>
	<get_DEPTH24_STENCIL8 get="inline" set="null" line="1150" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH24_STENCIL8>
	<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="1151" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_FRAMEBUFFER_BINDING>
	<get_READ_FRAMEBUFFER get="inline" set="null" line="1152" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_READ_FRAMEBUFFER>
	<get_DRAW_FRAMEBUFFER get="inline" set="null" line="1153" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DRAW_FRAMEBUFFER>
	<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="1154" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_READ_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="1155" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_RENDERBUFFER_SAMPLES>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="1156" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="1157" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<get_UNIFORM_BUFFER get="inline" set="null" line="1159" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER>
	<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="1160" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER_BINDING>
	<get_UNIFORM_BUFFER_START get="inline" set="null" line="1161" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER_START>
	<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="1162" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER_SIZE>
	<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="1163" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_VERTEX_UNIFORM_BLOCKS>
	<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="1164" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
	<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="1165" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COMBINED_UNIFORM_BLOCKS>
	<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="1166" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_UNIFORM_BUFFER_BINDINGS>
	<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="1167" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_UNIFORM_BLOCK_SIZE>
	<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="1168" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="1169" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="1170" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="1171" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ACTIVE_UNIFORM_BLOCKS>
	<get_UNIFORM_TYPE get="inline" set="null" line="1172" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_TYPE>
	<get_UNIFORM_SIZE get="inline" set="null" line="1173" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_SIZE>
	<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="1174" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_INDEX>
	<get_UNIFORM_OFFSET get="inline" set="null" line="1175" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_OFFSET>
	<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="1176" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_ARRAY_STRIDE>
	<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="1177" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_MATRIX_STRIDE>
	<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="1178" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_IS_ROW_MAJOR>
	<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="1179" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_BINDING>
	<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="1180" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_DATA_SIZE>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="1181" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="1182" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="1183" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="1184" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<get_OBJECT_TYPE get="inline" set="null" line="1186" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_OBJECT_TYPE>
	<get_SYNC_CONDITION get="inline" set="null" line="1187" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_CONDITION>
	<get_SYNC_STATUS get="inline" set="null" line="1188" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_STATUS>
	<get_SYNC_FLAGS get="inline" set="null" line="1189" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_FLAGS>
	<get_SYNC_FENCE get="inline" set="null" line="1190" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_FENCE>
	<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="1191" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_GPU_COMMANDS_COMPLETE>
	<get_UNSIGNALED get="inline" set="null" line="1192" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_UNSIGNALED>
	<get_SIGNALED get="inline" set="null" line="1193" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SIGNALED>
	<get_ALREADY_SIGNALED get="inline" set="null" line="1194" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ALREADY_SIGNALED>
	<get_TIMEOUT_EXPIRED get="inline" set="null" line="1195" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TIMEOUT_EXPIRED>
	<get_CONDITION_SATISFIED get="inline" set="null" line="1196" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_CONDITION_SATISFIED>
	<get_WAIT_FAILED get="inline" set="null" line="1197" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_WAIT_FAILED>
	<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="1198" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_SYNC_FLUSH_COMMANDS_BIT>
	<get_COLOR get="inline" set="null" line="1200" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_COLOR>
	<get_DEPTH get="inline" set="null" line="1201" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH>
	<get_STENCIL get="inline" set="null" line="1202" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STENCIL>
	<get_MIN get="inline" set="null" line="1203" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MIN>
	<get_MAX get="inline" set="null" line="1204" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX>
	<get_DEPTH_COMPONENT24 get="inline" set="null" line="1205" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_COMPONENT24>
	<get_STREAM_READ get="inline" set="null" line="1206" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STREAM_READ>
	<get_STREAM_COPY get="inline" set="null" line="1207" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STREAM_COPY>
	<get_STATIC_READ get="inline" set="null" line="1208" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STATIC_READ>
	<get_STATIC_COPY get="inline" set="null" line="1209" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_STATIC_COPY>
	<get_DYNAMIC_READ get="inline" set="null" line="1210" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DYNAMIC_READ>
	<get_DYNAMIC_COPY get="inline" set="null" line="1211" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DYNAMIC_COPY>
	<get_DEPTH_COMPONENT32F get="inline" set="null" line="1212" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH_COMPONENT32F>
	<get_DEPTH32F_STENCIL8 get="inline" set="null" line="1213" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_DEPTH32F_STENCIL8>
	<get_INVALID_INDEX get="inline" set="null" line="1214" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_INVALID_INDEX>
	<get_TIMEOUT_IGNORED get="inline" set="null" line="1215" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_TIMEOUT_IGNORED>
	<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="1216" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<activeTexture public="1" get="inline" set="null" line="1219" static="1">
		<f a="this:texture">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</activeTexture>
	<attachShader public="1" get="inline" set="null" line="1226" static="1">
		<f a="this:program:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</attachShader>
	<beginQuery public="1" get="inline" set="null" line="1233" static="1">
		<f a="this:target:query">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginQuery>
	<beginTransformFeedback public="1" get="inline" set="null" line="1240" static="1">
		<f a="this:primitiveNode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginTransformFeedback>
	<bindAttribLocation public="1" get="inline" set="null" line="1247" static="1">
		<f a="this:program:index:name">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindAttribLocation>
	<bindBuffer public="1" get="inline" set="null" line="1254" static="1">
		<f a="this:target:buffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBuffer>
	<bindBufferBase public="1" get="inline" set="null" line="1261" static="1">
		<f a="this:target:index:buffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferBase>
	<bindBufferRange public="1" get="inline" set="null" line="1268" static="1">
		<f a="this:target:index:buffer:offset:size">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferRange>
	<bindFramebuffer public="1" get="inline" set="null" line="1275" static="1">
		<f a="this:target:framebuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindFramebuffer>
	<bindRenderbuffer public="1" get="inline" set="null" line="1282" static="1">
		<f a="this:target:renderbuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindRenderbuffer>
	<bindSampler public="1" get="inline" set="null" line="1289" static="1">
		<f a="this:unit:sampler">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindSampler>
	<bindTexture public="1" get="inline" set="null" line="1296" static="1">
		<f a="this:target:texture">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTexture>
	<bindTransformFeedback public="1" get="inline" set="null" line="1303" static="1">
		<f a="this:target:transformFeedback">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTransformFeedback>
	<bindVertexArray public="1" get="inline" set="null" line="1310" static="1">
		<f a="this:vertexArray">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindVertexArray>
	<blendColor public="1" get="inline" set="null" line="1317" static="1">
		<f a="this:red:green:blue:alpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendColor>
	<blendEquation public="1" get="inline" set="null" line="1324" static="1">
		<f a="this:mode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquation>
	<blendEquationSeparate public="1" get="inline" set="null" line="1331" static="1">
		<f a="this:modeRGB:modeAlpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquationSeparate>
	<blendFunc public="1" get="inline" set="null" line="1338" static="1">
		<f a="this:sfactor:dfactor">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFunc>
	<blendFuncSeparate public="1" get="inline" set="null" line="1345" static="1">
		<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFuncSeparate>
	<blitFramebuffer public="1" get="inline" set="null" line="1352" static="1">
		<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blitFramebuffer>
	<bufferData public="1" set="method" line="1360" static="1">
		<f a="this:target:srcData:usage:?srcOffset:?length" v="::::0:0">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ length : 0, srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</bufferData>
	<bufferSubData public="1" get="inline" set="null" line="1377" static="1">
		<f a="this:target:offset:srcData:?srcOffset:?length" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</bufferSubData>
	<checkFramebufferStatus public="1" get="inline" set="null" line="1393" static="1">
		<f a="this:target">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</checkFramebufferStatus>
	<clear public="1" get="inline" set="null" line="1400" static="1">
		<f a="this:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clear>
	<clearBufferfi public="1" get="inline" set="null" line="1407" static="1">
		<f a="this:buffer:drawbuffer:depth:stencil">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferfi>
	<clearBufferfv public="1" set="method" line="1415" static="1">
		<f a="this:buffer:drawbuffer:values:?srcOffset" v="::::0">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</clearBufferfv>
	<clearBufferiv public="1" set="method" line="1431" static="1">
		<f a="this:buffer:drawbuffer:values:?srcOffset">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferiv>
	<clearBufferuiv public="1" set="method" line="1447" static="1">
		<f a="this:buffer:drawbuffer:values:?srcOffset">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferuiv>
	<clearColor public="1" get="inline" set="null" line="1462" static="1">
		<f a="this:red:green:blue:alpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearColor>
	<clearDepth public="1" get="inline" set="null" line="1469" static="1">
		<f a="this:depth">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearDepth>
	<clearStencil public="1" get="inline" set="null" line="1476" static="1">
		<f a="this:s">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearStencil>
	<clientWaitSync public="1" get="inline" set="null" line="1484" static="1">
		<f a="this:sync:flags:timeout">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clientWaitSync>
	<colorMask public="1" get="inline" set="null" line="1498" static="1">
		<f a="this:red:green:blue:alpha">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</colorMask>
	<compileShader public="1" get="inline" set="null" line="1505" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compileShader>
	<compressedTexImage2D public="1" set="method" line="1513" static="1">
		<f a="this:target:level:internalformat:width:height:border:srcData:?srcOffset:?srcLengthOverride" v="::::::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexImage2D>
	<compressedTexImage3D public="1" set="method" line="1532" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexImage3D>
	<compressedTexSubImage2D public="1" get="inline" set="null" line="1551" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexSubImage2D>
	<compressedTexSubImage3D public="1" get="inline" set="null" line="1570" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexSubImage3D>
	<copyBufferSubData public="1" get="inline" set="null" line="1588" static="1">
		<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyBufferSubData>
	<copyTexImage2D public="1" get="inline" set="null" line="1595" static="1">
		<f a="this:target:level:internalformat:x:y:width:height:border">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexImage2D>
	<copyTexSubImage2D public="1" get="inline" set="null" line="1602" static="1">
		<f a="this:target:level:xoffset:yoffset:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage2D>
	<copyTexSubImage3D public="1" get="inline" set="null" line="1609" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage3D>
	<createBuffer public="1" get="inline" set="null" line="1616" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createBuffer>
	<createFramebuffer public="1" get="inline" set="null" line="1623" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createFramebuffer>
	<createProgram public="1" get="inline" set="null" line="1630" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createProgram>
	<createQuery public="1" get="inline" set="null" line="1637" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createQuery>
	<createRenderbuffer public="1" get="inline" set="null" line="1644" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createRenderbuffer>
	<createSampler public="1" get="inline" set="null" line="1651" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createSampler>
	<createShader public="1" get="inline" set="null" line="1658" static="1">
		<f a="this:type">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLShader"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createShader>
	<createTexture public="1" get="inline" set="null" line="1665" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTexture"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTexture>
	<createTransformFeedback public="1" get="inline" set="null" line="1672" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTransformFeedback>
	<createVertexArray public="1" get="inline" set="null" line="1679" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createVertexArray>
	<cullFace public="1" get="inline" set="null" line="1686" static="1">
		<f a="this:mode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</cullFace>
	<deleteBuffer public="1" get="inline" set="null" line="1693" static="1">
		<f a="this:buffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteBuffer>
	<deleteFramebuffer public="1" get="inline" set="null" line="1700" static="1">
		<f a="this:framebuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteFramebuffer>
	<deleteProgram public="1" get="inline" set="null" line="1707" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteProgram>
	<deleteQuery public="1" get="inline" set="null" line="1714" static="1">
		<f a="this:query">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteQuery>
	<deleteRenderbuffer public="1" get="inline" set="null" line="1721" static="1">
		<f a="this:renderbuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteRenderbuffer>
	<deleteSampler public="1" get="inline" set="null" line="1728" static="1">
		<f a="this:sampler">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSampler>
	<deleteShader public="1" get="inline" set="null" line="1735" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteShader>
	<deleteSync public="1" get="inline" set="null" line="1742" static="1">
		<f a="this:sync">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSync>
	<deleteTexture public="1" get="inline" set="null" line="1749" static="1">
		<f a="this:texture">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTexture>
	<deleteTransformFeedback public="1" get="inline" set="null" line="1756" static="1">
		<f a="this:transformFeedback">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTransformFeedback>
	<deleteVertexArray public="1" get="inline" set="null" line="1763" static="1">
		<f a="this:vertexArray">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteVertexArray>
	<depthFunc public="1" get="inline" set="null" line="1770" static="1">
		<f a="this:func">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthFunc>
	<depthMask public="1" get="inline" set="null" line="1777" static="1">
		<f a="this:flag">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthMask>
	<depthRange public="1" get="inline" set="null" line="1784" static="1">
		<f a="this:zNear:zFar">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthRange>
	<detachShader public="1" get="inline" set="null" line="1791" static="1">
		<f a="this:program:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</detachShader>
	<disable public="1" get="inline" set="null" line="1798" static="1">
		<f a="this:cap">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disable>
	<disableVertexAttribArray public="1" get="inline" set="null" line="1805" static="1">
		<f a="this:index">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disableVertexAttribArray>
	<drawArrays public="1" get="inline" set="null" line="1812" static="1">
		<f a="this:mode:first:count">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArrays>
	<drawArraysInstanced public="1" get="inline" set="null" line="1819" static="1">
		<f a="this:mode:first:count:instanceCount">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArraysInstanced>
	<drawBuffers public="1" get="inline" set="null" line="1826" static="1">
		<f a="this:buffers">
			<c path="lime.graphics.GLRenderContext"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawBuffers>
	<drawElements public="1" get="inline" set="null" line="1833" static="1">
		<f a="this:mode:count:type:offset">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElements>
	<drawElementsInstanced public="1" get="inline" set="null" line="1840" static="1">
		<f a="this:mode:count:type:offset:instanceCount">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElementsInstanced>
	<drawRangeElements public="1" get="inline" set="null" line="1847" static="1">
		<f a="this:mode:start:end:count:type:offset">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawRangeElements>
	<enable public="1" get="inline" set="null" line="1854" static="1">
		<f a="this:cap">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enable>
	<enableVertexAttribArray public="1" get="inline" set="null" line="1861" static="1">
		<f a="this:index">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enableVertexAttribArray>
	<endQuery public="1" get="inline" set="null" line="1868" static="1">
		<f a="this:target">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endQuery>
	<endTransformFeedback public="1" get="inline" set="null" line="1875" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endTransformFeedback>
	<fenceSync public="1" get="inline" set="null" line="1882" static="1">
		<f a="this:condition:flags">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSync"/>
		</f>
		<meta><m n=":impl"/></meta>
	</fenceSync>
	<finish public="1" get="inline" set="null" line="1889" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</finish>
	<flush public="1" get="inline" set="null" line="1896" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</flush>
	<framebufferRenderbuffer public="1" get="inline" set="null" line="1903" static="1">
		<f a="this:target:attachment:renderbuffertarget:renderbuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferRenderbuffer>
	<framebufferTexture2D public="1" get="inline" set="null" line="1910" static="1">
		<f a="this:target:attachment:textarget:texture:level">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTexture2D>
	<framebufferTextureLayer public="1" get="inline" set="null" line="1917" static="1">
		<f a="this:target:attachment:texture:level:layer">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTextureLayer>
	<frontFace public="1" get="inline" set="null" line="1924" static="1">
		<f a="this:mode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</frontFace>
	<generateMipmap public="1" get="inline" set="null" line="1931" static="1">
		<f a="this:target">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</generateMipmap>
	<getActiveAttrib public="1" get="inline" set="null" line="1938" static="1">
		<f a="this:program:index">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveAttrib>
	<getActiveUniform public="1" get="inline" set="null" line="1945" static="1">
		<f a="this:program:index">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniform>
	<getActiveUniformBlockName public="1" get="inline" set="null" line="1952" static="1">
		<f a="this:program:uniformBlockIndex">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockName>
	<getActiveUniformBlockParameter public="1" get="inline" set="null" line="1959" static="1">
		<f a="this:program:uniformBlockIndex:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockParameter>
	<getActiveUniforms public="1" get="inline" set="null" line="1966" static="1">
		<f a="this:program:uniformIndices:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniforms>
	<getAttachedShaders public="1" get="inline" set="null" line="1973" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttachedShaders>
	<getAttribLocation public="1" get="inline" set="null" line="1980" static="1">
		<f a="this:program:name">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttribLocation>
	<getBufferParameter public="1" get="inline" set="null" line="1987" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameter>
	<getBufferSubData public="1" get="inline" set="null" line="1995" static="1">
		<f a="this:target:srcByteOffset:dstData:?srcOffset:?length" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</getBufferSubData>
	<getContextAttributes public="1" get="inline" set="null" line="2012" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLContextAttributes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getContextAttributes>
	<getError public="1" get="inline" set="null" line="2019" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getError>
	<getExtension public="1" get="inline" set="null" line="2026" static="1">
		<f a="this:name">
			<c path="lime.graphics.GLRenderContext"/>
			<c path="String"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getExtension>
	<getFragDataLocation public="1" get="inline" set="null" line="2033" static="1">
		<f a="this:program:name">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFragDataLocation>
	<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="2040" static="1">
		<f a="this:target:attachment:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFramebufferAttachmentParameter>
	<getIndexedParameter public="1" get="inline" set="null" line="2047" static="1">
		<f a="this:target:index">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getIndexedParameter>
	<getInternalformatParameter public="1" get="inline" set="null" line="2054" static="1">
		<f a="this:target:internalformat:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInternalformatParameter>
	<getParameter public="1" get="inline" set="null" line="2061" static="1">
		<f a="this:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getParameter>
	<getProgramInfoLog public="1" get="inline" set="null" line="2068" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramInfoLog>
	<getProgramParameter public="1" get="inline" set="null" line="2075" static="1">
		<f a="this:program:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramParameter>
	<getQuery public="1" get="inline" set="null" line="2082" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLQuery"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQuery>
	<getQueryParameter public="1" get="inline" set="null" line="2089" static="1">
		<f a="this:query:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryParameter>
	<getRenderbufferParameter public="1" get="inline" set="null" line="2096" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getRenderbufferParameter>
	<getSamplerParameter public="1" get="inline" set="null" line="2103" static="1">
		<f a="this:sampler:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameter>
	<getShaderInfoLog public="1" get="inline" set="null" line="2110" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderInfoLog>
	<getShaderParameter public="1" get="inline" set="null" line="2117" static="1">
		<f a="this:shader:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderParameter>
	<getShaderPrecisionFormat public="1" get="inline" set="null" line="2124" static="1">
		<f a="this:shadertype:precisiontype">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderPrecisionFormat>
	<getShaderSource public="1" get="inline" set="null" line="2131" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderSource>
	<getSupportedExtensions public="1" get="inline" set="null" line="2138" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<c path="Array"><c path="String"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getSupportedExtensions>
	<getSyncParameter public="1" get="inline" set="null" line="2145" static="1">
		<f a="this:sync:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSyncParameter>
	<getTexParameter public="1" get="inline" set="null" line="2152" static="1">
		<f a="this:target:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameter>
	<getTransformFeedbackVarying public="1" get="inline" set="null" line="2159" static="1">
		<f a="this:program:index">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTransformFeedbackVarying>
	<getUniform public="1" get="inline" set="null" line="2166" static="1">
		<f a="this:program:location">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniform>
	<getUniformBlockIndex public="1" get="inline" set="null" line="2173" static="1">
		<f a="this:program:uniformBlockName">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformBlockIndex>
	<getUniformIndices public="1" get="inline" set="null" line="2181" static="1">
		<f a="this:program:uniformNames">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<c path="Array"><x path="Int"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformIndices>
	<getUniformLocation public="1" get="inline" set="null" line="2197" static="1">
		<f a="this:program:name">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformLocation>
	<getVertexAttrib public="1" get="inline" set="null" line="2204" static="1">
		<f a="this:index:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttrib>
	<getVertexAttribOffset public="1" get="inline" set="null" line="2211" static="1">
		<f a="this:index:pname">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribOffset>
	<hint public="1" get="inline" set="null" line="2218" static="1">
		<f a="this:target:mode">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</hint>
	<invalidateFramebuffer public="1" get="inline" set="null" line="2225" static="1">
		<f a="this:target:attachments">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateFramebuffer>
	<invalidateSubFramebuffer public="1" get="inline" set="null" line="2232" static="1">
		<f a="this:target:attachments:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateSubFramebuffer>
	<isBuffer public="1" get="inline" set="null" line="2239" static="1">
		<f a="this:buffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isBuffer>
	<isContextLost public="1" get="inline" set="null" line="2246" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isContextLost>
	<isEnabled public="1" get="inline" set="null" line="2253" static="1">
		<f a="this:cap">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isEnabled>
	<isFramebuffer public="1" get="inline" set="null" line="2260" static="1">
		<f a="this:framebuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isFramebuffer>
	<isProgram public="1" get="inline" set="null" line="2267" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isProgram>
	<isQuery public="1" get="inline" set="null" line="2274" static="1">
		<f a="this:query">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isQuery>
	<isRenderbuffer public="1" get="inline" set="null" line="2281" static="1">
		<f a="this:renderbuffer">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isRenderbuffer>
	<isSampler public="1" get="inline" set="null" line="2288" static="1">
		<f a="this:sampler">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isSampler>
	<isShader public="1" get="inline" set="null" line="2295" static="1">
		<f a="this:shader">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isShader>
	<isTexture public="1" get="inline" set="null" line="2302" static="1">
		<f a="this:texture">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTexture>
	<isTransformFeedback public="1" get="inline" set="null" line="2309" static="1">
		<f a="this:transformFeedback">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTransformFeedback>
	<isVertexArray public="1" get="inline" set="null" line="2316" static="1">
		<f a="this:vertexArray">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isVertexArray>
	<lineWidth public="1" get="inline" set="null" line="2323" static="1">
		<f a="this:width">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</lineWidth>
	<linkProgram public="1" get="inline" set="null" line="2330" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</linkProgram>
	<pauseTransformFeedback public="1" get="inline" set="null" line="2337" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pauseTransformFeedback>
	<pixelStorei public="1" get="inline" set="null" line="2344" static="1">
		<f a="this:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pixelStorei>
	<polygonOffset public="1" get="inline" set="null" line="2351" static="1">
		<f a="this:factor:units">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</polygonOffset>
	<readBuffer public="1" get="inline" set="null" line="2358" static="1">
		<f a="this:src">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readBuffer>
	<readPixels public="1" get="inline" set="null" line="2366" static="1">
		<f a="this:x:y:width:height:format:type:pixels:?dstOffset" v="::::::::0">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ dstOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</readPixels>
	<renderbufferStorage public="1" get="inline" set="null" line="2384" static="1">
		<f a="this:target:internalformat:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorage>
	<renderbufferStorageMultisample public="1" get="inline" set="null" line="2391" static="1">
		<f a="this:target:samples:internalformat:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorageMultisample>
	<resumeTransformFeedback public="1" get="inline" set="null" line="2398" static="1">
		<f a="this">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</resumeTransformFeedback>
	<sampleCoverage public="1" get="inline" set="null" line="2405" static="1">
		<f a="this:value:invert">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Float"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</sampleCoverage>
	<samplerParameterf public="1" get="inline" set="null" line="2412" static="1">
		<f a="this:sampler:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameterf>
	<samplerParameteri public="1" get="inline" set="null" line="2419" static="1">
		<f a="this:sampler:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameteri>
	<scissor public="1" get="inline" set="null" line="2426" static="1">
		<f a="this:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</scissor>
	<shaderSource public="1" get="inline" set="null" line="2433" static="1">
		<f a="this:shader:source">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</shaderSource>
	<stencilFunc public="1" get="inline" set="null" line="2440" static="1">
		<f a="this:func:ref:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFunc>
	<stencilFuncSeparate public="1" get="inline" set="null" line="2447" static="1">
		<f a="this:face:func:ref:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFuncSeparate>
	<stencilMask public="1" get="inline" set="null" line="2454" static="1">
		<f a="this:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMask>
	<stencilMaskSeparate public="1" get="inline" set="null" line="2461" static="1">
		<f a="this:face:mask">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMaskSeparate>
	<stencilOp public="1" get="inline" set="null" line="2468" static="1">
		<f a="this:fail:zfail:zpass">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOp>
	<stencilOpSeparate public="1" get="inline" set="null" line="2475" static="1">
		<f a="this:face:fail:zfail:zpass">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOpSeparate>
	<texImage2D public="1" get="inline" set="null" line="2483" static="1">
		<f a="this:target:level:internalformat:width:height:border:format:type:srcData:?srcOffset" v="::::::::::0">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texImage2D>
	<texImage3D public="1" get="inline" set="null" line="2506" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:format:type:srcData:?srcOffset" v=":::::::::::0">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texImage3D>
	<texStorage2D public="1" get="inline" set="null" line="2528" static="1">
		<f a="this:target:level:internalformat:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage2D>
	<texStorage3D public="1" get="inline" set="null" line="2535" static="1">
		<f a="this:target:level:internalformat:width:height:depth">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage3D>
	<texParameterf public="1" get="inline" set="null" line="2542" static="1">
		<f a="this:target:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameterf>
	<texParameteri public="1" get="inline" set="null" line="2549" static="1">
		<f a="this:target:pname:param">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameteri>
	<texSubImage2D public="1" get="inline" set="null" line="2557" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texSubImage2D>
	<texSubImage3D public="1" get="inline" set="null" line="2580" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:srcData:?srcOffset" v="::::::::::::0">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texSubImage3D>
	<transformFeedbackVaryings public="1" get="inline" set="null" line="2602" static="1">
		<f a="this:program:varyings:bufferMode">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transformFeedbackVaryings>
	<uniform1f public="1" get="inline" set="null" line="2609" static="1">
		<f a="this:location:v0">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1f>
	<uniform1fv public="1" get="inline" set="null" line="2616" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1fv>
	<uniform1i public="1" get="inline" set="null" line="2627" static="1">
		<f a="this:location:v0">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1i>
	<uniform1iv public="1" get="inline" set="null" line="2634" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Int32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1iv>
	<uniform1ui public="1" get="inline" set="null" line="2645" static="1">
		<f a="this:location:v0">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1ui>
	<uniform1uiv public="1" get="inline" set="null" line="2652" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1uiv>
	<uniform2f public="1" get="inline" set="null" line="2663" static="1">
		<f a="this:location:v0:v1">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2f>
	<uniform2fv public="1" get="inline" set="null" line="2670" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2fv>
	<uniform2i public="1" get="inline" set="null" line="2682" static="1">
		<f a="this:location:v0:v1">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2i>
	<uniform2iv public="1" get="inline" set="null" line="2689" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Int32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2iv>
	<uniform2ui public="1" get="inline" set="null" line="2700" static="1">
		<f a="this:location:v0:v1">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2ui>
	<uniform2uiv public="1" get="inline" set="null" line="2707" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2uiv>
	<uniform3f public="1" get="inline" set="null" line="2718" static="1">
		<f a="this:location:v0:v1:v2">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3f>
	<uniform3fv public="1" get="inline" set="null" line="2725" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3fv>
	<uniform3i public="1" get="inline" set="null" line="2736" static="1">
		<f a="this:location:v0:v1:v2">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3i>
	<uniform3iv public="1" get="inline" set="null" line="2743" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Int32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3iv>
	<uniform3ui public="1" get="inline" set="null" line="2754" static="1">
		<f a="this:location:v0:v1:v2">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3ui>
	<uniform3uiv public="1" get="inline" set="null" line="2761" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3uiv>
	<uniform4f public="1" get="inline" set="null" line="2772" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4f>
	<uniform4fv public="1" get="inline" set="null" line="2779" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4fv>
	<uniform4i public="1" get="inline" set="null" line="2790" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4i>
	<uniform4iv public="1" get="inline" set="null" line="2797" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Int32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4iv>
	<uniform4ui public="1" get="inline" set="null" line="2808" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4ui>
	<uniform4uiv public="1" get="inline" set="null" line="2815" static="1">
		<f a="this:location:v">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4uiv>
	<uniformBlockBinding public="1" get="inline" set="null" line="2826" static="1">
		<f a="this:program:uniformBlockIndex:uniformBlockBinding">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformBlockBinding>
	<uniformMatrix2fv public="1" set="method" line="2835" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix2fv>
	<uniformMatrix2x3fv public="1" set="method" line="2856" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix2x3fv>
	<uniformMatrix2x4fv public="1" set="method" line="2877" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix2x4fv>
	<uniformMatrix3fv public="1" set="method" line="2898" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix3fv>
	<uniformMatrix3x2fv public="1" set="method" line="2919" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix3x2fv>
	<uniformMatrix3x4fv public="1" set="method" line="2940" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix3x4fv>
	<uniformMatrix4fv public="1" set="method" line="2961" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix4fv>
	<uniformMatrix4x2fv public="1" set="method" line="2982" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix4x2fv>
	<uniformMatrix4x3fv public="1" set="method" line="3003" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix4x3fv>
	<useProgram public="1" get="inline" set="null" line="3023" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</useProgram>
	<validateProgram public="1" get="inline" set="null" line="3030" static="1">
		<f a="this:program">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</validateProgram>
	<vertexAttrib1f public="1" get="inline" set="null" line="3037" static="1">
		<f a="this:indx:x">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1f>
	<vertexAttrib1fv public="1" get="inline" set="null" line="3044" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1fv>
	<vertexAttrib2f public="1" get="inline" set="null" line="3051" static="1">
		<f a="this:indx:x:y">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2f>
	<vertexAttrib2fv public="1" get="inline" set="null" line="3058" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2fv>
	<vertexAttrib3f public="1" get="inline" set="null" line="3065" static="1">
		<f a="this:indx:x:y:z">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3f>
	<vertexAttrib3fv public="1" get="inline" set="null" line="3072" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3fv>
	<vertexAttrib4f public="1" get="inline" set="null" line="3079" static="1">
		<f a="this:indx:x:y:z:w">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4f>
	<vertexAttrib4fv public="1" get="inline" set="null" line="3086" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4fv>
	<vertexAttribDivisor public="1" get="inline" set="null" line="3093" static="1">
		<f a="this:index:divisor">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribDivisor>
	<vertexAttribI4i public="1" get="inline" set="null" line="3100" static="1">
		<f a="this:indx:x:y:z:w">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4i>
	<vertexAttribI4iv public="1" get="inline" set="null" line="3107" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4iv>
	<vertexAttribI4ui public="1" get="inline" set="null" line="3114" static="1">
		<f a="this:indx:x:y:z:w">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4ui>
	<vertexAttribI4uiv public="1" get="inline" set="null" line="3121" static="1">
		<f a="this:indx:values">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4uiv>
	<vertexAttribPointer public="1" get="inline" set="null" line="3128" static="1">
		<f a="this:indx:size:type:normalized:stride:offset">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribPointer>
	<viewport public="1" get="inline" set="null" line="3135" static="1">
		<f a="this:x:y:width:height">
			<c path="lime.graphics.GLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</viewport>
	<waitSync public="1" get="inline" set="null" line="3142" static="1">
		<f a="this:sync:flags:timeout">
			<c path="lime.graphics.GLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</waitSync>
	<fromGL set="method" line="3149" static="1">
		<f a="gl">
			<d/>
			<x path="lime.graphics.opengl.WebGL2Context"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<fromGLES3Context set="method" line="3160" static="1">
		<f a="gl">
			<x path="lime.graphics.opengl.GLES3Context"/>
			<x path="lime.graphics.opengl.WebGL2Context"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGLES3Context>
	<toWebGLContext set="method" line="3167" static="1">
		<f a="gl">
			<x path="lime.graphics.opengl.WebGLContext"/>
			<x path="lime.graphics.opengl.WebGL2Context"/>
		</f>
		<meta><m n=":from"/></meta>
	</toWebGLContext>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils.BytePointerData" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/BytePointer.hx" module="lime.utils.BytePointer">
		<bytes public="1"><c path="haxe.io.Bytes"/></bytes>
		<offset public="1"><x path="Int"/></offset>
		<new public="1" set="method" line="250"><f a="bytes:offset">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="lime.graphics.opengl._WebGL2Context.WebGL2Context_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/WebGL2Context.hx" private="1" module="lime.graphics.opengl.WebGL2Context">
		<__tempPointer expr="new BytePointer()" line="17" static="1">
			<x path="lime.utils.BytePointer"/>
			<meta><m n=":value"><e>new BytePointer()</e></m></meta>
		</__tempPointer>
		<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POINTS>
		<LINES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINES>
		<LINE_LOOP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ZERO>
		<ONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE>
		<SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT>
		<BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_AND_BACK>
		<CULL_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE>
		<BLEND public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND>
		<DITHER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DITHER>
		<STENCIL_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OUT_OF_MEMORY>
		<CW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CW>
		<CCW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CCW>
		<LINE_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_BITS>
		<GREEN_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_INVERT>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DONT_CARE>
		<FASTEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FASTEST>
		<NICEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT>
		<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT>
		<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA>
		<RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB>
		<RGBA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA>
		<LUMINANCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEVER>
		<LESS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LESS>
		<EQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</EQUAL>
		<LEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LEQUAL>
		<GREATER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREATER>
		<NOTEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GEQUAL>
		<ALWAYS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALWAYS>
		<KEEP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</KEEP>
		<REPLACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPLACE>
		<INCR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR>
		<DECR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR>
		<INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVERT>
		<INCR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR_WRAP>
		<VENDOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VENDOR>
		<RENDERER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERER>
		<VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERSION>
		<NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST>
		<LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D>
		<TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC4>
		<BOOL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPILE_STATUS>
		<LOW_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA4>
		<RGB5_A1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB5_A1>
		<RGB565 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BROWSER_DEFAULT_WEBGL>
		<READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENT_INDEX>
		<RED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED>
		<RGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8>
		<RGBA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8>
		<RGB10_A2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2>
		<TEXTURE_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_3D>
		<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_FUNC>
		<SRGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB>
		<SRGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8>
		<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32F>
		<RGB32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32F>
		<RGBA16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16F>
		<RGB16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16F>
		<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R11F_G11F_B10F>
		<RGB9_E5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB9_E5>
		<RGBA32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32UI>
		<RGB32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32UI>
		<RGBA16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16UI>
		<RGB16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16UI>
		<RGBA8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8UI>
		<RGB8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8UI>
		<RGBA32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32I>
		<RGB32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32I>
		<RGBA16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16I>
		<RGB16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16I>
		<RGBA8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8I>
		<RGB8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8I>
		<RED_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_INTEGER>
		<RGB_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB_INTEGER>
		<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA_INTEGER>
		<R8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8>
		<RG8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8>
		<R16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16F>
		<R32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32F>
		<RG16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16F>
		<RG32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32F>
		<R8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8I>
		<R8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8UI>
		<R16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16I>
		<R16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16UI>
		<R32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32I>
		<R32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32UI>
		<RG8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8I>
		<RG8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8UI>
		<RG16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16I>
		<RG16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16UI>
		<RG32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32I>
		<RG32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32UI>
		<R8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8_SNORM>
		<RG8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8_SNORM>
		<RGB8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8_SNORM>
		<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8_SNORM>
		<RGB10_A2UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HALF_FLOAT>
		<RG public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG>
		<RG_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG_INTEGER>
		<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_QUERY>
		<QUERY_RESULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SAMPLES>
		<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_TYPE>
		<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OBJECT_TYPE>
		<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_CONDITION>
		<SYNC_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_STATUS>
		<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLAGS>
		<SYNC_FENCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNALED>
		<SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNALED>
		<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONDITION_SATISFIED>
		<WAIT_FAILED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR>
		<DEPTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH>
		<STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL>
		<MIN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN>
		<MAX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX>
		<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT24>
		<STREAM_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_READ>
		<STREAM_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_COPY>
		<STATIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_READ>
		<STATIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_COPY>
		<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_READ>
		<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_INDEX>
		<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<type public="1" get="accessor" set="null" static="1">
			<e path="lime.graphics.opengl.GLContextType"/>
			<meta><m n=":impl"/></meta>
		</type>
		<version public="1" get="accessor" set="null" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</version>
		<get_DEPTH_BUFFER_BIT get="inline" set="null" line="643" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_BUFFER_BIT>
		<get_STENCIL_BUFFER_BIT get="inline" set="null" line="644" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BUFFER_BIT>
		<get_COLOR_BUFFER_BIT get="inline" set="null" line="645" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_BUFFER_BIT>
		<get_POINTS get="inline" set="null" line="646" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_POINTS>
		<get_LINES get="inline" set="null" line="647" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINES>
		<get_LINE_LOOP get="inline" set="null" line="648" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINE_LOOP>
		<get_LINE_STRIP get="inline" set="null" line="649" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINE_STRIP>
		<get_TRIANGLES get="inline" set="null" line="650" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRIANGLES>
		<get_TRIANGLE_STRIP get="inline" set="null" line="651" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRIANGLE_STRIP>
		<get_TRIANGLE_FAN get="inline" set="null" line="652" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRIANGLE_FAN>
		<get_ZERO get="inline" set="null" line="653" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ZERO>
		<get_ONE get="inline" set="null" line="654" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE>
		<get_SRC_COLOR get="inline" set="null" line="655" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRC_COLOR>
		<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="656" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_SRC_COLOR>
		<get_SRC_ALPHA get="inline" set="null" line="657" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRC_ALPHA>
		<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="658" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_SRC_ALPHA>
		<get_DST_ALPHA get="inline" set="null" line="659" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DST_ALPHA>
		<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="660" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_DST_ALPHA>
		<get_DST_COLOR get="inline" set="null" line="661" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DST_COLOR>
		<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="662" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_DST_COLOR>
		<get_SRC_ALPHA_SATURATE get="inline" set="null" line="663" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRC_ALPHA_SATURATE>
		<get_FUNC_ADD get="inline" set="null" line="664" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FUNC_ADD>
		<get_BLEND_EQUATION get="inline" set="null" line="665" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_EQUATION>
		<get_BLEND_EQUATION_RGB get="inline" set="null" line="666" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_EQUATION_RGB>
		<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="667" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_EQUATION_ALPHA>
		<get_FUNC_SUBTRACT get="inline" set="null" line="668" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FUNC_SUBTRACT>
		<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="669" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FUNC_REVERSE_SUBTRACT>
		<get_BLEND_DST_RGB get="inline" set="null" line="670" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_DST_RGB>
		<get_BLEND_SRC_RGB get="inline" set="null" line="671" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_SRC_RGB>
		<get_BLEND_DST_ALPHA get="inline" set="null" line="672" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_DST_ALPHA>
		<get_BLEND_SRC_ALPHA get="inline" set="null" line="673" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_SRC_ALPHA>
		<get_CONSTANT_COLOR get="inline" set="null" line="674" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CONSTANT_COLOR>
		<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="675" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_CONSTANT_COLOR>
		<get_CONSTANT_ALPHA get="inline" set="null" line="676" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CONSTANT_ALPHA>
		<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="677" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ONE_MINUS_CONSTANT_ALPHA>
		<get_BLEND_COLOR get="inline" set="null" line="678" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND_COLOR>
		<get_ARRAY_BUFFER get="inline" set="null" line="679" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ARRAY_BUFFER>
		<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="680" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ELEMENT_ARRAY_BUFFER>
		<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="681" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ARRAY_BUFFER_BINDING>
		<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="682" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ELEMENT_ARRAY_BUFFER_BINDING>
		<get_STREAM_DRAW get="inline" set="null" line="683" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STREAM_DRAW>
		<get_STATIC_DRAW get="inline" set="null" line="684" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STATIC_DRAW>
		<get_DYNAMIC_DRAW get="inline" set="null" line="685" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DYNAMIC_DRAW>
		<get_BUFFER_SIZE get="inline" set="null" line="686" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BUFFER_SIZE>
		<get_BUFFER_USAGE get="inline" set="null" line="687" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BUFFER_USAGE>
		<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="688" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CURRENT_VERTEX_ATTRIB>
		<get_FRONT get="inline" set="null" line="689" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRONT>
		<get_BACK get="inline" set="null" line="690" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BACK>
		<get_FRONT_AND_BACK get="inline" set="null" line="691" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRONT_AND_BACK>
		<get_CULL_FACE get="inline" set="null" line="692" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CULL_FACE>
		<get_BLEND get="inline" set="null" line="693" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLEND>
		<get_DITHER get="inline" set="null" line="694" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DITHER>
		<get_STENCIL_TEST get="inline" set="null" line="695" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_TEST>
		<get_DEPTH_TEST get="inline" set="null" line="696" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_TEST>
		<get_SCISSOR_TEST get="inline" set="null" line="697" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SCISSOR_TEST>
		<get_POLYGON_OFFSET_FILL get="inline" set="null" line="698" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_POLYGON_OFFSET_FILL>
		<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="699" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_ALPHA_TO_COVERAGE>
		<get_SAMPLE_COVERAGE get="inline" set="null" line="700" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_COVERAGE>
		<get_NO_ERROR get="inline" set="null" line="701" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NO_ERROR>
		<get_INVALID_ENUM get="inline" set="null" line="702" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_ENUM>
		<get_INVALID_VALUE get="inline" set="null" line="703" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_VALUE>
		<get_INVALID_OPERATION get="inline" set="null" line="704" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_OPERATION>
		<get_OUT_OF_MEMORY get="inline" set="null" line="705" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_OUT_OF_MEMORY>
		<get_CW get="inline" set="null" line="706" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CW>
		<get_CCW get="inline" set="null" line="707" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CCW>
		<get_LINE_WIDTH get="inline" set="null" line="708" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINE_WIDTH>
		<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="709" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALIASED_POINT_SIZE_RANGE>
		<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="710" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALIASED_LINE_WIDTH_RANGE>
		<get_CULL_FACE_MODE get="inline" set="null" line="711" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CULL_FACE_MODE>
		<get_FRONT_FACE get="inline" set="null" line="712" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRONT_FACE>
		<get_DEPTH_RANGE get="inline" set="null" line="713" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_RANGE>
		<get_DEPTH_WRITEMASK get="inline" set="null" line="714" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_WRITEMASK>
		<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="715" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_CLEAR_VALUE>
		<get_DEPTH_FUNC get="inline" set="null" line="716" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_FUNC>
		<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="717" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_CLEAR_VALUE>
		<get_STENCIL_FUNC get="inline" set="null" line="718" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_FUNC>
		<get_STENCIL_FAIL get="inline" set="null" line="719" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_FAIL>
		<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="720" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_PASS_DEPTH_FAIL>
		<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="721" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_PASS_DEPTH_PASS>
		<get_STENCIL_REF get="inline" set="null" line="722" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_REF>
		<get_STENCIL_VALUE_MASK get="inline" set="null" line="723" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_VALUE_MASK>
		<get_STENCIL_WRITEMASK get="inline" set="null" line="724" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_WRITEMASK>
		<get_STENCIL_BACK_FUNC get="inline" set="null" line="725" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_FUNC>
		<get_STENCIL_BACK_FAIL get="inline" set="null" line="726" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="727" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_PASS_DEPTH_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="728" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_PASS_DEPTH_PASS>
		<get_STENCIL_BACK_REF get="inline" set="null" line="729" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_REF>
		<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="730" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_VALUE_MASK>
		<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="731" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BACK_WRITEMASK>
		<get_VIEWPORT get="inline" set="null" line="732" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VIEWPORT>
		<get_SCISSOR_BOX get="inline" set="null" line="733" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SCISSOR_BOX>
		<get_COLOR_CLEAR_VALUE get="inline" set="null" line="734" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_CLEAR_VALUE>
		<get_COLOR_WRITEMASK get="inline" set="null" line="735" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_WRITEMASK>
		<get_UNPACK_ALIGNMENT get="inline" set="null" line="736" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_ALIGNMENT>
		<get_PACK_ALIGNMENT get="inline" set="null" line="737" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PACK_ALIGNMENT>
		<get_MAX_TEXTURE_SIZE get="inline" set="null" line="738" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TEXTURE_SIZE>
		<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="739" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VIEWPORT_DIMS>
		<get_SUBPIXEL_BITS get="inline" set="null" line="740" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SUBPIXEL_BITS>
		<get_RED_BITS get="inline" set="null" line="741" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RED_BITS>
		<get_GREEN_BITS get="inline" set="null" line="742" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_GREEN_BITS>
		<get_BLUE_BITS get="inline" set="null" line="743" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BLUE_BITS>
		<get_ALPHA_BITS get="inline" set="null" line="744" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALPHA_BITS>
		<get_DEPTH_BITS get="inline" set="null" line="745" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_BITS>
		<get_STENCIL_BITS get="inline" set="null" line="746" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_BITS>
		<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="747" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_POLYGON_OFFSET_UNITS>
		<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="748" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_POLYGON_OFFSET_FACTOR>
		<get_TEXTURE_BINDING_2D get="inline" set="null" line="749" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BINDING_2D>
		<get_SAMPLE_BUFFERS get="inline" set="null" line="750" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_BUFFERS>
		<get_SAMPLES get="inline" set="null" line="751" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLES>
		<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="752" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_COVERAGE_VALUE>
		<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="753" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLE_COVERAGE_INVERT>
		<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="754" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COMPRESSED_TEXTURE_FORMATS>
		<get_DONT_CARE get="inline" set="null" line="755" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DONT_CARE>
		<get_FASTEST get="inline" set="null" line="756" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FASTEST>
		<get_NICEST get="inline" set="null" line="757" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NICEST>
		<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="758" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_GENERATE_MIPMAP_HINT>
		<get_BYTE get="inline" set="null" line="759" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BYTE>
		<get_UNSIGNED_BYTE get="inline" set="null" line="760" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_BYTE>
		<get_SHORT get="inline" set="null" line="761" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SHORT>
		<get_UNSIGNED_SHORT get="inline" set="null" line="762" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_SHORT>
		<get_INT get="inline" set="null" line="763" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT>
		<get_UNSIGNED_INT get="inline" set="null" line="764" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT>
		<get_FLOAT get="inline" set="null" line="765" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT>
		<get_DEPTH_COMPONENT get="inline" set="null" line="766" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_COMPONENT>
		<get_ALPHA get="inline" set="null" line="767" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALPHA>
		<get_RGB get="inline" set="null" line="768" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB>
		<get_RGBA get="inline" set="null" line="769" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA>
		<get_LUMINANCE get="inline" set="null" line="770" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LUMINANCE>
		<get_LUMINANCE_ALPHA get="inline" set="null" line="771" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LUMINANCE_ALPHA>
		<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="772" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_SHORT_4_4_4_4>
		<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="773" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_SHORT_5_5_5_1>
		<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="774" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_SHORT_5_6_5>
		<get_FRAGMENT_SHADER get="inline" set="null" line="775" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAGMENT_SHADER>
		<get_VERTEX_SHADER get="inline" set="null" line="776" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_SHADER>
		<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="777" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_ATTRIBS>
		<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="778" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_UNIFORM_VECTORS>
		<get_MAX_VARYING_VECTORS get="inline" set="null" line="779" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VARYING_VECTORS>
		<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="780" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="781" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="782" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TEXTURE_IMAGE_UNITS>
		<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="783" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_FRAGMENT_UNIFORM_VECTORS>
		<get_SHADER_TYPE get="inline" set="null" line="784" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SHADER_TYPE>
		<get_DELETE_STATUS get="inline" set="null" line="785" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DELETE_STATUS>
		<get_LINK_STATUS get="inline" set="null" line="786" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINK_STATUS>
		<get_VALIDATE_STATUS get="inline" set="null" line="787" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VALIDATE_STATUS>
		<get_ATTACHED_SHADERS get="inline" set="null" line="788" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ATTACHED_SHADERS>
		<get_ACTIVE_UNIFORMS get="inline" set="null" line="789" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ACTIVE_UNIFORMS>
		<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="790" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ACTIVE_ATTRIBUTES>
		<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="791" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SHADING_LANGUAGE_VERSION>
		<get_CURRENT_PROGRAM get="inline" set="null" line="792" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CURRENT_PROGRAM>
		<get_NEVER get="inline" set="null" line="793" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NEVER>
		<get_LESS get="inline" set="null" line="794" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LESS>
		<get_EQUAL get="inline" set="null" line="795" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_EQUAL>
		<get_LEQUAL get="inline" set="null" line="796" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LEQUAL>
		<get_GREATER get="inline" set="null" line="797" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_GREATER>
		<get_NOTEQUAL get="inline" set="null" line="798" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NOTEQUAL>
		<get_GEQUAL get="inline" set="null" line="799" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_GEQUAL>
		<get_ALWAYS get="inline" set="null" line="800" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALWAYS>
		<get_KEEP get="inline" set="null" line="801" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_KEEP>
		<get_REPLACE get="inline" set="null" line="802" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_REPLACE>
		<get_INCR get="inline" set="null" line="803" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INCR>
		<get_DECR get="inline" set="null" line="804" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DECR>
		<get_INVERT get="inline" set="null" line="805" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVERT>
		<get_INCR_WRAP get="inline" set="null" line="806" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INCR_WRAP>
		<get_DECR_WRAP get="inline" set="null" line="807" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DECR_WRAP>
		<get_VENDOR get="inline" set="null" line="808" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VENDOR>
		<get_RENDERER get="inline" set="null" line="809" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERER>
		<get_VERSION get="inline" set="null" line="810" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERSION>
		<get_NEAREST get="inline" set="null" line="811" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NEAREST>
		<get_LINEAR get="inline" set="null" line="812" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINEAR>
		<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="813" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NEAREST_MIPMAP_NEAREST>
		<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="814" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINEAR_MIPMAP_NEAREST>
		<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="815" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NEAREST_MIPMAP_LINEAR>
		<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="816" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LINEAR_MIPMAP_LINEAR>
		<get_TEXTURE_MAG_FILTER get="inline" set="null" line="817" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MAG_FILTER>
		<get_TEXTURE_MIN_FILTER get="inline" set="null" line="818" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MIN_FILTER>
		<get_TEXTURE_WRAP_S get="inline" set="null" line="819" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_WRAP_S>
		<get_TEXTURE_WRAP_T get="inline" set="null" line="820" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_WRAP_T>
		<get_TEXTURE_2D get="inline" set="null" line="821" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_2D>
		<get_TEXTURE get="inline" set="null" line="822" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE>
		<get_TEXTURE_CUBE_MAP get="inline" set="null" line="823" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP>
		<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="824" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BINDING_CUBE_MAP>
		<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="825" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_X>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="826" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="827" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="828" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="829" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="830" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="831" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_CUBE_MAP_TEXTURE_SIZE>
		<get_TEXTURE0 get="inline" set="null" line="832" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE0>
		<get_TEXTURE1 get="inline" set="null" line="833" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE1>
		<get_TEXTURE2 get="inline" set="null" line="834" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE2>
		<get_TEXTURE3 get="inline" set="null" line="835" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE3>
		<get_TEXTURE4 get="inline" set="null" line="836" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE4>
		<get_TEXTURE5 get="inline" set="null" line="837" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE5>
		<get_TEXTURE6 get="inline" set="null" line="838" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE6>
		<get_TEXTURE7 get="inline" set="null" line="839" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE7>
		<get_TEXTURE8 get="inline" set="null" line="840" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE8>
		<get_TEXTURE9 get="inline" set="null" line="841" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE9>
		<get_TEXTURE10 get="inline" set="null" line="842" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE10>
		<get_TEXTURE11 get="inline" set="null" line="843" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE11>
		<get_TEXTURE12 get="inline" set="null" line="844" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE12>
		<get_TEXTURE13 get="inline" set="null" line="845" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE13>
		<get_TEXTURE14 get="inline" set="null" line="846" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE14>
		<get_TEXTURE15 get="inline" set="null" line="847" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE15>
		<get_TEXTURE16 get="inline" set="null" line="848" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE16>
		<get_TEXTURE17 get="inline" set="null" line="849" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE17>
		<get_TEXTURE18 get="inline" set="null" line="850" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE18>
		<get_TEXTURE19 get="inline" set="null" line="851" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE19>
		<get_TEXTURE20 get="inline" set="null" line="852" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE20>
		<get_TEXTURE21 get="inline" set="null" line="853" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE21>
		<get_TEXTURE22 get="inline" set="null" line="854" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE22>
		<get_TEXTURE23 get="inline" set="null" line="855" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE23>
		<get_TEXTURE24 get="inline" set="null" line="856" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE24>
		<get_TEXTURE25 get="inline" set="null" line="857" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE25>
		<get_TEXTURE26 get="inline" set="null" line="858" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE26>
		<get_TEXTURE27 get="inline" set="null" line="859" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE27>
		<get_TEXTURE28 get="inline" set="null" line="860" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE28>
		<get_TEXTURE29 get="inline" set="null" line="861" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE29>
		<get_TEXTURE30 get="inline" set="null" line="862" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE30>
		<get_TEXTURE31 get="inline" set="null" line="863" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE31>
		<get_ACTIVE_TEXTURE get="inline" set="null" line="864" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ACTIVE_TEXTURE>
		<get_REPEAT get="inline" set="null" line="865" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_REPEAT>
		<get_CLAMP_TO_EDGE get="inline" set="null" line="866" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CLAMP_TO_EDGE>
		<get_MIRRORED_REPEAT get="inline" set="null" line="867" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MIRRORED_REPEAT>
		<get_FLOAT_VEC2 get="inline" set="null" line="868" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_VEC2>
		<get_FLOAT_VEC3 get="inline" set="null" line="869" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_VEC3>
		<get_FLOAT_VEC4 get="inline" set="null" line="870" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_VEC4>
		<get_INT_VEC2 get="inline" set="null" line="871" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_VEC2>
		<get_INT_VEC3 get="inline" set="null" line="872" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_VEC3>
		<get_INT_VEC4 get="inline" set="null" line="873" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_VEC4>
		<get_BOOL get="inline" set="null" line="874" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BOOL>
		<get_BOOL_VEC2 get="inline" set="null" line="875" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BOOL_VEC2>
		<get_BOOL_VEC3 get="inline" set="null" line="876" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BOOL_VEC3>
		<get_BOOL_VEC4 get="inline" set="null" line="877" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BOOL_VEC4>
		<get_FLOAT_MAT2 get="inline" set="null" line="878" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT2>
		<get_FLOAT_MAT3 get="inline" set="null" line="879" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT3>
		<get_FLOAT_MAT4 get="inline" set="null" line="880" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT4>
		<get_SAMPLER_2D get="inline" set="null" line="881" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_2D>
		<get_SAMPLER_CUBE get="inline" set="null" line="882" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_CUBE>
		<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="883" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_ENABLED>
		<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="884" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_SIZE>
		<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="885" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_STRIDE>
		<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="886" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_TYPE>
		<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="887" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="888" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_POINTER>
		<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="889" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<get_COMPILE_STATUS get="inline" set="null" line="890" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COMPILE_STATUS>
		<get_LOW_FLOAT get="inline" set="null" line="891" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LOW_FLOAT>
		<get_MEDIUM_FLOAT get="inline" set="null" line="892" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MEDIUM_FLOAT>
		<get_HIGH_FLOAT get="inline" set="null" line="893" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_HIGH_FLOAT>
		<get_LOW_INT get="inline" set="null" line="894" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_LOW_INT>
		<get_MEDIUM_INT get="inline" set="null" line="895" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MEDIUM_INT>
		<get_HIGH_INT get="inline" set="null" line="896" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_HIGH_INT>
		<get_FRAMEBUFFER get="inline" set="null" line="897" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER>
		<get_RENDERBUFFER get="inline" set="null" line="898" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER>
		<get_RGBA4 get="inline" set="null" line="899" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA4>
		<get_RGB5_A1 get="inline" set="null" line="900" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB5_A1>
		<get_RGB565 get="inline" set="null" line="901" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB565>
		<get_DEPTH_COMPONENT16 get="inline" set="null" line="902" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_COMPONENT16>
		<get_STENCIL_INDEX get="inline" set="null" line="903" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_INDEX>
		<get_STENCIL_INDEX8 get="inline" set="null" line="904" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_INDEX8>
		<get_DEPTH_STENCIL get="inline" set="null" line="905" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_STENCIL>
		<get_RENDERBUFFER_WIDTH get="inline" set="null" line="906" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_WIDTH>
		<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="907" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_HEIGHT>
		<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="908" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_INTERNAL_FORMAT>
		<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="909" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_RED_SIZE>
		<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="910" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_GREEN_SIZE>
		<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="911" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_BLUE_SIZE>
		<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="912" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_ALPHA_SIZE>
		<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="913" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_DEPTH_SIZE>
		<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="914" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_STENCIL_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="915" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="916" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="917" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="918" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<get_COLOR_ATTACHMENT0 get="inline" set="null" line="919" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT0>
		<get_DEPTH_ATTACHMENT get="inline" set="null" line="920" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_ATTACHMENT>
		<get_STENCIL_ATTACHMENT get="inline" set="null" line="921" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL_ATTACHMENT>
		<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="922" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_STENCIL_ATTACHMENT>
		<get_NONE get="inline" set="null" line="923" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_NONE>
		<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="924" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_COMPLETE>
		<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="925" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="926" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="927" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="928" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_UNSUPPORTED>
		<get_FRAMEBUFFER_BINDING get="inline" set="null" line="929" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_BINDING get="inline" set="null" line="930" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_BINDING>
		<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="931" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_RENDERBUFFER_SIZE>
		<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="932" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_FRAMEBUFFER_OPERATION>
		<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="933" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_FLIP_Y_WEBGL>
		<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="934" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="935" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CONTEXT_LOST_WEBGL>
		<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="936" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="937" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_BROWSER_DEFAULT_WEBGL>
		<get_type get="inline" set="null" line="938" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<e path="lime.graphics.opengl.GLContextType"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_type>
		<get_version get="inline" set="null" line="939" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_version>
		<get_READ_BUFFER get="inline" set="null" line="941" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_READ_BUFFER>
		<get_UNPACK_ROW_LENGTH get="inline" set="null" line="942" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_ROW_LENGTH>
		<get_UNPACK_SKIP_ROWS get="inline" set="null" line="943" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_SKIP_ROWS>
		<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="944" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_SKIP_PIXELS>
		<get_PACK_ROW_LENGTH get="inline" set="null" line="945" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PACK_ROW_LENGTH>
		<get_PACK_SKIP_ROWS get="inline" set="null" line="946" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PACK_SKIP_ROWS>
		<get_PACK_SKIP_PIXELS get="inline" set="null" line="947" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PACK_SKIP_PIXELS>
		<get_TEXTURE_BINDING_3D get="inline" set="null" line="948" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BINDING_3D>
		<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="949" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_SKIP_IMAGES>
		<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="950" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNPACK_IMAGE_HEIGHT>
		<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="951" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_3D_TEXTURE_SIZE>
		<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="952" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_ELEMENTS_VERTICES>
		<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="953" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_ELEMENTS_INDICES>
		<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="954" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TEXTURE_LOD_BIAS>
		<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="955" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="956" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="957" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_ARRAY_TEXTURE_LAYERS>
		<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="958" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MIN_PROGRAM_TEXEL_OFFSET>
		<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="959" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_PROGRAM_TEXEL_OFFSET>
		<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="960" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VARYING_COMPONENTS>
		<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="961" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
		<get_RASTERIZER_DISCARD get="inline" set="null" line="962" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RASTERIZER_DISCARD>
		<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="963" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ARRAY_BINDING>
		<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="964" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_OUTPUT_COMPONENTS>
		<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="965" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_FRAGMENT_INPUT_COMPONENTS>
		<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="966" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_SERVER_WAIT_TIMEOUT>
		<get_MAX_ELEMENT_INDEX get="inline" set="null" line="967" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_ELEMENT_INDEX>
		<get_RED get="inline" set="null" line="969" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RED>
		<get_RGB8 get="inline" set="null" line="970" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB8>
		<get_RGBA8 get="inline" set="null" line="971" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA8>
		<get_RGB10_A2 get="inline" set="null" line="972" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB10_A2>
		<get_TEXTURE_3D get="inline" set="null" line="973" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_3D>
		<get_TEXTURE_WRAP_R get="inline" set="null" line="974" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_WRAP_R>
		<get_TEXTURE_MIN_LOD get="inline" set="null" line="975" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MIN_LOD>
		<get_TEXTURE_MAX_LOD get="inline" set="null" line="976" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MAX_LOD>
		<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="977" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BASE_LEVEL>
		<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="978" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_MAX_LEVEL>
		<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="979" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_COMPARE_MODE>
		<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="980" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_COMPARE_FUNC>
		<get_SRGB get="inline" set="null" line="981" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRGB>
		<get_SRGB8 get="inline" set="null" line="982" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRGB8>
		<get_SRGB8_ALPHA8 get="inline" set="null" line="983" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SRGB8_ALPHA8>
		<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="984" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COMPARE_REF_TO_TEXTURE>
		<get_RGBA32F get="inline" set="null" line="985" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA32F>
		<get_RGB32F get="inline" set="null" line="986" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB32F>
		<get_RGBA16F get="inline" set="null" line="987" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA16F>
		<get_RGB16F get="inline" set="null" line="988" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB16F>
		<get_TEXTURE_2D_ARRAY get="inline" set="null" line="989" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_2D_ARRAY>
		<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="990" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_BINDING_2D_ARRAY>
		<get_R11F_G11F_B10F get="inline" set="null" line="991" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R11F_G11F_B10F>
		<get_RGB9_E5 get="inline" set="null" line="992" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB9_E5>
		<get_RGBA32UI get="inline" set="null" line="993" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA32UI>
		<get_RGB32UI get="inline" set="null" line="994" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB32UI>
		<get_RGBA16UI get="inline" set="null" line="995" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA16UI>
		<get_RGB16UI get="inline" set="null" line="996" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB16UI>
		<get_RGBA8UI get="inline" set="null" line="997" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA8UI>
		<get_RGB8UI get="inline" set="null" line="998" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB8UI>
		<get_RGBA32I get="inline" set="null" line="999" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA32I>
		<get_RGB32I get="inline" set="null" line="1000" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB32I>
		<get_RGBA16I get="inline" set="null" line="1001" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA16I>
		<get_RGB16I get="inline" set="null" line="1002" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB16I>
		<get_RGBA8I get="inline" set="null" line="1003" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA8I>
		<get_RGB8I get="inline" set="null" line="1004" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB8I>
		<get_RED_INTEGER get="inline" set="null" line="1005" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RED_INTEGER>
		<get_RGB_INTEGER get="inline" set="null" line="1006" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB_INTEGER>
		<get_RGBA_INTEGER get="inline" set="null" line="1007" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA_INTEGER>
		<get_R8 get="inline" set="null" line="1008" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R8>
		<get_RG8 get="inline" set="null" line="1009" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG8>
		<get_R16F get="inline" set="null" line="1010" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R16F>
		<get_R32F get="inline" set="null" line="1011" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R32F>
		<get_RG16F get="inline" set="null" line="1012" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG16F>
		<get_RG32F get="inline" set="null" line="1013" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG32F>
		<get_R8I get="inline" set="null" line="1014" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R8I>
		<get_R8UI get="inline" set="null" line="1015" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R8UI>
		<get_R16I get="inline" set="null" line="1016" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R16I>
		<get_R16UI get="inline" set="null" line="1017" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R16UI>
		<get_R32I get="inline" set="null" line="1018" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R32I>
		<get_R32UI get="inline" set="null" line="1019" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R32UI>
		<get_RG8I get="inline" set="null" line="1020" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG8I>
		<get_RG8UI get="inline" set="null" line="1021" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG8UI>
		<get_RG16I get="inline" set="null" line="1022" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG16I>
		<get_RG16UI get="inline" set="null" line="1023" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG16UI>
		<get_RG32I get="inline" set="null" line="1024" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG32I>
		<get_RG32UI get="inline" set="null" line="1025" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG32UI>
		<get_R8_SNORM get="inline" set="null" line="1026" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_R8_SNORM>
		<get_RG8_SNORM get="inline" set="null" line="1027" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG8_SNORM>
		<get_RGB8_SNORM get="inline" set="null" line="1028" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB8_SNORM>
		<get_RGBA8_SNORM get="inline" set="null" line="1029" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGBA8_SNORM>
		<get_RGB10_A2UI get="inline" set="null" line="1030" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RGB10_A2UI>
		<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="1031" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_IMMUTABLE_FORMAT>
		<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="1032" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TEXTURE_IMMUTABLE_LEVELS>
		<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="1034" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_2_10_10_10_REV>
		<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="1035" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_10F_11F_11F_REV>
		<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="1036" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_5_9_9_9_REV>
		<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="1037" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
		<get_UNSIGNED_INT_24_8 get="inline" set="null" line="1038" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_24_8>
		<get_HALF_FLOAT get="inline" set="null" line="1039" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_HALF_FLOAT>
		<get_RG get="inline" set="null" line="1040" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG>
		<get_RG_INTEGER get="inline" set="null" line="1041" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RG_INTEGER>
		<get_INT_2_10_10_10_REV get="inline" set="null" line="1042" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_2_10_10_10_REV>
		<get_CURRENT_QUERY get="inline" set="null" line="1044" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CURRENT_QUERY>
		<get_QUERY_RESULT get="inline" set="null" line="1045" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_QUERY_RESULT>
		<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="1046" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_QUERY_RESULT_AVAILABLE>
		<get_ANY_SAMPLES_PASSED get="inline" set="null" line="1047" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ANY_SAMPLES_PASSED>
		<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="1048" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
		<get_MAX_DRAW_BUFFERS get="inline" set="null" line="1050" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_DRAW_BUFFERS>
		<get_DRAW_BUFFER0 get="inline" set="null" line="1051" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER0>
		<get_DRAW_BUFFER1 get="inline" set="null" line="1052" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER1>
		<get_DRAW_BUFFER2 get="inline" set="null" line="1053" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER2>
		<get_DRAW_BUFFER3 get="inline" set="null" line="1054" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER3>
		<get_DRAW_BUFFER4 get="inline" set="null" line="1055" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER4>
		<get_DRAW_BUFFER5 get="inline" set="null" line="1056" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER5>
		<get_DRAW_BUFFER6 get="inline" set="null" line="1057" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER6>
		<get_DRAW_BUFFER7 get="inline" set="null" line="1058" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER7>
		<get_DRAW_BUFFER8 get="inline" set="null" line="1059" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER8>
		<get_DRAW_BUFFER9 get="inline" set="null" line="1060" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER9>
		<get_DRAW_BUFFER10 get="inline" set="null" line="1061" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER10>
		<get_DRAW_BUFFER11 get="inline" set="null" line="1062" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER11>
		<get_DRAW_BUFFER12 get="inline" set="null" line="1063" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER12>
		<get_DRAW_BUFFER13 get="inline" set="null" line="1064" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER13>
		<get_DRAW_BUFFER14 get="inline" set="null" line="1065" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER14>
		<get_DRAW_BUFFER15 get="inline" set="null" line="1066" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_BUFFER15>
		<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="1067" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COLOR_ATTACHMENTS>
		<get_COLOR_ATTACHMENT1 get="inline" set="null" line="1068" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT1>
		<get_COLOR_ATTACHMENT2 get="inline" set="null" line="1069" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT2>
		<get_COLOR_ATTACHMENT3 get="inline" set="null" line="1070" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT3>
		<get_COLOR_ATTACHMENT4 get="inline" set="null" line="1071" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT4>
		<get_COLOR_ATTACHMENT5 get="inline" set="null" line="1072" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT5>
		<get_COLOR_ATTACHMENT6 get="inline" set="null" line="1073" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT6>
		<get_COLOR_ATTACHMENT7 get="inline" set="null" line="1074" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT7>
		<get_COLOR_ATTACHMENT8 get="inline" set="null" line="1075" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT8>
		<get_COLOR_ATTACHMENT9 get="inline" set="null" line="1076" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT9>
		<get_COLOR_ATTACHMENT10 get="inline" set="null" line="1077" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT10>
		<get_COLOR_ATTACHMENT11 get="inline" set="null" line="1078" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT11>
		<get_COLOR_ATTACHMENT12 get="inline" set="null" line="1079" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT12>
		<get_COLOR_ATTACHMENT13 get="inline" set="null" line="1080" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT13>
		<get_COLOR_ATTACHMENT14 get="inline" set="null" line="1081" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT14>
		<get_COLOR_ATTACHMENT15 get="inline" set="null" line="1082" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR_ATTACHMENT15>
		<get_SAMPLER_3D get="inline" set="null" line="1084" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_3D>
		<get_SAMPLER_2D_SHADOW get="inline" set="null" line="1085" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_2D_SHADOW>
		<get_SAMPLER_2D_ARRAY get="inline" set="null" line="1086" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_2D_ARRAY>
		<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="1087" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_2D_ARRAY_SHADOW>
		<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="1088" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_CUBE_SHADOW>
		<get_INT_SAMPLER_2D get="inline" set="null" line="1089" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_SAMPLER_2D>
		<get_INT_SAMPLER_3D get="inline" set="null" line="1090" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_SAMPLER_3D>
		<get_INT_SAMPLER_CUBE get="inline" set="null" line="1091" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_SAMPLER_CUBE>
		<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1092" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INT_SAMPLER_2D_ARRAY>
		<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="1093" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_SAMPLER_2D>
		<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="1094" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_SAMPLER_3D>
		<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="1095" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_SAMPLER_CUBE>
		<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1096" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<get_MAX_SAMPLES get="inline" set="null" line="1097" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_SAMPLES>
		<get_SAMPLER_BINDING get="inline" set="null" line="1098" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SAMPLER_BINDING>
		<get_PIXEL_PACK_BUFFER get="inline" set="null" line="1100" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PIXEL_PACK_BUFFER>
		<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="1101" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PIXEL_UNPACK_BUFFER>
		<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="1102" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PIXEL_PACK_BUFFER_BINDING>
		<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="1103" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_PIXEL_UNPACK_BUFFER_BINDING>
		<get_COPY_READ_BUFFER get="inline" set="null" line="1104" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COPY_READ_BUFFER>
		<get_COPY_WRITE_BUFFER get="inline" set="null" line="1105" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COPY_WRITE_BUFFER>
		<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="1106" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COPY_READ_BUFFER_BINDING>
		<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="1107" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COPY_WRITE_BUFFER_BINDING>
		<get_FLOAT_MAT2x3 get="inline" set="null" line="1109" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT2x3>
		<get_FLOAT_MAT2x4 get="inline" set="null" line="1110" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT2x4>
		<get_FLOAT_MAT3x2 get="inline" set="null" line="1111" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT3x2>
		<get_FLOAT_MAT3x4 get="inline" set="null" line="1112" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT3x4>
		<get_FLOAT_MAT4x2 get="inline" set="null" line="1113" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT4x2>
		<get_FLOAT_MAT4x3 get="inline" set="null" line="1114" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FLOAT_MAT4x3>
		<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="1115" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_VEC2>
		<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="1116" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_VEC3>
		<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="1117" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_INT_VEC4>
		<get_UNSIGNED_NORMALIZED get="inline" set="null" line="1118" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNED_NORMALIZED>
		<get_SIGNED_NORMALIZED get="inline" set="null" line="1119" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SIGNED_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="1121" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_INTEGER>
		<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="1122" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
		<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="1124" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="1125" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="1126" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_VARYINGS>
		<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="1127" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_START>
		<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="1128" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="1129" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="1130" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="1131" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="1132" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INTERLEAVED_ATTRIBS>
		<get_SEPARATE_ATTRIBS get="inline" set="null" line="1133" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SEPARATE_ATTRIBS>
		<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="1134" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER>
		<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="1135" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<get_TRANSFORM_FEEDBACK get="inline" set="null" line="1136" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK>
		<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="1137" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_PAUSED>
		<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="1138" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_ACTIVE>
		<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="1139" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TRANSFORM_FEEDBACK_BINDING>
		<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="1141" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="1142" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="1143" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="1144" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="1145" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="1146" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="1147" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="1148" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="1149" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_DEFAULT>
		<get_DEPTH24_STENCIL8 get="inline" set="null" line="1150" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH24_STENCIL8>
		<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="1151" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_FRAMEBUFFER_BINDING>
		<get_READ_FRAMEBUFFER get="inline" set="null" line="1152" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_READ_FRAMEBUFFER>
		<get_DRAW_FRAMEBUFFER get="inline" set="null" line="1153" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DRAW_FRAMEBUFFER>
		<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="1154" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_READ_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="1155" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_RENDERBUFFER_SAMPLES>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="1156" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="1157" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<get_UNIFORM_BUFFER get="inline" set="null" line="1159" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER>
		<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="1160" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER_BINDING>
		<get_UNIFORM_BUFFER_START get="inline" set="null" line="1161" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER_START>
		<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="1162" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER_SIZE>
		<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="1163" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_VERTEX_UNIFORM_BLOCKS>
		<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="1164" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
		<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="1165" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COMBINED_UNIFORM_BLOCKS>
		<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="1166" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_UNIFORM_BUFFER_BINDINGS>
		<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="1167" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_UNIFORM_BLOCK_SIZE>
		<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="1168" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="1169" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="1170" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="1171" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ACTIVE_UNIFORM_BLOCKS>
		<get_UNIFORM_TYPE get="inline" set="null" line="1172" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_TYPE>
		<get_UNIFORM_SIZE get="inline" set="null" line="1173" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_SIZE>
		<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="1174" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_INDEX>
		<get_UNIFORM_OFFSET get="inline" set="null" line="1175" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_OFFSET>
		<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="1176" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_ARRAY_STRIDE>
		<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="1177" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_MATRIX_STRIDE>
		<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="1178" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_IS_ROW_MAJOR>
		<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="1179" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_BINDING>
		<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="1180" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_DATA_SIZE>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="1181" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="1182" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="1183" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="1184" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<get_OBJECT_TYPE get="inline" set="null" line="1186" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_OBJECT_TYPE>
		<get_SYNC_CONDITION get="inline" set="null" line="1187" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_CONDITION>
		<get_SYNC_STATUS get="inline" set="null" line="1188" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_STATUS>
		<get_SYNC_FLAGS get="inline" set="null" line="1189" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_FLAGS>
		<get_SYNC_FENCE get="inline" set="null" line="1190" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_FENCE>
		<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="1191" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_GPU_COMMANDS_COMPLETE>
		<get_UNSIGNALED get="inline" set="null" line="1192" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_UNSIGNALED>
		<get_SIGNALED get="inline" set="null" line="1193" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SIGNALED>
		<get_ALREADY_SIGNALED get="inline" set="null" line="1194" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ALREADY_SIGNALED>
		<get_TIMEOUT_EXPIRED get="inline" set="null" line="1195" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TIMEOUT_EXPIRED>
		<get_CONDITION_SATISFIED get="inline" set="null" line="1196" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_CONDITION_SATISFIED>
		<get_WAIT_FAILED get="inline" set="null" line="1197" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_WAIT_FAILED>
		<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="1198" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_SYNC_FLUSH_COMMANDS_BIT>
		<get_COLOR get="inline" set="null" line="1200" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_COLOR>
		<get_DEPTH get="inline" set="null" line="1201" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH>
		<get_STENCIL get="inline" set="null" line="1202" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STENCIL>
		<get_MIN get="inline" set="null" line="1203" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MIN>
		<get_MAX get="inline" set="null" line="1204" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX>
		<get_DEPTH_COMPONENT24 get="inline" set="null" line="1205" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_COMPONENT24>
		<get_STREAM_READ get="inline" set="null" line="1206" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STREAM_READ>
		<get_STREAM_COPY get="inline" set="null" line="1207" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STREAM_COPY>
		<get_STATIC_READ get="inline" set="null" line="1208" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STATIC_READ>
		<get_STATIC_COPY get="inline" set="null" line="1209" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_STATIC_COPY>
		<get_DYNAMIC_READ get="inline" set="null" line="1210" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DYNAMIC_READ>
		<get_DYNAMIC_COPY get="inline" set="null" line="1211" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DYNAMIC_COPY>
		<get_DEPTH_COMPONENT32F get="inline" set="null" line="1212" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH_COMPONENT32F>
		<get_DEPTH32F_STENCIL8 get="inline" set="null" line="1213" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_DEPTH32F_STENCIL8>
		<get_INVALID_INDEX get="inline" set="null" line="1214" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_INVALID_INDEX>
		<get_TIMEOUT_IGNORED get="inline" set="null" line="1215" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_TIMEOUT_IGNORED>
		<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="1216" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<activeTexture public="1" get="inline" set="null" line="1219" static="1">
			<f a="this:texture">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</activeTexture>
		<attachShader public="1" get="inline" set="null" line="1226" static="1">
			<f a="this:program:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</attachShader>
		<beginQuery public="1" get="inline" set="null" line="1233" static="1">
			<f a="this:target:query">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginQuery>
		<beginTransformFeedback public="1" get="inline" set="null" line="1240" static="1">
			<f a="this:primitiveNode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginTransformFeedback>
		<bindAttribLocation public="1" get="inline" set="null" line="1247" static="1">
			<f a="this:program:index:name">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="1254" static="1">
			<f a="this:target:buffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBuffer>
		<bindBufferBase public="1" get="inline" set="null" line="1261" static="1">
			<f a="this:target:index:buffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferBase>
		<bindBufferRange public="1" get="inline" set="null" line="1268" static="1">
			<f a="this:target:index:buffer:offset:size">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferRange>
		<bindFramebuffer public="1" get="inline" set="null" line="1275" static="1">
			<f a="this:target:framebuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="1282" static="1">
			<f a="this:target:renderbuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindRenderbuffer>
		<bindSampler public="1" get="inline" set="null" line="1289" static="1">
			<f a="this:unit:sampler">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindSampler>
		<bindTexture public="1" get="inline" set="null" line="1296" static="1">
			<f a="this:target:texture">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTexture>
		<bindTransformFeedback public="1" get="inline" set="null" line="1303" static="1">
			<f a="this:target:transformFeedback">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTransformFeedback>
		<bindVertexArray public="1" get="inline" set="null" line="1310" static="1">
			<f a="this:vertexArray">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindVertexArray>
		<blendColor public="1" get="inline" set="null" line="1317" static="1">
			<f a="this:red:green:blue:alpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendColor>
		<blendEquation public="1" get="inline" set="null" line="1324" static="1">
			<f a="this:mode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="1331" static="1">
			<f a="this:modeRGB:modeAlpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="1338" static="1">
			<f a="this:sfactor:dfactor">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="1345" static="1">
			<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFuncSeparate>
		<blitFramebuffer public="1" get="inline" set="null" line="1352" static="1">
			<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blitFramebuffer>
		<bufferData public="1" set="method" line="1360" static="1">
			<f a="this:target:srcData:usage:?srcOffset:?length" v="::::0:0">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ length : 0, srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</bufferData>
		<bufferSubData public="1" get="inline" set="null" line="1377" static="1">
			<f a="this:target:offset:srcData:?srcOffset:?length" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="1393" static="1">
			<f a="this:target">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="1400" static="1">
			<f a="this:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clear>
		<clearBufferfi public="1" get="inline" set="null" line="1407" static="1">
			<f a="this:buffer:drawbuffer:depth:stencil">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferfi>
		<clearBufferfv public="1" set="method" line="1415" static="1">
			<f a="this:buffer:drawbuffer:values:?srcOffset" v="::::0">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</clearBufferfv>
		<clearBufferiv public="1" set="method" line="1431" static="1">
			<f a="this:buffer:drawbuffer:values:?srcOffset">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferiv>
		<clearBufferuiv public="1" set="method" line="1447" static="1">
			<f a="this:buffer:drawbuffer:values:?srcOffset">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferuiv>
		<clearColor public="1" get="inline" set="null" line="1462" static="1">
			<f a="this:red:green:blue:alpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearColor>
		<clearDepth public="1" get="inline" set="null" line="1469" static="1">
			<f a="this:depth">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearDepth>
		<clearStencil public="1" get="inline" set="null" line="1476" static="1">
			<f a="this:s">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearStencil>
		<clientWaitSync public="1" get="inline" set="null" line="1484" static="1">
			<f a="this:sync:flags:timeout">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clientWaitSync>
		<colorMask public="1" get="inline" set="null" line="1498" static="1">
			<f a="this:red:green:blue:alpha">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</colorMask>
		<compileShader public="1" get="inline" set="null" line="1505" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compileShader>
		<compressedTexImage2D public="1" set="method" line="1513" static="1">
			<f a="this:target:level:internalformat:width:height:border:srcData:?srcOffset:?srcLengthOverride" v="::::::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexImage2D>
		<compressedTexImage3D public="1" set="method" line="1532" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexImage3D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="1551" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexSubImage2D>
		<compressedTexSubImage3D public="1" get="inline" set="null" line="1570" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexSubImage3D>
		<copyBufferSubData public="1" get="inline" set="null" line="1588" static="1">
			<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyBufferSubData>
		<copyTexImage2D public="1" get="inline" set="null" line="1595" static="1">
			<f a="this:target:level:internalformat:x:y:width:height:border">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="1602" static="1">
			<f a="this:target:level:xoffset:yoffset:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage2D>
		<copyTexSubImage3D public="1" get="inline" set="null" line="1609" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage3D>
		<createBuffer public="1" get="inline" set="null" line="1616" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="1623" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="1630" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createProgram>
		<createQuery public="1" get="inline" set="null" line="1637" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createQuery>
		<createRenderbuffer public="1" get="inline" set="null" line="1644" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createRenderbuffer>
		<createSampler public="1" get="inline" set="null" line="1651" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createSampler>
		<createShader public="1" get="inline" set="null" line="1658" static="1">
			<f a="this:type">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLShader"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createShader>
		<createTexture public="1" get="inline" set="null" line="1665" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTexture"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTexture>
		<createTransformFeedback public="1" get="inline" set="null" line="1672" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTransformFeedback>
		<createVertexArray public="1" get="inline" set="null" line="1679" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createVertexArray>
		<cullFace public="1" get="inline" set="null" line="1686" static="1">
			<f a="this:mode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="1693" static="1">
			<f a="this:buffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="1700" static="1">
			<f a="this:framebuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="1707" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteProgram>
		<deleteQuery public="1" get="inline" set="null" line="1714" static="1">
			<f a="this:query">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteQuery>
		<deleteRenderbuffer public="1" get="inline" set="null" line="1721" static="1">
			<f a="this:renderbuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteRenderbuffer>
		<deleteSampler public="1" get="inline" set="null" line="1728" static="1">
			<f a="this:sampler">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSampler>
		<deleteShader public="1" get="inline" set="null" line="1735" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteShader>
		<deleteSync public="1" get="inline" set="null" line="1742" static="1">
			<f a="this:sync">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSync>
		<deleteTexture public="1" get="inline" set="null" line="1749" static="1">
			<f a="this:texture">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTexture>
		<deleteTransformFeedback public="1" get="inline" set="null" line="1756" static="1">
			<f a="this:transformFeedback">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTransformFeedback>
		<deleteVertexArray public="1" get="inline" set="null" line="1763" static="1">
			<f a="this:vertexArray">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteVertexArray>
		<depthFunc public="1" get="inline" set="null" line="1770" static="1">
			<f a="this:func">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthFunc>
		<depthMask public="1" get="inline" set="null" line="1777" static="1">
			<f a="this:flag">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthMask>
		<depthRange public="1" get="inline" set="null" line="1784" static="1">
			<f a="this:zNear:zFar">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthRange>
		<detachShader public="1" get="inline" set="null" line="1791" static="1">
			<f a="this:program:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</detachShader>
		<disable public="1" get="inline" set="null" line="1798" static="1">
			<f a="this:cap">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="1805" static="1">
			<f a="this:index">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="1812" static="1">
			<f a="this:mode:first:count">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArrays>
		<drawArraysInstanced public="1" get="inline" set="null" line="1819" static="1">
			<f a="this:mode:first:count:instanceCount">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArraysInstanced>
		<drawBuffers public="1" get="inline" set="null" line="1826" static="1">
			<f a="this:buffers">
				<c path="lime.graphics.GLRenderContext"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawBuffers>
		<drawElements public="1" get="inline" set="null" line="1833" static="1">
			<f a="this:mode:count:type:offset">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElements>
		<drawElementsInstanced public="1" get="inline" set="null" line="1840" static="1">
			<f a="this:mode:count:type:offset:instanceCount">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElementsInstanced>
		<drawRangeElements public="1" get="inline" set="null" line="1847" static="1">
			<f a="this:mode:start:end:count:type:offset">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawRangeElements>
		<enable public="1" get="inline" set="null" line="1854" static="1">
			<f a="this:cap">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="1861" static="1">
			<f a="this:index">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enableVertexAttribArray>
		<endQuery public="1" get="inline" set="null" line="1868" static="1">
			<f a="this:target">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endQuery>
		<endTransformFeedback public="1" get="inline" set="null" line="1875" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endTransformFeedback>
		<fenceSync public="1" get="inline" set="null" line="1882" static="1">
			<f a="this:condition:flags">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSync"/>
			</f>
			<meta><m n=":impl"/></meta>
		</fenceSync>
		<finish public="1" get="inline" set="null" line="1889" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</finish>
		<flush public="1" get="inline" set="null" line="1896" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="1903" static="1">
			<f a="this:target:attachment:renderbuffertarget:renderbuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="1910" static="1">
			<f a="this:target:attachment:textarget:texture:level">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTexture2D>
		<framebufferTextureLayer public="1" get="inline" set="null" line="1917" static="1">
			<f a="this:target:attachment:texture:level:layer">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTextureLayer>
		<frontFace public="1" get="inline" set="null" line="1924" static="1">
			<f a="this:mode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</frontFace>
		<generateMipmap public="1" get="inline" set="null" line="1931" static="1">
			<f a="this:target">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</generateMipmap>
		<getActiveAttrib public="1" get="inline" set="null" line="1938" static="1">
			<f a="this:program:index">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="1945" static="1">
			<f a="this:program:index">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniform>
		<getActiveUniformBlockName public="1" get="inline" set="null" line="1952" static="1">
			<f a="this:program:uniformBlockIndex">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockName>
		<getActiveUniformBlockParameter public="1" get="inline" set="null" line="1959" static="1">
			<f a="this:program:uniformBlockIndex:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockParameter>
		<getActiveUniforms public="1" get="inline" set="null" line="1966" static="1">
			<f a="this:program:uniformIndices:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniforms>
		<getAttachedShaders public="1" get="inline" set="null" line="1973" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="1980" static="1">
			<f a="this:program:name">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttribLocation>
		<getBufferParameter public="1" get="inline" set="null" line="1987" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameter>
		<getBufferSubData public="1" get="inline" set="null" line="1995" static="1">
			<f a="this:target:srcByteOffset:dstData:?srcOffset:?length" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</getBufferSubData>
		<getContextAttributes public="1" get="inline" set="null" line="2012" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLContextAttributes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getContextAttributes>
		<getError public="1" get="inline" set="null" line="2019" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getError>
		<getExtension public="1" get="inline" set="null" line="2026" static="1">
			<f a="this:name">
				<c path="lime.graphics.GLRenderContext"/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getExtension>
		<getFragDataLocation public="1" get="inline" set="null" line="2033" static="1">
			<f a="this:program:name">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFragDataLocation>
		<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="2040" static="1">
			<f a="this:target:attachment:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFramebufferAttachmentParameter>
		<getIndexedParameter public="1" get="inline" set="null" line="2047" static="1">
			<f a="this:target:index">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getIndexedParameter>
		<getInternalformatParameter public="1" get="inline" set="null" line="2054" static="1">
			<f a="this:target:internalformat:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInternalformatParameter>
		<getParameter public="1" get="inline" set="null" line="2061" static="1">
			<f a="this:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getParameter>
		<getProgramInfoLog public="1" get="inline" set="null" line="2068" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramInfoLog>
		<getProgramParameter public="1" get="inline" set="null" line="2075" static="1">
			<f a="this:program:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramParameter>
		<getQuery public="1" get="inline" set="null" line="2082" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLQuery"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQuery>
		<getQueryParameter public="1" get="inline" set="null" line="2089" static="1">
			<f a="this:query:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryParameter>
		<getRenderbufferParameter public="1" get="inline" set="null" line="2096" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getRenderbufferParameter>
		<getSamplerParameter public="1" get="inline" set="null" line="2103" static="1">
			<f a="this:sampler:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameter>
		<getShaderInfoLog public="1" get="inline" set="null" line="2110" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderInfoLog>
		<getShaderParameter public="1" get="inline" set="null" line="2117" static="1">
			<f a="this:shader:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderParameter>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="2124" static="1">
			<f a="this:shadertype:precisiontype">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderPrecisionFormat>
		<getShaderSource public="1" get="inline" set="null" line="2131" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderSource>
		<getSupportedExtensions public="1" get="inline" set="null" line="2138" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getSupportedExtensions>
		<getSyncParameter public="1" get="inline" set="null" line="2145" static="1">
			<f a="this:sync:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSyncParameter>
		<getTexParameter public="1" get="inline" set="null" line="2152" static="1">
			<f a="this:target:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameter>
		<getTransformFeedbackVarying public="1" get="inline" set="null" line="2159" static="1">
			<f a="this:program:index">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTransformFeedbackVarying>
		<getUniform public="1" get="inline" set="null" line="2166" static="1">
			<f a="this:program:location">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniform>
		<getUniformBlockIndex public="1" get="inline" set="null" line="2173" static="1">
			<f a="this:program:uniformBlockName">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformBlockIndex>
		<getUniformIndices public="1" get="inline" set="null" line="2181" static="1">
			<f a="this:program:uniformNames">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformIndices>
		<getUniformLocation public="1" get="inline" set="null" line="2197" static="1">
			<f a="this:program:name">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformLocation>
		<getVertexAttrib public="1" get="inline" set="null" line="2204" static="1">
			<f a="this:index:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttrib>
		<getVertexAttribOffset public="1" get="inline" set="null" line="2211" static="1">
			<f a="this:index:pname">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribOffset>
		<hint public="1" get="inline" set="null" line="2218" static="1">
			<f a="this:target:mode">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</hint>
		<invalidateFramebuffer public="1" get="inline" set="null" line="2225" static="1">
			<f a="this:target:attachments">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" get="inline" set="null" line="2232" static="1">
			<f a="this:target:attachments:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateSubFramebuffer>
		<isBuffer public="1" get="inline" set="null" line="2239" static="1">
			<f a="this:buffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isBuffer>
		<isContextLost public="1" get="inline" set="null" line="2246" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isContextLost>
		<isEnabled public="1" get="inline" set="null" line="2253" static="1">
			<f a="this:cap">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isEnabled>
		<isFramebuffer public="1" get="inline" set="null" line="2260" static="1">
			<f a="this:framebuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="2267" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isProgram>
		<isQuery public="1" get="inline" set="null" line="2274" static="1">
			<f a="this:query">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isQuery>
		<isRenderbuffer public="1" get="inline" set="null" line="2281" static="1">
			<f a="this:renderbuffer">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isRenderbuffer>
		<isSampler public="1" get="inline" set="null" line="2288" static="1">
			<f a="this:sampler">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isSampler>
		<isShader public="1" get="inline" set="null" line="2295" static="1">
			<f a="this:shader">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isShader>
		<isTexture public="1" get="inline" set="null" line="2302" static="1">
			<f a="this:texture">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTexture>
		<isTransformFeedback public="1" get="inline" set="null" line="2309" static="1">
			<f a="this:transformFeedback">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTransformFeedback>
		<isVertexArray public="1" get="inline" set="null" line="2316" static="1">
			<f a="this:vertexArray">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isVertexArray>
		<lineWidth public="1" get="inline" set="null" line="2323" static="1">
			<f a="this:width">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</lineWidth>
		<linkProgram public="1" get="inline" set="null" line="2330" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</linkProgram>
		<pauseTransformFeedback public="1" get="inline" set="null" line="2337" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pauseTransformFeedback>
		<pixelStorei public="1" get="inline" set="null" line="2344" static="1">
			<f a="this:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="2351" static="1">
			<f a="this:factor:units">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</polygonOffset>
		<readBuffer public="1" get="inline" set="null" line="2358" static="1">
			<f a="this:src">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readBuffer>
		<readPixels public="1" get="inline" set="null" line="2366" static="1">
			<f a="this:x:y:width:height:format:type:pixels:?dstOffset" v="::::::::0">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ dstOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</readPixels>
		<renderbufferStorage public="1" get="inline" set="null" line="2384" static="1">
			<f a="this:target:internalformat:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorage>
		<renderbufferStorageMultisample public="1" get="inline" set="null" line="2391" static="1">
			<f a="this:target:samples:internalformat:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" get="inline" set="null" line="2398" static="1">
			<f a="this">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</resumeTransformFeedback>
		<sampleCoverage public="1" get="inline" set="null" line="2405" static="1">
			<f a="this:value:invert">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</sampleCoverage>
		<samplerParameterf public="1" get="inline" set="null" line="2412" static="1">
			<f a="this:sampler:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameterf>
		<samplerParameteri public="1" get="inline" set="null" line="2419" static="1">
			<f a="this:sampler:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameteri>
		<scissor public="1" get="inline" set="null" line="2426" static="1">
			<f a="this:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</scissor>
		<shaderSource public="1" get="inline" set="null" line="2433" static="1">
			<f a="this:shader:source">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="2440" static="1">
			<f a="this:func:ref:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="2447" static="1">
			<f a="this:face:func:ref:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="2454" static="1">
			<f a="this:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="2461" static="1">
			<f a="this:face:mask">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="2468" static="1">
			<f a="this:fail:zfail:zpass">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="2475" static="1">
			<f a="this:face:fail:zfail:zpass">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="2483" static="1">
			<f a="this:target:level:internalformat:width:height:border:format:type:srcData:?srcOffset" v="::::::::::0">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texImage2D>
		<texImage3D public="1" get="inline" set="null" line="2506" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:format:type:srcData:?srcOffset" v=":::::::::::0">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texImage3D>
		<texStorage2D public="1" get="inline" set="null" line="2528" static="1">
			<f a="this:target:level:internalformat:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage2D>
		<texStorage3D public="1" get="inline" set="null" line="2535" static="1">
			<f a="this:target:level:internalformat:width:height:depth">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage3D>
		<texParameterf public="1" get="inline" set="null" line="2542" static="1">
			<f a="this:target:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameterf>
		<texParameteri public="1" get="inline" set="null" line="2549" static="1">
			<f a="this:target:pname:param">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="2557" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texSubImage2D>
		<texSubImage3D public="1" get="inline" set="null" line="2580" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:srcData:?srcOffset" v="::::::::::::0">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texSubImage3D>
		<transformFeedbackVaryings public="1" get="inline" set="null" line="2602" static="1">
			<f a="this:program:varyings:bufferMode">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transformFeedbackVaryings>
		<uniform1f public="1" get="inline" set="null" line="2609" static="1">
			<f a="this:location:v0">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="2616" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="2627" static="1">
			<f a="this:location:v0">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="2634" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Int32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1iv>
		<uniform1ui public="1" get="inline" set="null" line="2645" static="1">
			<f a="this:location:v0">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1ui>
		<uniform1uiv public="1" get="inline" set="null" line="2652" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1uiv>
		<uniform2f public="1" get="inline" set="null" line="2663" static="1">
			<f a="this:location:v0:v1">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2f>
		<uniform2fv public="1" get="inline" set="null" line="2670" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="2682" static="1">
			<f a="this:location:v0:v1">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="2689" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Int32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2iv>
		<uniform2ui public="1" get="inline" set="null" line="2700" static="1">
			<f a="this:location:v0:v1">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2ui>
		<uniform2uiv public="1" get="inline" set="null" line="2707" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2uiv>
		<uniform3f public="1" get="inline" set="null" line="2718" static="1">
			<f a="this:location:v0:v1:v2">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="2725" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="2736" static="1">
			<f a="this:location:v0:v1:v2">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="2743" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Int32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3iv>
		<uniform3ui public="1" get="inline" set="null" line="2754" static="1">
			<f a="this:location:v0:v1:v2">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3ui>
		<uniform3uiv public="1" get="inline" set="null" line="2761" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3uiv>
		<uniform4f public="1" get="inline" set="null" line="2772" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="2779" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="2790" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="2797" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Int32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4iv>
		<uniform4ui public="1" get="inline" set="null" line="2808" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4ui>
		<uniform4uiv public="1" get="inline" set="null" line="2815" static="1">
			<f a="this:location:v">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4uiv>
		<uniformBlockBinding public="1" get="inline" set="null" line="2826" static="1">
			<f a="this:program:uniformBlockIndex:uniformBlockBinding">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformBlockBinding>
		<uniformMatrix2fv public="1" set="method" line="2835" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix2fv>
		<uniformMatrix2x3fv public="1" set="method" line="2856" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix2x3fv>
		<uniformMatrix2x4fv public="1" set="method" line="2877" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix2x4fv>
		<uniformMatrix3fv public="1" set="method" line="2898" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix3fv>
		<uniformMatrix3x2fv public="1" set="method" line="2919" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix3x2fv>
		<uniformMatrix3x4fv public="1" set="method" line="2940" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix3x4fv>
		<uniformMatrix4fv public="1" set="method" line="2961" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix4fv>
		<uniformMatrix4x2fv public="1" set="method" line="2982" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix4x2fv>
		<uniformMatrix4x3fv public="1" set="method" line="3003" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix4x3fv>
		<useProgram public="1" get="inline" set="null" line="3023" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</useProgram>
		<validateProgram public="1" get="inline" set="null" line="3030" static="1">
			<f a="this:program">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="3037" static="1">
			<f a="this:indx:x">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="3044" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="3051" static="1">
			<f a="this:indx:x:y">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="3058" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="3065" static="1">
			<f a="this:indx:x:y:z">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="3072" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="3079" static="1">
			<f a="this:indx:x:y:z:w">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="3086" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4fv>
		<vertexAttribDivisor public="1" get="inline" set="null" line="3093" static="1">
			<f a="this:index:divisor">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribDivisor>
		<vertexAttribI4i public="1" get="inline" set="null" line="3100" static="1">
			<f a="this:indx:x:y:z:w">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4i>
		<vertexAttribI4iv public="1" get="inline" set="null" line="3107" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4iv>
		<vertexAttribI4ui public="1" get="inline" set="null" line="3114" static="1">
			<f a="this:indx:x:y:z:w">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4ui>
		<vertexAttribI4uiv public="1" get="inline" set="null" line="3121" static="1">
			<f a="this:indx:values">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4uiv>
		<vertexAttribPointer public="1" get="inline" set="null" line="3128" static="1">
			<f a="this:indx:size:type:normalized:stride:offset">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="3135" static="1">
			<f a="this:x:y:width:height">
				<c path="lime.graphics.GLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</viewport>
		<waitSync public="1" get="inline" set="null" line="3142" static="1">
			<f a="this:sync:flags:timeout">
				<c path="lime.graphics.GLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</waitSync>
		<fromGL set="method" line="3149" static="1">
			<f a="gl">
				<d/>
				<x path="lime.graphics.opengl.WebGL2Context"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<fromGLES3Context set="method" line="3160" static="1">
			<f a="gl">
				<x path="lime.graphics.opengl.GLES3Context"/>
				<x path="lime.graphics.opengl.WebGL2Context"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGLES3Context>
		<toWebGLContext set="method" line="3167" static="1">
			<f a="gl">
				<x path="lime.graphics.opengl.WebGLContext"/>
				<x path="lime.graphics.opengl.WebGL2Context"/>
			</f>
			<meta><m n=":from"/></meta>
		</toWebGLContext>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<abstract path="lime.graphics.opengl.WebGLContext" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/WebGLContext.hx">
		<from>
			<icast><x path="lime.graphics.opengl.WebGL2Context"/></icast>
			<icast><c path="lime.graphics.GLRenderContext"/></icast>
			<icast field="fromGL"><d/></icast>
			<icast field="fromGLES2Context"><x path="lime.graphics.opengl.GLES2Context"/></icast>
			<icast field="fromGLES3Context"><x path="lime.graphics.opengl.GLES3Context"/></icast>
		</from>
		<this><x path="lime.graphics.opengl.WebGL2Context"/></this>
		<meta><m n=":forward">
	<e>DEPTH_BUFFER_BIT</e>
	<e>STENCIL_BUFFER_BIT</e>
	<e>COLOR_BUFFER_BIT</e>
	<e>POINTS</e>
	<e>LINES</e>
	<e>LINE_LOOP</e>
	<e>LINE_STRIP</e>
	<e>TRIANGLES</e>
	<e>TRIANGLE_STRIP</e>
	<e>TRIANGLE_FAN</e>
	<e>ZERO</e>
	<e>ONE</e>
	<e>SRC_COLOR</e>
	<e>ONE_MINUS_SRC_COLOR</e>
	<e>SRC_ALPHA</e>
	<e>ONE_MINUS_SRC_ALPHA</e>
	<e>DST_ALPHA</e>
	<e>ONE_MINUS_DST_ALPHA</e>
	<e>DST_COLOR</e>
	<e>ONE_MINUS_DST_COLOR</e>
	<e>SRC_ALPHA_SATURATE</e>
	<e>FUNC_ADD</e>
	<e>BLEND_EQUATION</e>
	<e>BLEND_EQUATION_RGB</e>
	<e>BLEND_EQUATION_ALPHA</e>
	<e>FUNC_SUBTRACT</e>
	<e>FUNC_REVERSE_SUBTRACT</e>
	<e>BLEND_DST_RGB</e>
	<e>BLEND_SRC_RGB</e>
	<e>BLEND_DST_ALPHA</e>
	<e>BLEND_SRC_ALPHA</e>
	<e>CONSTANT_COLOR</e>
	<e>ONE_MINUS_CONSTANT_COLOR</e>
	<e>CONSTANT_ALPHA</e>
	<e>ONE_MINUS_CONSTANT_ALPHA</e>
	<e>BLEND_COLOR</e>
	<e>ARRAY_BUFFER</e>
	<e>ELEMENT_ARRAY_BUFFER</e>
	<e>ARRAY_BUFFER_BINDING</e>
	<e>ELEMENT_ARRAY_BUFFER_BINDING</e>
	<e>STREAM_DRAW</e>
	<e>STATIC_DRAW</e>
	<e>DYNAMIC_DRAW</e>
	<e>BUFFER_SIZE</e>
	<e>BUFFER_USAGE</e>
	<e>CURRENT_VERTEX_ATTRIB</e>
	<e>FRONT</e>
	<e>BACK</e>
	<e>FRONT_AND_BACK</e>
	<e>CULL_FACE</e>
	<e>BLEND</e>
	<e>DITHER</e>
	<e>STENCIL_TEST</e>
	<e>DEPTH_TEST</e>
	<e>SCISSOR_TEST</e>
	<e>POLYGON_OFFSET_FILL</e>
	<e>SAMPLE_ALPHA_TO_COVERAGE</e>
	<e>SAMPLE_COVERAGE</e>
	<e>NO_ERROR</e>
	<e>INVALID_ENUM</e>
	<e>INVALID_VALUE</e>
	<e>INVALID_OPERATION</e>
	<e>OUT_OF_MEMORY</e>
	<e>CW</e>
	<e>CCW</e>
	<e>LINE_WIDTH</e>
	<e>ALIASED_POINT_SIZE_RANGE</e>
	<e>ALIASED_LINE_WIDTH_RANGE</e>
	<e>CULL_FACE_MODE</e>
	<e>FRONT_FACE</e>
	<e>DEPTH_RANGE</e>
	<e>DEPTH_WRITEMASK</e>
	<e>DEPTH_CLEAR_VALUE</e>
	<e>DEPTH_FUNC</e>
	<e>STENCIL_CLEAR_VALUE</e>
	<e>STENCIL_FUNC</e>
	<e>STENCIL_FAIL</e>
	<e>STENCIL_PASS_DEPTH_FAIL</e>
	<e>STENCIL_PASS_DEPTH_PASS</e>
	<e>STENCIL_REF</e>
	<e>STENCIL_VALUE_MASK</e>
	<e>STENCIL_WRITEMASK</e>
	<e>STENCIL_BACK_FUNC</e>
	<e>STENCIL_BACK_FAIL</e>
	<e>STENCIL_BACK_PASS_DEPTH_FAIL</e>
	<e>STENCIL_BACK_PASS_DEPTH_PASS</e>
	<e>STENCIL_BACK_REF</e>
	<e>STENCIL_BACK_VALUE_MASK</e>
	<e>STENCIL_BACK_WRITEMASK</e>
	<e>VIEWPORT</e>
	<e>SCISSOR_BOX</e>
	<e>COLOR_CLEAR_VALUE</e>
	<e>COLOR_WRITEMASK</e>
	<e>UNPACK_ALIGNMENT</e>
	<e>PACK_ALIGNMENT</e>
	<e>MAX_TEXTURE_SIZE</e>
	<e>MAX_VIEWPORT_DIMS</e>
	<e>SUBPIXEL_BITS</e>
	<e>RED_BITS</e>
	<e>GREEN_BITS</e>
	<e>BLUE_BITS</e>
	<e>ALPHA_BITS</e>
	<e>DEPTH_BITS</e>
	<e>STENCIL_BITS</e>
	<e>POLYGON_OFFSET_UNITS</e>
	<e>POLYGON_OFFSET_FACTOR</e>
	<e>TEXTURE_BINDING_2D</e>
	<e>SAMPLE_BUFFERS</e>
	<e>SAMPLES</e>
	<e>SAMPLE_COVERAGE_VALUE</e>
	<e>SAMPLE_COVERAGE_INVERT</e>
	<e>COMPRESSED_TEXTURE_FORMATS</e>
	<e>DONT_CARE</e>
	<e>FASTEST</e>
	<e>NICEST</e>
	<e>GENERATE_MIPMAP_HINT</e>
	<e>BYTE</e>
	<e>UNSIGNED_BYTE</e>
	<e>SHORT</e>
	<e>UNSIGNED_SHORT</e>
	<e>INT</e>
	<e>UNSIGNED_INT</e>
	<e>FLOAT</e>
	<e>DEPTH_COMPONENT</e>
	<e>ALPHA</e>
	<e>RGB</e>
	<e>RGBA</e>
	<e>LUMINANCE</e>
	<e>LUMINANCE_ALPHA</e>
	<e>UNSIGNED_SHORT_4_4_4_4</e>
	<e>UNSIGNED_SHORT_5_5_5_1</e>
	<e>UNSIGNED_SHORT_5_6_5</e>
	<e>FRAGMENT_SHADER</e>
	<e>VERTEX_SHADER</e>
	<e>MAX_VERTEX_ATTRIBS</e>
	<e>MAX_VERTEX_UNIFORM_VECTORS</e>
	<e>MAX_VARYING_VECTORS</e>
	<e>MAX_COMBINED_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_VERTEX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_FRAGMENT_UNIFORM_VECTORS</e>
	<e>SHADER_TYPE</e>
	<e>DELETE_STATUS</e>
	<e>LINK_STATUS</e>
	<e>VALIDATE_STATUS</e>
	<e>ATTACHED_SHADERS</e>
	<e>ACTIVE_UNIFORMS</e>
	<e>ACTIVE_ATTRIBUTES</e>
	<e>SHADING_LANGUAGE_VERSION</e>
	<e>CURRENT_PROGRAM</e>
	<e>NEVER</e>
	<e>LESS</e>
	<e>EQUAL</e>
	<e>LEQUAL</e>
	<e>GREATER</e>
	<e>NOTEQUAL</e>
	<e>GEQUAL</e>
	<e>ALWAYS</e>
	<e>KEEP</e>
	<e>REPLACE</e>
	<e>INCR</e>
	<e>DECR</e>
	<e>INVERT</e>
	<e>INCR_WRAP</e>
	<e>DECR_WRAP</e>
	<e>VENDOR</e>
	<e>RENDERER</e>
	<e>VERSION</e>
	<e>NEAREST</e>
	<e>LINEAR</e>
	<e>NEAREST_MIPMAP_NEAREST</e>
	<e>LINEAR_MIPMAP_NEAREST</e>
	<e>NEAREST_MIPMAP_LINEAR</e>
	<e>LINEAR_MIPMAP_LINEAR</e>
	<e>TEXTURE_MAG_FILTER</e>
	<e>TEXTURE_MIN_FILTER</e>
	<e>TEXTURE_WRAP_S</e>
	<e>TEXTURE_WRAP_T</e>
	<e>TEXTURE_2D</e>
	<e>TEXTURE</e>
	<e>TEXTURE_CUBE_MAP</e>
	<e>TEXTURE_BINDING_CUBE_MAP</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_X</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_X</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Z</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Z</e>
	<e>MAX_CUBE_MAP_TEXTURE_SIZE</e>
	<e>TEXTURE0</e>
	<e>TEXTURE1</e>
	<e>TEXTURE2</e>
	<e>TEXTURE3</e>
	<e>TEXTURE4</e>
	<e>TEXTURE5</e>
	<e>TEXTURE6</e>
	<e>TEXTURE7</e>
	<e>TEXTURE8</e>
	<e>TEXTURE9</e>
	<e>TEXTURE10</e>
	<e>TEXTURE11</e>
	<e>TEXTURE12</e>
	<e>TEXTURE13</e>
	<e>TEXTURE14</e>
	<e>TEXTURE15</e>
	<e>TEXTURE16</e>
	<e>TEXTURE17</e>
	<e>TEXTURE18</e>
	<e>TEXTURE19</e>
	<e>TEXTURE20</e>
	<e>TEXTURE21</e>
	<e>TEXTURE22</e>
	<e>TEXTURE23</e>
	<e>TEXTURE24</e>
	<e>TEXTURE25</e>
	<e>TEXTURE26</e>
	<e>TEXTURE27</e>
	<e>TEXTURE28</e>
	<e>TEXTURE29</e>
	<e>TEXTURE30</e>
	<e>TEXTURE31</e>
	<e>ACTIVE_TEXTURE</e>
	<e>REPEAT</e>
	<e>CLAMP_TO_EDGE</e>
	<e>MIRRORED_REPEAT</e>
	<e>FLOAT_VEC2</e>
	<e>FLOAT_VEC3</e>
	<e>FLOAT_VEC4</e>
	<e>INT_VEC2</e>
	<e>INT_VEC3</e>
	<e>INT_VEC4</e>
	<e>BOOL</e>
	<e>BOOL_VEC2</e>
	<e>BOOL_VEC3</e>
	<e>BOOL_VEC4</e>
	<e>FLOAT_MAT2</e>
	<e>FLOAT_MAT3</e>
	<e>FLOAT_MAT4</e>
	<e>SAMPLER_2D</e>
	<e>SAMPLER_CUBE</e>
	<e>VERTEX_ATTRIB_ARRAY_ENABLED</e>
	<e>VERTEX_ATTRIB_ARRAY_SIZE</e>
	<e>VERTEX_ATTRIB_ARRAY_STRIDE</e>
	<e>VERTEX_ATTRIB_ARRAY_TYPE</e>
	<e>VERTEX_ATTRIB_ARRAY_NORMALIZED</e>
	<e>VERTEX_ATTRIB_ARRAY_POINTER</e>
	<e>VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</e>
	<e>COMPILE_STATUS</e>
	<e>LOW_FLOAT</e>
	<e>MEDIUM_FLOAT</e>
	<e>HIGH_FLOAT</e>
	<e>LOW_INT</e>
	<e>MEDIUM_INT</e>
	<e>HIGH_INT</e>
	<e>FRAMEBUFFER</e>
	<e>RENDERBUFFER</e>
	<e>RGBA4</e>
	<e>RGB5_A1</e>
	<e>RGB565</e>
	<e>DEPTH_COMPONENT16</e>
	<e>STENCIL_INDEX</e>
	<e>STENCIL_INDEX8</e>
	<e>DEPTH_STENCIL</e>
	<e>RENDERBUFFER_WIDTH</e>
	<e>RENDERBUFFER_HEIGHT</e>
	<e>RENDERBUFFER_INTERNAL_FORMAT</e>
	<e>RENDERBUFFER_RED_SIZE</e>
	<e>RENDERBUFFER_GREEN_SIZE</e>
	<e>RENDERBUFFER_BLUE_SIZE</e>
	<e>RENDERBUFFER_ALPHA_SIZE</e>
	<e>RENDERBUFFER_DEPTH_SIZE</e>
	<e>RENDERBUFFER_STENCIL_SIZE</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</e>
	<e>COLOR_ATTACHMENT0</e>
	<e>DEPTH_ATTACHMENT</e>
	<e>STENCIL_ATTACHMENT</e>
	<e>DEPTH_STENCIL_ATTACHMENT</e>
	<e>NONE</e>
	<e>FRAMEBUFFER_COMPLETE</e>
	<e>FRAMEBUFFER_INCOMPLETE_ATTACHMENT</e>
	<e>FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</e>
	<e>FRAMEBUFFER_INCOMPLETE_DIMENSIONS</e>
	<e>FRAMEBUFFER_UNSUPPORTED</e>
	<e>FRAMEBUFFER_BINDING</e>
	<e>RENDERBUFFER_BINDING</e>
	<e>MAX_RENDERBUFFER_SIZE</e>
	<e>INVALID_FRAMEBUFFER_OPERATION</e>
	<e>UNPACK_FLIP_Y_WEBGL</e>
	<e>UNPACK_PREMULTIPLY_ALPHA_WEBGL</e>
	<e>CONTEXT_LOST_WEBGL</e>
	<e>UNPACK_COLORSPACE_CONVERSION_WEBGL</e>
	<e>BROWSER_DEFAULT_WEBGL</e>
	<e>type</e>
	<e>version</e>
	<e>activeTexture</e>
	<e>attachShader</e>
	<e>bindAttribLocation</e>
	<e>bindBuffer</e>
	<e>bindFramebuffer</e>
	<e>bindRenderbuffer</e>
	<e>bindTexture</e>
	<e>blendColor</e>
	<e>blendEquation</e>
	<e>blendEquationSeparate</e>
	<e>blendFunc</e>
	<e>blendFuncSeparate</e>
	<e>checkFramebufferStatus</e>
	<e>clear</e>
	<e>clearColor</e>
	<e>clearDepth</e>
	<e>clearStencil</e>
	<e>colorMask</e>
	<e>compileShader</e>
	<e>copyTexImage2D</e>
	<e>copyTexSubImage2D</e>
	<e>createBuffer</e>
	<e>createFramebuffer</e>
	<e>createProgram</e>
	<e>createRenderbuffer</e>
	<e>createShader</e>
	<e>createTexture</e>
	<e>cullFace</e>
	<e>cullFace</e>
	<e>deleteBuffer</e>
	<e>deleteFramebuffer</e>
	<e>deleteProgram</e>
	<e>deleteRenderbuffer</e>
	<e>deleteShader</e>
	<e>deleteTexture</e>
	<e>depthFunc</e>
	<e>depthMask</e>
	<e>depthRange</e>
	<e>detachShader</e>
	<e>disable</e>
	<e>disableVertexAttribArray</e>
	<e>drawArrays</e>
	<e>drawElements</e>
	<e>enable</e>
	<e>enableVertexAttribArray</e>
	<e>finish</e>
	<e>flush</e>
	<e>framebufferRenderbuffer</e>
	<e>framebufferTexture2D</e>
	<e>frontFace</e>
	<e>generateMipmap</e>
	<e>getActiveAttrib</e>
	<e>getActiveUniform</e>
	<e>getAttachedShaders</e>
	<e>getAttribLocation</e>
	<e>getBufferParameter</e>
	<e>getContextAttributes</e>
	<e>getError</e>
	<e>getExtension</e>
	<e>getFramebufferAttachmentParameter</e>
	<e>getParameter</e>
	<e>getProgramInfoLog</e>
	<e>getProgramParameter</e>
	<e>getRenderbufferParameter</e>
	<e>getShaderInfoLog</e>
	<e>getShaderParameter</e>
	<e>getShaderPrecisionFormat</e>
	<e>getShaderSource</e>
	<e>getSupportedExtensions</e>
	<e>getTexParameter</e>
	<e>getUniform</e>
	<e>getUniformLocation</e>
	<e>getVertexAttrib</e>
	<e>getVertexAttribOffset</e>
	<e>hint</e>
	<e>isBuffer</e>
	<e>isContextLost</e>
	<e>isEnabled</e>
	<e>isFramebuffer</e>
	<e>isProgram</e>
	<e>isRenderbuffer</e>
	<e>isShader</e>
	<e>isTexture</e>
	<e>lineWidth</e>
	<e>linkProgram</e>
	<e>pixelStorei</e>
	<e>polygonOffset</e>
	<e>renderbufferStorage</e>
	<e>sampleCoverage</e>
	<e>scissor</e>
	<e>shaderSource</e>
	<e>stencilFunc</e>
	<e>stencilFuncSeparate</e>
	<e>stencilMask</e>
	<e>stencilMaskSeparate</e>
	<e>stencilOp</e>
	<e>stencilOpSeparate</e>
	<e>texParameterf</e>
	<e>texParameteri</e>
	<e>uniform1f</e>
	<e>uniform1fv</e>
	<e>uniform1i</e>
	<e>uniform1iv</e>
	<e>uniform2f</e>
	<e>uniform2fv</e>
	<e>uniform2i</e>
	<e>uniform2iv</e>
	<e>uniform3f</e>
	<e>uniform3fv</e>
	<e>uniform3i</e>
	<e>uniform3iv</e>
	<e>uniform4f</e>
	<e>uniform4fv</e>
	<e>uniform4i</e>
	<e>uniform4iv</e>
	<e>useProgram</e>
	<e>validateProgram</e>
	<e>vertexAttrib1f</e>
	<e>vertexAttrib1fv</e>
	<e>vertexAttrib2f</e>
	<e>vertexAttrib2fv</e>
	<e>vertexAttrib3f</e>
	<e>vertexAttrib3fv</e>
	<e>vertexAttrib4f</e>
	<e>vertexAttrib4fv</e>
	<e>vertexAttribPointer</e>
	<e>viewport</e>
</m></meta>
		<impl><class path="lime.graphics.opengl._WebGLContext.WebGLContext_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/WebGLContext.hx" private="1" module="lime.graphics.opengl.WebGLContext">
	<bufferData public="1" set="method" line="14" static="1">
		<f a="this:target:srcData:usage">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferData>
	<bufferSubData public="1" get="inline" set="null" line="21" static="1">
		<f a="this:target:offset:srcData">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferSubData>
	<compressedTexImage2D public="1" set="method" line="28" static="1">
		<f a="this:target:level:internalformat:width:height:border:srcData">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexImage2D>
	<compressedTexSubImage2D public="1" get="inline" set="null" line="35" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:srcData">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexSubImage2D>
	<readPixels public="1" get="inline" set="null" line="42" static="1">
		<f a="this:x:y:width:height:format:type:pixels">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readPixels>
	<texImage2D public="1" get="inline" set="null" line="50" static="1">
		<f a="this:target:level:internalformat:width:height:border:format:type:srcData">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage2D>
	<texSubImage2D public="1" get="inline" set="null" line="71" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texSubImage2D>
	<uniformMatrix2fv public="1" set="method" line="91" static="1">
		<f a="this:location:transpose:v">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2fv>
	<uniformMatrix3fv public="1" set="method" line="98" static="1">
		<f a="this:location:transpose:v">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3fv>
	<uniformMatrix4fv public="1" set="method" line="105" static="1">
		<f a="this:location:transpose:v">
			<x path="lime.graphics.opengl.WebGL2Context"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4fv>
	<fromGL set="method" line="112" static="1">
		<f a="gl">
			<d/>
			<x path="lime.graphics.opengl.WebGLContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<fromGLES2Context set="method" line="123" static="1">
		<f a="gl">
			<x path="lime.graphics.opengl.GLES2Context"/>
			<x path="lime.graphics.opengl.WebGLContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGLES2Context>
	<fromGLES3Context set="method" line="130" static="1">
		<f a="gl">
			<x path="lime.graphics.opengl.GLES3Context"/>
			<x path="lime.graphics.opengl.WebGLContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGLES3Context>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.opengl._WebGLContext.WebGLContext_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/opengl/WebGLContext.hx" private="1" module="lime.graphics.opengl.WebGLContext">
		<bufferData public="1" set="method" line="14" static="1">
			<f a="this:target:srcData:usage">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferData>
		<bufferSubData public="1" get="inline" set="null" line="21" static="1">
			<f a="this:target:offset:srcData">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferSubData>
		<compressedTexImage2D public="1" set="method" line="28" static="1">
			<f a="this:target:level:internalformat:width:height:border:srcData">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexImage2D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="35" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:srcData">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexSubImage2D>
		<readPixels public="1" get="inline" set="null" line="42" static="1">
			<f a="this:x:y:width:height:format:type:pixels">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readPixels>
		<texImage2D public="1" get="inline" set="null" line="50" static="1">
			<f a="this:target:level:internalformat:width:height:border:format:type:srcData">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage2D>
		<texSubImage2D public="1" get="inline" set="null" line="71" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texSubImage2D>
		<uniformMatrix2fv public="1" set="method" line="91" static="1">
			<f a="this:location:transpose:v">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2fv>
		<uniformMatrix3fv public="1" set="method" line="98" static="1">
			<f a="this:location:transpose:v">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3fv>
		<uniformMatrix4fv public="1" set="method" line="105" static="1">
			<f a="this:location:transpose:v">
				<x path="lime.graphics.opengl.WebGL2Context"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4fv>
		<fromGL set="method" line="112" static="1">
			<f a="gl">
				<d/>
				<x path="lime.graphics.opengl.WebGLContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<fromGLES2Context set="method" line="123" static="1">
			<f a="gl">
				<x path="lime.graphics.opengl.GLES2Context"/>
				<x path="lime.graphics.opengl.WebGLContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGLES2Context>
		<fromGLES3Context set="method" line="130" static="1">
			<f a="gl">
				<x path="lime.graphics.opengl.GLES3Context"/>
				<x path="lime.graphics.opengl.WebGLContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGLES3Context>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.graphics.utils.ImageCanvasUtil" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/utils/ImageCanvasUtil.hx">
		<colorTransform public="1" set="method" line="26" static="1"><f a="image:rect:colorMatrix">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<convertToCanvas public="1" set="method" line="35" static="1">
			<f a="image:?clear" v=":false">
				<c path="lime.graphics.Image"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ clear : false }</e></m></meta>
		</convertToCanvas>
		<convertToData public="1" set="method" line="91" static="1">
			<f a="image:?clear" v=":false">
				<c path="lime.graphics.Image"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ clear : false }</e></m></meta>
		</convertToData>
		<copyChannel public="1" set="method" line="137" static="1"><f a="image:sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="147" static="1">
			<f a="image:sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v="::::null:null:false">
				<c path="lime.graphics.Image"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaImage : null }</e></m></meta>
		</copyPixels>
		<createCanvas public="1" set="method" line="193" static="1"><f a="image:width:height">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></createCanvas>
		<createImageData public="1" set="method" line="226" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></createImageData>
		<fillRect public="1" set="method" line="254" static="1"><f a="image:rect:color:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method" line="306" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></floodFill>
		<getPixel public="1" set="method" line="315" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method" line="324" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method" line="333" static="1"><f a="image:rect:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.graphics.PixelFormat"/>
	<c path="haxe.io.Bytes"/>
</f></getPixels>
		<merge public="1" set="method" line="342" static="1"><f a="image:sourceImage:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></merge>
		<resize public="1" set="method" line="352" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<scroll public="1" set="method" line="380" static="1"><f a="image:x:y">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scroll>
		<setPixel public="1" set="method" line="397" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method" line="406" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method" line="415" static="1"><f a="image:rect:bytePointer:format:endian">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.utils.BytePointer"/>
	<x path="lime.graphics.PixelFormat"/>
	<e path="lime.system.Endian"/>
	<x path="Void"/>
</f></setPixels>
		<sync public="1" set="method" line="424" static="1"><f a="image:clear">
	<c path="lime.graphics.Image"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sync>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
		</meta>
	</class>
	<class path="lime.graphics.utils.ImageDataUtil" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/utils/ImageDataUtil.hx">
		<colorTransform public="1" set="method" line="35" static="1"><f a="image:rect:colorMatrix">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<copyChannel public="1" set="method" line="81" static="1"><f a="image:sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="166" static="1">
			<f a="image:sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v="::::null:null:false">
				<c path="lime.graphics.Image"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaImage : null }</e></m></meta>
		</copyPixels>
		<fillRect public="1" set="method" line="371" static="1"><f a="image:rect:color:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method" line="424" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></floodFill>
		<gaussianBlur public="1" set="method" line="509" static="1">
			<f a="image:sourceImage:sourceRect:destPoint:?blurX:?blurY:?quality:?strength" v="::::4:4:1:1">
				<c path="lime.graphics.Image"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Float"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ strength : 1, quality : 1, blurY : 4, blurX : 4 }</e></m></meta>
		</gaussianBlur>
		<getColorBoundsRect public="1" set="method" line="692" static="1">
			<f a="image:mask:color:?findColor:format" v=":::true:">
				<c path="lime.graphics.Image"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.graphics.PixelFormat"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ findColor : true }</e></m></meta>
		</getColorBoundsRect>
		<getPixel public="1" set="method" line="859" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method" line="877" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method" line="894" static="1"><f a="image:rect:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.graphics.PixelFormat"/>
	<c path="haxe.io.Bytes"/>
</f></getPixels>
		<merge public="1" set="method" line="948" static="1"><f a="image:sourceImage:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></merge>
		<multiplyAlpha public="1" set="method" line="1001" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></multiplyAlpha>
		<resize public="1" set="method" line="1031" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<resizeBuffer public="1" set="method" line="1114" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resizeBuffer>
		<setFormat public="1" set="method" line="1144" static="1"><f a="image:format">
	<c path="lime.graphics.Image"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setFormat>
		<setPixel public="1" set="method" line="1234" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method" line="1260" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method" line="1281" static="1"><f a="image:rect:bytePointer:format:endian">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.utils.BytePointer"/>
	<x path="lime.graphics.PixelFormat"/>
	<e path="lime.system.Endian"/>
	<x path="Void"/>
</f></setPixels>
		<threshold public="1" set="method" line="1341" static="1"><f a="image:sourceImage:sourceRect:destPoint:operation:threshold:color:mask:copySource:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></threshold>
		<unmultiplyAlpha public="1" set="method" line="1460" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></unmultiplyAlpha>
		<__pixelCompare get="inline" set="null" line="1490" static="1"><f a="n1:n2">
	<x path="UInt"/>
	<x path="UInt"/>
	<x path="Int"/>
</f></__pixelCompare>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
			<m n=":access"><e>lime.math.color.RGBA</e></m>
		</meta>
	</class>
	<class path="lime.graphics.utils._ImageDataUtil.ImageDataView" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/utils/ImageDataUtil.hx" private="1" module="lime.graphics.utils.ImageDataUtil">
		<x public="1" set="null"><x path="Int"/></x>
		<y public="1" set="null"><x path="Int"/></y>
		<height public="1" set="null"><x path="Int"/></height>
		<width public="1" set="null"><x path="Int"/></width>
		<byteOffset><x path="Int"/></byteOffset>
		<image><c path="lime.graphics.Image"/></image>
		<rect><c path="lime.math.Rectangle"/></rect>
		<stride><x path="Int"/></stride>
		<clip public="1" set="method" line="1588"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clip>
		<hasRow public="1" get="inline" set="null" line="1596"><f a="y">
	<x path="Int"/>
	<x path="Bool"/>
</f></hasRow>
		<offset public="1" set="method" line="1603"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></offset>
		<row public="1" get="inline" set="null" line="1634"><f a="y">
	<x path="Int"/>
	<x path="Int"/>
</f></row>
		<__update set="method" line="1641"><f a=""><x path="Void"/></f></__update>
		<new public="1" set="method" line="1561">
			<f a="image:?rect" v=":null">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ rect : null }</e></m></meta>
		</new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="lime.graphics.utils._ImageDataUtil.ThresholdOperation" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/utils/ImageDataUtil.hx" private="1" module="lime.graphics.utils.ImageDataUtil">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.graphics.utils._ImageDataUtil.ThresholdOperation_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/utils/ImageDataUtil.hx" private="1" module="lime.graphics.utils.ImageDataUtil" extern="1">
	<NOT_EQUALS public="1" get="inline" set="null" expr="cast 0" line="1657" static="1">
		<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOT_EQUALS>
	<EQUALS public="1" get="inline" set="null" expr="cast 1" line="1658" static="1">
		<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<LESS_THAN public="1" get="inline" set="null" expr="cast 2" line="1659" static="1">
		<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN>
	<LESS_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 3" line="1660" static="1">
		<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN_OR_EQUAL_TO>
	<GREATER_THAN public="1" get="inline" set="null" expr="cast 4" line="1661" static="1">
		<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN>
	<GREATER_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 5" line="1662" static="1">
		<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN_OR_EQUAL_TO>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.utils._ImageDataUtil.ThresholdOperation_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/graphics/utils/ImageDataUtil.hx" private="1" module="lime.graphics.utils.ImageDataUtil" extern="1">
		<NOT_EQUALS public="1" get="inline" set="null" expr="cast 0" line="1657" static="1">
			<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOT_EQUALS>
		<EQUALS public="1" get="inline" set="null" expr="cast 1" line="1658" static="1">
			<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<LESS_THAN public="1" get="inline" set="null" expr="cast 2" line="1659" static="1">
			<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN>
		<LESS_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 3" line="1660" static="1">
			<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN_OR_EQUAL_TO>
		<GREATER_THAN public="1" get="inline" set="null" expr="cast 4" line="1661" static="1">
			<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN>
		<GREATER_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 5" line="1662" static="1">
			<x path="lime.graphics.utils._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN_OR_EQUAL_TO>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.math.ColorMatrix" params="" file="/home/joshua/Development/Haxe/lime/lime/math/ColorMatrix.hx">
		<from><icast><x path="lime.utils.Float32Array"/></icast></from>
		<this><x path="lime.utils.Float32Array"/></this>
		<to><icast><x path="lime.utils.Float32Array"/></icast></to>
		<impl><class path="lime.math._ColorMatrix.ColorMatrix_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/ColorMatrix.hx" private="1" module="lime.math.ColorMatrix">
	<__alphaTable static="1"><x path="lime.utils.UInt8Array"/></__alphaTable>
	<__blueTable static="1"><x path="lime.utils.UInt8Array"/></__blueTable>
	<__greenTable static="1"><x path="lime.utils.UInt8Array"/></__greenTable>
	<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]" line="18" static="1">
		<c path="Array"><x path="Float"/></c>
		<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]</e></m></meta>
	</__identity>
	<__redTable static="1"><x path="lime.utils.UInt8Array"/></__redTable>
	<alphaMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</alphaMultiplier>
	<alphaOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</alphaOffset>
	<blueMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</blueMultiplier>
	<blueOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</blueOffset>
	<color public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</color>
	<greenMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</greenMultiplier>
	<greenOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</greenOffset>
	<redMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</redMultiplier>
	<redOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</redOffset>
	<_new public="1" set="method" line="32" static="1">
		<f a="?data" v="null">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
		</f>
		<meta>
			<m n=":value"><e>{ data : null }</e></m>
			<m n=":impl"/>
		</meta>
	</_new>
	<clone public="1" set="method" line="47" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clone>
	<concat public="1" set="method" line="54" static="1">
		<f a="this:second">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</concat>
	<copyFrom public="1" set="method" line="64" static="1">
		<f a="this:other">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyFrom>
	<identity public="1" set="method" line="71" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</identity>
	<getAlphaTable public="1" set="method" line="97" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getAlphaTable>
	<getBlueTable public="1" set="method" line="122" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBlueTable>
	<getGreenTable public="1" set="method" line="146" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getGreenTable>
	<getRedTable public="1" set="method" line="170" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getRedTable>
	<__toFlashColorTransform set="method" line="194" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<t path="flash.geom.ColorTransform"/>
		</f>
		<meta><m n=":impl"/></meta>
	</__toFlashColorTransform>
	<get_alphaMultiplier get="inline" set="null" line="212" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_alphaMultiplier>
	<set_alphaMultiplier get="inline" set="null" line="219" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_alphaMultiplier>
	<get_alphaOffset get="inline" set="null" line="226" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_alphaOffset>
	<set_alphaOffset get="inline" set="null" line="233" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_alphaOffset>
	<get_blueMultiplier get="inline" set="null" line="240" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_blueMultiplier>
	<set_blueMultiplier get="inline" set="null" line="247" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_blueMultiplier>
	<get_blueOffset get="inline" set="null" line="254" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_blueOffset>
	<set_blueOffset get="inline" set="null" line="261" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_blueOffset>
	<get_color set="method" line="268" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_color>
	<set_color set="method" line="275" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_color>
	<get_greenMultiplier get="inline" set="null" line="290" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_greenMultiplier>
	<set_greenMultiplier get="inline" set="null" line="297" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_greenMultiplier>
	<get_greenOffset get="inline" set="null" line="304" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_greenOffset>
	<set_greenOffset get="inline" set="null" line="311" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_greenOffset>
	<get_redMultiplier get="inline" set="null" line="318" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_redMultiplier>
	<set_redMultiplier get="inline" set="null" line="325" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_redMultiplier>
	<get_redOffset get="inline" set="null" line="332" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_redOffset>
	<set_redOffset get="inline" set="null" line="339" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_redOffset>
	<get public="1" set="method" line="346" static="1">
		<f a="this:index">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<set public="1" set="method" line="353" static="1">
		<f a="this:index:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.math._ColorMatrix.ColorMatrix_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/ColorMatrix.hx" private="1" module="lime.math.ColorMatrix">
		<__alphaTable static="1"><x path="lime.utils.UInt8Array"/></__alphaTable>
		<__blueTable static="1"><x path="lime.utils.UInt8Array"/></__blueTable>
		<__greenTable static="1"><x path="lime.utils.UInt8Array"/></__greenTable>
		<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]" line="18" static="1">
			<c path="Array"><x path="Float"/></c>
			<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]</e></m></meta>
		</__identity>
		<__redTable static="1"><x path="lime.utils.UInt8Array"/></__redTable>
		<alphaMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</alphaMultiplier>
		<alphaOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</alphaOffset>
		<blueMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</blueMultiplier>
		<blueOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</blueOffset>
		<color public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</color>
		<greenMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</greenMultiplier>
		<greenOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</greenOffset>
		<redMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</redMultiplier>
		<redOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</redOffset>
		<_new public="1" set="method" line="32" static="1">
			<f a="?data" v="null">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
			</f>
			<meta>
				<m n=":value"><e>{ data : null }</e></m>
				<m n=":impl"/>
			</meta>
		</_new>
		<clone public="1" set="method" line="47" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clone>
		<concat public="1" set="method" line="54" static="1">
			<f a="this:second">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</concat>
		<copyFrom public="1" set="method" line="64" static="1">
			<f a="this:other">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyFrom>
		<identity public="1" set="method" line="71" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</identity>
		<getAlphaTable public="1" set="method" line="97" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getAlphaTable>
		<getBlueTable public="1" set="method" line="122" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBlueTable>
		<getGreenTable public="1" set="method" line="146" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getGreenTable>
		<getRedTable public="1" set="method" line="170" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getRedTable>
		<__toFlashColorTransform set="method" line="194" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<t path="flash.geom.ColorTransform"/>
			</f>
			<meta><m n=":impl"/></meta>
		</__toFlashColorTransform>
		<get_alphaMultiplier get="inline" set="null" line="212" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_alphaMultiplier>
		<set_alphaMultiplier get="inline" set="null" line="219" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_alphaMultiplier>
		<get_alphaOffset get="inline" set="null" line="226" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_alphaOffset>
		<set_alphaOffset get="inline" set="null" line="233" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_alphaOffset>
		<get_blueMultiplier get="inline" set="null" line="240" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_blueMultiplier>
		<set_blueMultiplier get="inline" set="null" line="247" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_blueMultiplier>
		<get_blueOffset get="inline" set="null" line="254" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_blueOffset>
		<set_blueOffset get="inline" set="null" line="261" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_blueOffset>
		<get_color set="method" line="268" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_color>
		<set_color set="method" line="275" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_color>
		<get_greenMultiplier get="inline" set="null" line="290" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_greenMultiplier>
		<set_greenMultiplier get="inline" set="null" line="297" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_greenMultiplier>
		<get_greenOffset get="inline" set="null" line="304" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_greenOffset>
		<set_greenOffset get="inline" set="null" line="311" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_greenOffset>
		<get_redMultiplier get="inline" set="null" line="318" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_redMultiplier>
		<set_redMultiplier get="inline" set="null" line="325" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_redMultiplier>
		<get_redOffset get="inline" set="null" line="332" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_redOffset>
		<set_redOffset get="inline" set="null" line="339" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_redOffset>
		<get public="1" set="method" line="346" static="1">
			<f a="this:index">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<set public="1" set="method" line="353" static="1">
			<f a="this:index:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="lime.math.Matrix3" params="" file="/home/joshua/Development/Haxe/lime/lime/math/Matrix3.hx">
		<__identity expr="new Matrix3()" line="20" static="1">
			<c path="lime.math.Matrix3"/>
			<meta><m n=":value"><e>new Matrix3()</e></m></meta>
		</__identity>
		<a public="1"><x path="Float"/></a>
		<b public="1"><x path="Float"/></b>
		<c public="1"><x path="Float"/></c>
		<d public="1"><x path="Float"/></d>
		<tx public="1"><x path="Float"/></tx>
		<ty public="1"><x path="Float"/></ty>
		<clone public="1" get="inline" set="null" line="35"><f a=""><c path="lime.math.Matrix3"/></f></clone>
		<concat public="1" set="method" line="42"><f a="m">
	<c path="lime.math.Matrix3"/>
	<x path="Void"/>
</f></concat>
		<copyColumnFrom public="1" set="method" line="61"><f a="column:vector4">
	<x path="Int"/>
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyColumnFrom>
		<copyColumnTo public="1" set="method" line="87"><f a="column:vector4">
	<x path="Int"/>
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyColumnTo>
		<copyFrom public="1" set="method" line="116"><f a="sourceMatrix3">
	<c path="lime.math.Matrix3"/>
	<x path="Void"/>
</f></copyFrom>
		<copyRowFrom public="1" set="method" line="128"><f a="row:vector4">
	<x path="Int"/>
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyRowFrom>
		<copyRowTo public="1" set="method" line="154"><f a="row:vector4">
	<x path="Int"/>
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyRowTo>
		<createBox public="1" set="method" line="181">
			<f a="scaleX:scaleY:?rotation:?tx:?ty" v="::0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, rotation : 0 }</e></m></meta>
		</createBox>
		<createGradientBox public="1" set="method" line="192">
			<f a="width:height:?rotation:?tx:?ty" v="::0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, rotation : 0 }</e></m></meta>
		</createGradientBox>
		<equals public="1" set="method" line="221"><f a="Matrix3">
	<a>
		<ty set="null"><x path="Float"/></ty>
		<tx set="null"><x path="Float"/></tx>
		<d set="null"><x path="Float"/></d>
		<c set="null"><x path="Float"/></c>
		<b set="null"><x path="Float"/></b>
		<a set="null"><x path="Float"/></a>
	</a>
	<x path="Bool"/>
</f></equals>
		<deltaTransformVector2 public="1" set="method" line="228"><f a="Vector2">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></deltaTransformVector2>
		<identity public="1" set="method" line="235"><f a=""><x path="Void"/></f></identity>
		<invert public="1" set="method" line="247"><f a=""><c path="lime.math.Matrix3"/></f></invert>
		<mult public="1" get="inline" set="null" line="279"><f a="m">
	<c path="lime.math.Matrix3"/>
	<c path="lime.math.Matrix3"/>
</f></mult>
		<rotate public="1" set="method" line="288"><f a="theta">
	<x path="Float"/>
	<x path="Void"/>
</f></rotate>
		<scale public="1" set="method" line="324"><f a="sx:sy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scale>
		<setRotation get="inline" set="null" line="347">
			<f a="theta:?scale" v=":1">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ scale : 1 }</e></m></meta>
		</setRotation>
		<setTo public="1" set="method" line="359"><f a="a:b:c:d:tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<to3DString public="1" get="inline" set="null" line="371">
			<f a="?roundPixels" v="false">
				<x path="Bool"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ roundPixels : false }</e></m></meta>
		</to3DString>
		<toMozString public="1" get="inline" set="null" line="394"><f a=""><c path="String"/></f></toMozString>
		<toString public="1" get="inline" set="null" line="401"><f a=""><c path="String"/></f></toString>
		<transformVector2 public="1" set="method" line="408"><f a="pos">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></transformVector2>
		<translate public="1" get="inline" set="null" line="415"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></translate>
		<__cleanValues get="inline" set="null" line="423"><f a=""><x path="Void"/></f></__cleanValues>
		<__transformX public="1" get="inline" set="null" line="435"><f a="pos">
	<c path="lime.math.Vector2"/>
	<x path="Float"/>
</f></__transformX>
		<__transformY public="1" get="inline" set="null" line="442"><f a="pos">
	<c path="lime.math.Vector2"/>
	<x path="Float"/>
</f></__transformY>
		<__translateTransformed public="1" get="inline" set="null" line="449"><f a="pos">
	<c path="lime.math.Vector2"/>
	<x path="Void"/>
</f></__translateTransformed>
		<new public="1" set="method" line="23">
			<f a="?a:?b:?c:?d:?tx:?ty" v="1:0:0:1:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, d : 1, c : 0, b : 0, a : 1 }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.math.Matrix4" params="" file="/home/joshua/Development/Haxe/lime/lime/math/Matrix4.hx">
		<from><icast><x path="lime.utils.Float32Array"/></icast></from>
		<this><x path="lime.utils.Float32Array"/></this>
		<to><icast><x path="lime.utils.Float32Array"/></icast></to>
		<impl><class path="lime.math._Matrix4.Matrix4_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/Matrix4.hx" private="1" module="lime.math.Matrix4">
	<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]" line="11" static="1">
		<c path="Array"><x path="Float"/></c>
		<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]</e></m></meta>
	</__identity>
	<determinant public="1" get="accessor" set="null" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</determinant>
	<position public="1" get="accessor" set="accessor" static="1">
		<c path="lime.math.Vector4"/>
		<meta><m n=":impl"/></meta>
	</position>
	<_new public="1" set="method" line="17" static="1">
		<f a="?data" v="null">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta>
			<m n=":value"><e>{ data : null }</e></m>
			<m n=":impl"/>
		</meta>
	</_new>
	<append public="1" set="method" line="32" static="1">
		<f a="this:lhs">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</append>
	<appendRotation public="1" set="method" line="66" static="1">
		<f a="this:degrees:axis:?pivotPoint" v=":::null">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ pivotPoint : null }</e></m>
			<m n=":impl"/>
		</meta>
	</appendRotation>
	<appendScale public="1" set="method" line="82" static="1">
		<f a="this:xScale:yScale:zScale">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</appendScale>
	<appendTranslation public="1" set="method" line="89" static="1">
		<f a="this:x:y:z">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</appendTranslation>
	<clone public="1" set="method" line="98" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clone>
	<copyColumnFrom public="1" set="method" line="105" static="1">
		<f a="this:column:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyColumnFrom>
	<copyColumnTo public="1" set="method" line="146" static="1">
		<f a="this:column:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyColumnTo>
	<copyFrom public="1" set="method" line="187" static="1">
		<f a="this:other">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyFrom>
	<copythisFrom public="1" set="method" line="194" static="1">
		<f a="this:array:?index:?transposeValues" v="::0:false">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ transposeValues : false, index : 0 }</e></m>
			<m n=":impl"/>
			<m n=":deprecated"/>
		</meta>
	</copythisFrom>
	<copythisTo public="1" set="method" line="209" static="1">
		<f a="this:array:?index:?transposeValues" v="::0:false">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ transposeValues : false, index : 0 }</e></m>
			<m n=":impl"/>
			<m n=":deprecated"/>
		</meta>
	</copythisTo>
	<copyRowFrom public="1" set="method" line="224" static="1">
		<f a="this:row:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyRowFrom>
	<create2D public="1" set="method" line="265" static="1">
		<f a="x:y:?scale:?rotation" v="::1:0">
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":value"><e>{ rotation : 0, scale : 1 }</e></m></meta>
	</create2D>
	<createABCD public="1" set="method" line="281" static="1">
		<f a="a:b:c:d:tx:ty:?matrix" v="::::::null">
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="lime.math.Matrix4"/>
			<t path="Null"><x path="lime.math.Matrix4"/></t>
		</f>
		<meta><m n=":value"><e>{ matrix : null }</e></m></meta>
	</createABCD>
	<createOrtho public="1" set="method" line="310" static="1"><f a="x0:x1:y0:y1:zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></createOrtho>
	<copyRowTo public="1" set="method" line="326" static="1">
		<f a="this:row:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyRowTo>
	<copyToMatrix4 public="1" set="method" line="367" static="1">
		<f a="this:other">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyToMatrix4>
	<deltaTransformVector public="1" set="method" line="474" static="1">
		<f a="this:v">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>* Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.</haxe_doc>
	</deltaTransformVector>
	<identity public="1" set="method" line="487" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</identity>
	<interpolate public="1" set="method" line="509" static="1"><f a="thisMat:toMat:percent">
	<x path="lime.math.Matrix4"/>
	<x path="lime.math.Matrix4"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></interpolate>
	<interpolateTo public="1" set="method" line="524" static="1">
		<f a="this:toMat:percent">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</interpolateTo>
	<invert public="1" set="method" line="535" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invert>
	<pointAt public="1" set="method" line="573" static="1">
		<f a="this:pos:?at:?up" v="::null:null">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ up : null, at : null }</e></m>
			<m n=":impl"/>
		</meta>
	</pointAt>
	<prepend public="1" set="method" line="640" static="1">
		<f a="this:rhs">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</prepend>
	<prependRotation public="1" set="method" line="674" static="1">
		<f a="this:degrees:axis:?pivotPoint" v=":::null">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ pivotPoint : null }</e></m>
			<m n=":impl"/>
		</meta>
	</prependRotation>
	<prependScale public="1" set="method" line="690" static="1">
		<f a="this:xScale:yScale:zScale">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</prependScale>
	<prependTranslation public="1" set="method" line="697" static="1">
		<f a="this:x:y:z">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</prependTranslation>
	<transformVector public="1" set="method" line="790" static="1">
		<f a="this:v">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transformVector>
	<transformVectors public="1" set="method" line="803" static="1">
		<f a="this:ain:aout">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transformVectors>
	<transpose public="1" set="method" line="825" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transpose>
	<__getAxisRotation set="method" line="837" static="1">
		<f a="this:x:y:z:degrees">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":impl"/></meta>
	</__getAxisRotation>
	<__swap get="inline" set="null" line="869" static="1">
		<f a="this:a:b">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</__swap>
	<get_determinant set="method" line="885" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_determinant>
	<get_position set="method" line="897" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_position>
	<set_position set="method" line="904" static="1">
		<f a="this:val">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_position>
	<get public="1" set="method" line="914" static="1">
		<f a="this:index">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<set public="1" set="method" line="921" static="1">
		<f a="this:index:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.math._Matrix4.Matrix4_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/Matrix4.hx" private="1" module="lime.math.Matrix4">
		<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]" line="11" static="1">
			<c path="Array"><x path="Float"/></c>
			<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]</e></m></meta>
		</__identity>
		<determinant public="1" get="accessor" set="null" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</determinant>
		<position public="1" get="accessor" set="accessor" static="1">
			<c path="lime.math.Vector4"/>
			<meta><m n=":impl"/></meta>
		</position>
		<_new public="1" set="method" line="17" static="1">
			<f a="?data" v="null">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta>
				<m n=":value"><e>{ data : null }</e></m>
				<m n=":impl"/>
			</meta>
		</_new>
		<append public="1" set="method" line="32" static="1">
			<f a="this:lhs">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</append>
		<appendRotation public="1" set="method" line="66" static="1">
			<f a="this:degrees:axis:?pivotPoint" v=":::null">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ pivotPoint : null }</e></m>
				<m n=":impl"/>
			</meta>
		</appendRotation>
		<appendScale public="1" set="method" line="82" static="1">
			<f a="this:xScale:yScale:zScale">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</appendScale>
		<appendTranslation public="1" set="method" line="89" static="1">
			<f a="this:x:y:z">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</appendTranslation>
		<clone public="1" set="method" line="98" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clone>
		<copyColumnFrom public="1" set="method" line="105" static="1">
			<f a="this:column:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyColumnFrom>
		<copyColumnTo public="1" set="method" line="146" static="1">
			<f a="this:column:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyColumnTo>
		<copyFrom public="1" set="method" line="187" static="1">
			<f a="this:other">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyFrom>
		<copythisFrom public="1" set="method" line="194" static="1">
			<f a="this:array:?index:?transposeValues" v="::0:false">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ transposeValues : false, index : 0 }</e></m>
				<m n=":impl"/>
				<m n=":deprecated"/>
			</meta>
		</copythisFrom>
		<copythisTo public="1" set="method" line="209" static="1">
			<f a="this:array:?index:?transposeValues" v="::0:false">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ transposeValues : false, index : 0 }</e></m>
				<m n=":impl"/>
				<m n=":deprecated"/>
			</meta>
		</copythisTo>
		<copyRowFrom public="1" set="method" line="224" static="1">
			<f a="this:row:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyRowFrom>
		<create2D public="1" set="method" line="265" static="1">
			<f a="x:y:?scale:?rotation" v="::1:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":value"><e>{ rotation : 0, scale : 1 }</e></m></meta>
		</create2D>
		<createABCD public="1" set="method" line="281" static="1">
			<f a="a:b:c:d:tx:ty:?matrix" v="::::::null">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="lime.math.Matrix4"/>
				<t path="Null"><x path="lime.math.Matrix4"/></t>
			</f>
			<meta><m n=":value"><e>{ matrix : null }</e></m></meta>
		</createABCD>
		<createOrtho public="1" set="method" line="310" static="1"><f a="x0:x1:y0:y1:zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></createOrtho>
		<copyRowTo public="1" set="method" line="326" static="1">
			<f a="this:row:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyRowTo>
		<copyToMatrix4 public="1" set="method" line="367" static="1">
			<f a="this:other">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyToMatrix4>
		<deltaTransformVector public="1" set="method" line="474" static="1">
			<f a="this:v">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>* Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.</haxe_doc>
		</deltaTransformVector>
		<identity public="1" set="method" line="487" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</identity>
		<interpolate public="1" set="method" line="509" static="1"><f a="thisMat:toMat:percent">
	<x path="lime.math.Matrix4"/>
	<x path="lime.math.Matrix4"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></interpolate>
		<interpolateTo public="1" set="method" line="524" static="1">
			<f a="this:toMat:percent">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</interpolateTo>
		<invert public="1" set="method" line="535" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invert>
		<pointAt public="1" set="method" line="573" static="1">
			<f a="this:pos:?at:?up" v="::null:null">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ up : null, at : null }</e></m>
				<m n=":impl"/>
			</meta>
		</pointAt>
		<prepend public="1" set="method" line="640" static="1">
			<f a="this:rhs">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</prepend>
		<prependRotation public="1" set="method" line="674" static="1">
			<f a="this:degrees:axis:?pivotPoint" v=":::null">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ pivotPoint : null }</e></m>
				<m n=":impl"/>
			</meta>
		</prependRotation>
		<prependScale public="1" set="method" line="690" static="1">
			<f a="this:xScale:yScale:zScale">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</prependScale>
		<prependTranslation public="1" set="method" line="697" static="1">
			<f a="this:x:y:z">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</prependTranslation>
		<transformVector public="1" set="method" line="790" static="1">
			<f a="this:v">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transformVector>
		<transformVectors public="1" set="method" line="803" static="1">
			<f a="this:ain:aout">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transformVectors>
		<transpose public="1" set="method" line="825" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transpose>
		<__getAxisRotation set="method" line="837" static="1">
			<f a="this:x:y:z:degrees">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":impl"/></meta>
		</__getAxisRotation>
		<__swap get="inline" set="null" line="869" static="1">
			<f a="this:a:b">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</__swap>
		<get_determinant set="method" line="885" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_determinant>
		<get_position set="method" line="897" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_position>
		<set_position set="method" line="904" static="1">
			<f a="this:val">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_position>
		<get public="1" set="method" line="914" static="1">
			<f a="this:index">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<set public="1" set="method" line="921" static="1">
			<f a="this:index:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="lime.math.Rectangle" params="" file="/home/joshua/Development/Haxe/lime/lime/math/Rectangle.hx">
		<bottom public="1" get="accessor" set="accessor"><x path="Float"/></bottom>
		<bottomRight public="1" get="accessor" set="accessor"><c path="lime.math.Vector2"/></bottomRight>
		<height public="1"><x path="Float"/></height>
		<left public="1" get="accessor" set="accessor"><x path="Float"/></left>
		<right public="1" get="accessor" set="accessor"><x path="Float"/></right>
		<size public="1" get="accessor" set="accessor"><c path="lime.math.Vector2"/></size>
		<top public="1" get="accessor" set="accessor"><x path="Float"/></top>
		<topLeft public="1" get="accessor" set="accessor"><c path="lime.math.Vector2"/></topLeft>
		<width public="1"><x path="Float"/></width>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<clone public="1" set="method" line="40"><f a=""><c path="lime.math.Rectangle"/></f></clone>
		<contains public="1" set="method" line="47"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></contains>
		<containsPoint public="1" set="method" line="54"><f a="point">
	<c path="lime.math.Vector2"/>
	<x path="Bool"/>
</f></containsPoint>
		<containsRect public="1" set="method" line="61"><f a="rect">
	<c path="lime.math.Rectangle"/>
	<x path="Bool"/>
</f></containsRect>
		<copyFrom public="1" set="method" line="76"><f a="sourceRect">
	<c path="lime.math.Rectangle"/>
	<x path="Void"/>
</f></copyFrom>
		<equals public="1" set="method" line="86"><f a="toCompare">
	<c path="lime.math.Rectangle"/>
	<x path="Bool"/>
</f></equals>
		<inflate public="1" set="method" line="93"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></inflate>
		<inflatePoint public="1" set="method" line="101"><f a="point">
	<c path="lime.math.Vector2"/>
	<x path="Void"/>
</f></inflatePoint>
		<intersection public="1" set="method" line="108"><f a="toIntersect">
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Rectangle"/>
</f></intersection>
		<intersects public="1" set="method" line="133"><f a="toIntersect">
	<c path="lime.math.Rectangle"/>
	<x path="Bool"/>
</f></intersects>
		<isEmpty public="1" set="method" line="152"><f a=""><x path="Bool"/></f></isEmpty>
		<offset public="1" set="method" line="159"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></offset>
		<offsetPoint public="1" set="method" line="167"><f a="point">
	<c path="lime.math.Vector2"/>
	<x path="Void"/>
</f></offsetPoint>
		<setEmpty public="1" set="method" line="175"><f a=""><x path="Void"/></f></setEmpty>
		<setTo public="1" set="method" line="182"><f a="xa:ya:widtha:heighta">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<transform public="1" set="method" line="192"><f a="m">
	<c path="lime.math.Matrix3"/>
	<c path="lime.math.Rectangle"/>
</f></transform>
		<union public="1" set="method" line="228"><f a="toUnion">
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Rectangle"/>
</f></union>
		<__contract public="1" set="method" line="250"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></__contract>
		<__expand public="1" set="method" line="269"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></__expand>
		<__toFlashRectangle set="method" line="292"><f a=""><t path="flash.geom._Rectangle.FlashRectangle"/></f></__toFlashRectangle>
		<get_bottom set="method" line="310"><f a=""><x path="Float"/></f></get_bottom>
		<set_bottom set="method" line="311"><f a="b">
	<x path="Float"/>
	<x path="Float"/>
</f></set_bottom>
		<get_bottomRight set="method" line="312"><f a=""><c path="lime.math.Vector2"/></f></get_bottomRight>
		<set_bottomRight set="method" line="313"><f a="p">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></set_bottomRight>
		<get_left set="method" line="314"><f a=""><x path="Float"/></f></get_left>
		<set_left set="method" line="315"><f a="l">
	<x path="Float"/>
	<x path="Float"/>
</f></set_left>
		<get_right set="method" line="316"><f a=""><x path="Float"/></f></get_right>
		<set_right set="method" line="317"><f a="r">
	<x path="Float"/>
	<x path="Float"/>
</f></set_right>
		<get_size set="method" line="318"><f a=""><c path="lime.math.Vector2"/></f></get_size>
		<set_size set="method" line="319"><f a="p">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></set_size>
		<get_top set="method" line="320"><f a=""><x path="Float"/></f></get_top>
		<set_top set="method" line="321"><f a="t">
	<x path="Float"/>
	<x path="Float"/>
</f></set_top>
		<get_topLeft set="method" line="322"><f a=""><c path="lime.math.Vector2"/></f></get_topLeft>
		<set_topLeft set="method" line="323"><f a="p">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></set_topLeft>
		<new public="1" set="method" line="30">
			<f a="?x:?y:?width:?height" v="0:0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ height : 0, width : 0, y : 0, x : 0 }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.math.Vector2" params="" file="/home/joshua/Development/Haxe/lime/lime/math/Vector2.hx">
		<distance public="1" set="method" line="44" static="1"><f a="pt1:pt2">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
	<x path="Float"/>
</f></distance>
		<interpolate public="1" set="method" line="60" static="1"><f a="pt1:pt2:f">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
	<x path="Float"/>
	<c path="lime.math.Vector2"/>
</f></interpolate>
		<polar public="1" set="method" line="92" static="1"><f a="len:angle">
	<x path="Float"/>
	<x path="Float"/>
	<c path="lime.math.Vector2"/>
</f></polar>
		<length public="1" get="accessor" set="null"><x path="Float"/></length>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<add public="1" set="method" line="30"><f a="v">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></add>
		<clone public="1" set="method" line="37"><f a=""><c path="lime.math.Vector2"/></f></clone>
		<equals public="1" set="method" line="53"><f a="toCompare">
	<c path="lime.math.Vector2"/>
	<x path="Bool"/>
</f></equals>
		<normalize public="1" set="method" line="67"><f a="thickness">
	<x path="Float"/>
	<x path="Void"/>
</f></normalize>
		<offset public="1" set="method" line="84"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></offset>
		<setTo public="1" get="inline" set="null" line="99"><f a="xa:ya">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<subtract public="1" set="method" line="106"><f a="v">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></subtract>
		<__toFlashPoint set="method" line="113"><f a=""><t path="flash.geom.Point"/></f></__toFlashPoint>
		<get_length set="method" line="131"><f a=""><x path="Float"/></f></get_length>
		<new public="1" set="method" line="22">
			<f a="?x:?y" v="0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ y : 0, x : 0 }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.math.Vector4" params="" file="/home/joshua/Development/Haxe/lime/lime/math/Vector4.hx">
		<X_AXIS public="1" get="accessor" set="null" static="1"><c path="lime.math.Vector4"/></X_AXIS>
		<Y_AXIS public="1" get="accessor" set="null" static="1"><c path="lime.math.Vector4"/></Y_AXIS>
		<Z_AXIS public="1" get="accessor" set="null" static="1"><c path="lime.math.Vector4"/></Z_AXIS>
		<angleBetween public="1" get="inline" set="null" line="42" static="1"><f a="a:b">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
	<x path="Float"/>
</f></angleBetween>
		<distance public="1" get="inline" set="null" line="86" static="1"><f a="pt1:pt2">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
	<x path="Float"/>
</f></distance>
		<get_X_AXIS get="inline" set="null" line="215" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_X_AXIS>
		<get_Y_AXIS get="inline" set="null" line="222" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_Y_AXIS>
		<get_Z_AXIS get="inline" set="null" line="229" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_Z_AXIS>
		<length public="1" get="accessor" set="null"><x path="Float"/></length>
		<lengthSquared public="1" get="accessor" set="null"><x path="Float"/></lengthSquared>
		<w public="1"><x path="Float"/></w>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<z public="1"><x path="Float"/></z>
		<add public="1" get="inline" set="null" line="35"><f a="a">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
</f></add>
		<clone public="1" get="inline" set="null" line="54"><f a=""><c path="lime.math.Vector4"/></f></clone>
		<copyFrom public="1" get="inline" set="null" line="61"><f a="sourceVector4">
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyFrom>
		<crossProduct public="1" get="inline" set="null" line="70"><f a="a">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
</f></crossProduct>
		<decrementBy public="1" get="inline" set="null" line="77"><f a="a">
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></decrementBy>
		<dotProduct public="1" get="inline" set="null" line="97"><f a="a">
	<c path="lime.math.Vector4"/>
	<x path="Float"/>
</f></dotProduct>
		<equals public="1" get="inline" set="null" line="104">
			<f a="toCompare:?allFour" v=":false">
				<c path="lime.math.Vector4"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ allFour : false }</e></m></meta>
		</equals>
		<incrementBy public="1" get="inline" set="null" line="111"><f a="a">
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></incrementBy>
		<nearEquals public="1" get="inline" set="null" line="120">
			<f a="toCompare:tolerance:?allFour" v="::false">
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ allFour : false }</e></m></meta>
		</nearEquals>
		<negate public="1" get="inline" set="null" line="127"><f a=""><x path="Void"/></f></negate>
		<normalize public="1" get="inline" set="null" line="136"><f a=""><x path="Float"/></f></normalize>
		<project public="1" get="inline" set="null" line="153"><f a=""><x path="Void"/></f></project>
		<scaleBy public="1" get="inline" set="null" line="162"><f a="s">
	<x path="Float"/>
	<x path="Void"/>
</f></scaleBy>
		<setTo public="1" get="inline" set="null" line="171"><f a="xa:ya:za">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<subtract public="1" get="inline" set="null" line="180"><f a="a">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
</f></subtract>
		<toString public="1" get="inline" set="null" line="187"><f a=""><c path="String"/></f></toString>
		<get_length get="inline" set="null" line="201"><f a=""><x path="Float"/></f></get_length>
		<get_lengthSquared get="inline" set="null" line="208"><f a=""><x path="Float"/></f></get_lengthSquared>
		<new public="1" set="method" line="25">
			<f a="?x:?y:?z:?w" v="0.:0.:0.:0.">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ w : 0., z : 0., y : 0., x : 0. }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.math.color.ARGB" params="" file="/home/joshua/Development/Haxe/lime/lime/math/color/ARGB.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="__fromBGRA"><x path="lime.math.color.BGRA"/></icast>
			<icast field="__fromRGBA"><x path="lime.math.color.RGBA"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.math.color._ARGB.ARGB_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/color/ARGB.hx" private="1" module="lime.math.color.ARGB">
	<a16 static="1"><x path="Int"/></a16>
	<unmult static="1"><x path="Float"/></unmult>
	<a public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</a>
	<b public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</b>
	<g public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</g>
	<r public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</r>
	<_new public="1" get="inline" set="null" line="21" static="1">
		<f a="?argb" v="0">
			<x path="Int"/>
			<x path="lime.math.color.ARGB"/>
		</f>
		<meta>
			<m n=":value"><e>{ argb : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</_new>
	<create public="1" get="inline" set="null" line="28" static="1"><f a="a:r:g:b">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.math.color.ARGB"/>
</f></create>
	<multiplyAlpha public="1" get="inline" set="null" line="37" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</multiplyAlpha>
	<readUInt8 public="1" get="inline" set="null" line="53" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
	</readUInt8>
	<set public="1" get="inline" set="null" line="80" static="1">
		<f a="this:a:r:g:b">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set>
	<unmultiplyAlpha public="1" get="inline" set="null" line="87" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</unmultiplyAlpha>
	<writeUInt8 public="1" get="inline" set="null" line="99" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
	</writeUInt8>
	<__fromBGRA get="inline" set="null" line="135" static="1">
		<f a="bgra">
			<x path="lime.math.color.BGRA"/>
			<x path="lime.math.color.ARGB"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromBGRA>
	<__fromRGBA get="inline" set="null" line="142" static="1">
		<f a="rgba">
			<x path="lime.math.color.RGBA"/>
			<x path="lime.math.color.ARGB"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromRGBA>
	<get_a get="inline" set="null" line="156" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_a>
	<set_a get="inline" set="null" line="164" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_a>
	<get_b get="inline" set="null" line="172" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_b>
	<set_b get="inline" set="null" line="179" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_b>
	<get_g get="inline" set="null" line="187" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_g>
	<set_g get="inline" set="null" line="194" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_g>
	<get_r get="inline" set="null" line="202" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_r>
	<set_r get="inline" set="null" line="209" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_r>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.math.color._ARGB.ARGB_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/color/ARGB.hx" private="1" module="lime.math.color.ARGB">
		<a16 static="1"><x path="Int"/></a16>
		<unmult static="1"><x path="Float"/></unmult>
		<a public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</a>
		<b public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</b>
		<g public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</g>
		<r public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</r>
		<_new public="1" get="inline" set="null" line="21" static="1">
			<f a="?argb" v="0">
				<x path="Int"/>
				<x path="lime.math.color.ARGB"/>
			</f>
			<meta>
				<m n=":value"><e>{ argb : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</_new>
		<create public="1" get="inline" set="null" line="28" static="1"><f a="a:r:g:b">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.math.color.ARGB"/>
</f></create>
		<multiplyAlpha public="1" get="inline" set="null" line="37" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</multiplyAlpha>
		<readUInt8 public="1" get="inline" set="null" line="53" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
		</readUInt8>
		<set public="1" get="inline" set="null" line="80" static="1">
			<f a="this:a:r:g:b">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set>
		<unmultiplyAlpha public="1" get="inline" set="null" line="87" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</unmultiplyAlpha>
		<writeUInt8 public="1" get="inline" set="null" line="99" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
		</writeUInt8>
		<__fromBGRA get="inline" set="null" line="135" static="1">
			<f a="bgra">
				<x path="lime.math.color.BGRA"/>
				<x path="lime.math.color.ARGB"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromBGRA>
		<__fromRGBA get="inline" set="null" line="142" static="1">
			<f a="rgba">
				<x path="lime.math.color.RGBA"/>
				<x path="lime.math.color.ARGB"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromRGBA>
		<get_a get="inline" set="null" line="156" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_a>
		<set_a get="inline" set="null" line="164" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_a>
		<get_b get="inline" set="null" line="172" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_b>
		<set_b get="inline" set="null" line="179" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_b>
		<get_g get="inline" set="null" line="187" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_g>
		<set_g get="inline" set="null" line="194" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_g>
		<get_r get="inline" set="null" line="202" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_r>
		<set_r get="inline" set="null" line="209" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_r>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<abstract path="lime.math.color.BGRA" params="" file="/home/joshua/Development/Haxe/lime/lime/math/color/BGRA.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="__fromARGB"><x path="lime.math.color.ARGB"/></icast>
			<icast field="__fromRGBA"><x path="lime.math.color.RGBA"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.math.color._BGRA.BGRA_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/color/BGRA.hx" private="1" module="lime.math.color.BGRA">
	<a16 static="1"><x path="Int"/></a16>
	<unmult static="1"><x path="Float"/></unmult>
	<a public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</a>
	<b public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</b>
	<g public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</g>
	<r public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</r>
	<_new public="1" get="inline" set="null" line="21" static="1">
		<f a="?bgra" v="0">
			<x path="Int"/>
			<x path="lime.math.color.BGRA"/>
		</f>
		<meta>
			<m n=":value"><e>{ bgra : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</_new>
	<create public="1" get="inline" set="null" line="28" static="1"><f a="b:g:r:a">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.math.color.BGRA"/>
</f></create>
	<multiplyAlpha public="1" get="inline" set="null" line="37" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</multiplyAlpha>
	<readUInt8 public="1" get="inline" set="null" line="53" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
	</readUInt8>
	<set public="1" get="inline" set="null" line="80" static="1">
		<f a="this:b:g:r:a">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set>
	<unmultiplyAlpha public="1" get="inline" set="null" line="87" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</unmultiplyAlpha>
	<writeUInt8 public="1" get="inline" set="null" line="99" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
	</writeUInt8>
	<__fromARGB get="inline" set="null" line="135" static="1">
		<f a="argb">
			<x path="lime.math.color.ARGB"/>
			<x path="lime.math.color.BGRA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromARGB>
	<__fromRGBA get="inline" set="null" line="142" static="1">
		<f a="rgba">
			<x path="lime.math.color.RGBA"/>
			<x path="lime.math.color.BGRA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromRGBA>
	<get_a get="inline" set="null" line="156" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_a>
	<set_a get="inline" set="null" line="163" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_a>
	<get_b get="inline" set="null" line="171" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_b>
	<set_b get="inline" set="null" line="178" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_b>
	<get_g get="inline" set="null" line="186" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_g>
	<set_g get="inline" set="null" line="193" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_g>
	<get_r get="inline" set="null" line="201" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_r>
	<set_r get="inline" set="null" line="208" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_r>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.math.color._BGRA.BGRA_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/color/BGRA.hx" private="1" module="lime.math.color.BGRA">
		<a16 static="1"><x path="Int"/></a16>
		<unmult static="1"><x path="Float"/></unmult>
		<a public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</a>
		<b public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</b>
		<g public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</g>
		<r public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</r>
		<_new public="1" get="inline" set="null" line="21" static="1">
			<f a="?bgra" v="0">
				<x path="Int"/>
				<x path="lime.math.color.BGRA"/>
			</f>
			<meta>
				<m n=":value"><e>{ bgra : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</_new>
		<create public="1" get="inline" set="null" line="28" static="1"><f a="b:g:r:a">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.math.color.BGRA"/>
</f></create>
		<multiplyAlpha public="1" get="inline" set="null" line="37" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</multiplyAlpha>
		<readUInt8 public="1" get="inline" set="null" line="53" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
		</readUInt8>
		<set public="1" get="inline" set="null" line="80" static="1">
			<f a="this:b:g:r:a">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set>
		<unmultiplyAlpha public="1" get="inline" set="null" line="87" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</unmultiplyAlpha>
		<writeUInt8 public="1" get="inline" set="null" line="99" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
		</writeUInt8>
		<__fromARGB get="inline" set="null" line="135" static="1">
			<f a="argb">
				<x path="lime.math.color.ARGB"/>
				<x path="lime.math.color.BGRA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromARGB>
		<__fromRGBA get="inline" set="null" line="142" static="1">
			<f a="rgba">
				<x path="lime.math.color.RGBA"/>
				<x path="lime.math.color.BGRA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromRGBA>
		<get_a get="inline" set="null" line="156" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_a>
		<set_a get="inline" set="null" line="163" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_a>
		<get_b get="inline" set="null" line="171" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_b>
		<set_b get="inline" set="null" line="178" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_b>
		<get_g get="inline" set="null" line="186" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_g>
		<set_g get="inline" set="null" line="193" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_g>
		<get_r get="inline" set="null" line="201" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_r>
		<set_r get="inline" set="null" line="208" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_r>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<abstract path="lime.math.color.RGBA" params="" file="/home/joshua/Development/Haxe/lime/lime/math/color/RGBA.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="__fromARGB"><x path="lime.math.color.ARGB"/></icast>
			<icast field="__fromBGRA"><x path="lime.math.color.BGRA"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":allow"><e>lime.math.color</e></m></meta>
		<impl><class path="lime.math.color._RGBA.RGBA_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/color/RGBA.hx" private="1" module="lime.math.color.RGBA">
	<__alpha16 static="1"><x path="lime.utils.UInt32Array"/></__alpha16>
	<__clamp static="1"><x path="lime.utils.UInt8Array"/></__clamp>
	<a16 static="1"><x path="Int"/></a16>
	<unmult static="1"><x path="Float"/></unmult>
	<a public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</a>
	<b public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</b>
	<g public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</g>
	<r public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</r>
	<_new public="1" get="inline" set="null" line="52" static="1">
		<f a="?rgba" v="0">
			<x path="Int"/>
			<x path="lime.math.color.RGBA"/>
		</f>
		<meta>
			<m n=":value"><e>{ rgba : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</_new>
	<create public="1" get="inline" set="null" line="59" static="1"><f a="r:g:b:a">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.math.color.RGBA"/>
</f></create>
	<multiplyAlpha public="1" get="inline" set="null" line="68" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</multiplyAlpha>
	<readUInt8 public="1" get="inline" set="null" line="88" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
	</readUInt8>
	<set public="1" get="inline" set="null" line="115" static="1">
		<f a="this:r:g:b:a">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set>
	<unmultiplyAlpha public="1" get="inline" set="null" line="122" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</unmultiplyAlpha>
	<writeUInt8 public="1" get="inline" set="null" line="134" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
	</writeUInt8>
	<__fromARGB get="inline" set="null" line="170" static="1">
		<f a="argb">
			<x path="lime.math.color.ARGB"/>
			<x path="lime.math.color.RGBA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromARGB>
	<__fromBGRA get="inline" set="null" line="177" static="1">
		<f a="bgra">
			<x path="lime.math.color.BGRA"/>
			<x path="lime.math.color.RGBA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromBGRA>
	<get_a get="inline" set="null" line="191" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_a>
	<set_a get="inline" set="null" line="198" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_a>
	<get_b get="inline" set="null" line="206" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_b>
	<set_b get="inline" set="null" line="213" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_b>
	<get_g get="inline" set="null" line="221" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_g>
	<set_g get="inline" set="null" line="228" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_g>
	<get_r get="inline" set="null" line="236" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_r>
	<set_r get="inline" set="null" line="243" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_r>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":allow"><e>lime.math.color</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils.ArrayBufferView" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/ArrayBufferView.hx">
		<type public="1" expr="TypedArrayType.None">
			<x path="lime.utils.TypedArrayType"/>
			<meta><m n=":value"><e>TypedArrayType.None</e></m></meta>
		</type>
		<buffer public="1"><x path="lime.utils.ArrayBuffer"/></buffer>
		<byteOffset public="1"><x path="Int"/></byteOffset>
		<byteLength public="1"><x path="Int"/></byteLength>
		<length public="1"><x path="Int"/></length>
		<bytesPerElement set="null" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</bytesPerElement>
		<initTypedArray get="inline" set="null" line="53">
			<f a="view">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="lime.utils.ArrayBufferView"/>
			</f>
			<meta><m n=":allow"><e>lime.utils</e></m></meta>
		</initTypedArray>
		<initBuffer get="inline" set="null" line="80">
			<f a="in_buffer:?in_byteOffset:?len" v=":0:null">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
			</f>
			<meta>
				<m n=":value"><e>{ len : null, in_byteOffset : 0 }</e></m>
				<m n=":allow"><e>lime.utils</e></m>
			</meta>
		</initBuffer>
		<initArray params="T" get="inline" set="null" line="117">
			<f a="array">
				<c path="Array"><c path="initArray.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
			</f>
			<meta><m n=":allow"><e>lime.utils</e></m></meta>
		</initArray>
		<set public="1" params="T" get="inline" set="null" line="135">
			<f a="?view:?array:?offset" v="null:null:0">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="Array"><c path="set.T"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : 0, array : null, view : null }</e></m></meta>
		</set>
		<cloneBuffer get="inline" set="null" line="151">
			<f a="src:?srcByteOffset" v=":0">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ srcByteOffset : 0 }</e></m></meta>
		</cloneBuffer>
		<subarray params="T_subarray" get="inline" set="null" line="165">
			<f a="begin:?end" v=":null">
				<x path="Int"/>
				<x path="Int"/>
				<c path="subarray.T_subarray"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":generic"/>
				<m n=":allow"><e>lime.utils</e></m>
			</meta>
		</subarray>
		<bytesForType get="inline" set="null" line="210"><f a="type">
	<x path="lime.utils.TypedArrayType"/>
	<x path="Int"/>
</f></bytesForType>
		<toString get="inline" set="null" line="248"><f a=""><c path="String"/></f></toString>
		<toByteLength get="inline" set="null" line="269"><f a="elemCount">
	<x path="Int"/>
	<x path="Int"/>
</f></toByteLength>
		<copyFromArray set="method" line="278">
			<f a="array:?offset" v=":0">
				<c path="Array"><x path="Float"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : 0 }</e></m></meta>
		</copyFromArray>
		<new get="inline" set="null" line="27">
			<f a="?elements:in_type" v="null:">
				<x path="Int"/>
				<x path="lime.utils.TypedArrayType"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ elements : null }</e></m>
				<m n=":allow"><e>lime.utils</e></m>
			</meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.utils.TAError" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/ArrayBufferView.hx" module="lime.utils.ArrayBufferView">
		<RangeError/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</enum>
	<class path="lime.math.color._RGBA.RGBA_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/math/color/RGBA.hx" private="1" module="lime.math.color.RGBA">
		<__alpha16 static="1"><x path="lime.utils.UInt32Array"/></__alpha16>
		<__clamp static="1"><x path="lime.utils.UInt8Array"/></__clamp>
		<a16 static="1"><x path="Int"/></a16>
		<unmult static="1"><x path="Float"/></unmult>
		<a public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</a>
		<b public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</b>
		<g public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</g>
		<r public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</r>
		<_new public="1" get="inline" set="null" line="52" static="1">
			<f a="?rgba" v="0">
				<x path="Int"/>
				<x path="lime.math.color.RGBA"/>
			</f>
			<meta>
				<m n=":value"><e>{ rgba : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</_new>
		<create public="1" get="inline" set="null" line="59" static="1"><f a="r:g:b:a">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.math.color.RGBA"/>
</f></create>
		<multiplyAlpha public="1" get="inline" set="null" line="68" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</multiplyAlpha>
		<readUInt8 public="1" get="inline" set="null" line="88" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
		</readUInt8>
		<set public="1" get="inline" set="null" line="115" static="1">
			<f a="this:r:g:b:a">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set>
		<unmultiplyAlpha public="1" get="inline" set="null" line="122" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</unmultiplyAlpha>
		<writeUInt8 public="1" get="inline" set="null" line="134" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
		</writeUInt8>
		<__fromARGB get="inline" set="null" line="170" static="1">
			<f a="argb">
				<x path="lime.math.color.ARGB"/>
				<x path="lime.math.color.RGBA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromARGB>
		<__fromBGRA get="inline" set="null" line="177" static="1">
			<f a="bgra">
				<x path="lime.math.color.BGRA"/>
				<x path="lime.math.color.RGBA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromBGRA>
		<get_a get="inline" set="null" line="191" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_a>
		<set_a get="inline" set="null" line="198" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_a>
		<get_b get="inline" set="null" line="206" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_b>
		<set_b get="inline" set="null" line="213" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_b>
		<get_g get="inline" set="null" line="221" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_g>
		<set_g get="inline" set="null" line="228" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_g>
		<get_r get="inline" set="null" line="236" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_r>
		<set_r get="inline" set="null" line="243" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_r>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":allow"><e>lime.math.color</e></m>
		</meta>
	</class>
	<class path="lime.media.ALAudioContext" params="" file="/home/joshua/Development/Haxe/lime/lime/media/ALAudioContext.hx">
		<NONE public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FALSE public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</FALSE>
		<TRUE public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</TRUE>
		<SOURCE_RELATIVE public="1" expr="0x202">
			<x path="Int"/>
			<meta><m n=":value"><e>0x202</e></m></meta>
		</SOURCE_RELATIVE>
		<CONE_INNER_ANGLE public="1" expr="0x1001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1001</e></m></meta>
		</CONE_INNER_ANGLE>
		<CONE_OUTER_ANGLE public="1" expr="0x1002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1002</e></m></meta>
		</CONE_OUTER_ANGLE>
		<PITCH public="1" expr="0x1003">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1003</e></m></meta>
		</PITCH>
		<POSITION public="1" expr="0x1004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1004</e></m></meta>
		</POSITION>
		<DIRECTION public="1" expr="0x1005">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1005</e></m></meta>
		</DIRECTION>
		<VELOCITY public="1" expr="0x1006">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1006</e></m></meta>
		</VELOCITY>
		<LOOPING public="1" expr="0x1007">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1007</e></m></meta>
		</LOOPING>
		<BUFFER public="1" expr="0x1009">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1009</e></m></meta>
		</BUFFER>
		<GAIN public="1" expr="0x100A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100A</e></m></meta>
		</GAIN>
		<MIN_GAIN public="1" expr="0x100D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100D</e></m></meta>
		</MIN_GAIN>
		<MAX_GAIN public="1" expr="0x100E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100E</e></m></meta>
		</MAX_GAIN>
		<ORIENTATION public="1" expr="0x100F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100F</e></m></meta>
		</ORIENTATION>
		<SOURCE_STATE public="1" expr="0x1010">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1010</e></m></meta>
		</SOURCE_STATE>
		<INITIAL public="1" expr="0x1011">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1011</e></m></meta>
		</INITIAL>
		<PLAYING public="1" expr="0x1012">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1012</e></m></meta>
		</PLAYING>
		<PAUSED public="1" expr="0x1013">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1013</e></m></meta>
		</PAUSED>
		<STOPPED public="1" expr="0x1014">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1014</e></m></meta>
		</STOPPED>
		<BUFFERS_QUEUED public="1" expr="0x1015">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1015</e></m></meta>
		</BUFFERS_QUEUED>
		<BUFFERS_PROCESSED public="1" expr="0x1016">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1016</e></m></meta>
		</BUFFERS_PROCESSED>
		<REFERENCE_DISTANCE public="1" expr="0x1020">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1020</e></m></meta>
		</REFERENCE_DISTANCE>
		<ROLLOFF_FACTOR public="1" expr="0x1021">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1021</e></m></meta>
		</ROLLOFF_FACTOR>
		<CONE_OUTER_GAIN public="1" expr="0x1022">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1022</e></m></meta>
		</CONE_OUTER_GAIN>
		<MAX_DISTANCE public="1" expr="0x1023">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1023</e></m></meta>
		</MAX_DISTANCE>
		<SEC_OFFSET public="1" expr="0x1024">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1024</e></m></meta>
		</SEC_OFFSET>
		<SAMPLE_OFFSET public="1" expr="0x1025">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1025</e></m></meta>
		</SAMPLE_OFFSET>
		<BYTE_OFFSET public="1" expr="0x1026">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1026</e></m></meta>
		</BYTE_OFFSET>
		<SOURCE_TYPE public="1" expr="0x1027">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1027</e></m></meta>
		</SOURCE_TYPE>
		<STATIC public="1" expr="0x1028">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1028</e></m></meta>
		</STATIC>
		<STREAMING public="1" expr="0x1029">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1029</e></m></meta>
		</STREAMING>
		<UNDETERMINED public="1" expr="0x1030">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1030</e></m></meta>
		</UNDETERMINED>
		<FORMAT_MONO8 public="1" expr="0x1100">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1100</e></m></meta>
		</FORMAT_MONO8>
		<FORMAT_MONO16 public="1" expr="0x1101">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1101</e></m></meta>
		</FORMAT_MONO16>
		<FORMAT_STEREO8 public="1" expr="0x1102">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1102</e></m></meta>
		</FORMAT_STEREO8>
		<FORMAT_STEREO16 public="1" expr="0x1103">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1103</e></m></meta>
		</FORMAT_STEREO16>
		<FREQUENCY public="1" expr="0x2001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2001</e></m></meta>
		</FREQUENCY>
		<BITS public="1" expr="0x2002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2002</e></m></meta>
		</BITS>
		<CHANNELS public="1" expr="0x2003">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2003</e></m></meta>
		</CHANNELS>
		<SIZE public="1" expr="0x2004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2004</e></m></meta>
		</SIZE>
		<NO_ERROR public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_NAME public="1" expr="0xA001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA001</e></m></meta>
		</INVALID_NAME>
		<INVALID_ENUM public="1" expr="0xA002">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA002</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" expr="0xA003">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA003</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" expr="0xA004">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA004</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" expr="0xA005">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA005</e></m></meta>
		</OUT_OF_MEMORY>
		<VENDOR public="1" expr="0xB001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB001</e></m></meta>
		</VENDOR>
		<VERSION public="1" expr="0xB002">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB002</e></m></meta>
		</VERSION>
		<RENDERER public="1" expr="0xB003">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB003</e></m></meta>
		</RENDERER>
		<EXTENSIONS public="1" expr="0xB004">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB004</e></m></meta>
		</EXTENSIONS>
		<DOPPLER_FACTOR public="1" expr="0xC000">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC000</e></m></meta>
		</DOPPLER_FACTOR>
		<SPEED_OF_SOUND public="1" expr="0xC003">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC003</e></m></meta>
		</SPEED_OF_SOUND>
		<DOPPLER_VELOCITY public="1" expr="0xC001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC001</e></m></meta>
		</DOPPLER_VELOCITY>
		<DISTANCE_MODEL public="1" expr="0xD000">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD000</e></m></meta>
		</DISTANCE_MODEL>
		<INVERSE_DISTANCE public="1" expr="0xD001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD001</e></m></meta>
		</INVERSE_DISTANCE>
		<INVERSE_DISTANCE_CLAMPED public="1" expr="0xD002">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD002</e></m></meta>
		</INVERSE_DISTANCE_CLAMPED>
		<LINEAR_DISTANCE public="1" expr="0xD003">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD003</e></m></meta>
		</LINEAR_DISTANCE>
		<LINEAR_DISTANCE_CLAMPED public="1" expr="0xD004">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD004</e></m></meta>
		</LINEAR_DISTANCE_CLAMPED>
		<EXPONENT_DISTANCE public="1" expr="0xD005">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD005</e></m></meta>
		</EXPONENT_DISTANCE>
		<EXPONENT_DISTANCE_CLAMPED public="1" expr="0xD006">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD006</e></m></meta>
		</EXPONENT_DISTANCE_CLAMPED>
		<bufferData public="1" set="method" line="89"><f a="buffer:format:data:size:freq">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="lime.utils.ArrayBufferView"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<buffer3f public="1" set="method" line="96"><f a="buffer:param:value1:value2:value3">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></buffer3f>
		<buffer3i public="1" set="method" line="103"><f a="buffer:param:value1:value2:value3">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></buffer3i>
		<bufferf public="1" set="method" line="110"><f a="buffer:param:value">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bufferf>
		<bufferfv public="1" set="method" line="117"><f a="buffer:param:values">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></bufferfv>
		<bufferi public="1" set="method" line="124"><f a="buffer:param:value">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferi>
		<bufferiv public="1" set="method" line="131"><f a="buffer:param:values">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></bufferiv>
		<createSource public="1" set="method" line="138"><f a=""><x path="lime.media.openal.ALSource"/></f></createSource>
		<createBuffer public="1" set="method" line="145"><f a=""><x path="lime.media.openal.ALBuffer"/></f></createBuffer>
		<deleteBuffer public="1" set="method" line="152"><f a="buffer">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteBuffers public="1" set="method" line="159"><f a="buffers">
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
	<x path="Void"/>
</f></deleteBuffers>
		<deleteSource public="1" set="method" line="166"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></deleteSource>
		<deleteSources public="1" set="method" line="173"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></deleteSources>
		<disable public="1" set="method" line="180"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<distanceModel public="1" set="method" line="187"><f a="distanceModel">
	<x path="Int"/>
	<x path="Void"/>
</f></distanceModel>
		<dopplerFactor public="1" set="method" line="194"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerFactor>
		<dopplerVelocity public="1" set="method" line="201"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerVelocity>
		<enable public="1" set="method" line="208"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<genSource public="1" set="method" line="215">
			<f a=""><x path="lime.media.openal.ALSource"/></f>
			<meta><m n=":deprecated"/></meta>
		</genSource>
		<genSources public="1" set="method" line="222"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
</f></genSources>
		<genBuffer public="1" set="method" line="229">
			<f a=""><x path="lime.media.openal.ALBuffer"/></f>
			<meta><m n=":deprecated"/></meta>
		</genBuffer>
		<genBuffers public="1" set="method" line="236"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
</f></genBuffers>
		<getBoolean public="1" set="method" line="243"><f a="param">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" set="method" line="250">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Bool"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBooleanv>
		<getBuffer3f public="1" set="method" line="257"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getBuffer3f>
		<getBuffer3i public="1" set="method" line="264"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getBuffer3i>
		<getBufferf public="1" set="method" line="271"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getBufferf>
		<getBufferfv public="1" set="method" line="278">
			<f a="buffer:param:?count" v="::1">
				<x path="lime.media.openal.ALBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBufferfv>
		<getBufferi public="1" set="method" line="285"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferi>
		<getBufferiv public="1" set="method" line="292">
			<f a="buffer:param:?count" v="::1">
				<x path="lime.media.openal.ALBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBufferiv>
		<getDouble public="1" set="method" line="299"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getDouble>
		<getDoublev public="1" set="method" line="306">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getDoublev>
		<getEnumValue public="1" set="method" line="313"><f a="ename">
	<c path="String"/>
	<x path="Int"/>
</f></getEnumValue>
		<getError public="1" set="method" line="320"><f a=""><x path="Int"/></f></getError>
		<getErrorString public="1" set="method" line="327"><f a=""><c path="String"/></f></getErrorString>
		<getFloat public="1" set="method" line="334"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" set="method" line="341">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getFloatv>
		<getInteger public="1" set="method" line="348"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getIntegerv public="1" set="method" line="355">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getIntegerv>
		<getListener3f public="1" set="method" line="362"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getListener3f>
		<getListener3i public="1" set="method" line="369"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getListener3i>
		<getListenerf public="1" set="method" line="376"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getListenerf>
		<getListenerfv public="1" set="method" line="383">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getListenerfv>
		<getListeneri public="1" set="method" line="390"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getListeneri>
		<getListeneriv public="1" set="method" line="397">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getListeneriv>
		<getProcAddress public="1" set="method" line="404"><f a="fname">
	<c path="String"/>
	<d/>
</f></getProcAddress>
		<getSource3f public="1" set="method" line="411"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getSource3f>
		<getSourcef public="1" set="method" line="418"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSourcef>
		<getSource3i public="1" set="method" line="425"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getSource3i>
		<getSourcefv public="1" set="method" line="432">
			<f a="source:param:?count" v="::1">
				<x path="lime.media.openal.ALSource"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getSourcefv>
		<getSourcei public="1" set="method" line="439"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<d/>
</f></getSourcei>
		<getSourceiv public="1" set="method" line="446">
			<f a="source:param:?count" v="::1">
				<x path="lime.media.openal.ALSource"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getSourceiv>
		<getString public="1" set="method" line="453"><f a="param">
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<isBuffer public="1" set="method" line="460"><f a="buffer">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isEnabled public="1" set="method" line="467"><f a="capability">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isExtensionPresent public="1" set="method" line="474"><f a="extname">
	<c path="String"/>
	<x path="Bool"/>
</f></isExtensionPresent>
		<isSource public="1" set="method" line="481"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Bool"/>
</f></isSource>
		<listener3f public="1" set="method" line="488"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listener3f>
		<listener3i public="1" set="method" line="495"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listener3i>
		<listenerf public="1" set="method" line="502"><f a="param:value">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listenerf>
		<listenerfv public="1" set="method" line="509"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></listenerfv>
		<listeneri public="1" set="method" line="516"><f a="param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listeneri>
		<listeneriv public="1" set="method" line="523"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></listeneriv>
		<source3f public="1" set="method" line="530"><f a="source:param:value1:value2:value3">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></source3f>
		<source3i public="1" set="method" line="537"><f a="source:param:value1:value2:value3">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></source3i>
		<sourcef public="1" set="method" line="544"><f a="source:param:value">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></sourcef>
		<sourcefv public="1" set="method" line="551"><f a="source:param:values">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></sourcefv>
		<sourcei public="1" set="method" line="558"><f a="source:param:value">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></sourcei>
		<sourceiv public="1" set="method" line="565"><f a="source:param:values">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceiv>
		<sourcePlay public="1" set="method" line="572"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourcePlay>
		<sourcePlayv public="1" set="method" line="579"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourcePlayv>
		<sourceStop public="1" set="method" line="586"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourceStop>
		<sourceStopv public="1" set="method" line="593"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourceStopv>
		<sourceRewind public="1" set="method" line="600"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourceRewind>
		<sourceRewindv public="1" set="method" line="607"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourceRewindv>
		<sourcePause public="1" set="method" line="614"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourcePause>
		<sourcePausev public="1" set="method" line="621"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourcePausev>
		<sourceQueueBuffer public="1" set="method" line="628"><f a="source:buffer">
	<x path="lime.media.openal.ALSource"/>
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Void"/>
</f></sourceQueueBuffer>
		<sourceQueueBuffers public="1" set="method" line="635"><f a="source:nb:buffers">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
	<x path="Void"/>
</f></sourceQueueBuffers>
		<sourceUnqueueBuffer public="1" set="method" line="642"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
</f></sourceUnqueueBuffer>
		<sourceUnqueueBuffers public="1" set="method" line="649"><f a="source:nb">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
</f></sourceUnqueueBuffers>
		<speedOfSound public="1" set="method" line="656"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></speedOfSound>
		<new public="1" set="method" line="82"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.media.ALCAudioContext" params="" file="/home/joshua/Development/Haxe/lime/lime/media/ALCAudioContext.hx">
		<FALSE public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</FALSE>
		<TRUE public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</TRUE>
		<FREQUENCY public="1" expr="0x1007">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1007</e></m></meta>
		</FREQUENCY>
		<REFRESH public="1" expr="0x1008">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1008</e></m></meta>
		</REFRESH>
		<SYNC public="1" expr="0x1009">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1009</e></m></meta>
		</SYNC>
		<MONO_SOURCES public="1" expr="0x1010">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1010</e></m></meta>
		</MONO_SOURCES>
		<STEREO_SOURCES public="1" expr="0x1011">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1011</e></m></meta>
		</STEREO_SOURCES>
		<NO_ERROR public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_DEVICE public="1" expr="0xA001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA001</e></m></meta>
		</INVALID_DEVICE>
		<INVALID_CONTEXT public="1" expr="0xA002">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA002</e></m></meta>
		</INVALID_CONTEXT>
		<INVALID_ENUM public="1" expr="0xA003">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA003</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" expr="0xA004">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA004</e></m></meta>
		</INVALID_VALUE>
		<OUT_OF_MEMORY public="1" expr="0xA005">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA005</e></m></meta>
		</OUT_OF_MEMORY>
		<ATTRIBUTES_SIZE public="1" expr="0x1002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1002</e></m></meta>
		</ATTRIBUTES_SIZE>
		<ALL_ATTRIBUTES public="1" expr="0x1003">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1003</e></m></meta>
		</ALL_ATTRIBUTES>
		<DEFAULT_DEVICE_SPECIFIER public="1" expr="0x1004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1004</e></m></meta>
		</DEFAULT_DEVICE_SPECIFIER>
		<DEVICE_SPECIFIER public="1" expr="0x1005">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1005</e></m></meta>
		</DEVICE_SPECIFIER>
		<EXTENSIONS public="1" expr="0x1006">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1006</e></m></meta>
		</EXTENSIONS>
		<ENUMERATE_ALL_EXT public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ENUMERATE_ALL_EXT>
		<DEFAULT_ALL_DEVICES_SPECIFIER public="1" expr="0x1012">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1012</e></m></meta>
		</DEFAULT_ALL_DEVICES_SPECIFIER>
		<ALL_DEVICES_SPECIFIER public="1" expr="0x1013">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1013</e></m></meta>
		</ALL_DEVICES_SPECIFIER>
		<closeDevice public="1" set="method" line="47"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Bool"/>
</f></closeDevice>
		<createContext public="1" set="method" line="54">
			<f a="device:?attrlist" v=":null">
				<x path="lime.media.openal.ALDevice"/>
				<c path="Array"><x path="Int"/></c>
				<x path="lime.media.openal.ALContext"/>
			</f>
			<meta><m n=":value"><e>{ attrlist : null }</e></m></meta>
		</createContext>
		<destroyContext public="1" set="method" line="61"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></destroyContext>
		<getContextsDevice public="1" set="method" line="68"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="lime.media.openal.ALDevice"/>
</f></getContextsDevice>
		<getCurrentContext public="1" set="method" line="75"><f a=""><x path="lime.media.openal.ALContext"/></f></getCurrentContext>
		<getError public="1" set="method" line="82"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Int"/>
</f></getError>
		<getErrorString public="1" set="method" line="89"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<c path="String"/>
</f></getErrorString>
		<getIntegerv public="1" set="method" line="96">
			<f a="device:param:?count" v="::1">
				<x path="lime.media.openal.ALDevice"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getIntegerv>
		<getString public="1" set="method" line="103"><f a="device:param">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<makeContextCurrent public="1" set="method" line="110"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Bool"/>
</f></makeContextCurrent>
		<openDevice public="1" set="method" line="117">
			<f a="?deviceName" v="null">
				<c path="String"/>
				<x path="lime.media.openal.ALDevice"/>
			</f>
			<meta><m n=":value"><e>{ deviceName : null }</e></m></meta>
		</openDevice>
		<pauseDevice public="1" set="method" line="124"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Void"/>
</f></pauseDevice>
		<processContext public="1" set="method" line="131"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></processContext>
		<resumeDevice public="1" set="method" line="138"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Void"/>
</f></resumeDevice>
		<suspendContext public="1" set="method" line="145"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></suspendContext>
		<new public="1" set="method" line="40"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.media.AudioBuffer" params="" file="/home/joshua/Development/Haxe/lime/lime/media/AudioBuffer.hx">
		<fromBase64 public="1" set="method" line="92" static="1"><f a="base64String">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromBase64>
		<fromBytes public="1" set="method" line="152" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="198" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromFile>
		<fromFiles public="1" set="method" line="281" static="1"><f a="paths">
	<c path="Array"><c path="String"/></c>
	<c path="lime.media.AudioBuffer"/>
</f></fromFiles>
		<fromVorbisFile public="1" set="method" line="327" static="1"><f a="vorbisFile">
	<d/>
	<c path="lime.media.AudioBuffer"/>
</f></fromVorbisFile>
		<loadFromFile public="1" set="method" line="336" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadFromFile>
		<loadFromFiles public="1" set="method" line="420" static="1"><f a="paths">
	<c path="Array"><c path="String"/></c>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadFromFiles>
		<__getCodec set="method" line="461" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="String"/>
</f></__getCodec>
		<bitsPerSample public="1"><x path="Int"/></bitsPerSample>
		<channels public="1"><x path="Int"/></channels>
		<data public="1"><x path="lime.utils.UInt8Array"/></data>
		<sampleRate public="1"><x path="Int"/></sampleRate>
		<src public="1" get="accessor" set="accessor"><d/></src>
		<__srcAudio>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcAudio>
		<__srcBuffer>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcBuffer>
		<__srcCustom>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCustom>
		<__srcFMODSound>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcFMODSound>
		<__srcHowl>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcHowl>
		<__srcSound>
			<t path="flash.media.Sound"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcSound>
		<__srcVorbisFile>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcVorbisFile>
		<dispose public="1" set="method" line="64"><f a=""><x path="Void"/></f></dispose>
		<get_src set="method" line="493"><f a=""><d/></f></get_src>
		<set_src set="method" line="526"><f a="value">
	<d/>
	<d/>
</f></set_src>
		<new public="1" set="method" line="57"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.Assets</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.media.AudioContext" params="" file="/home/joshua/Development/Haxe/lime/lime/media/AudioContext.hx">
		<OPENAL a="alc:al">
			<c path="lime.media.ALCAudioContext"/>
			<c path="lime.media.ALAudioContext"/>
		</OPENAL>
		<HTML5 a="context"><c path="lime.media.HTML5AudioContext"/></HTML5>
		<WEB a="context"><c path="lime.media.WebAudioContext"/></WEB>
		<FLASH a="context"><c path="lime.media.FlashAudioContext"/></FLASH>
		<CUSTOM a="data"><d/></CUSTOM>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="lime.media.AudioManager" params="" file="/home/joshua/Development/Haxe/lime/lime/media/AudioManager.hx">
		<context public="1" static="1"><e path="lime.media.AudioContext"/></context>
		<init public="1" set="method" line="25" static="1">
			<f a="?context" v="null">
				<e path="lime.media.AudioContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ context : null }</e></m></meta>
		</init>
		<resume public="1" set="method" line="75" static="1"><f a=""><x path="Void"/></f></resume>
		<shutdown public="1" set="method" line="102" static="1"><f a=""><x path="Void"/></f></shutdown>
		<suspend public="1" set="method" line="137" static="1"><f a=""><x path="Void"/></f></suspend>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.media.AudioSource" params="" file="/home/joshua/Development/Haxe/lime/lime/media/AudioSource.hx">
		<onComplete public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onComplete>
		<buffer public="1"><c path="lime.media.AudioBuffer"/></buffer>
		<currentTime public="1" get="accessor" set="accessor"><x path="Int"/></currentTime>
		<gain public="1" get="accessor" set="accessor"><x path="Float"/></gain>
		<length public="1" get="accessor" set="accessor"><x path="Int"/></length>
		<loops public="1" get="accessor" set="accessor"><x path="Int"/></loops>
		<offset public="1"><x path="Int"/></offset>
		<position public="1" get="accessor" set="accessor"><c path="lime.math.Vector4"/></position>
		<backend>
			<t path="lime.media._AudioSource.AudioSourceBackend"/>
			<meta><m n=":noCompletion"/></meta>
		</backend>
		<dispose public="1" set="method" line="55"><f a=""><x path="Void"/></f></dispose>
		<init set="method" line="62"><f a=""><x path="Void"/></f></init>
		<play public="1" set="method" line="69"><f a=""><x path="Void"/></f></play>
		<pause public="1" set="method" line="76"><f a=""><x path="Void"/></f></pause>
		<stop public="1" set="method" line="83"><f a=""><x path="Void"/></f></stop>
		<get_currentTime set="method" line="97"><f a=""><x path="Int"/></f></get_currentTime>
		<set_currentTime set="method" line="104"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></set_currentTime>
		<get_gain set="method" line="111"><f a=""><x path="Float"/></f></get_gain>
		<set_gain set="method" line="118"><f a="value">
	<x path="Float"/>
	<x path="Float"/>
</f></set_gain>
		<get_length set="method" line="125"><f a=""><x path="Int"/></f></get_length>
		<set_length set="method" line="132"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></set_length>
		<get_loops set="method" line="139"><f a=""><x path="Int"/></f></get_loops>
		<set_loops set="method" line="146"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></set_loops>
		<get_position set="method" line="153"><f a=""><c path="lime.math.Vector4"/></f></get_position>
		<set_position set="method" line="160"><f a="value">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
</f></set_position>
		<new public="1" set="method" line="31">
			<f a="?buffer:?offset:?length:?loops" v="null:0:null:0">
				<c path="lime.media.AudioBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ loops : 0, length : null, offset : 0, buffer : null }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.media._AudioSource.AudioSourceBackend" params="" file="/home/joshua/Development/Haxe/lime/lime/media/AudioSource.hx" private="1" module="lime.media.AudioSource">
		<c path="lime._backend.flash.FlashAudioSource"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<class path="lime.media.FlashAudioContext" params="" file="/home/joshua/Development/Haxe/lime/lime/media/FlashAudioContext.hx">
		<createBuffer public="1" set="method" line="19">
			<f a="?stream:?context" v="null:null">
				<d/>
				<d/>
				<c path="lime.media.AudioBuffer"/>
			</f>
			<meta><m n=":value"><e>{ context : null, stream : null }</e></m></meta>
		</createBuffer>
		<getBytesLoaded public="1" set="method" line="32"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="UInt"/>
</f></getBytesLoaded>
		<getBytesTotal public="1" set="method" line="47"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Int"/>
</f></getBytesTotal>
		<getID3 public="1" set="method" line="62"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<d/>
</f></getID3>
		<getIsBuffering public="1" set="method" line="77"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getIsBuffering>
		<getIsURLInaccessible public="1" set="method" line="92"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getIsURLInaccessible>
		<getLength public="1" set="method" line="107"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getLength>
		<getURL public="1" set="method" line="122"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
</f></getURL>
		<close public="1" set="method" line="137"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Void"/>
</f></close>
		<extract public="1" set="method" line="150">
			<f a="buffer:target:length:?startPosition" v=":::-1">
				<c path="lime.media.AudioBuffer"/>
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":value"><e>{ startPosition : -1 }</e></m></meta>
		</extract>
		<load public="1" set="method" line="165">
			<f a="buffer:stream:?context" v="::null">
				<c path="lime.media.AudioBuffer"/>
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ context : null }</e></m></meta>
		</load>
		<loadCompressedDataFromByteArray public="1" set="method" line="178"><f a="buffer:bytes:bytesLength">
	<c path="lime.media.AudioBuffer"/>
	<d/>
	<x path="UInt"/>
	<x path="Void"/>
</f></loadCompressedDataFromByteArray>
		<loadPCMFromByteArray public="1" set="method" line="191">
			<f a="buffer:bytes:samples:?format:?stereo:?sampleRate" v=":::null:true:44100">
				<c path="lime.media.AudioBuffer"/>
				<d/>
				<x path="UInt"/>
				<c path="String"/>
				<x path="Bool"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ sampleRate : 44100, stereo : true, format : null }</e></m></meta>
		</loadPCMFromByteArray>
		<play public="1" set="method" line="204">
			<f a="buffer:?startTime:?loops:?sndTransform" v=":0:0:null">
				<c path="lime.media.AudioBuffer"/>
				<x path="Float"/>
				<x path="Int"/>
				<d/>
				<d/>
			</f>
			<meta><m n=":value"><e>{ sndTransform : null, loops : 0, startTime : 0 }</e></m></meta>
		</play>
		<new public="1" set="method" line="12"><f a=""><x path="Void"/></f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.media.HTML5AudioContext" params="" file="/home/joshua/Development/Haxe/lime/lime/media/HTML5AudioContext.hx">
		<HAVE_CURRENT_DATA public="1" expr="2">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</HAVE_CURRENT_DATA>
		<HAVE_ENOUGH_DATA public="1" expr="4">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</HAVE_ENOUGH_DATA>
		<HAVE_FUTURE_DATA public="1" expr="3">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</HAVE_FUTURE_DATA>
		<HAVE_METADATA public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</HAVE_METADATA>
		<HAVE_NOTHING public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</HAVE_NOTHING>
		<NETWORK_EMPTY public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NETWORK_EMPTY>
		<NETWORK_IDLE public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</NETWORK_IDLE>
		<NETWORK_LOADING public="1" expr="2">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</NETWORK_LOADING>
		<NETWORK_NO_SOURCE public="1" expr="3">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</NETWORK_NO_SOURCE>
		<canPlayType public="1" set="method" line="32"><f a="buffer:type">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
	<c path="String"/>
</f></canPlayType>
		<createBuffer public="1" set="method" line="47">
			<f a="?urlString" v="null">
				<c path="String"/>
				<c path="lime.media.AudioBuffer"/>
			</f>
			<meta><m n=":value"><e>{ urlString : null }</e></m></meta>
		</createBuffer>
		<getAutoplay public="1" set="method" line="61"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getAutoplay>
		<getBuffered public="1" set="method" line="76"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<d/>
</f></getBuffered>
		<getCurrentSrc public="1" set="method" line="91"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
</f></getCurrentSrc>
		<getCurrentTime public="1" set="method" line="106"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getCurrentTime>
		<getDefaultPlaybackRate public="1" set="method" line="121"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getDefaultPlaybackRate>
		<getDuration public="1" set="method" line="136"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getDuration>
		<getEnded public="1" set="method" line="151"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getEnded>
		<getError public="1" set="method" line="166"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<d/>
</f></getError>
		<getLoop public="1" set="method" line="181"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getLoop>
		<getMuted public="1" set="method" line="196"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getMuted>
		<getNetworkState public="1" set="method" line="211"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Int"/>
</f></getNetworkState>
		<getPaused public="1" set="method" line="226"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getPaused>
		<getPlaybackRate public="1" set="method" line="241"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getPlaybackRate>
		<getPlayed public="1" set="method" line="256"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<d/>
</f></getPlayed>
		<getPreload public="1" set="method" line="271"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
</f></getPreload>
		<getReadyState public="1" set="method" line="286"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Int"/>
</f></getReadyState>
		<getSeekable public="1" set="method" line="301"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<d/>
</f></getSeekable>
		<getSeeking public="1" set="method" line="316"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getSeeking>
		<getSrc public="1" set="method" line="331"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
</f></getSrc>
		<getStartTime public="1" set="method" line="346"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getStartTime>
		<getVolume public="1" set="method" line="361"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getVolume>
		<load public="1" set="method" line="376"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Void"/>
</f></load>
		<pause public="1" set="method" line="389"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Void"/>
</f></pause>
		<play public="1" set="method" line="402"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Void"/>
</f></play>
		<setAutoplay public="1" set="method" line="415"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setAutoplay>
		<setCurrentTime public="1" set="method" line="428"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setCurrentTime>
		<setDefaultPlaybackRate public="1" set="method" line="441"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setDefaultPlaybackRate>
		<setLoop public="1" set="method" line="454"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setLoop>
		<setMuted public="1" set="method" line="467"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setMuted>
		<setPlaybackRate public="1" set="method" line="480"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setPlaybackRate>
		<setPreload public="1" set="method" line="493"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
	<x path="Void"/>
</f></setPreload>
		<setSrc public="1" set="method" line="506"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
	<x path="Void"/>
</f></setSrc>
		<setVolume public="1" set="method" line="519"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setVolume>
		<new public="1" set="method" line="25"><f a=""><x path="Void"/></f></new>
		<meta><m n=":access"><e>lime.media.AudioBuffer</e></m></meta>
	</class>
	<class path="lime.media.WebAudioContext" params="" file="/home/joshua/Development/Haxe/lime/lime/media/WebAudioContext.hx">
		<activeSourceCount public="1" set="null"><x path="Int"/></activeSourceCount>
		<currentTime public="1" set="null"><x path="Float"/></currentTime>
		<destination public="1" set="null"><d/></destination>
		<listener public="1" set="null"><d/></listener>
		<oncomplete public="1"><d/></oncomplete>
		<sampleRate public="1" set="null"><x path="Float"/></sampleRate>
		<createAnalyser public="1" set="method" line="22"><f a=""><d/></f></createAnalyser>
		<createBiquadFilter public="1" set="method" line="23"><f a=""><d/></f></createBiquadFilter>
		<createBuffer public="1" set="method" line="25">
			<f a="buffer:mixToMono">
				<d/>
				<x path="Bool"/>
				<d/>
			</f>
			<overloads><createBuffer public="1" set="method"><f a="numberOfChannels:numberOfFrames:sampleRate">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<d/>
</f></createBuffer></overloads>
		</createBuffer>
		<createBufferSource public="1" set="method" line="26"><f a=""><d/></f></createBufferSource>
		<createChannelMerger public="1" set="method" line="27"><f a="?numberOfInputs">
	<x path="Int"/>
	<d/>
</f></createChannelMerger>
		<createChannelSplitter public="1" set="method" line="28"><f a="?numberOfOutputs">
	<x path="Int"/>
	<d/>
</f></createChannelSplitter>
		<createConvolver public="1" set="method" line="29"><f a=""><d/></f></createConvolver>
		<createDelay public="1" set="method" line="30"><f a="?maxDelayTime">
	<x path="Float"/>
	<d/>
</f></createDelay>
		<createDynamicsCompressor public="1" set="method" line="31"><f a=""><d/></f></createDynamicsCompressor>
		<createGain public="1" set="method" line="32"><f a=""><d/></f></createGain>
		<createMediaElementSource public="1" set="method" line="33"><f a="mediaElement">
	<d/>
	<d/>
</f></createMediaElementSource>
		<createMediaStreamSource public="1" set="method" line="34"><f a="mediaStream">
	<d/>
	<d/>
</f></createMediaStreamSource>
		<createOscillator public="1" set="method" line="35"><f a=""><d/></f></createOscillator>
		<createPanner public="1" set="method" line="36"><f a=""><d/></f></createPanner>
		<createScriptProcessor public="1" set="method" line="37"><f a="bufferSize:?numberOfInputChannels:?numberOfOutputChannels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></createScriptProcessor>
		<createWaveShaper public="1" set="method" line="38"><f a=""><d/></f></createWaveShaper>
		<createWaveTable public="1" set="method" line="39"><f a="real:imag">
	<d/>
	<d/>
	<d/>
</f></createWaveTable>
		<decodeAudioData public="1" set="method" line="40"><f a="audioData:successCallback:?errorCallback">
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></decodeAudioData>
		<startRendering public="1" set="method" line="41"><f a=""><x path="Void"/></f></startRendering>
		<new public="1" set="method" line="15"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.media.codecs.vorbis.Vorbis" params="" file="/home/joshua/Development/Haxe/lime/lime/media/codecs/vorbis/Vorbis.hx">
		<FALSE public="1" get="inline" set="null" expr="-1" line="7" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-1</e></m></meta>
		</FALSE>
		<EOF public="1" get="inline" set="null" expr="-2" line="8" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-2</e></m></meta>
		</EOF>
		<HOLE public="1" get="inline" set="null" expr="-3" line="9" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-3</e></m></meta>
		</HOLE>
		<EREAD public="1" get="inline" set="null" expr="-128" line="11" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-128</e></m></meta>
		</EREAD>
		<EFAULT public="1" get="inline" set="null" expr="-129" line="12" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-129</e></m></meta>
		</EFAULT>
		<EIMPL public="1" get="inline" set="null" expr="-130" line="13" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-130</e></m></meta>
		</EIMPL>
		<EINVAL public="1" get="inline" set="null" expr="-131" line="14" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-131</e></m></meta>
		</EINVAL>
		<ENOTVORBIS public="1" get="inline" set="null" expr="-132" line="15" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-132</e></m></meta>
		</ENOTVORBIS>
		<EBADHEADER public="1" get="inline" set="null" expr="-133" line="16" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-133</e></m></meta>
		</EBADHEADER>
		<EVERSION public="1" get="inline" set="null" expr="-134" line="17" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-134</e></m></meta>
		</EVERSION>
		<ENOTAUDIO public="1" get="inline" set="null" expr="-135" line="18" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-135</e></m></meta>
		</ENOTAUDIO>
		<EBADPACKET public="1" get="inline" set="null" expr="-136" line="19" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-136</e></m></meta>
		</EBADPACKET>
		<EBADLINK public="1" get="inline" set="null" expr="-137" line="20" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-137</e></m></meta>
		</EBADLINK>
		<ENOSEEK public="1" get="inline" set="null" expr="-138" line="21" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-138</e></m></meta>
		</ENOSEEK>
	</class>
	<class path="lime.media.codecs.vorbis.VorbisComment" params="" file="/home/joshua/Development/Haxe/lime/lime/media/codecs/vorbis/VorbisComment.hx">
		<userComments public="1"><c path="Array"><c path="String"/></c></userComments>
		<vendor public="1"><c path="String"/></vendor>
		<new public="1" set="method" line="11"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.media.codecs.vorbis.VorbisFile" params="" file="/home/joshua/Development/Haxe/lime/lime/media/codecs/vorbis/VorbisFile.hx">
		<fromBytes public="1" set="method" line="88" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.media.codecs.vorbis.VorbisFile"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="105" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.media.codecs.vorbis.VorbisFile"/>
</f></fromFile>
		<bitstream public="1" set="null"><x path="Int"/></bitstream>
		<handle><d/></handle>
		<bitrate public="1" set="method" line="26">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</bitrate>
		<bitrateInstant public="1" set="method" line="37"><f a=""><x path="Int"/></f></bitrateInstant>
		<clear public="1" set="method" line="48"><f a=""><x path="Void"/></f></clear>
		<comment public="1" set="method" line="57">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<c path="lime.media.codecs.vorbis.VorbisComment"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</comment>
		<crosslap public="1" set="method" line="77"><f a="other">
	<c path="lime.media.codecs.vorbis.VorbisFile"/>
	<x path="Int"/>
</f></crosslap>
		<info public="1" set="method" line="122">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<c path="lime.media.codecs.vorbis.VorbisInfo"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</info>
		<pcmSeek public="1" set="method" line="146"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></pcmSeek>
		<pcmSeekLap public="1" set="method" line="157"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></pcmSeekLap>
		<pcmSeekPage public="1" set="method" line="168"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></pcmSeekPage>
		<pcmSeekPageLap public="1" set="method" line="179"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></pcmSeekPageLap>
		<pcmTell public="1" set="method" line="190"><f a=""><x path="haxe.Int64"/></f></pcmTell>
		<pcmTotal public="1" set="method" line="208">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</pcmTotal>
		<rawSeek public="1" set="method" line="225"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></rawSeek>
		<rawSeekLap public="1" set="method" line="236"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></rawSeekLap>
		<rawTell public="1" set="method" line="247"><f a=""><x path="haxe.Int64"/></f></rawTell>
		<rawTotal public="1" set="method" line="265">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</rawTotal>
		<read public="1" set="method" line="282">
			<f a="buffer:position:?length:?bigEndianPacking:?wordSize:?signed" v="::4096:false:2:true">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ signed : true, wordSize : 2, bigEndianPacking : false, length : 4096 }</e></m></meta>
		</read>
		<readFloat public="1" set="method" line="299"><f a="pcmChannels:samples">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
</f></readFloat>
		<seekable public="1" set="method" line="313"><f a=""><x path="Bool"/></f></seekable>
		<serialNumber public="1" set="method" line="324">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</serialNumber>
		<streams public="1" set="method" line="335"><f a=""><x path="Int"/></f></streams>
		<timeSeek public="1" set="method" line="346"><f a="s">
	<x path="Float"/>
	<x path="Int"/>
</f></timeSeek>
		<timeSeekLap public="1" set="method" line="357"><f a="s">
	<x path="Float"/>
	<x path="Int"/>
</f></timeSeekLap>
		<timeSeekPage public="1" set="method" line="368"><f a="s">
	<x path="Float"/>
	<x path="Int"/>
</f></timeSeekPage>
		<timeSeekPageLap public="1" set="method" line="379"><f a="s">
	<x path="Float"/>
	<x path="Int"/>
</f></timeSeekPageLap>
		<timeTell public="1" set="method" line="390"><f a=""><x path="Float"/></f></timeTell>
		<timeTotal public="1" set="method" line="401">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</timeTotal>
		<new set="method" line="19"><f a="handle">
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
	</class>
	<class path="lime.media.codecs.vorbis.VorbisInfo" params="" file="/home/joshua/Development/Haxe/lime/lime/media/codecs/vorbis/VorbisInfo.hx">
		<bitrateLower public="1"><x path="Int"/></bitrateLower>
		<bitrateNominal public="1"><x path="Int"/></bitrateNominal>
		<bitrateUpper public="1"><x path="Int"/></bitrateUpper>
		<channels public="1"><x path="Int"/></channels>
		<rate public="1"><x path="Int"/></rate>
		<version public="1"><x path="Int"/></version>
		<new public="1" set="method" line="16"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.media.howlerjs.Howl" params="" file="/home/joshua/Development/Haxe/lime/lime/media/howlerjs/Howl.hx">
		<duration public="1" set="method" line="22">
			<f a="?id">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Get the duration of this sound. Passing a sound id will return the sprite duration.
	 * @param	id		The sound id to check. If none is passed, return full source duration.
	 * @return	Audio duration in seconds.</haxe_doc>
		</duration>
		<fade public="1" set="method" line="37">
			<f a="from:to:len:?id">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).
	 * @param	from		The value to fade from (0.0 to 1.0).
	 * @param	to		The volume to fade to (0.0 to 1.0).
	 * @param	len		Time in milliseconds to fade.
	 * @param	id		The sound id (omit to fade all sounds).
	 * @return</haxe_doc>
		</fade>
		<load public="1" set="method" line="48">
			<f a=""><c path="lime.media.howlerjs.Howl"/></f>
			<haxe_doc>* Load the audio file.
	 * @return</haxe_doc>
		</load>
		<loop public="1" set="method" line="63">
			<f a="?loop:?id">
				<d/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[* Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.
	 * 	loop() -> Returns the group's loop value.
	 * 	loop(id) -> Returns the sound id's loop value.
	 * 	loop(loop) -> Sets the loop value for all sounds in this Howl group.
	 * 	loop(loop, id) -> Sets the loop value of passed sound id.
	 * @return	Returns self or current loop value.]]></haxe_doc>
		</loop>
		<mute public="1" set="method" line="76">
			<f a="muted:?id">
				<x path="Bool"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Mute/unmute a single sound or all sounds in this Howl group.
	 * @param	muted		Set to true to mute and false to unmute.
	 * @param	id		The sound ID to update (omit to mute/unmute all).
	 * @return</haxe_doc>
		</mute>
		<off public="1" set="method" line="90">
			<f a="event:fn:?id">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Remove a custom event. Call without parameters to remove all events.
	 * @param	event		Event name.
	 * @param	fn		Listener to remove. Leave empty to remove all.
	 * @param	id		(optional) Only remove events for this sound.
	 * @return</haxe_doc>
		</off>
		<on public="1" set="method" line="104">
			<f a="event:fn:?id">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Listen to a custom event.
	 * @param	event		Event name.
	 * @param	fn		Listener to call.
	 * @param	id		(optional) Only listen to events for this sound.
	 * @return</haxe_doc>
		</on>
		<once public="1" set="method" line="118">
			<f a="event:fn:?id">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Listen to a custom event and remove it once fired.
	 * @param	event		Event name.
	 * @param	fn		Listener to call.
	 * @param	id		(optional) Only listen to events for this sound.
	 * @return</haxe_doc>
		</once>
		<pause public="1" set="method" line="130">
			<f a="?id">
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Pause playback and save current position.
	 * @param	id		The sound ID (empty to pause all in group).
	 * @return</haxe_doc>
		</pause>
		<play public="1" set="method" line="142">
			<f a="?sprite">
				<d/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Play a sound or resume previous playback.
	 * @param	sprite		Sprite name for sprite playback or sound id to continue previous.
	 * @return	Sound ID.</haxe_doc>
		</play>
		<playing public="1" set="method" line="154">
			<f a="?id">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.
	 * @param	id		The sound id to check. If none is passed, the whole sound group is checked.
	 * @return	True if playing and false if not.</haxe_doc>
		</playing>
		<rate public="1" set="method" line="169">
			<f a="?rate:?id">
				<x path="Float"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[* Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.
	 * 	rate() -> Returns the first sound node's current playback rate.
	 * 	rate(id) -> Returns the sound id's current playback rate.
	 * 	rate(rate) -> Sets the playback rate of all sounds in this Howl group.
	 * 	rate(rate, id) -> Sets the playback rate of passed sound id.
	 * @return	Returns self or the current playback rate.]]></haxe_doc>
		</rate>
		<seek public="1" set="method" line="184">
			<f a="?seek:?id">
				<x path="Float"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[* Get/set the seek position of a sound (in seconds). This method can optionally take 0, 1 or 2 arguments.
	 * 	seek() -> Returns the first sound node's current seek position.
	 * 	seek(id) -> Returns the sound id's current seek position.
	 * 	seek(seek) -> Sets the seek position of the first sound node.
	 * 	seek(seek, id) -> Sets the seek position of passed sound id.
	 * @return	Returns self or the current seek position.]]></haxe_doc>
		</seek>
		<state public="1" set="method" line="195">
			<f a=""><c path="String"/></f>
			<haxe_doc>* Returns the current loaded state of this Howl.
	 * @return	'unloaded', 'loading', 'loaded'</haxe_doc>
		</state>
		<stop public="1" set="method" line="207">
			<f a="?id">
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Stop playback and reset to start.
	 * @param	id		The sound ID (empty to stop all in group).
	 * @return</haxe_doc>
		</stop>
		<unload public="1" set="method" line="218">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Unload and destroy the current Howl object.
	 * This will immediately stop all sound instances attached to this group.</haxe_doc>
		</unload>
		<volume public="1" set="method" line="233">
			<f a="?vol:?id">
				<x path="Float"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[* Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.
	 * 	volume() -> Returns the group's volume value.
	 * 	volume(id) -> Returns the sound id's current volume.
	 * 	volume(vol) -> Sets the volume of all sounds in this Howl group.
	 * 	volume(vol, id) -> Sets the volume of passed sound id.
	 * @return	Returns self or current volume.]]></haxe_doc>
		</volume>
		<new public="1" set="method" line="10"><f a="options">
	<t path="lime.media.howlerjs.HowlOptions"/>
	<x path="Void"/>
</f></new>
	</class>
	<typedef path="lime.media.howlerjs.HowlOptions" params="" file="/home/joshua/Development/Haxe/lime/lime/media/howlerjs/Howl.hx" module="lime.media.howlerjs.Howl"><a>
	<volume>
		<t path="Null"><x path="Float"/></t>
		<meta><m n=":optional"/></meta>
	</volume>
	<src><c path="Array"><c path="String"/></c></src>
	<sprite>
		<t path="Null"><d/></t>
		<meta><m n=":optional"/></meta>
	</sprite>
	<rate>
		<t path="Null"><x path="Float"/></t>
		<meta><m n=":optional"/></meta>
	</rate>
	<preload>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</preload>
	<pool>
		<t path="Null"><x path="Float"/></t>
		<meta><m n=":optional"/></meta>
	</pool>
	<onvolume>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onvolume>
	<onstop>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onstop>
	<onseek>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onseek>
	<onrate>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onrate>
	<onplay>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onplay>
	<onpause>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onpause>
	<onmute>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onmute>
	<onloaderror>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onloaderror>
	<onload>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onload>
	<onfade>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onfade>
	<onend>
		<t path="Null"><x path="haxe.Function"/></t>
		<meta><m n=":optional"/></meta>
	</onend>
	<mute>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</mute>
	<loop>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</loop>
	<html5>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</html5>
	<format>
		<t path="Null"><c path="Array"><c path="String"/></c></t>
		<meta><m n=":optional"/></meta>
	</format>
	<autoplay>
		<t path="Null"><x path="Bool"/></t>
		<meta><m n=":optional"/></meta>
	</autoplay>
</a></typedef>
	<class path="lime.media.howlerjs.Howler" params="" file="/home/joshua/Development/Haxe/lime/lime/media/howlerjs/Howler.hx">
		<autoSuspend public="1" static="1"><x path="Bool"/></autoSuspend>
		<ctx public="1" static="1"><c path="lime.media.WebAudioContext"/></ctx>
		<masterGain public="1" static="1"><d/></masterGain>
		<mobileAutoEnable public="1" static="1"><x path="Bool"/></mobileAutoEnable>
		<noAudio public="1" static="1"><x path="Bool"/></noAudio>
		<usingWebAudio public="1" static="1"><x path="Bool"/></usingWebAudio>
		<codecs public="1" set="method" line="20" static="1">
			<f a="ext">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Check for codec support of specific extension.
	 * @param	ext		Audio file extention.
	 * @return</haxe_doc>
		</codecs>
		<mute public="1" set="method" line="31" static="1">
			<f a="muted">
				<x path="Bool"/>
				<x path="Class"><c path="lime.media.howlerjs.Howler"/></x>
			</f>
			<haxe_doc>* Handle muting and unmuting globally.
	 * @param	muted		Is muted or not.</haxe_doc>
		</mute>
		<unload public="1" set="method" line="42" static="1">
			<f a=""><x path="Class"><c path="lime.media.howlerjs.Howler"/></x></f>
			<haxe_doc>* Unload and destroy all currently loaded Howl objects.
	 * @return</haxe_doc>
		</unload>
		<volume public="1" set="method" line="54" static="1">
			<f a="?vol">
				<x path="Float"/>
				<d/>
			</f>
			<haxe_doc>* Get/set the global volume for all sounds.
	 * @param	vol		Volume from 0.0 to 1.0.
	 * @return	Returns self or current volume.</haxe_doc>
		</volume>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.media.openal.AL" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/AL.hx">
		<NONE public="1" get="inline" set="null" expr="0" line="19" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FALSE public="1" get="inline" set="null" expr="0" line="20" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</FALSE>
		<TRUE public="1" get="inline" set="null" expr="1" line="21" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</TRUE>
		<SOURCE_RELATIVE public="1" get="inline" set="null" expr="0x202" line="22" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x202</e></m></meta>
		</SOURCE_RELATIVE>
		<CONE_INNER_ANGLE public="1" get="inline" set="null" expr="0x1001" line="23" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1001</e></m></meta>
		</CONE_INNER_ANGLE>
		<CONE_OUTER_ANGLE public="1" get="inline" set="null" expr="0x1002" line="24" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1002</e></m></meta>
		</CONE_OUTER_ANGLE>
		<PITCH public="1" get="inline" set="null" expr="0x1003" line="25" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1003</e></m></meta>
		</PITCH>
		<POSITION public="1" get="inline" set="null" expr="0x1004" line="26" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1004</e></m></meta>
		</POSITION>
		<DIRECTION public="1" get="inline" set="null" expr="0x1005" line="27" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1005</e></m></meta>
		</DIRECTION>
		<VELOCITY public="1" get="inline" set="null" expr="0x1006" line="28" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1006</e></m></meta>
		</VELOCITY>
		<LOOPING public="1" get="inline" set="null" expr="0x1007" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1007</e></m></meta>
		</LOOPING>
		<BUFFER public="1" get="inline" set="null" expr="0x1009" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1009</e></m></meta>
		</BUFFER>
		<GAIN public="1" get="inline" set="null" expr="0x100A" line="31" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100A</e></m></meta>
		</GAIN>
		<MIN_GAIN public="1" get="inline" set="null" expr="0x100D" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100D</e></m></meta>
		</MIN_GAIN>
		<MAX_GAIN public="1" get="inline" set="null" expr="0x100E" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100E</e></m></meta>
		</MAX_GAIN>
		<ORIENTATION public="1" get="inline" set="null" expr="0x100F" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100F</e></m></meta>
		</ORIENTATION>
		<SOURCE_STATE public="1" get="inline" set="null" expr="0x1010" line="35" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1010</e></m></meta>
		</SOURCE_STATE>
		<INITIAL public="1" get="inline" set="null" expr="0x1011" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1011</e></m></meta>
		</INITIAL>
		<PLAYING public="1" get="inline" set="null" expr="0x1012" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1012</e></m></meta>
		</PLAYING>
		<PAUSED public="1" get="inline" set="null" expr="0x1013" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1013</e></m></meta>
		</PAUSED>
		<STOPPED public="1" get="inline" set="null" expr="0x1014" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1014</e></m></meta>
		</STOPPED>
		<BUFFERS_QUEUED public="1" get="inline" set="null" expr="0x1015" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1015</e></m></meta>
		</BUFFERS_QUEUED>
		<BUFFERS_PROCESSED public="1" get="inline" set="null" expr="0x1016" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1016</e></m></meta>
		</BUFFERS_PROCESSED>
		<REFERENCE_DISTANCE public="1" get="inline" set="null" expr="0x1020" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1020</e></m></meta>
		</REFERENCE_DISTANCE>
		<ROLLOFF_FACTOR public="1" get="inline" set="null" expr="0x1021" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1021</e></m></meta>
		</ROLLOFF_FACTOR>
		<CONE_OUTER_GAIN public="1" get="inline" set="null" expr="0x1022" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1022</e></m></meta>
		</CONE_OUTER_GAIN>
		<MAX_DISTANCE public="1" get="inline" set="null" expr="0x1023" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1023</e></m></meta>
		</MAX_DISTANCE>
		<SEC_OFFSET public="1" get="inline" set="null" expr="0x1024" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1024</e></m></meta>
		</SEC_OFFSET>
		<SAMPLE_OFFSET public="1" get="inline" set="null" expr="0x1025" line="47" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1025</e></m></meta>
		</SAMPLE_OFFSET>
		<BYTE_OFFSET public="1" get="inline" set="null" expr="0x1026" line="48" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1026</e></m></meta>
		</BYTE_OFFSET>
		<SOURCE_TYPE public="1" get="inline" set="null" expr="0x1027" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1027</e></m></meta>
		</SOURCE_TYPE>
		<STATIC public="1" get="inline" set="null" expr="0x1028" line="50" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1028</e></m></meta>
		</STATIC>
		<STREAMING public="1" get="inline" set="null" expr="0x1029" line="51" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1029</e></m></meta>
		</STREAMING>
		<UNDETERMINED public="1" get="inline" set="null" expr="0x1030" line="52" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1030</e></m></meta>
		</UNDETERMINED>
		<FORMAT_MONO8 public="1" get="inline" set="null" expr="0x1100" line="53" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1100</e></m></meta>
		</FORMAT_MONO8>
		<FORMAT_MONO16 public="1" get="inline" set="null" expr="0x1101" line="54" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1101</e></m></meta>
		</FORMAT_MONO16>
		<FORMAT_STEREO8 public="1" get="inline" set="null" expr="0x1102" line="55" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1102</e></m></meta>
		</FORMAT_STEREO8>
		<FORMAT_STEREO16 public="1" get="inline" set="null" expr="0x1103" line="56" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1103</e></m></meta>
		</FORMAT_STEREO16>
		<FREQUENCY public="1" get="inline" set="null" expr="0x2001" line="57" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2001</e></m></meta>
		</FREQUENCY>
		<BITS public="1" get="inline" set="null" expr="0x2002" line="58" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2002</e></m></meta>
		</BITS>
		<CHANNELS public="1" get="inline" set="null" expr="0x2003" line="59" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2003</e></m></meta>
		</CHANNELS>
		<SIZE public="1" get="inline" set="null" expr="0x2004" line="60" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2004</e></m></meta>
		</SIZE>
		<NO_ERROR public="1" get="inline" set="null" expr="0" line="61" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_NAME public="1" get="inline" set="null" expr="0xA001" line="62" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA001</e></m></meta>
		</INVALID_NAME>
		<INVALID_ENUM public="1" get="inline" set="null" expr="0xA002" line="63" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA002</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" expr="0xA003" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA003</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" expr="0xA004" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA004</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="0xA005" line="66" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA005</e></m></meta>
		</OUT_OF_MEMORY>
		<VENDOR public="1" get="inline" set="null" expr="0xB001" line="67" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB001</e></m></meta>
		</VENDOR>
		<VERSION public="1" get="inline" set="null" expr="0xB002" line="68" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB002</e></m></meta>
		</VERSION>
		<RENDERER public="1" get="inline" set="null" expr="0xB003" line="69" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB003</e></m></meta>
		</RENDERER>
		<EXTENSIONS public="1" get="inline" set="null" expr="0xB004" line="70" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB004</e></m></meta>
		</EXTENSIONS>
		<DOPPLER_FACTOR public="1" get="inline" set="null" expr="0xC000" line="71" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC000</e></m></meta>
		</DOPPLER_FACTOR>
		<SPEED_OF_SOUND public="1" get="inline" set="null" expr="0xC003" line="72" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC003</e></m></meta>
		</SPEED_OF_SOUND>
		<DOPPLER_VELOCITY public="1" get="inline" set="null" expr="0xC001" line="73" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC001</e></m></meta>
		</DOPPLER_VELOCITY>
		<DISTANCE_MODEL public="1" get="inline" set="null" expr="0xD000" line="74" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD000</e></m></meta>
		</DISTANCE_MODEL>
		<INVERSE_DISTANCE public="1" get="inline" set="null" expr="0xD001" line="75" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD001</e></m></meta>
		</INVERSE_DISTANCE>
		<INVERSE_DISTANCE_CLAMPED public="1" get="inline" set="null" expr="0xD002" line="76" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD002</e></m></meta>
		</INVERSE_DISTANCE_CLAMPED>
		<LINEAR_DISTANCE public="1" get="inline" set="null" expr="0xD003" line="77" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD003</e></m></meta>
		</LINEAR_DISTANCE>
		<LINEAR_DISTANCE_CLAMPED public="1" get="inline" set="null" expr="0xD004" line="78" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD004</e></m></meta>
		</LINEAR_DISTANCE_CLAMPED>
		<EXPONENT_DISTANCE public="1" get="inline" set="null" expr="0xD005" line="79" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD005</e></m></meta>
		</EXPONENT_DISTANCE>
		<EXPONENT_DISTANCE_CLAMPED public="1" get="inline" set="null" expr="0xD006" line="80" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD006</e></m></meta>
		</EXPONENT_DISTANCE_CLAMPED>
		<bufferData public="1" set="method" line="83" static="1"><f a="buffer:format:data:size:freq">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="lime.utils.ArrayBufferView"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<buffer3f public="1" set="method" line="92" static="1"><f a="buffer:param:value1:value2:value3">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></buffer3f>
		<buffer3i public="1" set="method" line="101" static="1"><f a="buffer:param:value1:value2:value3">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></buffer3i>
		<bufferf public="1" set="method" line="110" static="1"><f a="buffer:param:value">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bufferf>
		<bufferfv public="1" set="method" line="119" static="1"><f a="buffer:param:values">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></bufferfv>
		<bufferi public="1" set="method" line="128" static="1"><f a="buffer:param:value">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferi>
		<bufferiv public="1" set="method" line="137" static="1"><f a="buffer:param:values">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></bufferiv>
		<createBuffer public="1" set="method" line="146" static="1"><f a=""><x path="lime.media.openal.ALBuffer"/></f></createBuffer>
		<createSource public="1" set="method" line="157" static="1"><f a=""><x path="lime.media.openal.ALSource"/></f></createSource>
		<deleteBuffer public="1" set="method" line="168" static="1"><f a="buffer">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteBuffers public="1" set="method" line="177" static="1"><f a="buffers">
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
	<x path="Void"/>
</f></deleteBuffers>
		<deleteSource public="1" set="method" line="186" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></deleteSource>
		<deleteSources public="1" set="method" line="195" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></deleteSources>
		<disable public="1" set="method" line="204" static="1"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<distanceModel public="1" set="method" line="213" static="1"><f a="distanceModel">
	<x path="Int"/>
	<x path="Void"/>
</f></distanceModel>
		<dopplerFactor public="1" set="method" line="222" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerFactor>
		<dopplerVelocity public="1" set="method" line="231" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerVelocity>
		<enable public="1" set="method" line="240" static="1"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<genSource public="1" set="method" line="249" static="1">
			<f a=""><x path="lime.media.openal.ALSource"/></f>
			<meta><m n=":deprecated"><e>"genSource has been renamed to 'createSource' for consistency with OpenGL"</e></m></meta>
		</genSource>
		<genSources public="1" set="method" line="260" static="1"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
</f></genSources>
		<genBuffer public="1" set="method" line="271" static="1">
			<f a=""><x path="lime.media.openal.ALBuffer"/></f>
			<meta><m n=":deprecated"><e>"genBuffer has been renamed to 'createBuffer' for consistency with OpenGL"</e></m></meta>
		</genBuffer>
		<genBuffers public="1" set="method" line="282" static="1"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
</f></genBuffers>
		<getBoolean public="1" set="method" line="293" static="1"><f a="param">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" set="method" line="304" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Bool"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBooleanv>
		<getBuffer3f public="1" set="method" line="315" static="1"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getBuffer3f>
		<getBuffer3i public="1" set="method" line="326" static="1"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getBuffer3i>
		<getBufferf public="1" set="method" line="337" static="1"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getBufferf>
		<getBufferfv public="1" set="method" line="348" static="1">
			<f a="buffer:param:?count" v="::1">
				<x path="lime.media.openal.ALBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBufferfv>
		<getBufferi public="1" set="method" line="359" static="1"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferi>
		<getBufferiv public="1" set="method" line="370" static="1">
			<f a="buffer:param:?count" v="::1">
				<x path="lime.media.openal.ALBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBufferiv>
		<getDouble public="1" set="method" line="381" static="1"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getDouble>
		<getDoublev public="1" set="method" line="392" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getDoublev>
		<getEnumValue public="1" set="method" line="403" static="1"><f a="ename">
	<c path="String"/>
	<x path="Int"/>
</f></getEnumValue>
		<getError public="1" set="method" line="414" static="1"><f a=""><x path="Int"/></f></getError>
		<getErrorString public="1" set="method" line="425" static="1"><f a=""><c path="String"/></f></getErrorString>
		<getFloat public="1" set="method" line="441" static="1"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" set="method" line="452" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getFloatv>
		<getInteger public="1" set="method" line="463" static="1"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getIntegerv public="1" set="method" line="474" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getIntegerv>
		<getListener3f public="1" set="method" line="485" static="1"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getListener3f>
		<getListener3i public="1" set="method" line="496" static="1"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getListener3i>
		<getListenerf public="1" set="method" line="507" static="1"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getListenerf>
		<getListenerfv public="1" set="method" line="518" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getListenerfv>
		<getListeneri public="1" set="method" line="529" static="1"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getListeneri>
		<getListeneriv public="1" set="method" line="540" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getListeneriv>
		<getParameter public="1" set="method" line="551" static="1">
			<f a="param">
				<x path="Int"/>
				<d/>
			</f>
			<meta>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
			</meta>
		</getParameter>
		<getProcAddress public="1" set="method" line="559" static="1"><f a="fname">
	<c path="String"/>
	<d/>
</f></getProcAddress>
		<getSource3f public="1" set="method" line="570" static="1"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getSource3f>
		<getSourcef public="1" set="method" line="581" static="1"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSourcef>
		<getSource3i public="1" set="method" line="592" static="1"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getSource3i>
		<getSourcefv public="1" set="method" line="603" static="1">
			<f a="source:param:?count" v="::1">
				<x path="lime.media.openal.ALSource"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getSourcefv>
		<getSourcei public="1" set="method" line="614" static="1"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<d/>
</f></getSourcei>
		<getSourceiv public="1" set="method" line="625" static="1">
			<f a="source:param:?count" v="::1">
				<x path="lime.media.openal.ALSource"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getSourceiv>
		<getString public="1" set="method" line="636" static="1"><f a="param">
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<isBuffer public="1" set="method" line="647" static="1"><f a="buffer">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isEnabled public="1" set="method" line="658" static="1"><f a="capability">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isExtensionPresent public="1" set="method" line="669" static="1"><f a="extname">
	<c path="String"/>
	<x path="Bool"/>
</f></isExtensionPresent>
		<isSource public="1" set="method" line="680" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Bool"/>
</f></isSource>
		<listener3f public="1" set="method" line="691" static="1"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listener3f>
		<listener3i public="1" set="method" line="700" static="1"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listener3i>
		<listenerf public="1" set="method" line="709" static="1"><f a="param:value">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listenerf>
		<listenerfv public="1" set="method" line="718" static="1"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></listenerfv>
		<listeneri public="1" set="method" line="727" static="1"><f a="param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listeneri>
		<listeneriv public="1" set="method" line="736" static="1"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></listeneriv>
		<source3f public="1" set="method" line="745" static="1"><f a="source:param:value1:value2:value3">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></source3f>
		<source3i public="1" set="method" line="754" static="1"><f a="source:param:value1:value2:value3">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></source3i>
		<sourcef public="1" set="method" line="763" static="1"><f a="source:param:value">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></sourcef>
		<sourcefv public="1" set="method" line="772" static="1"><f a="source:param:values">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></sourcefv>
		<sourcei public="1" set="method" line="781" static="1"><f a="source:param:value">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></sourcei>
		<sourceiv public="1" set="method" line="790" static="1"><f a="source:param:values">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceiv>
		<sourcePlay public="1" set="method" line="799" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourcePlay>
		<sourcePlayv public="1" set="method" line="808" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourcePlayv>
		<sourceStop public="1" set="method" line="817" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourceStop>
		<sourceStopv public="1" set="method" line="826" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourceStopv>
		<sourceRewind public="1" set="method" line="835" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourceRewind>
		<sourceRewindv public="1" set="method" line="844" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourceRewindv>
		<sourcePause public="1" set="method" line="853" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourcePause>
		<sourcePausev public="1" set="method" line="862" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourcePausev>
		<sourceQueueBuffer public="1" set="method" line="871" static="1"><f a="source:buffer">
	<x path="lime.media.openal.ALSource"/>
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Void"/>
</f></sourceQueueBuffer>
		<sourceQueueBuffers public="1" set="method" line="881" static="1"><f a="source:nb:buffers">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
	<x path="Void"/>
</f></sourceQueueBuffers>
		<sourceUnqueueBuffer public="1" set="method" line="890" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="lime.media.openal.ALBuffer"/>
</f></sourceUnqueueBuffer>
		<sourceUnqueueBuffers public="1" set="method" line="902" static="1"><f a="source:nb">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
</f></sourceUnqueueBuffers>
		<speedOfSound public="1" set="method" line="913" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></speedOfSound>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.media.openal.ALBuffer" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALBuffer.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
		<impl><class path="lime.media.openal._ALBuffer.ALBuffer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALBuffer.hx" private="1" module="lime.media.openal.ALBuffer">
	<_new get="inline" set="null" line="12" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALBuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<meta>
		<m n=":final"/>
		<m n=":allow"><e>lime.media.openal.AL</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALBuffer.ALBuffer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALBuffer.hx" private="1" module="lime.media.openal.ALBuffer">
		<_new get="inline" set="null" line="12" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALBuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<meta>
			<m n=":final"/>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
		</meta>
	</class>
	<class path="lime.media.openal.ALC" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALC.hx">
		<FALSE public="1" get="inline" set="null" expr="0" line="18" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</FALSE>
		<TRUE public="1" get="inline" set="null" expr="1" line="19" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</TRUE>
		<FREQUENCY public="1" get="inline" set="null" expr="0x1007" line="20" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1007</e></m></meta>
		</FREQUENCY>
		<REFRESH public="1" get="inline" set="null" expr="0x1008" line="21" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1008</e></m></meta>
		</REFRESH>
		<SYNC public="1" get="inline" set="null" expr="0x1009" line="22" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1009</e></m></meta>
		</SYNC>
		<MONO_SOURCES public="1" get="inline" set="null" expr="0x1010" line="23" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1010</e></m></meta>
		</MONO_SOURCES>
		<STEREO_SOURCES public="1" get="inline" set="null" expr="0x1011" line="24" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1011</e></m></meta>
		</STEREO_SOURCES>
		<NO_ERROR public="1" get="inline" set="null" expr="0" line="25" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_DEVICE public="1" get="inline" set="null" expr="0xA001" line="26" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA001</e></m></meta>
		</INVALID_DEVICE>
		<INVALID_CONTEXT public="1" get="inline" set="null" expr="0xA002" line="27" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA002</e></m></meta>
		</INVALID_CONTEXT>
		<INVALID_ENUM public="1" get="inline" set="null" expr="0xA003" line="28" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA003</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" expr="0xA004" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA004</e></m></meta>
		</INVALID_VALUE>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="0xA005" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA005</e></m></meta>
		</OUT_OF_MEMORY>
		<ATTRIBUTES_SIZE public="1" get="inline" set="null" expr="0x1002" line="31" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1002</e></m></meta>
		</ATTRIBUTES_SIZE>
		<ALL_ATTRIBUTES public="1" get="inline" set="null" expr="0x1003" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1003</e></m></meta>
		</ALL_ATTRIBUTES>
		<DEFAULT_DEVICE_SPECIFIER public="1" get="inline" set="null" expr="0x1004" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1004</e></m></meta>
		</DEFAULT_DEVICE_SPECIFIER>
		<DEVICE_SPECIFIER public="1" get="inline" set="null" expr="0x1005" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1005</e></m></meta>
		</DEVICE_SPECIFIER>
		<EXTENSIONS public="1" get="inline" set="null" expr="0x1006" line="35" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1006</e></m></meta>
		</EXTENSIONS>
		<ENUMERATE_ALL_EXT public="1" get="inline" set="null" expr="1" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ENUMERATE_ALL_EXT>
		<DEFAULT_ALL_DEVICES_SPECIFIER public="1" get="inline" set="null" expr="0x1012" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1012</e></m></meta>
		</DEFAULT_ALL_DEVICES_SPECIFIER>
		<ALL_DEVICES_SPECIFIER public="1" get="inline" set="null" expr="0x1013" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1013</e></m></meta>
		</ALL_DEVICES_SPECIFIER>
		<closeDevice public="1" set="method" line="41" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Bool"/>
</f></closeDevice>
		<createContext public="1" set="method" line="52" static="1">
			<f a="device:?attrlist" v=":null">
				<x path="lime.media.openal.ALDevice"/>
				<c path="Array"><x path="Int"/></c>
				<x path="lime.media.openal.ALContext"/>
			</f>
			<meta><m n=":value"><e>{ attrlist : null }</e></m></meta>
		</createContext>
		<destroyContext public="1" set="method" line="69" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></destroyContext>
		<getContextsDevice public="1" set="method" line="78" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="lime.media.openal.ALDevice"/>
</f></getContextsDevice>
		<getCurrentContext public="1" set="method" line="95" static="1"><f a=""><x path="lime.media.openal.ALContext"/></f></getCurrentContext>
		<getError public="1" set="method" line="112" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Int"/>
</f></getError>
		<getErrorString public="1" set="method" line="123" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<c path="String"/>
</f></getErrorString>
		<getIntegerv public="1" set="method" line="139" static="1"><f a="device:param:size">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getIntegerv>
		<getString public="1" set="method" line="150" static="1"><f a="device:param">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<makeContextCurrent public="1" set="method" line="161" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Bool"/>
</f></makeContextCurrent>
		<openDevice public="1" set="method" line="172" static="1">
			<f a="?deviceName" v="null">
				<c path="String"/>
				<x path="lime.media.openal.ALDevice"/>
			</f>
			<meta><m n=":value"><e>{ deviceName : null }</e></m></meta>
		</openDevice>
		<pauseDevice public="1" set="method" line="189" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Void"/>
</f></pauseDevice>
		<processContext public="1" set="method" line="198" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></processContext>
		<resumeDevice public="1" set="method" line="207" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Void"/>
</f></resumeDevice>
		<suspendContext public="1" set="method" line="216" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></suspendContext>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.media.openal.ALContext" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALContext.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
			<m n=":allow"><e>lime.media.openal.ALC</e></m>
		</meta>
		<impl><class path="lime.media.openal._ALContext.ALContext_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALContext.hx" private="1" module="lime.media.openal.ALContext">
	<_new get="inline" set="null" line="13" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALContext"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<meta>
		<m n=":final"/>
		<m n=":allow"><e>lime.media.openal.ALC</e></m>
		<m n=":allow"><e>lime.media.openal.AL</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALContext.ALContext_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALContext.hx" private="1" module="lime.media.openal.ALContext">
		<_new get="inline" set="null" line="13" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALContext"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<meta>
			<m n=":final"/>
			<m n=":allow"><e>lime.media.openal.ALC</e></m>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
		</meta>
	</class>
	<abstract path="lime.media.openal.ALDevice" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALDevice.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
			<m n=":allow"><e>lime.media.openal.ALC</e></m>
		</meta>
		<impl><class path="lime.media.openal._ALDevice.ALDevice_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALDevice.hx" private="1" module="lime.media.openal.ALDevice">
	<_new get="inline" set="null" line="13" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALDevice"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<meta>
		<m n=":final"/>
		<m n=":allow"><e>lime.media.openal.ALC</e></m>
		<m n=":allow"><e>lime.media.openal.AL</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALDevice.ALDevice_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALDevice.hx" private="1" module="lime.media.openal.ALDevice">
		<_new get="inline" set="null" line="13" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALDevice"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<meta>
			<m n=":final"/>
			<m n=":allow"><e>lime.media.openal.ALC</e></m>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
		</meta>
	</class>
	<abstract path="lime.media.openal.ALSource" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALSource.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
		<impl><class path="lime.media.openal._ALSource.ALSource_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALSource.hx" private="1" module="lime.media.openal.ALSource">
	<_new get="inline" set="null" line="12" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALSource"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<meta>
		<m n=":final"/>
		<m n=":allow"><e>lime.media.openal.AL</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALSource.ALSource_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/media/openal/ALSource.hx" private="1" module="lime.media.openal.ALSource">
		<_new get="inline" set="null" line="12" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALSource"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<meta>
			<m n=":final"/>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
		</meta>
	</class>
	<class path="lime.net.HTTPRequest" params="T" file="/home/joshua/Development/Haxe/lime/lime/net/HTTPRequest.hx">
		<contentType public="1"><c path="String"/></contentType>
		<data public="1"><c path="haxe.io.Bytes"/></data>
		<enableResponseHeaders public="1"><x path="Bool"/></enableResponseHeaders>
		<followRedirects public="1"><x path="Bool"/></followRedirects>
		<formData public="1"><x path="Map">
	<c path="String"/>
	<d/>
</x></formData>
		<headers public="1"><c path="Array"><c path="lime.net.HTTPRequestHeader"/></c></headers>
		<method public="1"><x path="lime.net.HTTPRequestMethod"/></method>
		<responseData public="1"><c path="lime.net.HTTPRequest.T"/></responseData>
		<responseHeaders public="1"><c path="Array"><c path="lime.net.HTTPRequestHeader"/></c></responseHeaders>
		<responseStatus public="1"><x path="Int"/></responseStatus>
		<timeout public="1"><x path="Int"/></timeout>
		<uri public="1"><c path="String"/></uri>
		<userAgent public="1"><c path="String"/></userAgent>
		<withCredentials public="1"><x path="Bool"/></withCredentials>
		<cancel public="1" set="method" line="71"><f a=""><x path="Void"/></f></cancel>
		<load public="1" set="method" line="80">
			<f a="?uri" v="null">
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.net.HTTPRequest.T"/></c>
			</f>
			<meta><m n=":value"><e>{ uri : null }</e></m></meta>
		</load>
		<new public="1" set="method" line="50">
			<f a="?uri" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ uri : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.net.HTTPRequestHeader" params="" file="/home/joshua/Development/Haxe/lime/lime/net/HTTPRequestHeader.hx">
		<name public="1"><c path="String"/></name>
		<value public="1"><c path="String"/></value>
		<new public="1" set="method" line="17">
			<f a="name:?value" v=":&quot;&quot;">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ value : "" }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.net.HTTPRequestMethod" params="" file="/home/joshua/Development/Haxe/lime/lime/net/HTTPRequestMethod.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net._HTTPRequestMethod.HTTPRequestMethod_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/HTTPRequestMethod.hx" private="1" module="lime.net.HTTPRequestMethod" extern="1">
	<DELETE public="1" get="inline" set="null" expr="cast &quot;DELETE&quot;" line="6" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "DELETE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<GET public="1" get="inline" set="null" expr="cast &quot;GET&quot;" line="7" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "GET"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GET>
	<HEAD public="1" get="inline" set="null" expr="cast &quot;HEAD&quot;" line="8" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "HEAD"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEAD>
	<OPTIONS public="1" get="inline" set="null" expr="cast &quot;OPTIONS&quot;" line="9" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "OPTIONS"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPTIONS>
	<POST public="1" get="inline" set="null" expr="cast &quot;POST&quot;" line="10" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "POST"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POST>
	<PUT public="1" get="inline" set="null" expr="cast &quot;PUT&quot;" line="11" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "PUT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PUT>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net._HTTPRequestMethod.HTTPRequestMethod_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/HTTPRequestMethod.hx" private="1" module="lime.net.HTTPRequestMethod" extern="1">
		<DELETE public="1" get="inline" set="null" expr="cast &quot;DELETE&quot;" line="6" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "DELETE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<GET public="1" get="inline" set="null" expr="cast &quot;GET&quot;" line="7" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "GET"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GET>
		<HEAD public="1" get="inline" set="null" expr="cast &quot;HEAD&quot;" line="8" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "HEAD"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEAD>
		<OPTIONS public="1" get="inline" set="null" expr="cast &quot;OPTIONS&quot;" line="9" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "OPTIONS"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPTIONS>
		<POST public="1" get="inline" set="null" expr="cast &quot;POST&quot;" line="10" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "POST"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POST>
		<PUT public="1" get="inline" set="null" expr="cast &quot;PUT&quot;" line="11" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "PUT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PUT>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.net.URIParser" params="" file="/home/joshua/Development/Haxe/lime/lime/net/URIParser.hx">
		<URI_REGEX public="1" expr="~/^(?:([^:/?#]+):)?(?://((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\d*))?))?((((?:[^?#/]*/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/" line="13" static="1">
			<c path="EReg"/>
			<meta><m n=":value"><e>~/^(?:([^:/?#]+):)?(?://((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\d*))?))?((((?:[^?#/]*/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/</e></m></meta>
		</URI_REGEX>
		<QUERY_REGEX public="1" expr="~/(?:^|&amp;)([^&amp;=]*)=?([^&amp;]*)/" line="14" static="1">
			<c path="EReg"/>
			<meta><m n=":value"><e><![CDATA[~/(?:^|&)([^&=]*)=?([^&]*)/]]></e></m></meta>
		</QUERY_REGEX>
		<parseQuery public="1" set="method" line="63" static="1"><f a="query">
	<c path="String"/>
	<c path="Array"><t path="lime.net.KVPair"/></c>
</f></parseQuery>
		<source public="1"><c path="String"/></source>
		<protocol public="1"><c path="String"/></protocol>
		<authority public="1"><c path="String"/></authority>
		<userInfo public="1"><c path="String"/></userInfo>
		<user public="1"><c path="String"/></user>
		<password public="1"><c path="String"/></password>
		<host public="1"><c path="String"/></host>
		<port public="1"><c path="String"/></port>
		<relative public="1"><c path="String"/></relative>
		<path public="1"><c path="String"/></path>
		<directory public="1"><c path="String"/></directory>
		<file public="1"><c path="String"/></file>
		<query public="1"><c path="String"/></query>
		<anchor public="1"><c path="String"/></anchor>
		<queryArray public="1"><c path="Array"><t path="lime.net.KVPair"/></c></queryArray>
		<new public="1" set="method" line="34"><f a="uri">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.net.KVPair" params="" file="/home/joshua/Development/Haxe/lime/lime/net/URIParser.hx" module="lime.net.URIParser">
		<a>
			<v><c path="String"/></v>
			<k><c path="String"/></k>
		</a>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</typedef>
	<class path="lime.net.curl.CURL" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURL.hx">
		<GLOBAL_SSL public="1" get="inline" set="null" expr="1 &lt;&lt; 0" line="14" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e><![CDATA[1 << 0]]></e></m></meta>
		</GLOBAL_SSL>
		<GLOBAL_WIN32 public="1" get="inline" set="null" expr="1 &lt;&lt; 1" line="15" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e><![CDATA[1 << 1]]></e></m></meta>
		</GLOBAL_WIN32>
		<GLOBAL_ALL public="1" get="inline" set="null" expr="GLOBAL_SSL | GLOBAL_WIN32" line="16" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLOBAL_SSL | GLOBAL_WIN32</e></m></meta>
		</GLOBAL_ALL>
		<GLOBAL_NOTHING public="1" get="inline" set="null" expr="0" line="17" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLOBAL_NOTHING>
		<GLOBAL_DEFAULT public="1" get="inline" set="null" expr="GLOBAL_ALL" line="18" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLOBAL_ALL</e></m></meta>
		</GLOBAL_DEFAULT>
		<GLOBAL_ACK_EINTR public="1" get="inline" set="null" expr="1 &lt;&lt; 2" line="19" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e><![CDATA[1 << 2]]></e></m></meta>
		</GLOBAL_ACK_EINTR>
		<getDate public="1" set="method" line="74" static="1"><f a="date:now">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getDate>
		<globalCleanup public="1" set="method" line="96" static="1"><f a=""><x path="Void"/></f></globalCleanup>
		<globalInit public="1" set="method" line="105" static="1"><f a="flags">
	<x path="Int"/>
	<x path="lime.net.curl.CURLCode"/>
</f></globalInit>
		<strerror public="1" set="method" line="194" static="1"><f a="code">
	<x path="lime.net.curl.CURLCode"/>
	<c path="String"/>
</f></strerror>
		<version public="1" set="method" line="216" static="1"><f a=""><c path="String"/></f></version>
		<versionInfo public="1" set="method" line="227" static="1"><f a="type">
	<x path="lime.net.curl.CURLVersion"/>
	<d/>
</f></versionInfo>
		<handle><x path="lime.system.CFFIPointer"/></handle>
		<headerBytes><c path="haxe.io.Bytes"/></headerBytes>
		<writeBytes><c path="haxe.io.Bytes"/></writeBytes>
		<cleanup public="1" set="method" line="43"><f a=""><x path="Void"/></f></cleanup>
		<clone public="1" set="method" line="52"><f a=""><c path="lime.net.curl.CURL"/></f></clone>
		<escape public="1" set="method" line="63"><f a="url:length">
	<c path="String"/>
	<x path="Int"/>
	<c path="String"/>
</f></escape>
		<getInfo public="1" set="method" line="85"><f a="info">
	<x path="lime.net.curl.CURLInfo"/>
	<d/>
</f></getInfo>
		<pause public="1" set="method" line="116"><f a="bitMask">
	<x path="Int"/>
	<x path="lime.net.curl.CURLCode"/>
</f></pause>
		<perform public="1" set="method" line="127"><f a=""><x path="lime.net.curl.CURLCode"/></f></perform>
		<reset public="1" set="method" line="149"><f a=""><x path="Void"/></f></reset>
		<setOption public="1" set="method" line="169"><f a="option:parameter">
	<x path="lime.net.curl.CURLOption"/>
	<d/>
	<x path="lime.net.curl.CURLCode"/>
</f></setOption>
		<unescape public="1" set="method" line="205"><f a="url:inLength:outLength">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></unescape>
		<new public="1" set="method" line="26">
			<f a="?handle" v="null">
				<x path="lime.system.CFFIPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ handle : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.net.curl.CURLCode" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLCode.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.curl._CURLCode.CURLCode_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLCode.hx" private="1" module="lime.net.curl.CURLCode" extern="1">
	<OK public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OK>
	<UNSUPPORTED_PROTOCOL public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNSUPPORTED_PROTOCOL>
	<FAILED_INIT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FAILED_INIT>
	<URL_MALFORMAT public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</URL_MALFORMAT>
	<NOT_BUILT_IN public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOT_BUILT_IN>
	<COULDNT_RESOLVE_PROXY public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COULDNT_RESOLVE_PROXY>
	<COULDNT_RESOLVE_HOST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COULDNT_RESOLVE_HOST>
	<COULDNT_CONNECT public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COULDNT_CONNECT>
	<WEIRD_SERVER_REPLY public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEIRD_SERVER_REPLY>
	<REMOTE_ACCESS_DENIED public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REMOTE_ACCESS_DENIED>
	<FTP_ACCEPT_FAILED public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ACCEPT_FAILED>
	<FTP_WEIRD_PASS_REPLY public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_WEIRD_PASS_REPLY>
	<FTP_ACCEPT_TIMEOUT public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ACCEPT_TIMEOUT>
	<FTP_WEIRD_PASV_REPLY public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_WEIRD_PASV_REPLY>
	<FTP_WEIRD_227_FORMAT public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_WEIRD_227_FORMAT>
	<FTP_CANT_GET_HOST public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_CANT_GET_HOST>
	<HTTP2 public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP2>
	<FTP_COULDNT_SET_TYPE public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_COULDNT_SET_TYPE>
	<PARTIAL_FILE public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PARTIAL_FILE>
	<FTP_COULDNT_RETR_FILE public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_COULDNT_RETR_FILE>
	<QUOTE_ERROR public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUOTE_ERROR>
	<HTTP_RETURNED_ERROR public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_RETURNED_ERROR>
	<WRITE_ERROR public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITE_ERROR>
	<UPLOAD_FAILED public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UPLOAD_FAILED>
	<READ_ERROR public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</READ_ERROR>
	<OUT_OF_MEMORY public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT_OF_MEMORY>
	<OPERATION_TIMEDOUT public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPERATION_TIMEDOUT>
	<FTP_PORT_FAILED public="1" get="inline" set="null" expr="cast 30" line="36" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_PORT_FAILED>
	<FTP_COULDNT_USE_REST public="1" get="inline" set="null" expr="cast 31" line="37" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_COULDNT_USE_REST>
	<RANGE_ERROR public="1" get="inline" set="null" expr="cast 33" line="39" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RANGE_ERROR>
	<HTTP_POST_ERROR public="1" get="inline" set="null" expr="cast 34" line="40" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_POST_ERROR>
	<SSL_CONNECT_ERROR public="1" get="inline" set="null" expr="cast 35" line="41" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CONNECT_ERROR>
	<BAD_DOWNLOAD_RESUME public="1" get="inline" set="null" expr="cast 36" line="42" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BAD_DOWNLOAD_RESUME>
	<FILE_COULDNT_READ_FILE public="1" get="inline" set="null" expr="cast 37" line="43" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILE_COULDNT_READ_FILE>
	<LDAP_CANNOT_BIND public="1" get="inline" set="null" expr="cast 38" line="44" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LDAP_CANNOT_BIND>
	<LDAP_SEARCH_FAILED public="1" get="inline" set="null" expr="cast 39" line="45" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 39</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LDAP_SEARCH_FAILED>
	<ABORTED_BY_CALLBACK public="1" get="inline" set="null" expr="cast 42" line="48" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 42</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ABORTED_BY_CALLBACK>
	<BAD_FUNCTION_ARGUMENT public="1" get="inline" set="null" expr="cast 43" line="49" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 43</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BAD_FUNCTION_ARGUMENT>
	<INTERFACE_FAILED public="1" get="inline" set="null" expr="cast 45" line="51" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 45</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INTERFACE_FAILED>
	<TOO_MANY_REDIRECTS public="1" get="inline" set="null" expr="cast 47" line="53" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 47</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOO_MANY_REDIRECTS>
	<UNKNOWN_OPTION public="1" get="inline" set="null" expr="cast 48" line="54" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 48</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN_OPTION>
	<TELNET_OPTION_SYNTAX public="1" get="inline" set="null" expr="cast 49" line="55" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 49</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TELNET_OPTION_SYNTAX>
	<PEER_FAILED_VERIFICATION public="1" get="inline" set="null" expr="cast 51" line="57" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 51</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PEER_FAILED_VERIFICATION>
	<GOT_NOTHING public="1" get="inline" set="null" expr="cast 52" line="58" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 52</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GOT_NOTHING>
	<SSL_ENGINE_NOTFOUND public="1" get="inline" set="null" expr="cast 53" line="59" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 53</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENGINE_NOTFOUND>
	<SSL_ENGINE_SETFAILED public="1" get="inline" set="null" expr="cast 54" line="60" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 54</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENGINE_SETFAILED>
	<SEND_ERROR public="1" get="inline" set="null" expr="cast 55" line="61" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 55</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEND_ERROR>
	<RECV_ERROR public="1" get="inline" set="null" expr="cast 56" line="62" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 56</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RECV_ERROR>
	<SSL_CERTPROBLEM public="1" get="inline" set="null" expr="cast 58" line="64" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 58</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CERTPROBLEM>
	<SSL_CIPHER public="1" get="inline" set="null" expr="cast 59" line="65" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 59</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CIPHER>
	<SSL_CACERT public="1" get="inline" set="null" expr="cast 60" line="66" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 60</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CACERT>
	<BAD_CONTENT_ENCODING public="1" get="inline" set="null" expr="cast 61" line="67" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 61</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BAD_CONTENT_ENCODING>
	<LDAP_INVALID_URL public="1" get="inline" set="null" expr="cast 62" line="68" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 62</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LDAP_INVALID_URL>
	<FILESIZE_EXCEEDED public="1" get="inline" set="null" expr="cast 63" line="69" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 63</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILESIZE_EXCEEDED>
	<USE_SSL_FAILED public="1" get="inline" set="null" expr="cast 64" line="70" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 64</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USE_SSL_FAILED>
	<SEND_FAIL_REWIND public="1" get="inline" set="null" expr="cast 65" line="71" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 65</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEND_FAIL_REWIND>
	<SSL_ENGINE_INITFAILED public="1" get="inline" set="null" expr="cast 66" line="72" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 66</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENGINE_INITFAILED>
	<LOGIN_DENIED public="1" get="inline" set="null" expr="cast 67" line="73" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 67</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOGIN_DENIED>
	<TFTP_NOTFOUND public="1" get="inline" set="null" expr="cast 68" line="74" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 68</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_NOTFOUND>
	<TFTP_PERM public="1" get="inline" set="null" expr="cast 69" line="75" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 69</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_PERM>
	<REMOTE_DISK_FULL public="1" get="inline" set="null" expr="cast 70" line="76" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 70</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REMOTE_DISK_FULL>
	<TFTP_ILLEGAL public="1" get="inline" set="null" expr="cast 71" line="77" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 71</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_ILLEGAL>
	<TFTP_UNKNOWNID public="1" get="inline" set="null" expr="cast 72" line="78" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 72</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_UNKNOWNID>
	<REMOTE_FILE_EXISTS public="1" get="inline" set="null" expr="cast 73" line="79" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 73</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REMOTE_FILE_EXISTS>
	<TFTP_NOSUCHUSER public="1" get="inline" set="null" expr="cast 74" line="80" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 74</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_NOSUCHUSER>
	<CONV_FAILED public="1" get="inline" set="null" expr="cast 75" line="81" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 75</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_FAILED>
	<CONV_REQD public="1" get="inline" set="null" expr="cast 76" line="82" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 76</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_REQD>
	<SSL_CACERT_BADFILE public="1" get="inline" set="null" expr="cast 77" line="83" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 77</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CACERT_BADFILE>
	<REMOTE_FILE_NOT_FOUND public="1" get="inline" set="null" expr="cast 78" line="84" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 78</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REMOTE_FILE_NOT_FOUND>
	<SSH public="1" get="inline" set="null" expr="cast 79" line="85" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 79</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH>
	<SSL_SHUTDOWN_FAILED public="1" get="inline" set="null" expr="cast 80" line="86" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 80</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_SHUTDOWN_FAILED>
	<AGAIN public="1" get="inline" set="null" expr="cast 81" line="87" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 81</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AGAIN>
	<SSL_CRL_BADFILE public="1" get="inline" set="null" expr="cast 82" line="88" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 82</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CRL_BADFILE>
	<SSL_ISSUER_ERROR public="1" get="inline" set="null" expr="cast 83" line="89" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 83</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ISSUER_ERROR>
	<FTP_PRET_FAILED public="1" get="inline" set="null" expr="cast 84" line="90" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 84</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_PRET_FAILED>
	<RTSP_CSEQ_ERROR public="1" get="inline" set="null" expr="cast 85" line="91" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 85</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_CSEQ_ERROR>
	<RTSP_SESSION_ERROR public="1" get="inline" set="null" expr="cast 86" line="92" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 86</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SESSION_ERROR>
	<FTP_BAD_FILE_LIST public="1" get="inline" set="null" expr="cast 87" line="93" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 87</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_BAD_FILE_LIST>
	<CHUNK_FAILED public="1" get="inline" set="null" expr="cast 88" line="94" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 88</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHUNK_FAILED>
	<NO_CONNECTION_AVAILABLE public="1" get="inline" set="null" expr="cast 89" line="95" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 89</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_CONNECTION_AVAILABLE>
	<SSL_PINNEDPUBKEYNOTMATCH public="1" get="inline" set="null" expr="cast 90" line="96" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 90</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_PINNEDPUBKEYNOTMATCH>
	<SSL_INVALIDCERTSTATUS public="1" get="inline" set="null" expr="cast 91" line="97" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 91</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_INVALIDCERTSTATUS>
	<HTTP2_STREAM public="1" get="inline" set="null" expr="cast 92" line="98" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":value"><e>cast 92</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP2_STREAM>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net.curl._CURLCode.CURLCode_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLCode.hx" private="1" module="lime.net.curl.CURLCode" extern="1">
		<OK public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OK>
		<UNSUPPORTED_PROTOCOL public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNSUPPORTED_PROTOCOL>
		<FAILED_INIT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FAILED_INIT>
		<URL_MALFORMAT public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</URL_MALFORMAT>
		<NOT_BUILT_IN public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOT_BUILT_IN>
		<COULDNT_RESOLVE_PROXY public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COULDNT_RESOLVE_PROXY>
		<COULDNT_RESOLVE_HOST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COULDNT_RESOLVE_HOST>
		<COULDNT_CONNECT public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COULDNT_CONNECT>
		<WEIRD_SERVER_REPLY public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEIRD_SERVER_REPLY>
		<REMOTE_ACCESS_DENIED public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REMOTE_ACCESS_DENIED>
		<FTP_ACCEPT_FAILED public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ACCEPT_FAILED>
		<FTP_WEIRD_PASS_REPLY public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_WEIRD_PASS_REPLY>
		<FTP_ACCEPT_TIMEOUT public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ACCEPT_TIMEOUT>
		<FTP_WEIRD_PASV_REPLY public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_WEIRD_PASV_REPLY>
		<FTP_WEIRD_227_FORMAT public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_WEIRD_227_FORMAT>
		<FTP_CANT_GET_HOST public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_CANT_GET_HOST>
		<HTTP2 public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP2>
		<FTP_COULDNT_SET_TYPE public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_COULDNT_SET_TYPE>
		<PARTIAL_FILE public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PARTIAL_FILE>
		<FTP_COULDNT_RETR_FILE public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_COULDNT_RETR_FILE>
		<QUOTE_ERROR public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUOTE_ERROR>
		<HTTP_RETURNED_ERROR public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_RETURNED_ERROR>
		<WRITE_ERROR public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITE_ERROR>
		<UPLOAD_FAILED public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UPLOAD_FAILED>
		<READ_ERROR public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</READ_ERROR>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT_OF_MEMORY>
		<OPERATION_TIMEDOUT public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPERATION_TIMEDOUT>
		<FTP_PORT_FAILED public="1" get="inline" set="null" expr="cast 30" line="36" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_PORT_FAILED>
		<FTP_COULDNT_USE_REST public="1" get="inline" set="null" expr="cast 31" line="37" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_COULDNT_USE_REST>
		<RANGE_ERROR public="1" get="inline" set="null" expr="cast 33" line="39" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RANGE_ERROR>
		<HTTP_POST_ERROR public="1" get="inline" set="null" expr="cast 34" line="40" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_POST_ERROR>
		<SSL_CONNECT_ERROR public="1" get="inline" set="null" expr="cast 35" line="41" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CONNECT_ERROR>
		<BAD_DOWNLOAD_RESUME public="1" get="inline" set="null" expr="cast 36" line="42" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BAD_DOWNLOAD_RESUME>
		<FILE_COULDNT_READ_FILE public="1" get="inline" set="null" expr="cast 37" line="43" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILE_COULDNT_READ_FILE>
		<LDAP_CANNOT_BIND public="1" get="inline" set="null" expr="cast 38" line="44" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LDAP_CANNOT_BIND>
		<LDAP_SEARCH_FAILED public="1" get="inline" set="null" expr="cast 39" line="45" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 39</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LDAP_SEARCH_FAILED>
		<ABORTED_BY_CALLBACK public="1" get="inline" set="null" expr="cast 42" line="48" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 42</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ABORTED_BY_CALLBACK>
		<BAD_FUNCTION_ARGUMENT public="1" get="inline" set="null" expr="cast 43" line="49" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 43</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BAD_FUNCTION_ARGUMENT>
		<INTERFACE_FAILED public="1" get="inline" set="null" expr="cast 45" line="51" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 45</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INTERFACE_FAILED>
		<TOO_MANY_REDIRECTS public="1" get="inline" set="null" expr="cast 47" line="53" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 47</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOO_MANY_REDIRECTS>
		<UNKNOWN_OPTION public="1" get="inline" set="null" expr="cast 48" line="54" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 48</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN_OPTION>
		<TELNET_OPTION_SYNTAX public="1" get="inline" set="null" expr="cast 49" line="55" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 49</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TELNET_OPTION_SYNTAX>
		<PEER_FAILED_VERIFICATION public="1" get="inline" set="null" expr="cast 51" line="57" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 51</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PEER_FAILED_VERIFICATION>
		<GOT_NOTHING public="1" get="inline" set="null" expr="cast 52" line="58" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 52</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GOT_NOTHING>
		<SSL_ENGINE_NOTFOUND public="1" get="inline" set="null" expr="cast 53" line="59" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 53</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENGINE_NOTFOUND>
		<SSL_ENGINE_SETFAILED public="1" get="inline" set="null" expr="cast 54" line="60" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 54</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENGINE_SETFAILED>
		<SEND_ERROR public="1" get="inline" set="null" expr="cast 55" line="61" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 55</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEND_ERROR>
		<RECV_ERROR public="1" get="inline" set="null" expr="cast 56" line="62" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 56</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RECV_ERROR>
		<SSL_CERTPROBLEM public="1" get="inline" set="null" expr="cast 58" line="64" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 58</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CERTPROBLEM>
		<SSL_CIPHER public="1" get="inline" set="null" expr="cast 59" line="65" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 59</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CIPHER>
		<SSL_CACERT public="1" get="inline" set="null" expr="cast 60" line="66" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 60</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CACERT>
		<BAD_CONTENT_ENCODING public="1" get="inline" set="null" expr="cast 61" line="67" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 61</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BAD_CONTENT_ENCODING>
		<LDAP_INVALID_URL public="1" get="inline" set="null" expr="cast 62" line="68" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 62</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LDAP_INVALID_URL>
		<FILESIZE_EXCEEDED public="1" get="inline" set="null" expr="cast 63" line="69" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 63</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILESIZE_EXCEEDED>
		<USE_SSL_FAILED public="1" get="inline" set="null" expr="cast 64" line="70" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 64</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USE_SSL_FAILED>
		<SEND_FAIL_REWIND public="1" get="inline" set="null" expr="cast 65" line="71" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 65</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEND_FAIL_REWIND>
		<SSL_ENGINE_INITFAILED public="1" get="inline" set="null" expr="cast 66" line="72" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 66</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENGINE_INITFAILED>
		<LOGIN_DENIED public="1" get="inline" set="null" expr="cast 67" line="73" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 67</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOGIN_DENIED>
		<TFTP_NOTFOUND public="1" get="inline" set="null" expr="cast 68" line="74" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 68</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_NOTFOUND>
		<TFTP_PERM public="1" get="inline" set="null" expr="cast 69" line="75" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 69</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_PERM>
		<REMOTE_DISK_FULL public="1" get="inline" set="null" expr="cast 70" line="76" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 70</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REMOTE_DISK_FULL>
		<TFTP_ILLEGAL public="1" get="inline" set="null" expr="cast 71" line="77" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 71</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_ILLEGAL>
		<TFTP_UNKNOWNID public="1" get="inline" set="null" expr="cast 72" line="78" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 72</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_UNKNOWNID>
		<REMOTE_FILE_EXISTS public="1" get="inline" set="null" expr="cast 73" line="79" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 73</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REMOTE_FILE_EXISTS>
		<TFTP_NOSUCHUSER public="1" get="inline" set="null" expr="cast 74" line="80" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 74</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_NOSUCHUSER>
		<CONV_FAILED public="1" get="inline" set="null" expr="cast 75" line="81" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 75</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_FAILED>
		<CONV_REQD public="1" get="inline" set="null" expr="cast 76" line="82" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 76</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_REQD>
		<SSL_CACERT_BADFILE public="1" get="inline" set="null" expr="cast 77" line="83" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 77</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CACERT_BADFILE>
		<REMOTE_FILE_NOT_FOUND public="1" get="inline" set="null" expr="cast 78" line="84" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 78</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REMOTE_FILE_NOT_FOUND>
		<SSH public="1" get="inline" set="null" expr="cast 79" line="85" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 79</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH>
		<SSL_SHUTDOWN_FAILED public="1" get="inline" set="null" expr="cast 80" line="86" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 80</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_SHUTDOWN_FAILED>
		<AGAIN public="1" get="inline" set="null" expr="cast 81" line="87" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 81</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AGAIN>
		<SSL_CRL_BADFILE public="1" get="inline" set="null" expr="cast 82" line="88" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 82</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CRL_BADFILE>
		<SSL_ISSUER_ERROR public="1" get="inline" set="null" expr="cast 83" line="89" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 83</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ISSUER_ERROR>
		<FTP_PRET_FAILED public="1" get="inline" set="null" expr="cast 84" line="90" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 84</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_PRET_FAILED>
		<RTSP_CSEQ_ERROR public="1" get="inline" set="null" expr="cast 85" line="91" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 85</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_CSEQ_ERROR>
		<RTSP_SESSION_ERROR public="1" get="inline" set="null" expr="cast 86" line="92" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 86</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SESSION_ERROR>
		<FTP_BAD_FILE_LIST public="1" get="inline" set="null" expr="cast 87" line="93" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 87</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_BAD_FILE_LIST>
		<CHUNK_FAILED public="1" get="inline" set="null" expr="cast 88" line="94" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 88</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHUNK_FAILED>
		<NO_CONNECTION_AVAILABLE public="1" get="inline" set="null" expr="cast 89" line="95" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 89</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_CONNECTION_AVAILABLE>
		<SSL_PINNEDPUBKEYNOTMATCH public="1" get="inline" set="null" expr="cast 90" line="96" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 90</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_PINNEDPUBKEYNOTMATCH>
		<SSL_INVALIDCERTSTATUS public="1" get="inline" set="null" expr="cast 91" line="97" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 91</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_INVALIDCERTSTATUS>
		<HTTP2_STREAM public="1" get="inline" set="null" expr="cast 92" line="98" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":value"><e>cast 92</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP2_STREAM>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.net.curl.CURLEasy" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLEasy.hx">
		<cleanup public="1" set="method" line="19" static="1"><f a="handle">
	<c path="lime.net.curl.CURL"/>
	<x path="Void"/>
</f></cleanup>
		<duphandle public="1" set="method" line="26" static="1"><f a="handle">
	<c path="lime.net.curl.CURL"/>
	<c path="lime.net.curl.CURL"/>
</f></duphandle>
		<escape public="1" set="method" line="33" static="1"><f a="handle:url:length">
	<c path="lime.net.curl.CURL"/>
	<c path="String"/>
	<x path="Int"/>
	<c path="String"/>
</f></escape>
		<getinfo public="1" set="method" line="40" static="1"><f a="handle:info">
	<c path="lime.net.curl.CURL"/>
	<x path="lime.net.curl.CURLInfo"/>
	<d/>
</f></getinfo>
		<init public="1" set="method" line="47" static="1"><f a=""><c path="lime.net.curl.CURL"/></f></init>
		<pause public="1" set="method" line="54" static="1"><f a="handle:bitMask">
	<c path="lime.net.curl.CURL"/>
	<x path="Int"/>
	<x path="lime.net.curl.CURLCode"/>
</f></pause>
		<perform public="1" set="method" line="61" static="1"><f a="handle">
	<c path="lime.net.curl.CURL"/>
	<x path="lime.net.curl.CURLCode"/>
</f></perform>
		<reset public="1" set="method" line="79" static="1"><f a="handle">
	<c path="lime.net.curl.CURL"/>
	<x path="Void"/>
</f></reset>
		<setopt public="1" set="method" line="97" static="1"><f a="handle:option:parameter">
	<c path="lime.net.curl.CURL"/>
	<x path="lime.net.curl.CURLOption"/>
	<d/>
	<x path="lime.net.curl.CURLCode"/>
</f></setopt>
		<strerror public="1" set="method" line="104" static="1"><f a="code">
	<x path="lime.net.curl.CURLCode"/>
	<c path="String"/>
</f></strerror>
		<unescape public="1" set="method" line="111" static="1"><f a="handle:url:inLength:outLength">
	<c path="lime.net.curl.CURL"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></unescape>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":deprecated"/>
		</meta>
	</class>
	<abstract path="lime.net.curl.CURLInfo" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLInfo.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.curl._CURLInfo.CURLInfo_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLInfo.hx" private="1" module="lime.net.curl.CURLInfo" extern="1">
	<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<EFFECTIVE_URL public="1" get="inline" set="null" expr="cast 0x100000 + 1" line="7" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x100000 + 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EFFECTIVE_URL>
	<RESPONSE_CODE public="1" get="inline" set="null" expr="cast 0x200000 + 2" line="8" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESPONSE_CODE>
	<TOTAL_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 3" line="9" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOTAL_TIME>
	<NAMELOOKUP_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 4" line="10" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NAMELOOKUP_TIME>
	<CONNECT_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 5" line="11" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECT_TIME>
	<PRETRANSFER_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 6" line="12" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRETRANSFER_TIME>
	<SIZE_UPLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 7" line="13" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SIZE_UPLOAD>
	<SIZE_UPLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 7" line="14" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x600000 + 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SIZE_UPLOAD_T>
	<SIZE_DOWNLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 8" line="15" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SIZE_DOWNLOAD>
	<SIZE_DOWNLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 8" line="16" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x600000 + 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SIZE_DOWNLOAD_T>
	<SPEED_DOWNLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 9" line="17" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPEED_DOWNLOAD>
	<SPEED_DOWNLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 9" line="18" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x600000 + 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPEED_DOWNLOAD_T>
	<SPEED_UPLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 10" line="19" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPEED_UPLOAD>
	<SPEED_UPLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 10" line="20" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x600000 + 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPEED_UPLOAD_T>
	<HEADER_SIZE public="1" get="inline" set="null" expr="cast 0x200000 + 11" line="21" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEADER_SIZE>
	<REQUEST_SIZE public="1" get="inline" set="null" expr="cast 0x200000 + 12" line="22" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REQUEST_SIZE>
	<SSL_VERIFYRESULT public="1" get="inline" set="null" expr="cast 0x200000 + 13" line="23" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_VERIFYRESULT>
	<FILETIME public="1" get="inline" set="null" expr="cast 0x200000 + 14" line="24" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILETIME>
	<CONTENT_LENGTH_DOWNLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 15" line="25" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONTENT_LENGTH_DOWNLOAD>
	<CONTENT_LENGTH_DOWNLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 15" line="26" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x600000 + 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONTENT_LENGTH_DOWNLOAD_T>
	<CONTENT_LENGTH_UPLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 16" line="27" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONTENT_LENGTH_UPLOAD>
	<CONTENT_LENGTH_UPLOAD_T public="1" get="inline" set="null" expr="cast 0x300000 + 16" line="28" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONTENT_LENGTH_UPLOAD_T>
	<STARTTRANSFER_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 17" line="29" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STARTTRANSFER_TIME>
	<CONTENT_TYPE public="1" get="inline" set="null" expr="cast 0x100000 + 18" line="30" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x100000 + 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONTENT_TYPE>
	<REDIRECT_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 19" line="31" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REDIRECT_TIME>
	<REDIRECT_COUNT public="1" get="inline" set="null" expr="cast 0x200000 + 20" line="32" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REDIRECT_COUNT>
	<PRIVATE public="1" get="inline" set="null" expr="cast 0x100000 + 21" line="33" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x100000 + 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIVATE>
	<HTTP_CONNECTCODE public="1" get="inline" set="null" expr="cast 0x200000 + 22" line="34" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_CONNECTCODE>
	<HTTPAUTH_AVAIL public="1" get="inline" set="null" expr="cast 0x200000 + 23" line="35" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPAUTH_AVAIL>
	<PROXYAUTH_AVAIL public="1" get="inline" set="null" expr="cast 0x200000 + 24" line="36" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYAUTH_AVAIL>
	<OS_ERRNO public="1" get="inline" set="null" expr="cast 0x200000 + 25" line="37" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OS_ERRNO>
	<NUM_CONNECTS public="1" get="inline" set="null" expr="cast 0x200000 + 26" line="38" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_CONNECTS>
	<SSL_ENGINES public="1" get="inline" set="null" expr="cast 0x400000 + 27" line="39" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x400000 + 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENGINES>
	<COOKIELIST public="1" get="inline" set="null" expr="cast 0x400000 + 28" line="40" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x400000 + 28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIELIST>
	<LASTSOCKET public="1" get="inline" set="null" expr="cast 0x200000 + 29" line="41" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LASTSOCKET>
	<FTP_ENTRY_PATH public="1" get="inline" set="null" expr="cast 0x100000 + 30" line="42" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x100000 + 30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ENTRY_PATH>
	<REDIRECT_URL public="1" get="inline" set="null" expr="cast 0x100000 + 31" line="43" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x100000 + 31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REDIRECT_URL>
	<PRIMARY_IP public="1" get="inline" set="null" expr="cast 0x100000 + 32" line="44" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x100000 + 32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIMARY_IP>
	<APPCONNECT_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 33" line="45" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x300000 + 33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPCONNECT_TIME>
	<CERTINFO public="1" get="inline" set="null" expr="cast 0x400000 + 34" line="46" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x400000 + 34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CERTINFO>
	<CONDITION_UNMET public="1" get="inline" set="null" expr="cast 0x200000 + 35" line="47" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONDITION_UNMET>
	<RTSP_SESSION_ID public="1" get="inline" set="null" expr="cast 0x100000 + 36" line="48" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x100000 + 36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SESSION_ID>
	<RTSP_CLIENT_CSEQ public="1" get="inline" set="null" expr="cast 0x200000 + 37" line="49" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_CLIENT_CSEQ>
	<RTSP_SERVER_CSEQ public="1" get="inline" set="null" expr="cast 0x200000 + 38" line="50" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SERVER_CSEQ>
	<RTSP_CSEQ_RECV public="1" get="inline" set="null" expr="cast 0x200000 + 39" line="51" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 39</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_CSEQ_RECV>
	<PRIMARY_PORT public="1" get="inline" set="null" expr="cast 0x200000 + 40" line="52" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 40</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIMARY_PORT>
	<LOCAL_IP public="1" get="inline" set="null" expr="cast 0x100000 + 41" line="53" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x100000 + 41</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOCAL_IP>
	<LOCAL_PORT public="1" get="inline" set="null" expr="cast 0x200000 + 42" line="54" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 42</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOCAL_PORT>
	<TLS_SESSION public="1" get="inline" set="null" expr="cast 0x400000 + 43" line="55" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x400000 + 43</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TLS_SESSION>
	<ACTIVESOCKET public="1" get="inline" set="null" expr="cast 0x500000 + 44" line="56" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x500000 + 44</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ACTIVESOCKET>
	<TLS_SSL_PTR public="1" get="inline" set="null" expr="cast 0x400000 + 45" line="57" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x400000 + 45</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TLS_SSL_PTR>
	<HTTP_VERSION public="1" get="inline" set="null" expr="cast 0x200000 + 46" line="58" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 46</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_VERSION>
	<PROXY_SSL_VERIFYRESULT public="1" get="inline" set="null" expr="cast 0x200000 + 47" line="59" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 47</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSL_VERIFYRESULT>
	<PROTOCOL public="1" get="inline" set="null" expr="cast 0x200000 + 48" line="60" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x200000 + 48</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROTOCOL>
	<SCHEME public="1" get="inline" set="null" expr="cast 0x100000 + 49" line="61" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":value"><e>cast 0x100000 + 49</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCHEME>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net.curl._CURLInfo.CURLInfo_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLInfo.hx" private="1" module="lime.net.curl.CURLInfo" extern="1">
		<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<EFFECTIVE_URL public="1" get="inline" set="null" expr="cast 0x100000 + 1" line="7" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x100000 + 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EFFECTIVE_URL>
		<RESPONSE_CODE public="1" get="inline" set="null" expr="cast 0x200000 + 2" line="8" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESPONSE_CODE>
		<TOTAL_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 3" line="9" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOTAL_TIME>
		<NAMELOOKUP_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 4" line="10" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NAMELOOKUP_TIME>
		<CONNECT_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 5" line="11" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECT_TIME>
		<PRETRANSFER_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 6" line="12" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRETRANSFER_TIME>
		<SIZE_UPLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 7" line="13" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SIZE_UPLOAD>
		<SIZE_UPLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 7" line="14" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x600000 + 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SIZE_UPLOAD_T>
		<SIZE_DOWNLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 8" line="15" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SIZE_DOWNLOAD>
		<SIZE_DOWNLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 8" line="16" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x600000 + 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SIZE_DOWNLOAD_T>
		<SPEED_DOWNLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 9" line="17" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPEED_DOWNLOAD>
		<SPEED_DOWNLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 9" line="18" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x600000 + 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPEED_DOWNLOAD_T>
		<SPEED_UPLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 10" line="19" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPEED_UPLOAD>
		<SPEED_UPLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 10" line="20" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x600000 + 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPEED_UPLOAD_T>
		<HEADER_SIZE public="1" get="inline" set="null" expr="cast 0x200000 + 11" line="21" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEADER_SIZE>
		<REQUEST_SIZE public="1" get="inline" set="null" expr="cast 0x200000 + 12" line="22" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REQUEST_SIZE>
		<SSL_VERIFYRESULT public="1" get="inline" set="null" expr="cast 0x200000 + 13" line="23" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_VERIFYRESULT>
		<FILETIME public="1" get="inline" set="null" expr="cast 0x200000 + 14" line="24" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILETIME>
		<CONTENT_LENGTH_DOWNLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 15" line="25" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONTENT_LENGTH_DOWNLOAD>
		<CONTENT_LENGTH_DOWNLOAD_T public="1" get="inline" set="null" expr="cast 0x600000 + 15" line="26" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x600000 + 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONTENT_LENGTH_DOWNLOAD_T>
		<CONTENT_LENGTH_UPLOAD public="1" get="inline" set="null" expr="cast 0x300000 + 16" line="27" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONTENT_LENGTH_UPLOAD>
		<CONTENT_LENGTH_UPLOAD_T public="1" get="inline" set="null" expr="cast 0x300000 + 16" line="28" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONTENT_LENGTH_UPLOAD_T>
		<STARTTRANSFER_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 17" line="29" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STARTTRANSFER_TIME>
		<CONTENT_TYPE public="1" get="inline" set="null" expr="cast 0x100000 + 18" line="30" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x100000 + 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONTENT_TYPE>
		<REDIRECT_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 19" line="31" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REDIRECT_TIME>
		<REDIRECT_COUNT public="1" get="inline" set="null" expr="cast 0x200000 + 20" line="32" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REDIRECT_COUNT>
		<PRIVATE public="1" get="inline" set="null" expr="cast 0x100000 + 21" line="33" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x100000 + 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIVATE>
		<HTTP_CONNECTCODE public="1" get="inline" set="null" expr="cast 0x200000 + 22" line="34" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_CONNECTCODE>
		<HTTPAUTH_AVAIL public="1" get="inline" set="null" expr="cast 0x200000 + 23" line="35" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPAUTH_AVAIL>
		<PROXYAUTH_AVAIL public="1" get="inline" set="null" expr="cast 0x200000 + 24" line="36" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYAUTH_AVAIL>
		<OS_ERRNO public="1" get="inline" set="null" expr="cast 0x200000 + 25" line="37" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OS_ERRNO>
		<NUM_CONNECTS public="1" get="inline" set="null" expr="cast 0x200000 + 26" line="38" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_CONNECTS>
		<SSL_ENGINES public="1" get="inline" set="null" expr="cast 0x400000 + 27" line="39" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x400000 + 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENGINES>
		<COOKIELIST public="1" get="inline" set="null" expr="cast 0x400000 + 28" line="40" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x400000 + 28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIELIST>
		<LASTSOCKET public="1" get="inline" set="null" expr="cast 0x200000 + 29" line="41" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LASTSOCKET>
		<FTP_ENTRY_PATH public="1" get="inline" set="null" expr="cast 0x100000 + 30" line="42" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x100000 + 30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ENTRY_PATH>
		<REDIRECT_URL public="1" get="inline" set="null" expr="cast 0x100000 + 31" line="43" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x100000 + 31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REDIRECT_URL>
		<PRIMARY_IP public="1" get="inline" set="null" expr="cast 0x100000 + 32" line="44" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x100000 + 32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIMARY_IP>
		<APPCONNECT_TIME public="1" get="inline" set="null" expr="cast 0x300000 + 33" line="45" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x300000 + 33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPCONNECT_TIME>
		<CERTINFO public="1" get="inline" set="null" expr="cast 0x400000 + 34" line="46" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x400000 + 34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CERTINFO>
		<CONDITION_UNMET public="1" get="inline" set="null" expr="cast 0x200000 + 35" line="47" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONDITION_UNMET>
		<RTSP_SESSION_ID public="1" get="inline" set="null" expr="cast 0x100000 + 36" line="48" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x100000 + 36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SESSION_ID>
		<RTSP_CLIENT_CSEQ public="1" get="inline" set="null" expr="cast 0x200000 + 37" line="49" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_CLIENT_CSEQ>
		<RTSP_SERVER_CSEQ public="1" get="inline" set="null" expr="cast 0x200000 + 38" line="50" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SERVER_CSEQ>
		<RTSP_CSEQ_RECV public="1" get="inline" set="null" expr="cast 0x200000 + 39" line="51" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 39</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_CSEQ_RECV>
		<PRIMARY_PORT public="1" get="inline" set="null" expr="cast 0x200000 + 40" line="52" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 40</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIMARY_PORT>
		<LOCAL_IP public="1" get="inline" set="null" expr="cast 0x100000 + 41" line="53" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x100000 + 41</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOCAL_IP>
		<LOCAL_PORT public="1" get="inline" set="null" expr="cast 0x200000 + 42" line="54" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 42</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOCAL_PORT>
		<TLS_SESSION public="1" get="inline" set="null" expr="cast 0x400000 + 43" line="55" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x400000 + 43</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TLS_SESSION>
		<ACTIVESOCKET public="1" get="inline" set="null" expr="cast 0x500000 + 44" line="56" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x500000 + 44</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ACTIVESOCKET>
		<TLS_SSL_PTR public="1" get="inline" set="null" expr="cast 0x400000 + 45" line="57" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x400000 + 45</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TLS_SSL_PTR>
		<HTTP_VERSION public="1" get="inline" set="null" expr="cast 0x200000 + 46" line="58" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 46</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_VERSION>
		<PROXY_SSL_VERIFYRESULT public="1" get="inline" set="null" expr="cast 0x200000 + 47" line="59" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 47</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSL_VERIFYRESULT>
		<PROTOCOL public="1" get="inline" set="null" expr="cast 0x200000 + 48" line="60" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x200000 + 48</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROTOCOL>
		<SCHEME public="1" get="inline" set="null" expr="cast 0x100000 + 49" line="61" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":value"><e>cast 0x100000 + 49</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCHEME>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.net.curl.CURLOption" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLOption.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.curl._CURLOption.CURLOption_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLOption.hx" private="1" module="lime.net.curl.CURLOption" extern="1">
	<URL public="1" get="inline" set="null" expr="cast 10002" line="8" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10002</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</URL>
	<PORT public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PORT>
	<PROXY public="1" get="inline" set="null" expr="cast 10004" line="10" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10004</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY>
	<USERPWD public="1" get="inline" set="null" expr="cast 10005" line="11" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10005</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USERPWD>
	<PROXYUSERPWD public="1" get="inline" set="null" expr="cast 10006" line="12" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10006</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYUSERPWD>
	<RANGE public="1" get="inline" set="null" expr="cast 10007" line="13" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10007</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RANGE>
	<ERRORBUFFER public="1" get="inline" set="null" expr="cast 10010" line="16" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10010</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ERRORBUFFER>
	<WRITEFUNCTION public="1" get="inline" set="null" expr="cast 20011" line="17" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20011</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITEFUNCTION>
	<READFUNCTION public="1" get="inline" set="null" expr="cast 20012" line="18" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20012</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</READFUNCTION>
	<TIMEOUT public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIMEOUT>
	<INFILESIZE public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INFILESIZE>
	<POSTFIELDS public="1" get="inline" set="null" expr="cast 10015" line="21" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10015</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTFIELDS>
	<REFERER public="1" get="inline" set="null" expr="cast 10016" line="22" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10016</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REFERER>
	<FTPPORT public="1" get="inline" set="null" expr="cast 10017" line="23" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10017</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTPPORT>
	<USERAGENT public="1" get="inline" set="null" expr="cast 10018" line="24" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10018</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USERAGENT>
	<LOW_SPEED_LIMIT public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOW_SPEED_LIMIT>
	<LOW_SPEED_TIME public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOW_SPEED_TIME>
	<RESUME_FROM public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESUME_FROM>
	<COOKIE public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIE>
	<HTTPHEADER public="1" get="inline" set="null" expr="cast 10023" line="29" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10023</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPHEADER>
	<RTSPHEADER public="1" get="inline" set="null" expr="cast 10023" line="30" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10023</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSPHEADER>
	<HTTPPOST public="1" get="inline" set="null" expr="cast 10024" line="31" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10024</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPPOST>
	<SSLCERT public="1" get="inline" set="null" expr="cast 10025" line="32" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10025</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLCERT>
	<KEYPASSWD public="1" get="inline" set="null" expr="cast 10026" line="33" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10026</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KEYPASSWD>
	<CRLF public="1" get="inline" set="null" expr="cast 27" line="34" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRLF>
	<QUOTE public="1" get="inline" set="null" expr="cast 10028" line="35" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10028</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUOTE>
	<WRITEHEADER public="1" get="inline" set="null" expr="cast 10029" line="36" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10029</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITEHEADER>
	<HEADERDATA public="1" get="inline" set="null" expr="cast 10029" line="37" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10029</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEADERDATA>
	<COOKIEFILE public="1" get="inline" set="null" expr="cast 10031" line="38" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10031</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIEFILE>
	<SSLVERSION public="1" get="inline" set="null" expr="cast 32" line="39" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLVERSION>
	<TIMECONDITION public="1" get="inline" set="null" expr="cast 33" line="40" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIMECONDITION>
	<TIMEVALUE public="1" get="inline" set="null" expr="cast 34" line="41" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIMEVALUE>
	<CUSTOMREQUEST public="1" get="inline" set="null" expr="cast 10036" line="42" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10036</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUSTOMREQUEST>
	<STDERR public="1" get="inline" set="null" expr="cast 10037" line="43" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10037</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STDERR>
	<POSTQUOTE public="1" get="inline" set="null" expr="cast 10039" line="44" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10039</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTQUOTE>
	<WRITEINFO public="1" get="inline" set="null" expr="cast 10040" line="45" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10040</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITEINFO>
	<VERBOSE public="1" get="inline" set="null" expr="cast 41" line="46" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 41</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERBOSE>
	<HEADER public="1" get="inline" set="null" expr="cast 42" line="47" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 42</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEADER>
	<NOPROGRESS public="1" get="inline" set="null" expr="cast 43" line="48" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 43</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOPROGRESS>
	<NOBODY public="1" get="inline" set="null" expr="cast 44" line="49" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 44</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOBODY>
	<FAILONERROR public="1" get="inline" set="null" expr="cast 45" line="50" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 45</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FAILONERROR>
	<UPLOAD public="1" get="inline" set="null" expr="cast 46" line="51" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 46</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UPLOAD>
	<POST public="1" get="inline" set="null" expr="cast 47" line="52" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 47</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POST>
	<DIRLISTONLY public="1" get="inline" set="null" expr="cast 48" line="53" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 48</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DIRLISTONLY>
	<APPEND public="1" get="inline" set="null" expr="cast 50" line="54" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 50</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPEND>
	<NETRC public="1" get="inline" set="null" expr="cast 51" line="55" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 51</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NETRC>
	<FOLLOWLOCATION public="1" get="inline" set="null" expr="cast 52" line="56" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 52</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FOLLOWLOCATION>
	<TRANSFERTEXT public="1" get="inline" set="null" expr="cast 53" line="57" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 53</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRANSFERTEXT>
	<PUT public="1" get="inline" set="null" expr="cast 54" line="58" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 54</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PUT>
	<PROGRESSFUNCTION public="1" get="inline" set="null" expr="cast 20056" line="59" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20056</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROGRESSFUNCTION>
	<PROGRESSDATA public="1" get="inline" set="null" expr="cast 10057" line="60" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10057</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROGRESSDATA>
	<XFERINFODATA public="1" get="inline" set="null" expr="cast 10057" line="61" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10057</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</XFERINFODATA>
	<AUTOREFERER public="1" get="inline" set="null" expr="cast 58" line="62" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 58</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUTOREFERER>
	<PROXYPORT public="1" get="inline" set="null" expr="cast 59" line="63" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 59</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYPORT>
	<POSTFIELDSIZE public="1" get="inline" set="null" expr="cast 60" line="64" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 60</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTFIELDSIZE>
	<HTTPPROXYTUNNEL public="1" get="inline" set="null" expr="cast 61" line="65" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 61</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPPROXYTUNNEL>
	<INTERFACE public="1" get="inline" set="null" expr="cast 10062" line="66" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10062</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INTERFACE>
	<KRBLEVEL public="1" get="inline" set="null" expr="cast 10063" line="67" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10063</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KRBLEVEL>
	<SSL_VERIFYPEER public="1" get="inline" set="null" expr="cast 64" line="68" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 64</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_VERIFYPEER>
	<CAINFO public="1" get="inline" set="null" expr="cast 10065" line="69" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10065</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAINFO>
	<MAXREDIRS public="1" get="inline" set="null" expr="cast 68" line="70" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 68</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAXREDIRS>
	<FILETIME public="1" get="inline" set="null" expr="cast 69" line="71" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 69</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILETIME>
	<TELNETOPTIONS public="1" get="inline" set="null" expr="cast 10070" line="72" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10070</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TELNETOPTIONS>
	<MAXCONNECTS public="1" get="inline" set="null" expr="cast 71" line="73" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 71</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAXCONNECTS>
	<CLOSEPOLICY public="1" get="inline" set="null" expr="cast 72" line="74" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 72</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLOSEPOLICY>
	<FRESH_CONNECT public="1" get="inline" set="null" expr="cast 74" line="75" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 74</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRESH_CONNECT>
	<FORBID_REUSE public="1" get="inline" set="null" expr="cast 75" line="76" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 75</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FORBID_REUSE>
	<RANDOM_FILE public="1" get="inline" set="null" expr="cast 10076" line="77" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10076</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RANDOM_FILE>
	<EGDSOCKET public="1" get="inline" set="null" expr="cast 10077" line="78" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10077</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EGDSOCKET>
	<CONNECTTIMEOUT public="1" get="inline" set="null" expr="cast 78" line="79" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 78</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECTTIMEOUT>
	<HEADERFUNCTION public="1" get="inline" set="null" expr="cast 20079" line="80" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20079</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEADERFUNCTION>
	<HTTPGET public="1" get="inline" set="null" expr="cast 80" line="81" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 80</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPGET>
	<SSL_VERIFYHOST public="1" get="inline" set="null" expr="cast 81" line="82" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 81</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_VERIFYHOST>
	<COOKIEJAR public="1" get="inline" set="null" expr="cast 10082" line="83" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10082</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIEJAR>
	<SSL_CIPHER_LIST public="1" get="inline" set="null" expr="cast 10083" line="84" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10083</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CIPHER_LIST>
	<HTTP_VERSION public="1" get="inline" set="null" expr="cast 84" line="85" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 84</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_VERSION>
	<FTP_USE_EPSV public="1" get="inline" set="null" expr="cast 85" line="86" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 85</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_USE_EPSV>
	<SSLCERTTYPE public="1" get="inline" set="null" expr="cast 10086" line="87" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10086</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLCERTTYPE>
	<SSLKEY public="1" get="inline" set="null" expr="cast 10087" line="88" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10087</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLKEY>
	<SSLKEYTYPE public="1" get="inline" set="null" expr="cast 10088" line="89" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10088</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLKEYTYPE>
	<SSLENGINE public="1" get="inline" set="null" expr="cast 10089" line="90" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10089</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLENGINE>
	<SSLENGINE_DEFAULT public="1" get="inline" set="null" expr="cast 90" line="91" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 90</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLENGINE_DEFAULT>
	<DNS_USE_GLOBAL_CACHE public="1" get="inline" set="null" expr="cast 91" line="92" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 91</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_USE_GLOBAL_CACHE>
	<DNS_CACHE_TIMEOUT public="1" get="inline" set="null" expr="cast 92" line="93" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 92</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_CACHE_TIMEOUT>
	<PREQUOTE public="1" get="inline" set="null" expr="cast 10093" line="94" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10093</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PREQUOTE>
	<DEBUGFUNCTION public="1" get="inline" set="null" expr="cast 20094" line="95" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20094</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEBUGFUNCTION>
	<DEBUGDATA public="1" get="inline" set="null" expr="cast 10095" line="96" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10095</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEBUGDATA>
	<COOKIESESSION public="1" get="inline" set="null" expr="cast 96" line="97" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 96</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIESESSION>
	<CAPATH public="1" get="inline" set="null" expr="cast 10097" line="98" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10097</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPATH>
	<BUFFERSIZE public="1" get="inline" set="null" expr="cast 98" line="99" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 98</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUFFERSIZE>
	<NOSIGNAL public="1" get="inline" set="null" expr="cast 99" line="100" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 99</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOSIGNAL>
	<SHARE public="1" get="inline" set="null" expr="cast 10100" line="101" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10100</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHARE>
	<PROXYTYPE public="1" get="inline" set="null" expr="cast 101" line="102" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 101</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYTYPE>
	<ACCEPT_ENCODING public="1" get="inline" set="null" expr="cast 10102" line="103" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10102</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ACCEPT_ENCODING>
	<PRIVATE public="1" get="inline" set="null" expr="cast 10103" line="104" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10103</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIVATE>
	<HTTP200ALIASES public="1" get="inline" set="null" expr="cast 10104" line="105" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10104</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP200ALIASES>
	<UNRESTRICTED_AUTH public="1" get="inline" set="null" expr="cast 105" line="106" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 105</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNRESTRICTED_AUTH>
	<FTP_USE_EPRT public="1" get="inline" set="null" expr="cast 106" line="107" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 106</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_USE_EPRT>
	<HTTPAUTH public="1" get="inline" set="null" expr="cast 107" line="108" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 107</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPAUTH>
	<SSL_CTX_FUNCTION public="1" get="inline" set="null" expr="cast 20108" line="109" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20108</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CTX_FUNCTION>
	<SSL_CTX_DATA public="1" get="inline" set="null" expr="cast 10109" line="110" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10109</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CTX_DATA>
	<FTP_CREATE_MISSING_DIRS public="1" get="inline" set="null" expr="cast 110" line="111" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 110</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_CREATE_MISSING_DIRS>
	<PROXYAUTH public="1" get="inline" set="null" expr="cast 111" line="112" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 111</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYAUTH>
	<FTP_RESPONSE_TIMEOUT public="1" get="inline" set="null" expr="cast 112" line="113" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 112</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_RESPONSE_TIMEOUT>
	<SERVER_RESPONSE_TIMEOUT public="1" get="inline" set="null" expr="cast 112" line="114" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 112</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SERVER_RESPONSE_TIMEOUT>
	<IPRESOLVE public="1" get="inline" set="null" expr="cast 113" line="115" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 113</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IPRESOLVE>
	<MAXFILESIZE public="1" get="inline" set="null" expr="cast 114" line="116" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 114</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAXFILESIZE>
	<INFILESIZE_LARGE public="1" get="inline" set="null" expr="cast 30115" line="117" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 30115</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INFILESIZE_LARGE>
	<RESUME_FROM_LARGE public="1" get="inline" set="null" expr="cast 30116" line="118" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 30116</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESUME_FROM_LARGE>
	<MAXFILESIZE_LARGE public="1" get="inline" set="null" expr="cast 30117" line="119" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 30117</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAXFILESIZE_LARGE>
	<NETRC_FILE public="1" get="inline" set="null" expr="cast 10118" line="120" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10118</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NETRC_FILE>
	<USE_SSL public="1" get="inline" set="null" expr="cast 119" line="121" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 119</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USE_SSL>
	<POSTFIELDSIZE_LARGE public="1" get="inline" set="null" expr="cast 30120" line="122" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 30120</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTFIELDSIZE_LARGE>
	<TCP_NODELAY public="1" get="inline" set="null" expr="cast 121" line="123" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 121</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TCP_NODELAY>
	<FTPSSLAUTH public="1" get="inline" set="null" expr="cast 129" line="124" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 129</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTPSSLAUTH>
	<IOCTLFUNCTION public="1" get="inline" set="null" expr="cast 20130" line="125" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20130</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IOCTLFUNCTION>
	<IOCTLDATA public="1" get="inline" set="null" expr="cast 10131" line="126" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10131</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IOCTLDATA>
	<FTP_ACCOUNT public="1" get="inline" set="null" expr="cast 10134" line="127" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10134</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ACCOUNT>
	<COOKIELIST public="1" get="inline" set="null" expr="cast 10135" line="128" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10135</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIELIST>
	<IGNORE_CONTENT_LENGTH public="1" get="inline" set="null" expr="cast 10136" line="129" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10136</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IGNORE_CONTENT_LENGTH>
	<FTP_SKIP_PASV_IP public="1" get="inline" set="null" expr="cast 137" line="130" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 137</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_SKIP_PASV_IP>
	<FTP_FILEMETHOD public="1" get="inline" set="null" expr="cast 138" line="131" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 138</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_FILEMETHOD>
	<LOCALPORT public="1" get="inline" set="null" expr="cast 139" line="132" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 139</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOCALPORT>
	<LOCALPORTRANGE public="1" get="inline" set="null" expr="cast 140" line="133" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 140</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOCALPORTRANGE>
	<CONNECT_ONLY public="1" get="inline" set="null" expr="cast 141" line="134" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 141</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECT_ONLY>
	<CONV_FROM_NETWORK_FUNCTION public="1" get="inline" set="null" expr="cast 20142" line="135" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20142</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_FROM_NETWORK_FUNCTION>
	<CONV_TO_NETWORK_FUNCTION public="1" get="inline" set="null" expr="cast 20143" line="136" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20143</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_TO_NETWORK_FUNCTION>
	<CONV_FROM_UTF8_FUNCTION public="1" get="inline" set="null" expr="cast 20144" line="137" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20144</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_FROM_UTF8_FUNCTION>
	<MAX_SEND_SPEED_LARGE public="1" get="inline" set="null" expr="cast 30145" line="138" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 30145</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_SEND_SPEED_LARGE>
	<MAX_RECV_SPEED_LARGE public="1" get="inline" set="null" expr="cast 30146" line="139" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 30146</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_RECV_SPEED_LARGE>
	<FTP_ALTERNATIVE_TO_USER public="1" get="inline" set="null" expr="cast 10147" line="140" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10147</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ALTERNATIVE_TO_USER>
	<SOCKOPTFUNCTION public="1" get="inline" set="null" expr="cast 20148" line="141" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20148</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOCKOPTFUNCTION>
	<SOCKOPTDATA public="1" get="inline" set="null" expr="cast 10149" line="142" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10149</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOCKOPTDATA>
	<SSL_SESSIONID_CACHE public="1" get="inline" set="null" expr="cast 150" line="143" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 150</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_SESSIONID_CACHE>
	<SSH_AUTH_TYPES public="1" get="inline" set="null" expr="cast 151" line="144" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 151</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_AUTH_TYPES>
	<SSH_PUBLIC_KEYFILE public="1" get="inline" set="null" expr="cast 10152" line="145" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10152</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_PUBLIC_KEYFILE>
	<SSH_PRIVATE_KEYFILE public="1" get="inline" set="null" expr="cast 10153" line="146" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10153</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_PRIVATE_KEYFILE>
	<FTP_SSL_CCC public="1" get="inline" set="null" expr="cast 154" line="147" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 154</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_SSL_CCC>
	<TIMEOUT_MS public="1" get="inline" set="null" expr="cast 155" line="148" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 155</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIMEOUT_MS>
	<CONNECTTIMEOUT_MS public="1" get="inline" set="null" expr="cast 156" line="149" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 156</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECTTIMEOUT_MS>
	<HTTP_TRANSFER_DECODING public="1" get="inline" set="null" expr="cast 157" line="150" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 157</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_TRANSFER_DECODING>
	<HTTP_CONTENT_DECODING public="1" get="inline" set="null" expr="cast 158" line="151" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 158</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_CONTENT_DECODING>
	<NEW_FILE_PERMS public="1" get="inline" set="null" expr="cast 159" line="152" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 159</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEW_FILE_PERMS>
	<NEW_DIRECTORY_PERMS public="1" get="inline" set="null" expr="cast 160" line="153" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 160</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEW_DIRECTORY_PERMS>
	<POSTREDIR public="1" get="inline" set="null" expr="cast 161" line="154" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 161</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTREDIR>
	<SSH_HOST_PUBLIC_KEY_MD5 public="1" get="inline" set="null" expr="cast 10162" line="155" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10162</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_HOST_PUBLIC_KEY_MD5>
	<OPENSOCKETFUNCTION public="1" get="inline" set="null" expr="cast 20163" line="156" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20163</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPENSOCKETFUNCTION>
	<OPENSOCKETDATA public="1" get="inline" set="null" expr="cast 10164" line="157" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10164</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPENSOCKETDATA>
	<COPYPOSTFIELDS public="1" get="inline" set="null" expr="cast 10165" line="158" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10165</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPYPOSTFIELDS>
	<PROXY_TRANSFER_MODE public="1" get="inline" set="null" expr="cast 166" line="159" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 166</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_TRANSFER_MODE>
	<SEEKFUNCTION public="1" get="inline" set="null" expr="cast 20167" line="160" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20167</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEEKFUNCTION>
	<SEEKDATA public="1" get="inline" set="null" expr="cast 10168" line="161" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10168</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEEKDATA>
	<CRLFILE public="1" get="inline" set="null" expr="cast 10169" line="162" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10169</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRLFILE>
	<ISSUERCERT public="1" get="inline" set="null" expr="cast 10170" line="163" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10170</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ISSUERCERT>
	<ADDRESS_SCOPE public="1" get="inline" set="null" expr="cast 171" line="164" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 171</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ADDRESS_SCOPE>
	<CERTINFO public="1" get="inline" set="null" expr="cast 172" line="165" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 172</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CERTINFO>
	<USERNAME public="1" get="inline" set="null" expr="cast 10173" line="166" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10173</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USERNAME>
	<PASSWORD public="1" get="inline" set="null" expr="cast 10174" line="167" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10174</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PASSWORD>
	<PROXYUSERNAME public="1" get="inline" set="null" expr="cast 10175" line="168" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10175</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYUSERNAME>
	<PROXYPASSWORD public="1" get="inline" set="null" expr="cast 10176" line="169" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10176</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYPASSWORD>
	<NOPROXY public="1" get="inline" set="null" expr="cast 10177" line="170" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10177</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOPROXY>
	<TFTP_BLKSIZE public="1" get="inline" set="null" expr="cast 178" line="171" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 178</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_BLKSIZE>
	<SOCKS5_GSSAPI_SERVICE public="1" get="inline" set="null" expr="cast 10179" line="172" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10179</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOCKS5_GSSAPI_SERVICE>
	<SOCKS5_GSSAPI_NEC public="1" get="inline" set="null" expr="cast 180" line="173" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 180</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOCKS5_GSSAPI_NEC>
	<PROTOCOLS public="1" get="inline" set="null" expr="cast 181" line="174" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 181</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROTOCOLS>
	<REDIR_PROTOCOLS public="1" get="inline" set="null" expr="cast 182" line="175" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 182</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REDIR_PROTOCOLS>
	<SSH_KNOWNHOSTS public="1" get="inline" set="null" expr="cast 10183" line="176" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10183</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_KNOWNHOSTS>
	<SSH_KEYFUNCTION public="1" get="inline" set="null" expr="cast 20184" line="177" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20184</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_KEYFUNCTION>
	<SSH_KEYDATA public="1" get="inline" set="null" expr="cast 10185" line="178" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10185</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_KEYDATA>
	<MAIL_FROM public="1" get="inline" set="null" expr="cast 10186" line="179" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10186</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL_FROM>
	<MAIL_RCPT public="1" get="inline" set="null" expr="cast 10187" line="180" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10187</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL_RCPT>
	<FTP_USE_PRET public="1" get="inline" set="null" expr="cast 188" line="181" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 188</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_USE_PRET>
	<RTSP_REQUEST public="1" get="inline" set="null" expr="cast 189" line="182" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 189</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_REQUEST>
	<RTSP_SESSION_ID public="1" get="inline" set="null" expr="cast 10190" line="183" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10190</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SESSION_ID>
	<RTSP_STREAM_URI public="1" get="inline" set="null" expr="cast 10191" line="184" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10191</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_STREAM_URI>
	<RTSP_TRANSPORT public="1" get="inline" set="null" expr="cast 10192" line="185" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10192</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_TRANSPORT>
	<RTSP_CLIENT_CSEQ public="1" get="inline" set="null" expr="cast 193" line="186" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 193</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_CLIENT_CSEQ>
	<RTSP_SERVER_CSEQ public="1" get="inline" set="null" expr="cast 194" line="187" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 194</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SERVER_CSEQ>
	<INTERLEAVEDATA public="1" get="inline" set="null" expr="cast 10195" line="188" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10195</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INTERLEAVEDATA>
	<INTERLEAVEFUNCTION public="1" get="inline" set="null" expr="cast 20196" line="189" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20196</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INTERLEAVEFUNCTION>
	<WILDCARDMATCH public="1" get="inline" set="null" expr="cast 197" line="190" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 197</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WILDCARDMATCH>
	<CHUNK_BGN_FUNCTION public="1" get="inline" set="null" expr="cast 20198" line="191" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20198</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHUNK_BGN_FUNCTION>
	<CHUNK_END_FUNCTION public="1" get="inline" set="null" expr="cast 20199" line="192" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20199</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHUNK_END_FUNCTION>
	<FNMATCH_FUNCTION public="1" get="inline" set="null" expr="cast 20200" line="193" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20200</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FNMATCH_FUNCTION>
	<CHUNK_DATA public="1" get="inline" set="null" expr="cast 10201" line="194" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10201</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHUNK_DATA>
	<FNMATCH_DATA public="1" get="inline" set="null" expr="cast 10202" line="195" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10202</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FNMATCH_DATA>
	<RESOLVE public="1" get="inline" set="null" expr="cast 10203" line="196" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10203</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESOLVE>
	<TLSAUTH_USERNAME public="1" get="inline" set="null" expr="cast 10204" line="197" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10204</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TLSAUTH_USERNAME>
	<TLSAUTH_PASSWORD public="1" get="inline" set="null" expr="cast 10205" line="198" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10205</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TLSAUTH_PASSWORD>
	<TLSAUTH_TYPE public="1" get="inline" set="null" expr="cast 10206" line="199" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10206</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TLSAUTH_TYPE>
	<TRANSFER_ENCODING public="1" get="inline" set="null" expr="cast 207" line="200" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 207</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRANSFER_ENCODING>
	<CLOSESOCKETFUNCTION public="1" get="inline" set="null" expr="cast 20208" line="201" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20208</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLOSESOCKETFUNCTION>
	<CLOSESOCKETDATA public="1" get="inline" set="null" expr="cast 10209" line="202" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10209</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLOSESOCKETDATA>
	<GSSAPI_DELEGATION public="1" get="inline" set="null" expr="cast 210" line="203" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 210</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GSSAPI_DELEGATION>
	<DNS_SERVERS public="1" get="inline" set="null" expr="cast 10211" line="204" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10211</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_SERVERS>
	<ACCEPTTIMEOUT_MS public="1" get="inline" set="null" expr="cast 212" line="205" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 212</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ACCEPTTIMEOUT_MS>
	<TCP_KEEPALIVE public="1" get="inline" set="null" expr="cast 213" line="206" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 213</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TCP_KEEPALIVE>
	<TCP_KEEPIDLE public="1" get="inline" set="null" expr="cast 214" line="207" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 214</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TCP_KEEPIDLE>
	<TCP_KEEPINTVL public="1" get="inline" set="null" expr="cast 215" line="208" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 215</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TCP_KEEPINTVL>
	<SSL_OPTIONS public="1" get="inline" set="null" expr="cast 216" line="209" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 216</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_OPTIONS>
	<MAIL_AUTH public="1" get="inline" set="null" expr="cast 10217" line="210" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10217</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL_AUTH>
	<SASL_IR public="1" get="inline" set="null" expr="cast 218" line="211" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 218</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SASL_IR>
	<XFERINFOFUNCTION public="1" get="inline" set="null" expr="cast 20219" line="212" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 20219</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</XFERINFOFUNCTION>
	<XOAUTH2_BEARER public="1" get="inline" set="null" expr="cast 10220" line="213" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10220</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</XOAUTH2_BEARER>
	<DNS_INTERFACE public="1" get="inline" set="null" expr="cast 10221" line="214" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10221</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_INTERFACE>
	<DNS_LOCAL_IP4 public="1" get="inline" set="null" expr="cast 10222" line="215" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10222</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_LOCAL_IP4>
	<DNS_LOCAL_IP6 public="1" get="inline" set="null" expr="cast 10223" line="216" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10223</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_LOCAL_IP6>
	<LOGIN_OPTIONS public="1" get="inline" set="null" expr="cast 10224" line="217" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10224</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOGIN_OPTIONS>
	<SSL_ENABLE_NPN public="1" get="inline" set="null" expr="cast 225" line="218" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 225</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENABLE_NPN>
	<SSL_ENABLE_ALPN public="1" get="inline" set="null" expr="cast 226" line="219" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 226</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENABLE_ALPN>
	<EXPECT_100_TIMEOUT_MS public="1" get="inline" set="null" expr="cast 227" line="220" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 227</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXPECT_100_TIMEOUT_MS>
	<PROXYHEADER public="1" get="inline" set="null" expr="cast 10228" line="221" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10228</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYHEADER>
	<HEADEROPT public="1" get="inline" set="null" expr="cast 229" line="222" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 229</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEADEROPT>
	<PINNEDPUBLICKEY public="1" get="inline" set="null" expr="cast 10230" line="223" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10230</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PINNEDPUBLICKEY>
	<UNIX_SOCKET_PATH public="1" get="inline" set="null" expr="cast 10231" line="224" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10231</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNIX_SOCKET_PATH>
	<SSL_VERIFYSTATUS public="1" get="inline" set="null" expr="cast 232" line="225" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 232</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_VERIFYSTATUS>
	<SSL_FALSESTART public="1" get="inline" set="null" expr="cast 233" line="226" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 233</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_FALSESTART>
	<PATH_AS_IS public="1" get="inline" set="null" expr="cast 234" line="227" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 234</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PATH_AS_IS>
	<PROXY_SERVICE_NAME public="1" get="inline" set="null" expr="cast 10235" line="228" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10235</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SERVICE_NAME>
	<SERVICE_NAME public="1" get="inline" set="null" expr="cast 10236" line="229" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10236</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SERVICE_NAME>
	<PIPEWAIT public="1" get="inline" set="null" expr="cast 237" line="230" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 237</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PIPEWAIT>
	<DEFAULT_PROTOCOL public="1" get="inline" set="null" expr="cast 10238" line="231" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10238</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT_PROTOCOL>
	<STREAM_WEIGHT public="1" get="inline" set="null" expr="cast 239" line="232" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 239</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STREAM_WEIGHT>
	<STREAM_DEPENDS public="1" get="inline" set="null" expr="cast 10240" line="233" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10240</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STREAM_DEPENDS>
	<STREAM_DEPENDS_E public="1" get="inline" set="null" expr="cast 10241" line="234" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10241</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STREAM_DEPENDS_E>
	<TFTP_NO_OPTIONS public="1" get="inline" set="null" expr="cast 242" line="235" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 242</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_NO_OPTIONS>
	<CONNECT_TO public="1" get="inline" set="null" expr="cast 243" line="236" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 243</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECT_TO>
	<TCP_FASTOPEN public="1" get="inline" set="null" expr="cast 244" line="237" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 244</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TCP_FASTOPEN>
	<KEEP_SENDING_ON_ERROR public="1" get="inline" set="null" expr="cast 245" line="238" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 245</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KEEP_SENDING_ON_ERROR>
	<PROXY_CAINFO public="1" get="inline" set="null" expr="cast 10246" line="239" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10246</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_CAINFO>
	<PROXY_CAPATH public="1" get="inline" set="null" expr="cast 10247" line="240" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10247</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_CAPATH>
	<PROXY_SSL_VERIFYPEER public="1" get="inline" set="null" expr="cast 248" line="241" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 248</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSL_VERIFYPEER>
	<PROXY_SSL_VERIFYHOST public="1" get="inline" set="null" expr="cast 249" line="242" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 249</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSL_VERIFYHOST>
	<PROXY_SSLVERSION public="1" get="inline" set="null" expr="cast 250" line="243" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 250</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSLVERSION>
	<PROXY_TLSAUTH_USERNAME public="1" get="inline" set="null" expr="cast 10251" line="244" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10251</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_TLSAUTH_USERNAME>
	<PROXY_TLSAUTH_PASSWORD public="1" get="inline" set="null" expr="cast 10252" line="245" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10252</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_TLSAUTH_PASSWORD>
	<PROXY_TLSAUTH_TYPE public="1" get="inline" set="null" expr="cast 10253" line="246" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10253</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_TLSAUTH_TYPE>
	<PROXY_SSLCERT public="1" get="inline" set="null" expr="cast 10254" line="247" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10254</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSLCERT>
	<PROXY_SSLCERTTYPE public="1" get="inline" set="null" expr="cast 10255" line="248" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10255</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSLCERTTYPE>
	<PROXY_SSLKEY public="1" get="inline" set="null" expr="cast 10256" line="249" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10256</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSLKEY>
	<PROXY_SSLKEYTYPE public="1" get="inline" set="null" expr="cast 10257" line="250" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10257</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSLKEYTYPE>
	<PROXY_KEYPASSWD public="1" get="inline" set="null" expr="cast 10258" line="251" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10258</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_KEYPASSWD>
	<PROXY_SSL_CIPHER_LIST public="1" get="inline" set="null" expr="cast 10259" line="252" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10259</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSL_CIPHER_LIST>
	<PROXY_CRLFILE public="1" get="inline" set="null" expr="cast 10260" line="253" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10260</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_CRLFILE>
	<PROXY_SSL_OPTIONS public="1" get="inline" set="null" expr="cast 261" line="254" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 261</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_SSL_OPTIONS>
	<PRE_PROXY public="1" get="inline" set="null" expr="cast 10262" line="255" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10262</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRE_PROXY>
	<PROXY_PINNEDPUBLICKEY public="1" get="inline" set="null" expr="cast 10263" line="256" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10263</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_PINNEDPUBLICKEY>
	<ABSTRACT_UNIX_SOCKET public="1" get="inline" set="null" expr="cast 10264" line="257" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10264</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ABSTRACT_UNIX_SOCKET>
	<SUPPRESS_CONNECT_HEADERS public="1" get="inline" set="null" expr="cast 265" line="258" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 265</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SUPPRESS_CONNECT_HEADERS>
	<REQUEST_TARGET public="1" get="inline" set="null" expr="cast 10266" line="259" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10266</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REQUEST_TARGET>
	<SOCKS5_AUTH public="1" get="inline" set="null" expr="cast 267" line="260" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 267</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOCKS5_AUTH>
	<SSH_COMPRESSION public="1" get="inline" set="null" expr="cast 268" line="261" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 268</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_COMPRESSION>
	<MIMEPOST public="1" get="inline" set="null" expr="cast 10269" line="262" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":value"><e>cast 10269</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MIMEPOST>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net.curl._CURLOption.CURLOption_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLOption.hx" private="1" module="lime.net.curl.CURLOption" extern="1">
		<URL public="1" get="inline" set="null" expr="cast 10002" line="8" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10002</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</URL>
		<PORT public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PORT>
		<PROXY public="1" get="inline" set="null" expr="cast 10004" line="10" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10004</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY>
		<USERPWD public="1" get="inline" set="null" expr="cast 10005" line="11" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10005</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USERPWD>
		<PROXYUSERPWD public="1" get="inline" set="null" expr="cast 10006" line="12" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10006</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYUSERPWD>
		<RANGE public="1" get="inline" set="null" expr="cast 10007" line="13" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10007</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RANGE>
		<ERRORBUFFER public="1" get="inline" set="null" expr="cast 10010" line="16" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10010</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ERRORBUFFER>
		<WRITEFUNCTION public="1" get="inline" set="null" expr="cast 20011" line="17" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20011</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITEFUNCTION>
		<READFUNCTION public="1" get="inline" set="null" expr="cast 20012" line="18" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20012</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</READFUNCTION>
		<TIMEOUT public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIMEOUT>
		<INFILESIZE public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INFILESIZE>
		<POSTFIELDS public="1" get="inline" set="null" expr="cast 10015" line="21" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10015</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTFIELDS>
		<REFERER public="1" get="inline" set="null" expr="cast 10016" line="22" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10016</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REFERER>
		<FTPPORT public="1" get="inline" set="null" expr="cast 10017" line="23" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10017</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTPPORT>
		<USERAGENT public="1" get="inline" set="null" expr="cast 10018" line="24" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10018</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USERAGENT>
		<LOW_SPEED_LIMIT public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOW_SPEED_LIMIT>
		<LOW_SPEED_TIME public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOW_SPEED_TIME>
		<RESUME_FROM public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESUME_FROM>
		<COOKIE public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIE>
		<HTTPHEADER public="1" get="inline" set="null" expr="cast 10023" line="29" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10023</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPHEADER>
		<RTSPHEADER public="1" get="inline" set="null" expr="cast 10023" line="30" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10023</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSPHEADER>
		<HTTPPOST public="1" get="inline" set="null" expr="cast 10024" line="31" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10024</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPPOST>
		<SSLCERT public="1" get="inline" set="null" expr="cast 10025" line="32" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10025</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLCERT>
		<KEYPASSWD public="1" get="inline" set="null" expr="cast 10026" line="33" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10026</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KEYPASSWD>
		<CRLF public="1" get="inline" set="null" expr="cast 27" line="34" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRLF>
		<QUOTE public="1" get="inline" set="null" expr="cast 10028" line="35" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10028</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUOTE>
		<WRITEHEADER public="1" get="inline" set="null" expr="cast 10029" line="36" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10029</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITEHEADER>
		<HEADERDATA public="1" get="inline" set="null" expr="cast 10029" line="37" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10029</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEADERDATA>
		<COOKIEFILE public="1" get="inline" set="null" expr="cast 10031" line="38" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10031</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIEFILE>
		<SSLVERSION public="1" get="inline" set="null" expr="cast 32" line="39" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLVERSION>
		<TIMECONDITION public="1" get="inline" set="null" expr="cast 33" line="40" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIMECONDITION>
		<TIMEVALUE public="1" get="inline" set="null" expr="cast 34" line="41" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIMEVALUE>
		<CUSTOMREQUEST public="1" get="inline" set="null" expr="cast 10036" line="42" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10036</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUSTOMREQUEST>
		<STDERR public="1" get="inline" set="null" expr="cast 10037" line="43" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10037</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STDERR>
		<POSTQUOTE public="1" get="inline" set="null" expr="cast 10039" line="44" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10039</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTQUOTE>
		<WRITEINFO public="1" get="inline" set="null" expr="cast 10040" line="45" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10040</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITEINFO>
		<VERBOSE public="1" get="inline" set="null" expr="cast 41" line="46" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 41</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERBOSE>
		<HEADER public="1" get="inline" set="null" expr="cast 42" line="47" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 42</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEADER>
		<NOPROGRESS public="1" get="inline" set="null" expr="cast 43" line="48" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 43</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOPROGRESS>
		<NOBODY public="1" get="inline" set="null" expr="cast 44" line="49" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 44</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOBODY>
		<FAILONERROR public="1" get="inline" set="null" expr="cast 45" line="50" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 45</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FAILONERROR>
		<UPLOAD public="1" get="inline" set="null" expr="cast 46" line="51" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 46</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UPLOAD>
		<POST public="1" get="inline" set="null" expr="cast 47" line="52" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 47</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POST>
		<DIRLISTONLY public="1" get="inline" set="null" expr="cast 48" line="53" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 48</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DIRLISTONLY>
		<APPEND public="1" get="inline" set="null" expr="cast 50" line="54" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 50</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPEND>
		<NETRC public="1" get="inline" set="null" expr="cast 51" line="55" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 51</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NETRC>
		<FOLLOWLOCATION public="1" get="inline" set="null" expr="cast 52" line="56" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 52</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FOLLOWLOCATION>
		<TRANSFERTEXT public="1" get="inline" set="null" expr="cast 53" line="57" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 53</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRANSFERTEXT>
		<PUT public="1" get="inline" set="null" expr="cast 54" line="58" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 54</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PUT>
		<PROGRESSFUNCTION public="1" get="inline" set="null" expr="cast 20056" line="59" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20056</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROGRESSFUNCTION>
		<PROGRESSDATA public="1" get="inline" set="null" expr="cast 10057" line="60" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10057</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROGRESSDATA>
		<XFERINFODATA public="1" get="inline" set="null" expr="cast 10057" line="61" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10057</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</XFERINFODATA>
		<AUTOREFERER public="1" get="inline" set="null" expr="cast 58" line="62" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 58</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUTOREFERER>
		<PROXYPORT public="1" get="inline" set="null" expr="cast 59" line="63" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 59</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYPORT>
		<POSTFIELDSIZE public="1" get="inline" set="null" expr="cast 60" line="64" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 60</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTFIELDSIZE>
		<HTTPPROXYTUNNEL public="1" get="inline" set="null" expr="cast 61" line="65" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 61</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPPROXYTUNNEL>
		<INTERFACE public="1" get="inline" set="null" expr="cast 10062" line="66" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10062</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INTERFACE>
		<KRBLEVEL public="1" get="inline" set="null" expr="cast 10063" line="67" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10063</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KRBLEVEL>
		<SSL_VERIFYPEER public="1" get="inline" set="null" expr="cast 64" line="68" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 64</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_VERIFYPEER>
		<CAINFO public="1" get="inline" set="null" expr="cast 10065" line="69" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10065</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAINFO>
		<MAXREDIRS public="1" get="inline" set="null" expr="cast 68" line="70" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 68</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAXREDIRS>
		<FILETIME public="1" get="inline" set="null" expr="cast 69" line="71" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 69</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILETIME>
		<TELNETOPTIONS public="1" get="inline" set="null" expr="cast 10070" line="72" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10070</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TELNETOPTIONS>
		<MAXCONNECTS public="1" get="inline" set="null" expr="cast 71" line="73" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 71</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAXCONNECTS>
		<CLOSEPOLICY public="1" get="inline" set="null" expr="cast 72" line="74" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 72</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLOSEPOLICY>
		<FRESH_CONNECT public="1" get="inline" set="null" expr="cast 74" line="75" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 74</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRESH_CONNECT>
		<FORBID_REUSE public="1" get="inline" set="null" expr="cast 75" line="76" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 75</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FORBID_REUSE>
		<RANDOM_FILE public="1" get="inline" set="null" expr="cast 10076" line="77" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10076</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RANDOM_FILE>
		<EGDSOCKET public="1" get="inline" set="null" expr="cast 10077" line="78" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10077</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EGDSOCKET>
		<CONNECTTIMEOUT public="1" get="inline" set="null" expr="cast 78" line="79" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 78</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECTTIMEOUT>
		<HEADERFUNCTION public="1" get="inline" set="null" expr="cast 20079" line="80" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20079</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEADERFUNCTION>
		<HTTPGET public="1" get="inline" set="null" expr="cast 80" line="81" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 80</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPGET>
		<SSL_VERIFYHOST public="1" get="inline" set="null" expr="cast 81" line="82" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 81</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_VERIFYHOST>
		<COOKIEJAR public="1" get="inline" set="null" expr="cast 10082" line="83" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10082</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIEJAR>
		<SSL_CIPHER_LIST public="1" get="inline" set="null" expr="cast 10083" line="84" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10083</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CIPHER_LIST>
		<HTTP_VERSION public="1" get="inline" set="null" expr="cast 84" line="85" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 84</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_VERSION>
		<FTP_USE_EPSV public="1" get="inline" set="null" expr="cast 85" line="86" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 85</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_USE_EPSV>
		<SSLCERTTYPE public="1" get="inline" set="null" expr="cast 10086" line="87" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10086</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLCERTTYPE>
		<SSLKEY public="1" get="inline" set="null" expr="cast 10087" line="88" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10087</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLKEY>
		<SSLKEYTYPE public="1" get="inline" set="null" expr="cast 10088" line="89" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10088</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLKEYTYPE>
		<SSLENGINE public="1" get="inline" set="null" expr="cast 10089" line="90" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10089</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLENGINE>
		<SSLENGINE_DEFAULT public="1" get="inline" set="null" expr="cast 90" line="91" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 90</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLENGINE_DEFAULT>
		<DNS_USE_GLOBAL_CACHE public="1" get="inline" set="null" expr="cast 91" line="92" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 91</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_USE_GLOBAL_CACHE>
		<DNS_CACHE_TIMEOUT public="1" get="inline" set="null" expr="cast 92" line="93" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 92</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_CACHE_TIMEOUT>
		<PREQUOTE public="1" get="inline" set="null" expr="cast 10093" line="94" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10093</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PREQUOTE>
		<DEBUGFUNCTION public="1" get="inline" set="null" expr="cast 20094" line="95" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20094</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEBUGFUNCTION>
		<DEBUGDATA public="1" get="inline" set="null" expr="cast 10095" line="96" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10095</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEBUGDATA>
		<COOKIESESSION public="1" get="inline" set="null" expr="cast 96" line="97" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 96</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIESESSION>
		<CAPATH public="1" get="inline" set="null" expr="cast 10097" line="98" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10097</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPATH>
		<BUFFERSIZE public="1" get="inline" set="null" expr="cast 98" line="99" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 98</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUFFERSIZE>
		<NOSIGNAL public="1" get="inline" set="null" expr="cast 99" line="100" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 99</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOSIGNAL>
		<SHARE public="1" get="inline" set="null" expr="cast 10100" line="101" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10100</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHARE>
		<PROXYTYPE public="1" get="inline" set="null" expr="cast 101" line="102" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 101</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYTYPE>
		<ACCEPT_ENCODING public="1" get="inline" set="null" expr="cast 10102" line="103" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10102</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ACCEPT_ENCODING>
		<PRIVATE public="1" get="inline" set="null" expr="cast 10103" line="104" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10103</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIVATE>
		<HTTP200ALIASES public="1" get="inline" set="null" expr="cast 10104" line="105" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10104</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP200ALIASES>
		<UNRESTRICTED_AUTH public="1" get="inline" set="null" expr="cast 105" line="106" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 105</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNRESTRICTED_AUTH>
		<FTP_USE_EPRT public="1" get="inline" set="null" expr="cast 106" line="107" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 106</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_USE_EPRT>
		<HTTPAUTH public="1" get="inline" set="null" expr="cast 107" line="108" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 107</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPAUTH>
		<SSL_CTX_FUNCTION public="1" get="inline" set="null" expr="cast 20108" line="109" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20108</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CTX_FUNCTION>
		<SSL_CTX_DATA public="1" get="inline" set="null" expr="cast 10109" line="110" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10109</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CTX_DATA>
		<FTP_CREATE_MISSING_DIRS public="1" get="inline" set="null" expr="cast 110" line="111" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 110</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_CREATE_MISSING_DIRS>
		<PROXYAUTH public="1" get="inline" set="null" expr="cast 111" line="112" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 111</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYAUTH>
		<FTP_RESPONSE_TIMEOUT public="1" get="inline" set="null" expr="cast 112" line="113" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 112</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_RESPONSE_TIMEOUT>
		<SERVER_RESPONSE_TIMEOUT public="1" get="inline" set="null" expr="cast 112" line="114" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 112</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SERVER_RESPONSE_TIMEOUT>
		<IPRESOLVE public="1" get="inline" set="null" expr="cast 113" line="115" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 113</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IPRESOLVE>
		<MAXFILESIZE public="1" get="inline" set="null" expr="cast 114" line="116" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 114</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAXFILESIZE>
		<INFILESIZE_LARGE public="1" get="inline" set="null" expr="cast 30115" line="117" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 30115</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INFILESIZE_LARGE>
		<RESUME_FROM_LARGE public="1" get="inline" set="null" expr="cast 30116" line="118" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 30116</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESUME_FROM_LARGE>
		<MAXFILESIZE_LARGE public="1" get="inline" set="null" expr="cast 30117" line="119" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 30117</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAXFILESIZE_LARGE>
		<NETRC_FILE public="1" get="inline" set="null" expr="cast 10118" line="120" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10118</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NETRC_FILE>
		<USE_SSL public="1" get="inline" set="null" expr="cast 119" line="121" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 119</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USE_SSL>
		<POSTFIELDSIZE_LARGE public="1" get="inline" set="null" expr="cast 30120" line="122" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 30120</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTFIELDSIZE_LARGE>
		<TCP_NODELAY public="1" get="inline" set="null" expr="cast 121" line="123" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 121</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TCP_NODELAY>
		<FTPSSLAUTH public="1" get="inline" set="null" expr="cast 129" line="124" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 129</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTPSSLAUTH>
		<IOCTLFUNCTION public="1" get="inline" set="null" expr="cast 20130" line="125" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20130</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IOCTLFUNCTION>
		<IOCTLDATA public="1" get="inline" set="null" expr="cast 10131" line="126" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10131</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IOCTLDATA>
		<FTP_ACCOUNT public="1" get="inline" set="null" expr="cast 10134" line="127" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10134</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ACCOUNT>
		<COOKIELIST public="1" get="inline" set="null" expr="cast 10135" line="128" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10135</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIELIST>
		<IGNORE_CONTENT_LENGTH public="1" get="inline" set="null" expr="cast 10136" line="129" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10136</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IGNORE_CONTENT_LENGTH>
		<FTP_SKIP_PASV_IP public="1" get="inline" set="null" expr="cast 137" line="130" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 137</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_SKIP_PASV_IP>
		<FTP_FILEMETHOD public="1" get="inline" set="null" expr="cast 138" line="131" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 138</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_FILEMETHOD>
		<LOCALPORT public="1" get="inline" set="null" expr="cast 139" line="132" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 139</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOCALPORT>
		<LOCALPORTRANGE public="1" get="inline" set="null" expr="cast 140" line="133" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 140</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOCALPORTRANGE>
		<CONNECT_ONLY public="1" get="inline" set="null" expr="cast 141" line="134" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 141</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECT_ONLY>
		<CONV_FROM_NETWORK_FUNCTION public="1" get="inline" set="null" expr="cast 20142" line="135" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20142</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_FROM_NETWORK_FUNCTION>
		<CONV_TO_NETWORK_FUNCTION public="1" get="inline" set="null" expr="cast 20143" line="136" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20143</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_TO_NETWORK_FUNCTION>
		<CONV_FROM_UTF8_FUNCTION public="1" get="inline" set="null" expr="cast 20144" line="137" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20144</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_FROM_UTF8_FUNCTION>
		<MAX_SEND_SPEED_LARGE public="1" get="inline" set="null" expr="cast 30145" line="138" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 30145</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_SEND_SPEED_LARGE>
		<MAX_RECV_SPEED_LARGE public="1" get="inline" set="null" expr="cast 30146" line="139" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 30146</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_RECV_SPEED_LARGE>
		<FTP_ALTERNATIVE_TO_USER public="1" get="inline" set="null" expr="cast 10147" line="140" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10147</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ALTERNATIVE_TO_USER>
		<SOCKOPTFUNCTION public="1" get="inline" set="null" expr="cast 20148" line="141" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20148</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOCKOPTFUNCTION>
		<SOCKOPTDATA public="1" get="inline" set="null" expr="cast 10149" line="142" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10149</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOCKOPTDATA>
		<SSL_SESSIONID_CACHE public="1" get="inline" set="null" expr="cast 150" line="143" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 150</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_SESSIONID_CACHE>
		<SSH_AUTH_TYPES public="1" get="inline" set="null" expr="cast 151" line="144" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 151</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_AUTH_TYPES>
		<SSH_PUBLIC_KEYFILE public="1" get="inline" set="null" expr="cast 10152" line="145" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10152</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_PUBLIC_KEYFILE>
		<SSH_PRIVATE_KEYFILE public="1" get="inline" set="null" expr="cast 10153" line="146" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10153</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_PRIVATE_KEYFILE>
		<FTP_SSL_CCC public="1" get="inline" set="null" expr="cast 154" line="147" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 154</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_SSL_CCC>
		<TIMEOUT_MS public="1" get="inline" set="null" expr="cast 155" line="148" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 155</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIMEOUT_MS>
		<CONNECTTIMEOUT_MS public="1" get="inline" set="null" expr="cast 156" line="149" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 156</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECTTIMEOUT_MS>
		<HTTP_TRANSFER_DECODING public="1" get="inline" set="null" expr="cast 157" line="150" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 157</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_TRANSFER_DECODING>
		<HTTP_CONTENT_DECODING public="1" get="inline" set="null" expr="cast 158" line="151" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 158</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_CONTENT_DECODING>
		<NEW_FILE_PERMS public="1" get="inline" set="null" expr="cast 159" line="152" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 159</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEW_FILE_PERMS>
		<NEW_DIRECTORY_PERMS public="1" get="inline" set="null" expr="cast 160" line="153" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 160</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEW_DIRECTORY_PERMS>
		<POSTREDIR public="1" get="inline" set="null" expr="cast 161" line="154" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 161</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTREDIR>
		<SSH_HOST_PUBLIC_KEY_MD5 public="1" get="inline" set="null" expr="cast 10162" line="155" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10162</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_HOST_PUBLIC_KEY_MD5>
		<OPENSOCKETFUNCTION public="1" get="inline" set="null" expr="cast 20163" line="156" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20163</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPENSOCKETFUNCTION>
		<OPENSOCKETDATA public="1" get="inline" set="null" expr="cast 10164" line="157" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10164</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPENSOCKETDATA>
		<COPYPOSTFIELDS public="1" get="inline" set="null" expr="cast 10165" line="158" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10165</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPYPOSTFIELDS>
		<PROXY_TRANSFER_MODE public="1" get="inline" set="null" expr="cast 166" line="159" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 166</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_TRANSFER_MODE>
		<SEEKFUNCTION public="1" get="inline" set="null" expr="cast 20167" line="160" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20167</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEEKFUNCTION>
		<SEEKDATA public="1" get="inline" set="null" expr="cast 10168" line="161" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10168</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEEKDATA>
		<CRLFILE public="1" get="inline" set="null" expr="cast 10169" line="162" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10169</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRLFILE>
		<ISSUERCERT public="1" get="inline" set="null" expr="cast 10170" line="163" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10170</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ISSUERCERT>
		<ADDRESS_SCOPE public="1" get="inline" set="null" expr="cast 171" line="164" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 171</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ADDRESS_SCOPE>
		<CERTINFO public="1" get="inline" set="null" expr="cast 172" line="165" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 172</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CERTINFO>
		<USERNAME public="1" get="inline" set="null" expr="cast 10173" line="166" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10173</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USERNAME>
		<PASSWORD public="1" get="inline" set="null" expr="cast 10174" line="167" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10174</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PASSWORD>
		<PROXYUSERNAME public="1" get="inline" set="null" expr="cast 10175" line="168" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10175</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYUSERNAME>
		<PROXYPASSWORD public="1" get="inline" set="null" expr="cast 10176" line="169" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10176</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYPASSWORD>
		<NOPROXY public="1" get="inline" set="null" expr="cast 10177" line="170" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10177</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOPROXY>
		<TFTP_BLKSIZE public="1" get="inline" set="null" expr="cast 178" line="171" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 178</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_BLKSIZE>
		<SOCKS5_GSSAPI_SERVICE public="1" get="inline" set="null" expr="cast 10179" line="172" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10179</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOCKS5_GSSAPI_SERVICE>
		<SOCKS5_GSSAPI_NEC public="1" get="inline" set="null" expr="cast 180" line="173" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 180</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOCKS5_GSSAPI_NEC>
		<PROTOCOLS public="1" get="inline" set="null" expr="cast 181" line="174" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 181</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROTOCOLS>
		<REDIR_PROTOCOLS public="1" get="inline" set="null" expr="cast 182" line="175" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 182</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REDIR_PROTOCOLS>
		<SSH_KNOWNHOSTS public="1" get="inline" set="null" expr="cast 10183" line="176" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10183</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_KNOWNHOSTS>
		<SSH_KEYFUNCTION public="1" get="inline" set="null" expr="cast 20184" line="177" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20184</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_KEYFUNCTION>
		<SSH_KEYDATA public="1" get="inline" set="null" expr="cast 10185" line="178" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10185</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_KEYDATA>
		<MAIL_FROM public="1" get="inline" set="null" expr="cast 10186" line="179" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10186</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL_FROM>
		<MAIL_RCPT public="1" get="inline" set="null" expr="cast 10187" line="180" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10187</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL_RCPT>
		<FTP_USE_PRET public="1" get="inline" set="null" expr="cast 188" line="181" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 188</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_USE_PRET>
		<RTSP_REQUEST public="1" get="inline" set="null" expr="cast 189" line="182" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 189</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_REQUEST>
		<RTSP_SESSION_ID public="1" get="inline" set="null" expr="cast 10190" line="183" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10190</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SESSION_ID>
		<RTSP_STREAM_URI public="1" get="inline" set="null" expr="cast 10191" line="184" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10191</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_STREAM_URI>
		<RTSP_TRANSPORT public="1" get="inline" set="null" expr="cast 10192" line="185" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10192</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_TRANSPORT>
		<RTSP_CLIENT_CSEQ public="1" get="inline" set="null" expr="cast 193" line="186" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 193</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_CLIENT_CSEQ>
		<RTSP_SERVER_CSEQ public="1" get="inline" set="null" expr="cast 194" line="187" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 194</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SERVER_CSEQ>
		<INTERLEAVEDATA public="1" get="inline" set="null" expr="cast 10195" line="188" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10195</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INTERLEAVEDATA>
		<INTERLEAVEFUNCTION public="1" get="inline" set="null" expr="cast 20196" line="189" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20196</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INTERLEAVEFUNCTION>
		<WILDCARDMATCH public="1" get="inline" set="null" expr="cast 197" line="190" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 197</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WILDCARDMATCH>
		<CHUNK_BGN_FUNCTION public="1" get="inline" set="null" expr="cast 20198" line="191" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20198</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHUNK_BGN_FUNCTION>
		<CHUNK_END_FUNCTION public="1" get="inline" set="null" expr="cast 20199" line="192" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20199</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHUNK_END_FUNCTION>
		<FNMATCH_FUNCTION public="1" get="inline" set="null" expr="cast 20200" line="193" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20200</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FNMATCH_FUNCTION>
		<CHUNK_DATA public="1" get="inline" set="null" expr="cast 10201" line="194" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10201</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHUNK_DATA>
		<FNMATCH_DATA public="1" get="inline" set="null" expr="cast 10202" line="195" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10202</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FNMATCH_DATA>
		<RESOLVE public="1" get="inline" set="null" expr="cast 10203" line="196" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10203</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESOLVE>
		<TLSAUTH_USERNAME public="1" get="inline" set="null" expr="cast 10204" line="197" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10204</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TLSAUTH_USERNAME>
		<TLSAUTH_PASSWORD public="1" get="inline" set="null" expr="cast 10205" line="198" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10205</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TLSAUTH_PASSWORD>
		<TLSAUTH_TYPE public="1" get="inline" set="null" expr="cast 10206" line="199" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10206</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TLSAUTH_TYPE>
		<TRANSFER_ENCODING public="1" get="inline" set="null" expr="cast 207" line="200" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 207</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRANSFER_ENCODING>
		<CLOSESOCKETFUNCTION public="1" get="inline" set="null" expr="cast 20208" line="201" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20208</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLOSESOCKETFUNCTION>
		<CLOSESOCKETDATA public="1" get="inline" set="null" expr="cast 10209" line="202" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10209</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLOSESOCKETDATA>
		<GSSAPI_DELEGATION public="1" get="inline" set="null" expr="cast 210" line="203" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 210</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GSSAPI_DELEGATION>
		<DNS_SERVERS public="1" get="inline" set="null" expr="cast 10211" line="204" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10211</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_SERVERS>
		<ACCEPTTIMEOUT_MS public="1" get="inline" set="null" expr="cast 212" line="205" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 212</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ACCEPTTIMEOUT_MS>
		<TCP_KEEPALIVE public="1" get="inline" set="null" expr="cast 213" line="206" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 213</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TCP_KEEPALIVE>
		<TCP_KEEPIDLE public="1" get="inline" set="null" expr="cast 214" line="207" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 214</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TCP_KEEPIDLE>
		<TCP_KEEPINTVL public="1" get="inline" set="null" expr="cast 215" line="208" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 215</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TCP_KEEPINTVL>
		<SSL_OPTIONS public="1" get="inline" set="null" expr="cast 216" line="209" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 216</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_OPTIONS>
		<MAIL_AUTH public="1" get="inline" set="null" expr="cast 10217" line="210" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10217</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL_AUTH>
		<SASL_IR public="1" get="inline" set="null" expr="cast 218" line="211" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 218</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SASL_IR>
		<XFERINFOFUNCTION public="1" get="inline" set="null" expr="cast 20219" line="212" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 20219</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</XFERINFOFUNCTION>
		<XOAUTH2_BEARER public="1" get="inline" set="null" expr="cast 10220" line="213" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10220</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</XOAUTH2_BEARER>
		<DNS_INTERFACE public="1" get="inline" set="null" expr="cast 10221" line="214" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10221</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_INTERFACE>
		<DNS_LOCAL_IP4 public="1" get="inline" set="null" expr="cast 10222" line="215" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10222</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_LOCAL_IP4>
		<DNS_LOCAL_IP6 public="1" get="inline" set="null" expr="cast 10223" line="216" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10223</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_LOCAL_IP6>
		<LOGIN_OPTIONS public="1" get="inline" set="null" expr="cast 10224" line="217" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10224</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOGIN_OPTIONS>
		<SSL_ENABLE_NPN public="1" get="inline" set="null" expr="cast 225" line="218" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 225</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENABLE_NPN>
		<SSL_ENABLE_ALPN public="1" get="inline" set="null" expr="cast 226" line="219" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 226</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENABLE_ALPN>
		<EXPECT_100_TIMEOUT_MS public="1" get="inline" set="null" expr="cast 227" line="220" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 227</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXPECT_100_TIMEOUT_MS>
		<PROXYHEADER public="1" get="inline" set="null" expr="cast 10228" line="221" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10228</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYHEADER>
		<HEADEROPT public="1" get="inline" set="null" expr="cast 229" line="222" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 229</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEADEROPT>
		<PINNEDPUBLICKEY public="1" get="inline" set="null" expr="cast 10230" line="223" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10230</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PINNEDPUBLICKEY>
		<UNIX_SOCKET_PATH public="1" get="inline" set="null" expr="cast 10231" line="224" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10231</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNIX_SOCKET_PATH>
		<SSL_VERIFYSTATUS public="1" get="inline" set="null" expr="cast 232" line="225" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 232</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_VERIFYSTATUS>
		<SSL_FALSESTART public="1" get="inline" set="null" expr="cast 233" line="226" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 233</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_FALSESTART>
		<PATH_AS_IS public="1" get="inline" set="null" expr="cast 234" line="227" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 234</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PATH_AS_IS>
		<PROXY_SERVICE_NAME public="1" get="inline" set="null" expr="cast 10235" line="228" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10235</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SERVICE_NAME>
		<SERVICE_NAME public="1" get="inline" set="null" expr="cast 10236" line="229" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10236</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SERVICE_NAME>
		<PIPEWAIT public="1" get="inline" set="null" expr="cast 237" line="230" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 237</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PIPEWAIT>
		<DEFAULT_PROTOCOL public="1" get="inline" set="null" expr="cast 10238" line="231" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10238</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT_PROTOCOL>
		<STREAM_WEIGHT public="1" get="inline" set="null" expr="cast 239" line="232" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 239</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STREAM_WEIGHT>
		<STREAM_DEPENDS public="1" get="inline" set="null" expr="cast 10240" line="233" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10240</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STREAM_DEPENDS>
		<STREAM_DEPENDS_E public="1" get="inline" set="null" expr="cast 10241" line="234" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10241</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STREAM_DEPENDS_E>
		<TFTP_NO_OPTIONS public="1" get="inline" set="null" expr="cast 242" line="235" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 242</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_NO_OPTIONS>
		<CONNECT_TO public="1" get="inline" set="null" expr="cast 243" line="236" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 243</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECT_TO>
		<TCP_FASTOPEN public="1" get="inline" set="null" expr="cast 244" line="237" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 244</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TCP_FASTOPEN>
		<KEEP_SENDING_ON_ERROR public="1" get="inline" set="null" expr="cast 245" line="238" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 245</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KEEP_SENDING_ON_ERROR>
		<PROXY_CAINFO public="1" get="inline" set="null" expr="cast 10246" line="239" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10246</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_CAINFO>
		<PROXY_CAPATH public="1" get="inline" set="null" expr="cast 10247" line="240" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10247</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_CAPATH>
		<PROXY_SSL_VERIFYPEER public="1" get="inline" set="null" expr="cast 248" line="241" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 248</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSL_VERIFYPEER>
		<PROXY_SSL_VERIFYHOST public="1" get="inline" set="null" expr="cast 249" line="242" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 249</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSL_VERIFYHOST>
		<PROXY_SSLVERSION public="1" get="inline" set="null" expr="cast 250" line="243" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 250</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSLVERSION>
		<PROXY_TLSAUTH_USERNAME public="1" get="inline" set="null" expr="cast 10251" line="244" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10251</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_TLSAUTH_USERNAME>
		<PROXY_TLSAUTH_PASSWORD public="1" get="inline" set="null" expr="cast 10252" line="245" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10252</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_TLSAUTH_PASSWORD>
		<PROXY_TLSAUTH_TYPE public="1" get="inline" set="null" expr="cast 10253" line="246" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10253</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_TLSAUTH_TYPE>
		<PROXY_SSLCERT public="1" get="inline" set="null" expr="cast 10254" line="247" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10254</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSLCERT>
		<PROXY_SSLCERTTYPE public="1" get="inline" set="null" expr="cast 10255" line="248" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10255</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSLCERTTYPE>
		<PROXY_SSLKEY public="1" get="inline" set="null" expr="cast 10256" line="249" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10256</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSLKEY>
		<PROXY_SSLKEYTYPE public="1" get="inline" set="null" expr="cast 10257" line="250" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10257</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSLKEYTYPE>
		<PROXY_KEYPASSWD public="1" get="inline" set="null" expr="cast 10258" line="251" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10258</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_KEYPASSWD>
		<PROXY_SSL_CIPHER_LIST public="1" get="inline" set="null" expr="cast 10259" line="252" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10259</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSL_CIPHER_LIST>
		<PROXY_CRLFILE public="1" get="inline" set="null" expr="cast 10260" line="253" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10260</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_CRLFILE>
		<PROXY_SSL_OPTIONS public="1" get="inline" set="null" expr="cast 261" line="254" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 261</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_SSL_OPTIONS>
		<PRE_PROXY public="1" get="inline" set="null" expr="cast 10262" line="255" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10262</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRE_PROXY>
		<PROXY_PINNEDPUBLICKEY public="1" get="inline" set="null" expr="cast 10263" line="256" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10263</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_PINNEDPUBLICKEY>
		<ABSTRACT_UNIX_SOCKET public="1" get="inline" set="null" expr="cast 10264" line="257" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10264</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ABSTRACT_UNIX_SOCKET>
		<SUPPRESS_CONNECT_HEADERS public="1" get="inline" set="null" expr="cast 265" line="258" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 265</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SUPPRESS_CONNECT_HEADERS>
		<REQUEST_TARGET public="1" get="inline" set="null" expr="cast 10266" line="259" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10266</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REQUEST_TARGET>
		<SOCKS5_AUTH public="1" get="inline" set="null" expr="cast 267" line="260" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 267</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOCKS5_AUTH>
		<SSH_COMPRESSION public="1" get="inline" set="null" expr="cast 268" line="261" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 268</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_COMPRESSION>
		<MIMEPOST public="1" get="inline" set="null" expr="cast 10269" line="262" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":value"><e>cast 10269</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MIMEPOST>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.net.curl.CURLVersion" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLVersion.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.curl._CURLVersion.CURLVersion_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLVersion.hx" private="1" module="lime.net.curl.CURLVersion" extern="1">
	<FIRST public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.net.curl.CURLVersion"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FIRST>
	<SECOND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.net.curl.CURLVersion"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SECOND>
	<THIRD public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.net.curl.CURLVersion"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THIRD>
	<FOURTH public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.net.curl.CURLVersion"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FOURTH>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net.curl._CURLVersion.CURLVersion_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/curl/CURLVersion.hx" private="1" module="lime.net.curl.CURLVersion" extern="1">
		<FIRST public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.net.curl.CURLVersion"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FIRST>
		<SECOND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.net.curl.CURLVersion"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SECOND>
		<THIRD public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.net.curl.CURLVersion"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THIRD>
		<FOURTH public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.net.curl.CURLVersion"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FOURTH>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.net.oauth.OAuthClient" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthClient.hx">
		<version public="1"><x path="lime.net.oauth.OAuthVersion"/></version>
		<consumer public="1"><c path="lime.net.oauth.OAuthConsumer"/></consumer>
		<generateNonce public="1" set="method" line="41"><f a=""><c path="String"/></f></generateNonce>
		<new public="1" set="method" line="15"><f a="version:consumer">
	<x path="lime.net.oauth.OAuthVersion"/>
	<c path="lime.net.oauth.OAuthConsumer"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.OAuthConsumer" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthConsumer.hx">
		<key public="1"><c path="String"/></key>
		<secret public="1"><c path="String"/></secret>
		<new public="1" set="method" line="11"><f a="key:secret">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.net.oauth.OAuthSignatureMethod" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthSignatureMethod.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.oauth._OAuthSignatureMethod.OAuthSignatureMethod_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthSignatureMethod.hx" private="1" module="lime.net.oauth.OAuthSignatureMethod" extern="1">
	<HMAC_SHA1 public="1" get="inline" set="null" expr="cast &quot;HMAC-SHA1&quot;" line="7" static="1">
		<x path="lime.net.oauth.OAuthSignatureMethod"/>
		<meta>
			<m n=":value"><e>cast "HMAC-SHA1"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HMAC_SHA1>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net.oauth._OAuthSignatureMethod.OAuthSignatureMethod_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthSignatureMethod.hx" private="1" module="lime.net.oauth.OAuthSignatureMethod" extern="1">
		<HMAC_SHA1 public="1" get="inline" set="null" expr="cast &quot;HMAC-SHA1&quot;" line="7" static="1">
			<x path="lime.net.oauth.OAuthSignatureMethod"/>
			<meta>
				<m n=":value"><e>cast "HMAC-SHA1"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HMAC_SHA1>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.net.oauth.RequestToken" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<token public="1" set="null"><c path="String"/></token>
		<secret public="1" set="null"><c path="String"/></secret>
		<new public="1" set="method" line="9"><f a="token:secret">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.AccessToken" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<token public="1" set="null"><c path="String"/></token>
		<new public="1" set="method" line="22"><f a="token">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.OAuth1AccessToken" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<extends path="lime.net.oauth.AccessToken"/>
		<secret public="1" set="null"><c path="String"/></secret>
		<new public="1" set="method" line="34"><f a="token:?secret">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.OAuth2AccessToken" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<extends path="lime.net.oauth.AccessToken"/>
		<expires public="1" set="null" expr="-1">
			<x path="Int"/>
			<meta><m n=":value"><e>-1</e></m></meta>
		</expires>
		<new public="1" set="method" line="47"><f a="token:?expires">
	<c path="String"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.RefreshToken" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<token public="1" set="null"><c path="String"/></token>
		<new public="1" set="method" line="60"><f a="token">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.net.oauth.OAuthVersion" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthVersion.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.oauth._OAuthVersion.OAuthVersion_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthVersion.hx" private="1" module="lime.net.oauth.OAuthVersion" extern="1">
	<V1 public="1" get="inline" set="null" expr="cast &quot;1.0&quot;" line="6" static="1">
		<x path="lime.net.oauth.OAuthVersion"/>
		<meta>
			<m n=":value"><e>cast "1.0"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V1>
	<V2 public="1" get="inline" set="null" expr="cast &quot;2.0&quot;" line="7" static="1">
		<x path="lime.net.oauth.OAuthVersion"/>
		<meta>
			<m n=":value"><e>cast "2.0"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V2>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net.oauth._OAuthVersion.OAuthVersion_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/net/oauth/OAuthVersion.hx" private="1" module="lime.net.oauth.OAuthVersion" extern="1">
		<V1 public="1" get="inline" set="null" expr="cast &quot;1.0&quot;" line="6" static="1">
			<x path="lime.net.oauth.OAuthVersion"/>
			<meta>
				<m n=":value"><e>cast "1.0"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V1>
		<V2 public="1" get="inline" set="null" expr="cast &quot;2.0&quot;" line="7" static="1">
			<x path="lime.net.oauth.OAuthVersion"/>
			<meta>
				<m n=":value"><e>cast "2.0"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V2>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.system.BackgroundWorker" params="" file="/home/joshua/Development/Haxe/lime/lime/system/BackgroundWorker.hx">
		<MESSAGE_COMPLETE expr="&quot;__COMPLETE__&quot;" line="24" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"__COMPLETE__"</e></m></meta>
		</MESSAGE_COMPLETE>
		<MESSAGE_ERROR expr="&quot;__ERROR__&quot;" line="25" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"__ERROR__"</e></m></meta>
		</MESSAGE_ERROR>
		<canceled public="1" set="null"><x path="Bool"/></canceled>
		<completed public="1" set="null"><x path="Bool"/></completed>
		<doWork public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app.Event"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</doWork>
		<onComplete public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app.Event"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onComplete>
		<onError public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app.Event"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onError>
		<onProgress public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app.Event"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onProgress>
		<__runMessage><d/></__runMessage>
		<cancel public="1" set="method" line="49"><f a=""><x path="Void"/></f></cancel>
		<run public="1" set="method" line="62">
			<f a="?message" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : null }</e></m></meta>
		</run>
		<sendComplete public="1" set="method" line="84">
			<f a="?message" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : null }</e></m></meta>
		</sendComplete>
		<sendError public="1" set="method" line="107">
			<f a="?message" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : null }</e></m></meta>
		</sendError>
		<sendProgress public="1" set="method" line="128">
			<f a="?message" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : null }</e></m></meta>
		</sendProgress>
		<__doWork set="method" line="147"><f a=""><x path="Void"/></f></__doWork>
		<__update set="method" line="169"><f a="deltaTime">
	<x path="Int"/>
	<x path="Void"/>
</f></__update>
		<new public="1" set="method" line="42"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.system.CFFI" params="" file="/home/joshua/Development/Haxe/lime/lime/system/CFFI.hx">
		<__moduleNames expr="null" line="19" static="1">
			<x path="Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta>
				<m n=":value"><e>null</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__moduleNames>
		<available public="1" static="1"><x path="Bool"/></available>
		<enabled public="1" static="1"><x path="Bool"/></enabled>
		<load public="1" set="method" line="61" static="1">
			<f a="library:method:?args:?lazy" v="::0:false">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Bool"/>
				<d/>
			</f>
			<meta><m n=":value"><e>{ lazy : false, args : 0 }</e></m></meta>
			<haxe_doc>* Tries to load a native CFFI primitive on compatible platforms
	 * @param	library	The name of the native library (such as "lime")
	 * @param	method	The exported primitive method name
	 * @param	args	The number of arguments
	 * @param	lazy	Whether to load the symbol immediately, or to allow lazy loading
	 * @return	The loaded method</haxe_doc>
		</load>
		<loadPrime public="1" set="method" static="1"><f a="library:method:signature:lazy">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
</f></loadPrime>
		<__findHaxelib set="method" line="220" static="1"><f a="library">
	<c path="String"/>
	<c path="String"/>
</f></__findHaxelib>
		<__loaderTrace set="method" line="265" static="1"><f a="message">
	<c path="String"/>
	<x path="Void"/>
</f></__loaderTrace>
		<__sysName set="method" line="346" static="1"><f a=""><c path="String"/></f></__sysName>
		<__tryLoad set="method" line="362" static="1"><f a="name:library:func:args">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<d/>
</f></__tryLoad>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.system.CFFIPointer" params="" file="/home/joshua/Development/Haxe/lime/lime/system/CFFIPointer.hx">
		<from><icast><d/></icast></from>
		<this><d/></this>
		<to><icast><d/></icast></to>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.system._CFFIPointer.CFFIPointer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/system/CFFIPointer.hx" private="1" module="lime.system.CFFIPointer">
	<_new public="1" get="inline" set="null" line="12" static="1">
		<f a="handle">
			<d/>
			<x path="lime.system.CFFIPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<get public="1" set="method" line="19" static="1">
		<f a="this">
			<d/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get>
	<equals get="inline" set="null" line="34" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equals>
	<equalsPointer get="inline" set="null" line="35" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equalsPointer>
	<greaterThan get="inline" set="null" line="36" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A > B]]></e></m>
		</meta>
	</greaterThan>
	<greaterThanPointer get="inline" set="null" line="37" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A > B]]></e></m>
		</meta>
	</greaterThanPointer>
	<greaterThanOrEqual get="inline" set="null" line="38" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A >= B]]></e></m>
		</meta>
	</greaterThanOrEqual>
	<greaterThanOrEqualPointer get="inline" set="null" line="39" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A >= B]]></e></m>
		</meta>
	</greaterThanOrEqualPointer>
	<lessThan get="inline" set="null" line="40" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A < B]]></e></m>
		</meta>
	</lessThan>
	<lessThanPointer get="inline" set="null" line="41" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A < B]]></e></m>
		</meta>
	</lessThanPointer>
	<lessThanOrEqual get="inline" set="null" line="42" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A <= B]]></e></m>
		</meta>
	</lessThanOrEqual>
	<lessThanOrEqualPointer get="inline" set="null" line="43" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A <= B]]></e></m>
		</meta>
	</lessThanOrEqualPointer>
	<notEquals get="inline" set="null" line="44" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEquals>
	<notEqualsPointer get="inline" set="null" line="45" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEqualsPointer>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.system._CFFIPointer.CFFIPointer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/system/CFFIPointer.hx" private="1" module="lime.system.CFFIPointer">
		<_new public="1" get="inline" set="null" line="12" static="1">
			<f a="handle">
				<d/>
				<x path="lime.system.CFFIPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<get public="1" set="method" line="19" static="1">
			<f a="this">
				<d/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get>
		<equals get="inline" set="null" line="34" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equals>
		<equalsPointer get="inline" set="null" line="35" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equalsPointer>
		<greaterThan get="inline" set="null" line="36" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A > B]]></e></m>
			</meta>
		</greaterThan>
		<greaterThanPointer get="inline" set="null" line="37" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A > B]]></e></m>
			</meta>
		</greaterThanPointer>
		<greaterThanOrEqual get="inline" set="null" line="38" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A >= B]]></e></m>
			</meta>
		</greaterThanOrEqual>
		<greaterThanOrEqualPointer get="inline" set="null" line="39" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A >= B]]></e></m>
			</meta>
		</greaterThanOrEqualPointer>
		<lessThan get="inline" set="null" line="40" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A < B]]></e></m>
			</meta>
		</lessThan>
		<lessThanPointer get="inline" set="null" line="41" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A < B]]></e></m>
			</meta>
		</lessThanPointer>
		<lessThanOrEqual get="inline" set="null" line="42" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A <= B]]></e></m>
			</meta>
		</lessThanOrEqual>
		<lessThanOrEqualPointer get="inline" set="null" line="43" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A <= B]]></e></m>
			</meta>
		</lessThanOrEqualPointer>
		<notEquals get="inline" set="null" line="44" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEquals>
		<notEqualsPointer get="inline" set="null" line="45" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEqualsPointer>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.system.Clipboard" params="" file="/home/joshua/Development/Haxe/lime/lime/system/Clipboard.hx">
		<onUpdate public="1" expr="new Event&lt;Void&gt;()" line="26" static="1">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onUpdate>
		<text public="1" get="accessor" set="accessor" static="1"><c path="String"/></text>
		<_text static="1"><c path="String"/></_text>
		<__update set="method" line="33" static="1"><f a=""><x path="Void"/></f></__update>
		<get_text set="method" line="64" static="1"><f a=""><c path="String"/></f></get_text>
		<set_text set="method" line="75" static="1"><f a="value">
	<c path="String"/>
	<c path="String"/>
</f></set_text>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<class path="lime.system.Display" params="" file="/home/joshua/Development/Haxe/lime/lime/system/Display.hx">
		<bounds public="1" set="null">
			<c path="lime.math.Rectangle"/>
			<haxe_doc>* The desktop area represented by this display, with the upper-leftmost display at 0,0</haxe_doc>
		</bounds>
		<currentMode public="1" set="null">
			<c path="lime.system.DisplayMode"/>
			<haxe_doc>* The current display mode</haxe_doc>
		</currentMode>
		<id public="1" set="null"><x path="Int"/></id>
		<dpi public="1" set="null">
			<x path="Float"/>
			<haxe_doc>* Pixel density of the display</haxe_doc>
		</dpi>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The name of the device, such as "Samsung SyncMaster P2350", "iPhone 6", "Oculus Rift DK2", etc.</haxe_doc>
		</name>
		<supportedModes public="1" set="null">
			<c path="Array"><c path="lime.system.DisplayMode"/></c>
			<haxe_doc>* All of the display modes supported by this device</haxe_doc>
		</supportedModes>
		<new set="method" line="43"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.system.DisplayMode" params="" file="/home/joshua/Development/Haxe/lime/lime/system/DisplayMode.hx">
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* vertical resolution</haxe_doc>
		</height>
		<pixelFormat public="1" set="null">
			<x path="lime.graphics.PixelFormat"/>
			<haxe_doc>* pixel format</haxe_doc>
		</pixelFormat>
		<refreshRate public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* refresh rate in Hz</haxe_doc>
		</refreshRate>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* horizontal resolution</haxe_doc>
		</width>
		<new set="method" line="36"><f a="width:height:refreshRate:pixelFormat">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.system.Endian" params="" file="/home/joshua/Development/Haxe/lime/lime/system/Endian.hx">
		<LITTLE_ENDIAN/>
		<BIG_ENDIAN/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime.system.JNI" params="" file="/home/joshua/Development/Haxe/lime/lime/system/JNI.hx">
		<alreadyCreated expr="new Map&lt;String,Bool&gt;()" line="17" static="1">
			<x path="Map">
				<c path="String"/>
				<x path="Bool"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Bool>()]]></e></m></meta>
		</alreadyCreated>
		<initialized expr="false" line="18" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
		</initialized>
		<callMember public="1" set="method" line="21" static="1"><f a="method:jobject:a">
	<d/>
	<d/>
	<c path="Array"><d/></c>
	<d/>
</f></callMember>
		<callStatic public="1" set="method" line="40" static="1"><f a="method:a">
	<d/>
	<c path="Array"><d/></c>
	<d/>
</f></callStatic>
		<createMemberField public="1" set="method" line="59" static="1"><f a="className:memberName:signature">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="lime.system.JNIMemberField"/>
</f></createMemberField>
		<createMemberMethod public="1" set="method" line="72" static="1">
			<f a="className:memberName:signature:?useArray:?quietFail" v=":::false:false">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<d/>
			</f>
			<meta><m n=":value"><e>{ quietFail : false, useArray : false }</e></m></meta>
		</createMemberMethod>
		<createStaticField public="1" set="method" line="101" static="1"><f a="className:memberName:signature">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="lime.system.JNIStaticField"/>
</f></createStaticField>
		<createStaticMethod public="1" set="method" line="114" static="1">
			<f a="className:memberName:signature:?useArray:?quietFail" v=":::false:false">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<d/>
			</f>
			<meta><m n=":value"><e>{ quietFail : false, useArray : false }</e></m></meta>
		</createStaticMethod>
		<getEnv public="1" set="method" line="143" static="1"><f a=""><d/></f></getEnv>
		<init set="method" line="156" static="1"><f a=""><x path="Void"/></f></init>
		<onCallback set="method" line="172" static="1"><f a="object:method:args">
	<d/>
	<d/>
	<d/>
	<d/>
</f></onCallback>
		<postUICallback public="1" set="method" line="188" static="1"><f a="callback">
	<f a=""><x path="Void"/></f>
	<x path="Void"/>
</f></postUICallback>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.system.JNIMemberField" params="" file="/home/joshua/Development/Haxe/lime/lime/system/JNI.hx" module="lime.system.JNI">
		<field><d/></field>
		<get public="1" set="method" line="220"><f a="jobject">
	<d/>
	<d/>
</f></get>
		<set public="1" set="method" line="231"><f a="jobject:value">
	<d/>
	<d/>
	<d/>
</f></set>
		<new public="1" set="method" line="213"><f a="field">
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
	</class>
	<class path="lime.system.JNIStaticField" params="" file="/home/joshua/Development/Haxe/lime/lime/system/JNI.hx" module="lime.system.JNI">
		<field><d/></field>
		<get public="1" set="method" line="260"><f a=""><d/></f></get>
		<set public="1" set="method" line="271"><f a="value">
	<d/>
	<d/>
</f></set>
		<new public="1" set="method" line="253"><f a="field">
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
	</class>
	<class path="lime.system.JNIMethod" params="" file="/home/joshua/Development/Haxe/lime/lime/system/JNI.hx" module="lime.system.JNI">
		<method><d/></method>
		<callMember public="1" set="method" line="299"><f a="args">
	<c path="Array"><d/></c>
	<d/>
</f></callMember>
		<callStatic public="1" set="method" line="311"><f a="args">
	<c path="Array"><d/></c>
	<d/>
</f></callStatic>
		<getMemberMethod public="1" set="method" line="322"><f a="useArray">
	<x path="Bool"/>
	<d/>
</f></getMemberMethod>
		<getStaticMethod public="1" set="method" line="337"><f a="useArray">
	<x path="Bool"/>
	<d/>
</f></getStaticMethod>
		<new public="1" set="method" line="293"><f a="method">
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":access"><e>lime._backend.native.NativeCFFI</e></m></meta>
	</class>
	<abstract path="lime.system.Locale" params="" file="/home/joshua/Development/Haxe/lime/lime/system/Locale.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<impl><class path="lime.system._Locale.Locale_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/system/Locale.hx" private="1" module="lime.system.Locale">
	<currentLocale public="1" get="accessor" set="accessor" static="1">
		<x path="lime.system.Locale"/>
		<meta><m n=":isVar"/></meta>
	</currentLocale>
	<systemLocale public="1" get="accessor" set="null" static="1"><x path="lime.system.Locale"/></systemLocale>
	<__systemLocale static="1"><x path="lime.system.Locale"/></__systemLocale>
	<language public="1" get="accessor" set="null" static="1">
		<c path="String"/>
		<meta><m n=":impl"/></meta>
	</language>
	<region public="1" get="accessor" set="null" static="1">
		<c path="String"/>
		<meta><m n=":impl"/></meta>
	</region>
	<_new public="1" set="method" line="24" static="1">
		<f a="value">
			<c path="String"/>
			<x path="lime.system.Locale"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<equals set="method" line="31" static="1">
		<f a="a:b">
			<x path="lime.system.Locale"/>
			<x path="lime.system.Locale"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equals>
	<__init set="method" line="59" static="1"><f a=""><x path="Void"/></f></__init>
	<get_language set="method" line="111" static="1">
		<f a="this">
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_language>
	<get_region set="method" line="138" static="1">
		<f a="this">
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_region>
	<get_currentLocale set="method" line="186" static="1"><f a=""><x path="lime.system.Locale"/></f></get_currentLocale>
	<set_currentLocale set="method" line="195" static="1"><f a="value">
	<x path="lime.system.Locale"/>
	<x path="lime.system.Locale"/>
</f></set_currentLocale>
	<get_systemLocale set="method" line="204" static="1"><f a=""><x path="lime.system.Locale"/></f></get_systemLocale>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.system._Locale.Locale_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/system/Locale.hx" private="1" module="lime.system.Locale">
		<currentLocale public="1" get="accessor" set="accessor" static="1">
			<x path="lime.system.Locale"/>
			<meta><m n=":isVar"/></meta>
		</currentLocale>
		<systemLocale public="1" get="accessor" set="null" static="1"><x path="lime.system.Locale"/></systemLocale>
		<__systemLocale static="1"><x path="lime.system.Locale"/></__systemLocale>
		<language public="1" get="accessor" set="null" static="1">
			<c path="String"/>
			<meta><m n=":impl"/></meta>
		</language>
		<region public="1" get="accessor" set="null" static="1">
			<c path="String"/>
			<meta><m n=":impl"/></meta>
		</region>
		<_new public="1" set="method" line="24" static="1">
			<f a="value">
				<c path="String"/>
				<x path="lime.system.Locale"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<equals set="method" line="31" static="1">
			<f a="a:b">
				<x path="lime.system.Locale"/>
				<x path="lime.system.Locale"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equals>
		<__init set="method" line="59" static="1"><f a=""><x path="Void"/></f></__init>
		<get_language set="method" line="111" static="1">
			<f a="this">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_language>
		<get_region set="method" line="138" static="1">
			<f a="this">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_region>
		<get_currentLocale set="method" line="186" static="1"><f a=""><x path="lime.system.Locale"/></f></get_currentLocale>
		<set_currentLocale set="method" line="195" static="1"><f a="value">
	<x path="lime.system.Locale"/>
	<x path="lime.system.Locale"/>
</f></set_currentLocale>
		<get_systemLocale set="method" line="204" static="1"><f a=""><x path="lime.system.Locale"/></f></get_systemLocale>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="lime.system.Sensor" params="" file="/home/joshua/Development/Haxe/lime/lime/system/Sensor.hx">
		<sensorByID expr="new Map&lt;Int,Sensor&gt;()" line="15" static="1">
			<x path="Map">
				<x path="Int"/>
				<c path="lime.system.Sensor"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Sensor>()]]></e></m></meta>
		</sensorByID>
		<sensors expr="new Array&lt;Sensor&gt;()" line="16" static="1">
			<c path="Array"><c path="lime.system.Sensor"/></c>
			<meta><m n=":value"><e><![CDATA[new Array<Sensor>()]]></e></m></meta>
		</sensors>
		<getSensors public="1" set="method" line="31" static="1">
			<f a="?type" v="null">
				<e path="lime.system.SensorType"/>
				<c path="Array"><c path="lime.system.Sensor"/></c>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</getSensors>
		<registerSensor set="method" line="58" static="1"><f a="type:id">
	<e path="lime.system.SensorType"/>
	<x path="Int"/>
	<x path="Void"/>
</f></registerSensor>
		<id public="1"><x path="Int"/></id>
		<onUpdate public="1" expr="new Event&lt;Float -&gt; Float -&gt; Float&gt;()">
			<c path="lime.app.Event"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> Float>()]]></e></m></meta>
		</onUpdate>
		<type public="1"><e path="lime.system.SensorType"/></type>
		<new set="method" line="23"><f a="type:id">
	<e path="lime.system.SensorType"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.system.SensorType" params="" file="/home/joshua/Development/Haxe/lime/lime/system/SensorType.hx">
		<ACCELEROMETER/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="lime.system.System" params="" file="/home/joshua/Development/Haxe/lime/lime/system/System.hx">
		<allowScreenTimeout public="1" get="accessor" set="accessor" static="1"><x path="Bool"/></allowScreenTimeout>
		<applicationDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></applicationDirectory>
		<applicationStorageDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></applicationStorageDirectory>
		<desktopDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></desktopDirectory>
		<disableCFFI public="1" static="1"><x path="Bool"/></disableCFFI>
		<documentsDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></documentsDirectory>
		<endianness public="1" get="accessor" set="null" static="1"><e path="lime.system.Endian"/></endianness>
		<fontsDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></fontsDirectory>
		<numDisplays public="1" get="accessor" set="null" static="1"><x path="Int"/></numDisplays>
		<userDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></userDirectory>
		<__applicationConfig static="1">
			<x path="Map">
				<c path="String"/>
				<t path="lime.app.Config"/>
			</x>
			<meta><m n=":noCompletion"/></meta>
		</__applicationConfig>
		<__applicationEntryPoint static="1">
			<x path="Map">
				<c path="String"/>
				<x path="haxe.Function"/>
			</x>
			<meta><m n=":noCompletion"/></meta>
		</__applicationEntryPoint>
		<__directories expr="new Map&lt;SystemDirectory,String&gt;()" line="54" static="1">
			<x path="Map">
				<x path="lime.system._System.SystemDirectory"/>
				<c path="String"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<SystemDirectory,String>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</__directories>
		<exit public="1" set="method" line="168" static="1"><f a="code">
	<x path="Int"/>
	<x path="Void"/>
</f></exit>
		<getDisplay public="1" set="method" line="193" static="1"><f a="id">
	<x path="Int"/>
	<c path="lime.system.Display"/>
</f></getDisplay>
		<getTimer public="1" set="method" line="283" static="1"><f a=""><x path="Int"/></f></getTimer>
		<load public="1" get="inline" set="null" line="303" static="1">
			<f a="library:method:?args:?lazy" v="::0:false">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Bool"/>
				<d/>
			</f>
			<meta><m n=":value"><e>{ lazy : false, args : 0 }</e></m></meta>
		</load>
		<openFile public="1" set="method" line="314" static="1"><f a="path">
	<c path="String"/>
	<x path="Void"/>
</f></openFile>
		<openURL public="1" set="method" line="354" static="1">
			<f a="url:?target" v=":&quot;_blank&quot;">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ target : "_blank" }</e></m></meta>
		</openURL>
		<__copyMissingFields set="method" line="386" static="1">
			<f a="target:source">
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__copyMissingFields>
		<__getDirectory set="method" line="403" static="1">
			<f a="type">
				<x path="lime.system._System.SystemDirectory"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getDirectory>
		<__registerEntryPoint set="method" line="486" static="1"><f a="projectName:entryPoint:config">
	<c path="String"/>
	<x path="haxe.Function"/>
	<t path="lime.app.Config"/>
	<x path="Void"/>
</f></__registerEntryPoint>
		<get_allowScreenTimeout set="method" line="513" static="1"><f a=""><x path="Bool"/></f></get_allowScreenTimeout>
		<set_allowScreenTimeout set="method" line="524" static="1"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_allowScreenTimeout>
		<get_applicationDirectory set="method" line="535" static="1"><f a=""><c path="String"/></f></get_applicationDirectory>
		<get_applicationStorageDirectory set="method" line="542" static="1"><f a=""><c path="String"/></f></get_applicationStorageDirectory>
		<get_desktopDirectory set="method" line="549" static="1"><f a=""><c path="String"/></f></get_desktopDirectory>
		<get_documentsDirectory set="method" line="556" static="1"><f a=""><c path="String"/></f></get_documentsDirectory>
		<get_fontsDirectory set="method" line="563" static="1"><f a=""><c path="String"/></f></get_fontsDirectory>
		<get_numDisplays set="method" line="570" static="1"><f a=""><x path="Int"/></f></get_numDisplays>
		<get_userDirectory set="method" line="581" static="1"><f a=""><c path="String"/></f></get_userDirectory>
		<get_endianness set="method" line="588" static="1"><f a=""><e path="lime.system.Endian"/></f></get_endianness>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.system.Display</e></m>
			<m n=":access"><e>lime.system.DisplayMode</e></m>
		</meta>
	</class>
	<abstract path="lime.system._System.SystemDirectory" params="" file="/home/joshua/Development/Haxe/lime/lime/system/System.hx" private="1" module="lime.system.System">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.system._System.SystemDirectory_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/system/System.hx" private="1" module="lime.system.System" extern="1">
	<APPLICATION public="1" get="inline" set="null" expr="cast 0" line="616" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<APPLICATION_STORAGE public="1" get="inline" set="null" expr="cast 1" line="617" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION_STORAGE>
	<DESKTOP public="1" get="inline" set="null" expr="cast 2" line="618" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DESKTOP>
	<DOCUMENTS public="1" get="inline" set="null" expr="cast 3" line="619" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOCUMENTS>
	<FONTS public="1" get="inline" set="null" expr="cast 4" line="620" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONTS>
	<USER public="1" get="inline" set="null" expr="cast 5" line="621" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USER>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.system._System.SystemDirectory_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/system/System.hx" private="1" module="lime.system.System" extern="1">
		<APPLICATION public="1" get="inline" set="null" expr="cast 0" line="616" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<APPLICATION_STORAGE public="1" get="inline" set="null" expr="cast 1" line="617" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION_STORAGE>
		<DESKTOP public="1" get="inline" set="null" expr="cast 2" line="618" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DESKTOP>
		<DOCUMENTS public="1" get="inline" set="null" expr="cast 3" line="619" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOCUMENTS>
		<FONTS public="1" get="inline" set="null" expr="cast 4" line="620" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONTS>
		<USER public="1" get="inline" set="null" expr="cast 5" line="621" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USER>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.system.ThreadPool" params="" file="/home/joshua/Development/Haxe/lime/lime/system/ThreadPool.hx">
		<currentThreads public="1" set="null"><x path="Int"/></currentThreads>
		<doWork public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</doWork>
		<maxThreads public="1"><x path="Int"/></maxThreads>
		<minThreads public="1"><x path="Int"/></minThreads>
		<onComplete public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</onComplete>
		<onError public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</onError>
		<onProgress public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</onProgress>
		<onRun public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</onRun>
		<queue public="1" set="method" line="76">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</queue>
		<sendComplete public="1" set="method" line="114">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</sendComplete>
		<sendError public="1" set="method" line="130">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</sendError>
		<sendProgress public="1" set="method" line="146">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</sendProgress>
		<runWork set="method" line="162">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</runWork>
		<new public="1" set="method" line="43">
			<f a="?minThreads:?maxThreads" v="0:1">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ maxThreads : 1, minThreads : 0 }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.system._ThreadPool.ThreadPoolMessageType" params="" file="/home/joshua/Development/Haxe/lime/lime/system/ThreadPool.hx" private="1" module="lime.system.ThreadPool">
		<COMPLETE/>
		<ERROR/>
		<EXIT/>
		<PROGRESS/>
		<WORK/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="lime.system._ThreadPool.ThreadPoolMessage" params="" file="/home/joshua/Development/Haxe/lime/lime/system/ThreadPool.hx" private="1" module="lime.system.ThreadPool">
		<state public="1"><d/></state>
		<type public="1"><e path="lime.system._ThreadPool.ThreadPoolMessageType"/></type>
		<new public="1" set="method" line="288"><f a="type:state">
	<e path="lime.system._ThreadPool.ThreadPoolMessageType"/>
	<d/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.text.Font" params="" file="/home/joshua/Development/Haxe/lime/lime/text/Font.hx">
		<fromBytes public="1" set="method" line="102" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.text.Font"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="118" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.text.Font"/>
</f></fromFile>
		<loadFromBytes public="1" set="method" line="134" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFromBytes>
		<loadFromFile public="1" set="method" line="141" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFromFile>
		<loadFromName public="1" set="method" line="161" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFromName>
		<ascender public="1" get="accessor" set="null"><x path="Int"/></ascender>
		<descender public="1" get="accessor" set="null"><x path="Int"/></descender>
		<height public="1" get="accessor" set="null"><x path="Int"/></height>
		<name public="1" set="null"><c path="String"/></name>
		<numGlyphs public="1" get="accessor" set="null"><x path="Int"/></numGlyphs>
		<src public="1"><d/></src>
		<underlinePosition public="1" get="accessor" set="null"><x path="Int"/></underlinePosition>
		<underlineThickness public="1" get="accessor" set="null"><x path="Int"/></underlineThickness>
		<unitsPerEM public="1" get="accessor" set="null"><x path="Int"/></unitsPerEM>
		<__fontID>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontID>
		<__fontPath>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontPath>
		<decompose public="1" set="method" line="85"><f a=""><t path="lime.text.NativeFontData"/></f></decompose>
		<getGlyph public="1" set="method" line="177"><f a="character">
	<c path="String"/>
	<x path="lime.text.Glyph"/>
</f></getGlyph>
		<getGlyphs public="1" set="method" line="188">
			<f a="?characters" v="&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`&apos;\&quot;/\\&amp;*()[]{}&lt;&gt;|:;_-+=?,. &quot;">
				<c path="String"/>
				<c path="Array"><x path="lime.text.Glyph"/></c>
			</f>
			<meta><m n=":value"><e><![CDATA[{ characters : "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`'\"/\\&*()[]{}<>|:;_-+=?,. " }]]></e></m></meta>
		</getGlyphs>
		<getGlyphMetrics public="1" set="method" line="200"><f a="glyph">
	<x path="lime.text.Glyph"/>
	<c path="lime.text.GlyphMetrics"/>
</f></getGlyphMetrics>
		<renderGlyph public="1" set="method" line="219"><f a="glyph:fontSize">
	<x path="lime.text.Glyph"/>
	<x path="Int"/>
	<c path="lime.graphics.Image"/>
</f></renderGlyph>
		<renderGlyphs public="1" set="method" line="257"><f a="glyphs:fontSize">
	<c path="Array"><x path="lime.text.Glyph"/></c>
	<x path="Int"/>
	<x path="Map">
		<x path="lime.text.Glyph"/>
		<c path="lime.graphics.Image"/>
	</x>
</f></renderGlyphs>
		<__fromBytes set="method" line="421">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromBytes>
		<__fromFile set="method" line="442">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromFile>
		<__loadFromName set="method" line="463"><f a="name">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></__loadFromName>
		<__setSize set="method" line="571">
			<f a="size">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__setSize>
		<get_ascender set="method" line="587"><f a=""><x path="Int"/></f></get_ascender>
		<get_descender set="method" line="598"><f a=""><x path="Int"/></f></get_descender>
		<get_height set="method" line="609"><f a=""><x path="Int"/></f></get_height>
		<get_numGlyphs set="method" line="620"><f a=""><x path="Int"/></f></get_numGlyphs>
		<get_underlinePosition set="method" line="631"><f a=""><x path="Int"/></f></get_underlinePosition>
		<get_underlineThickness set="method" line="642"><f a=""><x path="Int"/></f></get_underlineThickness>
		<get_unitsPerEM set="method" line="653"><f a=""><x path="Int"/></f></get_unitsPerEM>
		<new public="1" set="method" line="60">
			<f a="?name" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ name : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.text.Glyph</e></m>
		</meta>
	</class>
	<typedef path="lime.text.NativeFontData" params="" file="/home/joshua/Development/Haxe/lime/lime/text/Font.hx" module="lime.text.Font"><a>
	<style_name><c path="String"/></style_name>
	<num_glyphs><x path="Int"/></num_glyphs>
	<kerning><c path="Array"><t path="lime.text.NativeKerningData"/></c></kerning>
	<is_italic><x path="Bool"/></is_italic>
	<is_fixed_width><x path="Bool"/></is_fixed_width>
	<is_bold><x path="Bool"/></is_bold>
	<height><x path="Int"/></height>
	<has_kerning><x path="Bool"/></has_kerning>
	<has_glyph_names><x path="Bool"/></has_glyph_names>
	<glyphs><c path="Array"><t path="lime.text.NativeGlyphData"/></c></glyphs>
	<family_name><c path="String"/></family_name>
	<em_size><x path="Int"/></em_size>
	<descend><x path="Int"/></descend>
	<ascend><x path="Int"/></ascend>
</a></typedef>
	<typedef path="lime.text.NativeGlyphData" params="" file="/home/joshua/Development/Haxe/lime/lime/text/Font.hx" module="lime.text.Font"><a>
	<points><c path="Array"><x path="Int"/></c></points>
	<min_y><x path="Int"/></min_y>
	<min_x><x path="Int"/></min_x>
	<max_y><x path="Int"/></max_y>
	<max_x><x path="Int"/></max_x>
	<char_code><x path="Int"/></char_code>
	<advance><x path="Int"/></advance>
</a></typedef>
	<typedef path="lime.text.NativeKerningData" params="" file="/home/joshua/Development/Haxe/lime/lime/text/Font.hx" module="lime.text.Font"><a>
	<y><x path="Int"/></y>
	<x><x path="Int"/></x>
	<right_glyph><x path="Int"/></right_glyph>
	<left_glyph><x path="Int"/></left_glyph>
</a></typedef>
	<abstract path="lime.text.Glyph" params="" file="/home/joshua/Development/Haxe/lime/lime/text/Glyph.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.text._Glyph.Glyph_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/text/Glyph.hx" private="1" module="lime.text.Glyph">
	<_new public="1" set="method" line="7" static="1">
		<f a="i">
			<x path="Int"/>
			<x path="lime.text.Glyph"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.text._Glyph.Glyph_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/text/Glyph.hx" private="1" module="lime.text.Glyph">
		<_new public="1" set="method" line="7" static="1">
			<f a="i">
				<x path="Int"/>
				<x path="lime.text.Glyph"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.text.GlyphMetrics" params="" file="/home/joshua/Development/Haxe/lime/lime/text/GlyphMetrics.hx">
		<advance public="1"><c path="lime.math.Vector2"/></advance>
		<height public="1"><x path="Int"/></height>
		<horizontalBearing public="1"><c path="lime.math.Vector2"/></horizontalBearing>
		<verticalBearing public="1"><c path="lime.math.Vector2"/></verticalBearing>
		<new public="1" set="method" line="21"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.text.GlyphPosition" params="" file="/home/joshua/Development/Haxe/lime/lime/text/GlyphPosition.hx">
		<advance public="1"><c path="lime.math.Vector2"/></advance>
		<glyph public="1"><x path="lime.text.Glyph"/></glyph>
		<offset public="1"><c path="lime.math.Vector2"/></offset>
		<new public="1" set="method" line="20">
			<f a="glyph:advance:?offset" v="::null">
				<x path="lime.text.Glyph"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : null }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.text.TextDirection" params="" file="/home/joshua/Development/Haxe/lime/lime/text/TextDirection.hx">
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.text._TextDirection.TextDirection_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/text/TextDirection.hx" private="1" module="lime.text.TextDirection">
	<INVALID public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
		<x path="lime.text.TextDirection"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID>
	<LEFT_TO_RIGHT public="1" get="inline" set="null" expr="cast 4" line="8" static="1">
		<x path="lime.text.TextDirection"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_TO_RIGHT>
	<RIGHT_TO_LEFT public="1" get="inline" set="null" expr="cast 5" line="9" static="1">
		<x path="lime.text.TextDirection"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_TO_LEFT>
	<TOP_TO_BOTTOM public="1" get="inline" set="null" expr="cast 6" line="10" static="1">
		<x path="lime.text.TextDirection"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOP_TO_BOTTOM>
	<BOTTOM_TO_TOP public="1" get="inline" set="null" expr="cast 7" line="11" static="1">
		<x path="lime.text.TextDirection"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOTTOM_TO_TOP>
	<backward public="1" get="accessor" set="null" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</backward>
	<forward public="1" get="accessor" set="null" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</forward>
	<horizontal public="1" get="accessor" set="null" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</horizontal>
	<vertical public="1" get="accessor" set="null" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</vertical>
	<reverse public="1" get="inline" set="null" line="20" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</reverse>
	<toString public="1" get="inline" set="null" line="27" static="1">
		<f a="this">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<get_backward get="inline" set="null" line="42" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_backward>
	<get_forward get="inline" set="null" line="49" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_forward>
	<get_horizontal get="inline" set="null" line="56" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_horizontal>
	<get_vertical get="inline" set="null" line="63" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_vertical>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.text._TextDirection.TextDirection_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/text/TextDirection.hx" private="1" module="lime.text.TextDirection">
		<INVALID public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
			<x path="lime.text.TextDirection"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID>
		<LEFT_TO_RIGHT public="1" get="inline" set="null" expr="cast 4" line="8" static="1">
			<x path="lime.text.TextDirection"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_TO_RIGHT>
		<RIGHT_TO_LEFT public="1" get="inline" set="null" expr="cast 5" line="9" static="1">
			<x path="lime.text.TextDirection"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_TO_LEFT>
		<TOP_TO_BOTTOM public="1" get="inline" set="null" expr="cast 6" line="10" static="1">
			<x path="lime.text.TextDirection"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOP_TO_BOTTOM>
		<BOTTOM_TO_TOP public="1" get="inline" set="null" expr="cast 7" line="11" static="1">
			<x path="lime.text.TextDirection"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOTTOM_TO_TOP>
		<backward public="1" get="accessor" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</backward>
		<forward public="1" get="accessor" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</forward>
		<horizontal public="1" get="accessor" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</horizontal>
		<vertical public="1" get="accessor" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</vertical>
		<reverse public="1" get="inline" set="null" line="20" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</reverse>
		<toString public="1" get="inline" set="null" line="27" static="1">
			<f a="this">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<get_backward get="inline" set="null" line="42" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_backward>
		<get_forward get="inline" set="null" line="49" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_forward>
		<get_horizontal get="inline" set="null" line="56" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_horizontal>
		<get_vertical get="inline" set="null" line="63" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_vertical>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.text.TextLayout" params="" file="/home/joshua/Development/Haxe/lime/lime/text/TextLayout.hx">
		<direction public="1" get="accessor" set="accessor"><x path="lime.text.TextDirection"/></direction>
		<font public="1" set="accessor"><c path="lime.text.Font"/></font>
		<glyphs public="1" get="accessor" set="null"><c path="Array"><x path="lime.text.Glyph"/></c></glyphs>
		<language public="1" get="accessor" set="accessor"><c path="String"/></language>
		<positions public="1" get="accessor" set="null">
			<c path="Array"><c path="lime.text.GlyphPosition"/></c>
			<meta><m n=":isVar"/></meta>
		</positions>
		<script public="1" get="accessor" set="accessor"><x path="lime.text.TextScript"/></script>
		<size public="1" set="accessor"><x path="Int"/></size>
		<text public="1" set="accessor"><c path="String"/></text>
		<__dirty><x path="Bool"/></__dirty>
		<__buffer>
			<c path="haxe.io.Bytes"/>
			<meta><m n=":noCompletion"/></meta>
		</__buffer>
		<__direction>
			<x path="lime.text.TextDirection"/>
			<meta><m n=":noCompletion"/></meta>
		</__direction>
		<__handle>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__handle>
		<__language>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__language>
		<__script>
			<x path="lime.text.TextScript"/>
			<meta><m n=":noCompletion"/></meta>
		</__script>
		<__position set="method" line="57">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__position>
		<get_positions set="method" line="118">
			<f a=""><c path="Array"><c path="lime.text.GlyphPosition"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_positions>
		<get_direction set="method" line="132">
			<f a=""><x path="lime.text.TextDirection"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_direction>
		<set_direction set="method" line="139">
			<f a="value">
				<x path="lime.text.TextDirection"/>
				<x path="lime.text.TextDirection"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_direction>
		<set_font set="method" line="156">
			<f a="value">
				<c path="lime.text.Font"/>
				<c path="lime.text.Font"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_font>
		<get_glyphs set="method" line="167">
			<f a=""><c path="Array"><x path="lime.text.Glyph"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_glyphs>
		<get_language set="method" line="182">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_language>
		<set_language set="method" line="189">
			<f a="value">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_language>
		<get_script set="method" line="206">
			<f a=""><x path="lime.text.TextScript"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_script>
		<set_script set="method" line="213">
			<f a="value">
				<x path="lime.text.TextScript"/>
				<x path="lime.text.TextScript"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_script>
		<set_size set="method" line="230">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_size>
		<set_text set="method" line="241">
			<f a="value">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_text>
		<new public="1" set="method" line="39">
			<f a="?text:?font:?size:?direction:?script:?language" v="&quot;&quot;:null:12:LEFT_TO_RIGHT:COMMON:&quot;en&quot;">
				<c path="String"/>
				<c path="lime.text.Font"/>
				<x path="Int"/>
				<x path="lime.text.TextDirection"/>
				<x path="lime.text.TextScript"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ language : "en", script : COMMON, direction : LEFT_TO_RIGHT, size : 12, font : null, text : "" }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.text.Font</e></m>
		</meta>
	</class>
	<abstract path="lime.text.TextScript" params="" file="/home/joshua/Development/Haxe/lime/lime/text/TextScript.hx">
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.text._TextScript.TextScript_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/text/TextScript.hx" private="1" module="lime.text.TextScript">
	<COMMON public="1" get="inline" set="null" expr="cast &quot;Zyyy&quot;" line="6" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Zyyy"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMMON>
	<INHERITED public="1" get="inline" set="null" expr="cast &quot;Zinh&quot;" line="7" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Zinh"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INHERITED>
	<UNKNOWN public="1" get="inline" set="null" expr="cast &quot;Zzzz&quot;" line="8" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Zzzz"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<ARABIC public="1" get="inline" set="null" expr="cast &quot;Arab&quot;" line="10" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Arab"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ARABIC>
	<ARMENIAN public="1" get="inline" set="null" expr="cast &quot;Armn&quot;" line="11" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Armn"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ARMENIAN>
	<BENGALI public="1" get="inline" set="null" expr="cast &quot;Beng&quot;" line="12" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Beng"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BENGALI>
	<CYRILLIC public="1" get="inline" set="null" expr="cast &quot;Cyrl&quot;" line="13" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Cyrl"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CYRILLIC>
	<DEVANAGARI public="1" get="inline" set="null" expr="cast &quot;Deva&quot;" line="14" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Deva"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEVANAGARI>
	<GEORGIAN public="1" get="inline" set="null" expr="cast &quot;Geor&quot;" line="15" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Geor"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GEORGIAN>
	<GREEK public="1" get="inline" set="null" expr="cast &quot;Grek&quot;" line="16" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Grek"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREEK>
	<GUJARATI public="1" get="inline" set="null" expr="cast &quot;Gujr&quot;" line="17" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Gujr"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GUJARATI>
	<GURMUKHI public="1" get="inline" set="null" expr="cast &quot;Guru&quot;" line="18" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Guru"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GURMUKHI>
	<HANGUL public="1" get="inline" set="null" expr="cast &quot;Hang&quot;" line="19" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Hang"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HANGUL>
	<HAN public="1" get="inline" set="null" expr="cast &quot;Hani&quot;" line="20" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Hani"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HAN>
	<HEBREW public="1" get="inline" set="null" expr="cast &quot;Hebr&quot;" line="21" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Hebr"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEBREW>
	<HIRAGANA public="1" get="inline" set="null" expr="cast &quot;Hira&quot;" line="22" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Hira"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HIRAGANA>
	<KANNADA public="1" get="inline" set="null" expr="cast &quot;Knda&quot;" line="23" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Knda"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KANNADA>
	<KATAKANA public="1" get="inline" set="null" expr="cast &quot;Kana&quot;" line="24" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Kana"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KATAKANA>
	<LAO public="1" get="inline" set="null" expr="cast &quot;Laoo&quot;" line="25" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Laoo"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LAO>
	<LATIN public="1" get="inline" set="null" expr="cast &quot;Latn&quot;" line="26" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Latn"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LATIN>
	<MALAYALAM public="1" get="inline" set="null" expr="cast &quot;Mlym&quot;" line="27" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mlym"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MALAYALAM>
	<ORIYA public="1" get="inline" set="null" expr="cast &quot;Orya&quot;" line="28" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Orya"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ORIYA>
	<TAMIL public="1" get="inline" set="null" expr="cast &quot;Taml&quot;" line="29" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Taml"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAMIL>
	<TELUGA public="1" get="inline" set="null" expr="cast &quot;Telu&quot;" line="30" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Telu"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TELUGA>
	<THAI public="1" get="inline" set="null" expr="cast &quot;Thai&quot;" line="31" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Thai"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THAI>
	<TIBETAN public="1" get="inline" set="null" expr="cast &quot;Tibt&quot;" line="33" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Tibt"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIBETAN>
	<BOPOMOFO public="1" get="inline" set="null" expr="cast &quot;Bopo&quot;" line="35" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Bopo"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOPOMOFO>
	<BRAILLE public="1" get="inline" set="null" expr="cast &quot;Brai&quot;" line="36" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Brai"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRAILLE>
	<CANADIAN_SYLLABICS public="1" get="inline" set="null" expr="cast &quot;Cans&quot;" line="37" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Cans"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CANADIAN_SYLLABICS>
	<CHEROKEE public="1" get="inline" set="null" expr="cast &quot;Cher&quot;" line="38" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Cher"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHEROKEE>
	<ETHIOPIC public="1" get="inline" set="null" expr="cast &quot;Ethi&quot;" line="39" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Ethi"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ETHIOPIC>
	<KHMER public="1" get="inline" set="null" expr="cast &quot;Khmr&quot;" line="40" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Khmr"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KHMER>
	<MONGOLIAN public="1" get="inline" set="null" expr="cast &quot;Mong&quot;" line="41" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mong"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MONGOLIAN>
	<MYANMAR public="1" get="inline" set="null" expr="cast &quot;Mymr&quot;" line="42" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mymr"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MYANMAR>
	<OGHAM public="1" get="inline" set="null" expr="cast &quot;Ogam&quot;" line="43" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Ogam"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OGHAM>
	<RUNIC public="1" get="inline" set="null" expr="cast &quot;Runr&quot;" line="44" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Runr"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RUNIC>
	<SINHALA public="1" get="inline" set="null" expr="cast &quot;Sinh&quot;" line="45" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Sinh"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SINHALA>
	<SYRIAC public="1" get="inline" set="null" expr="cast &quot;Syrc&quot;" line="46" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Syrc"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYRIAC>
	<THAANA public="1" get="inline" set="null" expr="cast &quot;Thaa&quot;" line="47" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Thaa"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THAANA>
	<YI public="1" get="inline" set="null" expr="cast &quot;Yiii&quot;" line="48" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Yiii"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</YI>
	<DESERET public="1" get="inline" set="null" expr="cast &quot;Dsrt&quot;" line="50" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Dsrt"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DESERET>
	<GOTHIC public="1" get="inline" set="null" expr="cast &quot;Goth&quot;" line="51" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Goth"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GOTHIC>
	<OLD_ITALIC public="1" get="inline" set="null" expr="cast &quot;Ital&quot;" line="52" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Ital"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OLD_ITALIC>
	<BUHID public="1" get="inline" set="null" expr="cast &quot;Buhd&quot;" line="54" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Buhd"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUHID>
	<HANUNOO public="1" get="inline" set="null" expr="cast &quot;Hano&quot;" line="55" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Hano"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HANUNOO>
	<TAGALOG public="1" get="inline" set="null" expr="cast &quot;Tglg&quot;" line="56" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Tglg"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAGALOG>
	<TAGBANWA public="1" get="inline" set="null" expr="cast &quot;Tagb&quot;" line="57" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Tagb"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAGBANWA>
	<CYPRIOT public="1" get="inline" set="null" expr="cast &quot;Cprt&quot;" line="59" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Cprt"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CYPRIOT>
	<LIMBU public="1" get="inline" set="null" expr="cast &quot;Limb&quot;" line="60" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Limb"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LIMBU>
	<LINEAR_B public="1" get="inline" set="null" expr="cast &quot;Linb&quot;" line="61" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Linb"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINEAR_B>
	<OSMANYA public="1" get="inline" set="null" expr="cast &quot;Osma&quot;" line="62" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Osma"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OSMANYA>
	<SHAVIAN public="1" get="inline" set="null" expr="cast &quot;Shaw&quot;" line="63" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Shaw"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHAVIAN>
	<TAI_LE public="1" get="inline" set="null" expr="cast &quot;Tale&quot;" line="64" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Tale"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAI_LE>
	<UGARITIC public="1" get="inline" set="null" expr="cast &quot;Ugar&quot;" line="65" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Ugar"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UGARITIC>
	<BUGINESE public="1" get="inline" set="null" expr="cast &quot;Bugi&quot;" line="67" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Bugi"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUGINESE>
	<COPTIC public="1" get="inline" set="null" expr="cast &quot;Copt&quot;" line="68" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Copt"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPTIC>
	<GLAGOLITIC public="1" get="inline" set="null" expr="cast &quot;Glag&quot;" line="69" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Glag"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GLAGOLITIC>
	<KHAROSHTHI public="1" get="inline" set="null" expr="cast &quot;Khar&quot;" line="70" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Khar"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KHAROSHTHI>
	<NEW_TAI_LUE public="1" get="inline" set="null" expr="cast &quot;Talu&quot;" line="71" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Talu"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEW_TAI_LUE>
	<OLD_PERSIAN public="1" get="inline" set="null" expr="cast &quot;Xpeo&quot;" line="72" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Xpeo"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OLD_PERSIAN>
	<SYLOTI_NAGRI public="1" get="inline" set="null" expr="cast &quot;Sylo&quot;" line="73" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Sylo"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYLOTI_NAGRI>
	<TIFINAGH public="1" get="inline" set="null" expr="cast &quot;Tfng&quot;" line="74" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Tfng"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIFINAGH>
	<BALINESE public="1" get="inline" set="null" expr="cast &quot;Bali&quot;" line="76" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Bali"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BALINESE>
	<CUNEIFORM public="1" get="inline" set="null" expr="cast &quot;Xsux&quot;" line="77" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Xsux"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUNEIFORM>
	<NKO public="1" get="inline" set="null" expr="cast &quot;Nkoo&quot;" line="78" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Nkoo"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NKO>
	<PHAGS_PA public="1" get="inline" set="null" expr="cast &quot;Phag&quot;" line="79" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Phag"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PHAGS_PA>
	<PHOENICIAN public="1" get="inline" set="null" expr="cast &quot;Phnx&quot;" line="80" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Phnx"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PHOENICIAN>
	<CARIAN public="1" get="inline" set="null" expr="cast &quot;Cari&quot;" line="82" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Cari"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CARIAN>
	<CHAM public="1" get="inline" set="null" expr="cast &quot;Cham&quot;" line="83" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Cham"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHAM>
	<KAYAH_LI public="1" get="inline" set="null" expr="cast &quot;Kali&quot;" line="84" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Kali"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KAYAH_LI>
	<LEPCHA public="1" get="inline" set="null" expr="cast &quot;Lepc&quot;" line="85" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Lepc"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEPCHA>
	<LYCIAN public="1" get="inline" set="null" expr="cast &quot;Lyci&quot;" line="86" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Lyci"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LYCIAN>
	<LYDIAN public="1" get="inline" set="null" expr="cast &quot;Lydi&quot;" line="87" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Lydi"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LYDIAN>
	<OL_CHIKI public="1" get="inline" set="null" expr="cast &quot;Olck&quot;" line="88" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Olck"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OL_CHIKI>
	<REJANG public="1" get="inline" set="null" expr="cast &quot;Rjng&quot;" line="89" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Rjng"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REJANG>
	<SAURASHTRA public="1" get="inline" set="null" expr="cast &quot;Saur&quot;" line="90" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Saur"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAURASHTRA>
	<SUNDANESE public="1" get="inline" set="null" expr="cast &quot;Sund&quot;" line="91" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Sund"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SUNDANESE>
	<VAI public="1" get="inline" set="null" expr="cast &quot;Vaii&quot;" line="92" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Vaii"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VAI>
	<AVESTAN public="1" get="inline" set="null" expr="cast &quot;Avst&quot;" line="94" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Avst"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AVESTAN>
	<BAMUM public="1" get="inline" set="null" expr="cast &quot;Bamu&quot;" line="95" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Bamu"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BAMUM>
	<EGYPTIAN_HIEROGLYPHS public="1" get="inline" set="null" expr="cast &quot;Egyp&quot;" line="96" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Egyp"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EGYPTIAN_HIEROGLYPHS>
	<IMPERIAL_ARAMAIC public="1" get="inline" set="null" expr="cast &quot;Armi&quot;" line="97" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Armi"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IMPERIAL_ARAMAIC>
	<INSCRIPTIONAL_PAHLAVI public="1" get="inline" set="null" expr="cast &quot;Phli&quot;" line="98" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Phli"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INSCRIPTIONAL_PAHLAVI>
	<INSCRIPTIONAL_PARTHIAN public="1" get="inline" set="null" expr="cast &quot;Prti&quot;" line="99" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Prti"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INSCRIPTIONAL_PARTHIAN>
	<JAVANESE public="1" get="inline" set="null" expr="cast &quot;Java&quot;" line="100" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Java"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</JAVANESE>
	<KAITHI public="1" get="inline" set="null" expr="cast &quot;Kthi&quot;" line="101" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Kthi"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KAITHI>
	<LISU public="1" get="inline" set="null" expr="cast &quot;Lisu&quot;" line="102" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Lisu"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LISU>
	<MEETEI_MAYEK public="1" get="inline" set="null" expr="cast &quot;Mtei&quot;" line="103" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mtei"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEETEI_MAYEK>
	<OLD_SOUTH_ARABIAN public="1" get="inline" set="null" expr="cast &quot;Sarb&quot;" line="104" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Sarb"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OLD_SOUTH_ARABIAN>
	<OLD_TURKIC public="1" get="inline" set="null" expr="cast &quot;Orkh&quot;" line="105" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Orkh"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OLD_TURKIC>
	<SAMARITAN public="1" get="inline" set="null" expr="cast &quot;Samr&quot;" line="106" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Samr"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMARITAN>
	<TAI_THAM public="1" get="inline" set="null" expr="cast &quot;Lana&quot;" line="107" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Lana"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAI_THAM>
	<TAI_VIET public="1" get="inline" set="null" expr="cast &quot;Tavt&quot;" line="108" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Tavt"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAI_VIET>
	<BATAK public="1" get="inline" set="null" expr="cast &quot;Batk&quot;" line="110" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Batk"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BATAK>
	<BRAHMI public="1" get="inline" set="null" expr="cast &quot;Brah&quot;" line="111" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Brah"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRAHMI>
	<MANDAIC public="1" get="inline" set="null" expr="cast &quot;Mand&quot;" line="112" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mand"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MANDAIC>
	<CHAKMA public="1" get="inline" set="null" expr="cast &quot;Cakm&quot;" line="114" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Cakm"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHAKMA>
	<MEROITIC_CURSIVE public="1" get="inline" set="null" expr="cast &quot;Merc&quot;" line="115" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Merc"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEROITIC_CURSIVE>
	<MEROITIC_HIEROGLYPHS public="1" get="inline" set="null" expr="cast &quot;Mero&quot;" line="116" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mero"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEROITIC_HIEROGLYPHS>
	<MIAO public="1" get="inline" set="null" expr="cast &quot;Plrd&quot;" line="117" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Plrd"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MIAO>
	<SHARADA public="1" get="inline" set="null" expr="cast &quot;Shrd&quot;" line="118" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Shrd"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHARADA>
	<SORA_SOMPENG public="1" get="inline" set="null" expr="cast &quot;Sora&quot;" line="119" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Sora"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SORA_SOMPENG>
	<TAKRI public="1" get="inline" set="null" expr="cast &quot;Takr&quot;" line="120" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Takr"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAKRI>
	<BASSA_VAH public="1" get="inline" set="null" expr="cast &quot;Bass&quot;" line="122" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Bass"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BASSA_VAH>
	<CAUCASIAN_ALBANIAN public="1" get="inline" set="null" expr="cast &quot;Aghb&quot;" line="123" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Aghb"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAUCASIAN_ALBANIAN>
	<DUPLOYAN public="1" get="inline" set="null" expr="cast &quot;Dupl&quot;" line="124" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Dupl"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DUPLOYAN>
	<ELBASAN public="1" get="inline" set="null" expr="cast &quot;Elba&quot;" line="125" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Elba"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ELBASAN>
	<GRANTHA public="1" get="inline" set="null" expr="cast &quot;Gran&quot;" line="126" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Gran"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRANTHA>
	<KHOJKI public="1" get="inline" set="null" expr="cast &quot;Khoj&quot;" line="127" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Khoj"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KHOJKI>
	<KHUDAWADI public="1" get="inline" set="null" expr="cast &quot;Sind&quot;" line="128" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Sind"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KHUDAWADI>
	<LINEAR_A public="1" get="inline" set="null" expr="cast &quot;Lina&quot;" line="129" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Lina"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINEAR_A>
	<MAHAJANI public="1" get="inline" set="null" expr="cast &quot;Mahj&quot;" line="130" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mahj"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAHAJANI>
	<MANICHAEAN public="1" get="inline" set="null" expr="cast &quot;Mani&quot;" line="131" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mani"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MANICHAEAN>
	<MENDE_KIKAKUI public="1" get="inline" set="null" expr="cast &quot;Mend&quot;" line="132" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mend"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MENDE_KIKAKUI>
	<MODI public="1" get="inline" set="null" expr="cast &quot;Modi&quot;" line="133" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Modi"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MODI>
	<MRO public="1" get="inline" set="null" expr="cast &quot;Mroo&quot;" line="134" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Mroo"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MRO>
	<NABATAEAN public="1" get="inline" set="null" expr="cast &quot;Nbat&quot;" line="135" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Nbat"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NABATAEAN>
	<OLD_NORTH_ARABIAN public="1" get="inline" set="null" expr="cast &quot;Narb&quot;" line="136" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Narb"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OLD_NORTH_ARABIAN>
	<OLD_PERMIC public="1" get="inline" set="null" expr="cast &quot;Perm&quot;" line="137" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Perm"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OLD_PERMIC>
	<PAHAWH_HMONG public="1" get="inline" set="null" expr="cast &quot;Hmng&quot;" line="138" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Hmng"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAHAWH_HMONG>
	<PALMYRENE public="1" get="inline" set="null" expr="cast &quot;Palm&quot;" line="139" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Palm"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PALMYRENE>
	<PAU_CIN_HAU public="1" get="inline" set="null" expr="cast &quot;Pauc&quot;" line="140" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Pauc"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAU_CIN_HAU>
	<PSALTER_PAHLAVI public="1" get="inline" set="null" expr="cast &quot;Phlp&quot;" line="141" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Phlp"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PSALTER_PAHLAVI>
	<SIDDHAM public="1" get="inline" set="null" expr="cast &quot;Sidd&quot;" line="142" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Sidd"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SIDDHAM>
	<TIRHUTA public="1" get="inline" set="null" expr="cast &quot;Tirh&quot;" line="143" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Tirh"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIRHUTA>
	<WARANG_CITI public="1" get="inline" set="null" expr="cast &quot;Wara&quot;" line="144" static="1">
		<x path="lime.text.TextScript"/>
		<meta>
			<m n=":value"><e>cast "Wara"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WARANG_CITI>
	<rightToLeft public="1" get="accessor" set="null" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</rightToLeft>
	<get_rightToLeft get="inline" set="null" line="150" static="1">
		<f a="this">
			<c path="String"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_rightToLeft>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.text._TextScript.TextScript_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/text/TextScript.hx" private="1" module="lime.text.TextScript">
		<COMMON public="1" get="inline" set="null" expr="cast &quot;Zyyy&quot;" line="6" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Zyyy"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMMON>
		<INHERITED public="1" get="inline" set="null" expr="cast &quot;Zinh&quot;" line="7" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Zinh"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INHERITED>
		<UNKNOWN public="1" get="inline" set="null" expr="cast &quot;Zzzz&quot;" line="8" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Zzzz"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<ARABIC public="1" get="inline" set="null" expr="cast &quot;Arab&quot;" line="10" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Arab"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ARABIC>
		<ARMENIAN public="1" get="inline" set="null" expr="cast &quot;Armn&quot;" line="11" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Armn"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ARMENIAN>
		<BENGALI public="1" get="inline" set="null" expr="cast &quot;Beng&quot;" line="12" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Beng"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BENGALI>
		<CYRILLIC public="1" get="inline" set="null" expr="cast &quot;Cyrl&quot;" line="13" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Cyrl"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CYRILLIC>
		<DEVANAGARI public="1" get="inline" set="null" expr="cast &quot;Deva&quot;" line="14" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Deva"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEVANAGARI>
		<GEORGIAN public="1" get="inline" set="null" expr="cast &quot;Geor&quot;" line="15" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Geor"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GEORGIAN>
		<GREEK public="1" get="inline" set="null" expr="cast &quot;Grek&quot;" line="16" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Grek"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREEK>
		<GUJARATI public="1" get="inline" set="null" expr="cast &quot;Gujr&quot;" line="17" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Gujr"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GUJARATI>
		<GURMUKHI public="1" get="inline" set="null" expr="cast &quot;Guru&quot;" line="18" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Guru"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GURMUKHI>
		<HANGUL public="1" get="inline" set="null" expr="cast &quot;Hang&quot;" line="19" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Hang"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HANGUL>
		<HAN public="1" get="inline" set="null" expr="cast &quot;Hani&quot;" line="20" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Hani"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HAN>
		<HEBREW public="1" get="inline" set="null" expr="cast &quot;Hebr&quot;" line="21" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Hebr"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEBREW>
		<HIRAGANA public="1" get="inline" set="null" expr="cast &quot;Hira&quot;" line="22" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Hira"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HIRAGANA>
		<KANNADA public="1" get="inline" set="null" expr="cast &quot;Knda&quot;" line="23" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Knda"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KANNADA>
		<KATAKANA public="1" get="inline" set="null" expr="cast &quot;Kana&quot;" line="24" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Kana"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KATAKANA>
		<LAO public="1" get="inline" set="null" expr="cast &quot;Laoo&quot;" line="25" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Laoo"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LAO>
		<LATIN public="1" get="inline" set="null" expr="cast &quot;Latn&quot;" line="26" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Latn"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LATIN>
		<MALAYALAM public="1" get="inline" set="null" expr="cast &quot;Mlym&quot;" line="27" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mlym"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MALAYALAM>
		<ORIYA public="1" get="inline" set="null" expr="cast &quot;Orya&quot;" line="28" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Orya"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ORIYA>
		<TAMIL public="1" get="inline" set="null" expr="cast &quot;Taml&quot;" line="29" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Taml"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAMIL>
		<TELUGA public="1" get="inline" set="null" expr="cast &quot;Telu&quot;" line="30" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Telu"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TELUGA>
		<THAI public="1" get="inline" set="null" expr="cast &quot;Thai&quot;" line="31" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Thai"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THAI>
		<TIBETAN public="1" get="inline" set="null" expr="cast &quot;Tibt&quot;" line="33" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Tibt"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIBETAN>
		<BOPOMOFO public="1" get="inline" set="null" expr="cast &quot;Bopo&quot;" line="35" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Bopo"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOPOMOFO>
		<BRAILLE public="1" get="inline" set="null" expr="cast &quot;Brai&quot;" line="36" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Brai"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRAILLE>
		<CANADIAN_SYLLABICS public="1" get="inline" set="null" expr="cast &quot;Cans&quot;" line="37" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Cans"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CANADIAN_SYLLABICS>
		<CHEROKEE public="1" get="inline" set="null" expr="cast &quot;Cher&quot;" line="38" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Cher"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHEROKEE>
		<ETHIOPIC public="1" get="inline" set="null" expr="cast &quot;Ethi&quot;" line="39" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Ethi"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ETHIOPIC>
		<KHMER public="1" get="inline" set="null" expr="cast &quot;Khmr&quot;" line="40" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Khmr"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KHMER>
		<MONGOLIAN public="1" get="inline" set="null" expr="cast &quot;Mong&quot;" line="41" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mong"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MONGOLIAN>
		<MYANMAR public="1" get="inline" set="null" expr="cast &quot;Mymr&quot;" line="42" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mymr"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MYANMAR>
		<OGHAM public="1" get="inline" set="null" expr="cast &quot;Ogam&quot;" line="43" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Ogam"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OGHAM>
		<RUNIC public="1" get="inline" set="null" expr="cast &quot;Runr&quot;" line="44" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Runr"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RUNIC>
		<SINHALA public="1" get="inline" set="null" expr="cast &quot;Sinh&quot;" line="45" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Sinh"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SINHALA>
		<SYRIAC public="1" get="inline" set="null" expr="cast &quot;Syrc&quot;" line="46" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Syrc"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYRIAC>
		<THAANA public="1" get="inline" set="null" expr="cast &quot;Thaa&quot;" line="47" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Thaa"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THAANA>
		<YI public="1" get="inline" set="null" expr="cast &quot;Yiii&quot;" line="48" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Yiii"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</YI>
		<DESERET public="1" get="inline" set="null" expr="cast &quot;Dsrt&quot;" line="50" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Dsrt"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DESERET>
		<GOTHIC public="1" get="inline" set="null" expr="cast &quot;Goth&quot;" line="51" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Goth"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GOTHIC>
		<OLD_ITALIC public="1" get="inline" set="null" expr="cast &quot;Ital&quot;" line="52" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Ital"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OLD_ITALIC>
		<BUHID public="1" get="inline" set="null" expr="cast &quot;Buhd&quot;" line="54" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Buhd"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUHID>
		<HANUNOO public="1" get="inline" set="null" expr="cast &quot;Hano&quot;" line="55" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Hano"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HANUNOO>
		<TAGALOG public="1" get="inline" set="null" expr="cast &quot;Tglg&quot;" line="56" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Tglg"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAGALOG>
		<TAGBANWA public="1" get="inline" set="null" expr="cast &quot;Tagb&quot;" line="57" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Tagb"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAGBANWA>
		<CYPRIOT public="1" get="inline" set="null" expr="cast &quot;Cprt&quot;" line="59" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Cprt"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CYPRIOT>
		<LIMBU public="1" get="inline" set="null" expr="cast &quot;Limb&quot;" line="60" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Limb"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LIMBU>
		<LINEAR_B public="1" get="inline" set="null" expr="cast &quot;Linb&quot;" line="61" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Linb"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINEAR_B>
		<OSMANYA public="1" get="inline" set="null" expr="cast &quot;Osma&quot;" line="62" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Osma"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OSMANYA>
		<SHAVIAN public="1" get="inline" set="null" expr="cast &quot;Shaw&quot;" line="63" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Shaw"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHAVIAN>
		<TAI_LE public="1" get="inline" set="null" expr="cast &quot;Tale&quot;" line="64" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Tale"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAI_LE>
		<UGARITIC public="1" get="inline" set="null" expr="cast &quot;Ugar&quot;" line="65" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Ugar"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UGARITIC>
		<BUGINESE public="1" get="inline" set="null" expr="cast &quot;Bugi&quot;" line="67" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Bugi"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUGINESE>
		<COPTIC public="1" get="inline" set="null" expr="cast &quot;Copt&quot;" line="68" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Copt"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPTIC>
		<GLAGOLITIC public="1" get="inline" set="null" expr="cast &quot;Glag&quot;" line="69" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Glag"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GLAGOLITIC>
		<KHAROSHTHI public="1" get="inline" set="null" expr="cast &quot;Khar&quot;" line="70" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Khar"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KHAROSHTHI>
		<NEW_TAI_LUE public="1" get="inline" set="null" expr="cast &quot;Talu&quot;" line="71" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Talu"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEW_TAI_LUE>
		<OLD_PERSIAN public="1" get="inline" set="null" expr="cast &quot;Xpeo&quot;" line="72" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Xpeo"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OLD_PERSIAN>
		<SYLOTI_NAGRI public="1" get="inline" set="null" expr="cast &quot;Sylo&quot;" line="73" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Sylo"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYLOTI_NAGRI>
		<TIFINAGH public="1" get="inline" set="null" expr="cast &quot;Tfng&quot;" line="74" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Tfng"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIFINAGH>
		<BALINESE public="1" get="inline" set="null" expr="cast &quot;Bali&quot;" line="76" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Bali"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BALINESE>
		<CUNEIFORM public="1" get="inline" set="null" expr="cast &quot;Xsux&quot;" line="77" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Xsux"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUNEIFORM>
		<NKO public="1" get="inline" set="null" expr="cast &quot;Nkoo&quot;" line="78" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Nkoo"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NKO>
		<PHAGS_PA public="1" get="inline" set="null" expr="cast &quot;Phag&quot;" line="79" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Phag"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PHAGS_PA>
		<PHOENICIAN public="1" get="inline" set="null" expr="cast &quot;Phnx&quot;" line="80" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Phnx"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PHOENICIAN>
		<CARIAN public="1" get="inline" set="null" expr="cast &quot;Cari&quot;" line="82" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Cari"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CARIAN>
		<CHAM public="1" get="inline" set="null" expr="cast &quot;Cham&quot;" line="83" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Cham"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHAM>
		<KAYAH_LI public="1" get="inline" set="null" expr="cast &quot;Kali&quot;" line="84" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Kali"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KAYAH_LI>
		<LEPCHA public="1" get="inline" set="null" expr="cast &quot;Lepc&quot;" line="85" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Lepc"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEPCHA>
		<LYCIAN public="1" get="inline" set="null" expr="cast &quot;Lyci&quot;" line="86" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Lyci"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LYCIAN>
		<LYDIAN public="1" get="inline" set="null" expr="cast &quot;Lydi&quot;" line="87" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Lydi"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LYDIAN>
		<OL_CHIKI public="1" get="inline" set="null" expr="cast &quot;Olck&quot;" line="88" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Olck"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OL_CHIKI>
		<REJANG public="1" get="inline" set="null" expr="cast &quot;Rjng&quot;" line="89" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Rjng"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REJANG>
		<SAURASHTRA public="1" get="inline" set="null" expr="cast &quot;Saur&quot;" line="90" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Saur"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAURASHTRA>
		<SUNDANESE public="1" get="inline" set="null" expr="cast &quot;Sund&quot;" line="91" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Sund"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SUNDANESE>
		<VAI public="1" get="inline" set="null" expr="cast &quot;Vaii&quot;" line="92" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Vaii"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VAI>
		<AVESTAN public="1" get="inline" set="null" expr="cast &quot;Avst&quot;" line="94" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Avst"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AVESTAN>
		<BAMUM public="1" get="inline" set="null" expr="cast &quot;Bamu&quot;" line="95" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Bamu"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BAMUM>
		<EGYPTIAN_HIEROGLYPHS public="1" get="inline" set="null" expr="cast &quot;Egyp&quot;" line="96" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Egyp"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EGYPTIAN_HIEROGLYPHS>
		<IMPERIAL_ARAMAIC public="1" get="inline" set="null" expr="cast &quot;Armi&quot;" line="97" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Armi"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IMPERIAL_ARAMAIC>
		<INSCRIPTIONAL_PAHLAVI public="1" get="inline" set="null" expr="cast &quot;Phli&quot;" line="98" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Phli"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INSCRIPTIONAL_PAHLAVI>
		<INSCRIPTIONAL_PARTHIAN public="1" get="inline" set="null" expr="cast &quot;Prti&quot;" line="99" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Prti"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INSCRIPTIONAL_PARTHIAN>
		<JAVANESE public="1" get="inline" set="null" expr="cast &quot;Java&quot;" line="100" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Java"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</JAVANESE>
		<KAITHI public="1" get="inline" set="null" expr="cast &quot;Kthi&quot;" line="101" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Kthi"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KAITHI>
		<LISU public="1" get="inline" set="null" expr="cast &quot;Lisu&quot;" line="102" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Lisu"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LISU>
		<MEETEI_MAYEK public="1" get="inline" set="null" expr="cast &quot;Mtei&quot;" line="103" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mtei"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEETEI_MAYEK>
		<OLD_SOUTH_ARABIAN public="1" get="inline" set="null" expr="cast &quot;Sarb&quot;" line="104" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Sarb"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OLD_SOUTH_ARABIAN>
		<OLD_TURKIC public="1" get="inline" set="null" expr="cast &quot;Orkh&quot;" line="105" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Orkh"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OLD_TURKIC>
		<SAMARITAN public="1" get="inline" set="null" expr="cast &quot;Samr&quot;" line="106" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Samr"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMARITAN>
		<TAI_THAM public="1" get="inline" set="null" expr="cast &quot;Lana&quot;" line="107" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Lana"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAI_THAM>
		<TAI_VIET public="1" get="inline" set="null" expr="cast &quot;Tavt&quot;" line="108" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Tavt"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAI_VIET>
		<BATAK public="1" get="inline" set="null" expr="cast &quot;Batk&quot;" line="110" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Batk"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BATAK>
		<BRAHMI public="1" get="inline" set="null" expr="cast &quot;Brah&quot;" line="111" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Brah"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRAHMI>
		<MANDAIC public="1" get="inline" set="null" expr="cast &quot;Mand&quot;" line="112" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mand"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MANDAIC>
		<CHAKMA public="1" get="inline" set="null" expr="cast &quot;Cakm&quot;" line="114" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Cakm"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHAKMA>
		<MEROITIC_CURSIVE public="1" get="inline" set="null" expr="cast &quot;Merc&quot;" line="115" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Merc"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEROITIC_CURSIVE>
		<MEROITIC_HIEROGLYPHS public="1" get="inline" set="null" expr="cast &quot;Mero&quot;" line="116" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mero"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEROITIC_HIEROGLYPHS>
		<MIAO public="1" get="inline" set="null" expr="cast &quot;Plrd&quot;" line="117" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Plrd"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MIAO>
		<SHARADA public="1" get="inline" set="null" expr="cast &quot;Shrd&quot;" line="118" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Shrd"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHARADA>
		<SORA_SOMPENG public="1" get="inline" set="null" expr="cast &quot;Sora&quot;" line="119" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Sora"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SORA_SOMPENG>
		<TAKRI public="1" get="inline" set="null" expr="cast &quot;Takr&quot;" line="120" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Takr"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAKRI>
		<BASSA_VAH public="1" get="inline" set="null" expr="cast &quot;Bass&quot;" line="122" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Bass"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BASSA_VAH>
		<CAUCASIAN_ALBANIAN public="1" get="inline" set="null" expr="cast &quot;Aghb&quot;" line="123" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Aghb"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAUCASIAN_ALBANIAN>
		<DUPLOYAN public="1" get="inline" set="null" expr="cast &quot;Dupl&quot;" line="124" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Dupl"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DUPLOYAN>
		<ELBASAN public="1" get="inline" set="null" expr="cast &quot;Elba&quot;" line="125" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Elba"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ELBASAN>
		<GRANTHA public="1" get="inline" set="null" expr="cast &quot;Gran&quot;" line="126" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Gran"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRANTHA>
		<KHOJKI public="1" get="inline" set="null" expr="cast &quot;Khoj&quot;" line="127" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Khoj"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KHOJKI>
		<KHUDAWADI public="1" get="inline" set="null" expr="cast &quot;Sind&quot;" line="128" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Sind"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KHUDAWADI>
		<LINEAR_A public="1" get="inline" set="null" expr="cast &quot;Lina&quot;" line="129" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Lina"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINEAR_A>
		<MAHAJANI public="1" get="inline" set="null" expr="cast &quot;Mahj&quot;" line="130" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mahj"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAHAJANI>
		<MANICHAEAN public="1" get="inline" set="null" expr="cast &quot;Mani&quot;" line="131" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mani"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MANICHAEAN>
		<MENDE_KIKAKUI public="1" get="inline" set="null" expr="cast &quot;Mend&quot;" line="132" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mend"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MENDE_KIKAKUI>
		<MODI public="1" get="inline" set="null" expr="cast &quot;Modi&quot;" line="133" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Modi"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MODI>
		<MRO public="1" get="inline" set="null" expr="cast &quot;Mroo&quot;" line="134" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Mroo"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MRO>
		<NABATAEAN public="1" get="inline" set="null" expr="cast &quot;Nbat&quot;" line="135" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Nbat"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NABATAEAN>
		<OLD_NORTH_ARABIAN public="1" get="inline" set="null" expr="cast &quot;Narb&quot;" line="136" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Narb"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OLD_NORTH_ARABIAN>
		<OLD_PERMIC public="1" get="inline" set="null" expr="cast &quot;Perm&quot;" line="137" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Perm"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OLD_PERMIC>
		<PAHAWH_HMONG public="1" get="inline" set="null" expr="cast &quot;Hmng&quot;" line="138" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Hmng"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAHAWH_HMONG>
		<PALMYRENE public="1" get="inline" set="null" expr="cast &quot;Palm&quot;" line="139" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Palm"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PALMYRENE>
		<PAU_CIN_HAU public="1" get="inline" set="null" expr="cast &quot;Pauc&quot;" line="140" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Pauc"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAU_CIN_HAU>
		<PSALTER_PAHLAVI public="1" get="inline" set="null" expr="cast &quot;Phlp&quot;" line="141" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Phlp"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PSALTER_PAHLAVI>
		<SIDDHAM public="1" get="inline" set="null" expr="cast &quot;Sidd&quot;" line="142" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Sidd"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SIDDHAM>
		<TIRHUTA public="1" get="inline" set="null" expr="cast &quot;Tirh&quot;" line="143" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Tirh"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIRHUTA>
		<WARANG_CITI public="1" get="inline" set="null" expr="cast &quot;Wara&quot;" line="144" static="1">
			<x path="lime.text.TextScript"/>
			<meta>
				<m n=":value"><e>cast "Wara"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WARANG_CITI>
		<rightToLeft public="1" get="accessor" set="null" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</rightToLeft>
		<get_rightToLeft get="inline" set="null" line="150" static="1">
			<f a="this">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_rightToLeft>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.ui.FileDialog" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/FileDialog.hx">
		<onCancel public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onCancel>
		<onOpen public="1" expr="new Event&lt;Resource&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="lime.utils.Resource"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Resource>()]]></e></m></meta>
		</onOpen>
		<onSave public="1" expr="new Event&lt;String&gt;()">
			<c path="lime.app.Event"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onSave>
		<onSelect public="1" expr="new Event&lt;String&gt;()">
			<c path="lime.app.Event"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onSelect>
		<onSelectMultiple public="1" expr="new Event&lt;Array&lt;String&gt;&gt;()">
			<c path="lime.app.Event"><f a="">
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Array<String>>()]]></e></m></meta>
		</onSelectMultiple>
		<browse public="1" set="method" line="47">
			<f a="?type:?filter:?defaultPath:?title" v="null:null:null:null">
				<e path="lime.ui.FileDialogType"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ title : null, defaultPath : null, filter : null, type : null }</e></m></meta>
		</browse>
		<open public="1" set="method" line="152">
			<f a="?filter:?defaultPath:?title" v="null:null:null">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ title : null, defaultPath : null, filter : null }</e></m></meta>
		</open>
		<save public="1" set="method" line="200">
			<f a="data:?filter:?defaultPath:?title" v=":null:null:null">
				<x path="lime.utils.Resource"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ title : null, defaultPath : null, filter : null }</e></m></meta>
		</save>
		<new public="1" set="method" line="40"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.Image</e></m>
		</meta>
	</class>
	<enum path="lime.ui.FileDialogType" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/FileDialogType.hx">
		<OPEN/>
		<OPEN_MULTIPLE/>
		<SAVE/>
		<OPEN_DIRECTORY/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime.ui.Gamepad" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/Gamepad.hx">
		<devices public="1" expr="new Map&lt;Int,Gamepad&gt;()" line="19" static="1">
			<x path="Map">
				<x path="Int"/>
				<c path="lime.ui.Gamepad"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Gamepad>()]]></e></m></meta>
		</devices>
		<onConnect public="1" expr="new Event&lt;Gamepad&gt;()" line="20" static="1">
			<c path="lime.app.Event"><f a="">
	<c path="lime.ui.Gamepad"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Gamepad>()]]></e></m></meta>
		</onConnect>
		<addMappings public="1" set="method" line="40" static="1"><f a="mappings">
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></addMappings>
		<__connect set="method" line="49" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__connect>
		<__disconnect set="method" line="62" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__disconnect>
		<connected public="1" set="null"><x path="Bool"/></connected>
		<guid public="1" get="accessor" set="null"><c path="String"/></guid>
		<id public="1" set="null"><x path="Int"/></id>
		<name public="1" get="accessor" set="null"><c path="String"/></name>
		<onAxisMove public="1" expr="new Event&lt;GamepadAxis -&gt; Float&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="lime.ui.GamepadAxis"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<GamepadAxis -> Float>()]]></e></m></meta>
		</onAxisMove>
		<onButtonDown public="1" expr="new Event&lt;GamepadButton&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<GamepadButton>()]]></e></m></meta>
		</onButtonDown>
		<onButtonUp public="1" expr="new Event&lt;GamepadButton&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<GamepadButton>()]]></e></m></meta>
		</onButtonUp>
		<onDisconnect public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onDisconnect>
		<get_guid get="inline" set="null" line="79">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_guid>
		<get_name get="inline" set="null" line="93">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_name>
		<new public="1" set="method" line="32"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.ui.Joystick</e></m>
		</meta>
	</class>
	<abstract path="lime.ui.GamepadAxis" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/GamepadAxis.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._GamepadAxis.GamepadAxis_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/GamepadAxis.hx" private="1" module="lime.ui.GamepadAxis">
	<LEFT_X public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_X>
	<LEFT_Y public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_Y>
	<RIGHT_X public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_X>
	<RIGHT_Y public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_Y>
	<TRIGGER_LEFT public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRIGGER_LEFT>
	<TRIGGER_RIGHT public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRIGGER_RIGHT>
	<toString public="1" get="inline" set="null" line="15" static="1">
		<f a="this">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._GamepadAxis.GamepadAxis_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/GamepadAxis.hx" private="1" module="lime.ui.GamepadAxis">
		<LEFT_X public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_X>
		<LEFT_Y public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_Y>
		<RIGHT_X public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_X>
		<RIGHT_Y public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_Y>
		<TRIGGER_LEFT public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRIGGER_LEFT>
		<TRIGGER_RIGHT public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRIGGER_RIGHT>
		<toString public="1" get="inline" set="null" line="15" static="1">
			<f a="this">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.ui.GamepadButton" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/GamepadButton.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._GamepadButton.GamepadButton_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/GamepadButton.hx" private="1" module="lime.ui.GamepadButton">
	<A public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<X public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<BACK public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACK>
	<GUIDE public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GUIDE>
	<START public="1" get="inline" set="null" expr="cast 6" line="13" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</START>
	<LEFT_STICK public="1" get="inline" set="null" expr="cast 7" line="14" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_STICK>
	<RIGHT_STICK public="1" get="inline" set="null" expr="cast 8" line="15" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_STICK>
	<LEFT_SHOULDER public="1" get="inline" set="null" expr="cast 9" line="16" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHOULDER>
	<RIGHT_SHOULDER public="1" get="inline" set="null" expr="cast 10" line="17" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHOULDER>
	<DPAD_UP public="1" get="inline" set="null" expr="cast 11" line="18" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_UP>
	<DPAD_DOWN public="1" get="inline" set="null" expr="cast 12" line="19" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_DOWN>
	<DPAD_LEFT public="1" get="inline" set="null" expr="cast 13" line="20" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_LEFT>
	<DPAD_RIGHT public="1" get="inline" set="null" expr="cast 14" line="21" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_RIGHT>
	<toString public="1" get="inline" set="null" line="24" static="1">
		<f a="this">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._GamepadButton.GamepadButton_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/GamepadButton.hx" private="1" module="lime.ui.GamepadButton">
		<A public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<X public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<BACK public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACK>
		<GUIDE public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GUIDE>
		<START public="1" get="inline" set="null" expr="cast 6" line="13" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</START>
		<LEFT_STICK public="1" get="inline" set="null" expr="cast 7" line="14" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_STICK>
		<RIGHT_STICK public="1" get="inline" set="null" expr="cast 8" line="15" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_STICK>
		<LEFT_SHOULDER public="1" get="inline" set="null" expr="cast 9" line="16" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHOULDER>
		<RIGHT_SHOULDER public="1" get="inline" set="null" expr="cast 10" line="17" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHOULDER>
		<DPAD_UP public="1" get="inline" set="null" expr="cast 11" line="18" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_UP>
		<DPAD_DOWN public="1" get="inline" set="null" expr="cast 12" line="19" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_DOWN>
		<DPAD_LEFT public="1" get="inline" set="null" expr="cast 13" line="20" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_LEFT>
		<DPAD_RIGHT public="1" get="inline" set="null" expr="cast 14" line="21" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_RIGHT>
		<toString public="1" get="inline" set="null" line="24" static="1">
			<f a="this">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.ui.Haptic" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/Haptic.hx">
		<vibrate public="1" set="method" line="24" static="1"><f a="period:duration">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vibrate>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.ui.Joystick" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/Joystick.hx">
		<devices public="1" expr="new Map&lt;Int,Joystick&gt;()" line="18" static="1">
			<x path="Map">
				<x path="Int"/>
				<c path="lime.ui.Joystick"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Joystick>()]]></e></m></meta>
		</devices>
		<onConnect public="1" expr="new Event&lt;Joystick&gt;()" line="19" static="1">
			<c path="lime.app.Event"><f a="">
	<c path="lime.ui.Joystick"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Joystick>()]]></e></m></meta>
		</onConnect>
		<__connect set="method" line="45" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__connect>
		<__disconnect set="method" line="58" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__disconnect>
		<connected public="1" set="null"><x path="Bool"/></connected>
		<guid public="1" get="accessor" set="null"><c path="String"/></guid>
		<id public="1" set="null"><x path="Int"/></id>
		<name public="1" get="accessor" set="null"><c path="String"/></name>
		<numAxes public="1" get="accessor" set="null"><x path="Int"/></numAxes>
		<numButtons public="1" get="accessor" set="null"><x path="Int"/></numButtons>
		<numHats public="1" get="accessor" set="null"><x path="Int"/></numHats>
		<numTrackballs public="1" get="accessor" set="null"><x path="Int"/></numTrackballs>
		<onAxisMove public="1" expr="new Event&lt;Int -&gt; Float&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Float>()]]></e></m></meta>
		</onAxisMove>
		<onButtonDown public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
		</onButtonDown>
		<onButtonUp public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app.Event"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
		</onButtonUp>
		<onDisconnect public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onDisconnect>
		<onHatMove public="1" expr="new Event&lt;Int -&gt; JoystickHatPosition&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="Int"/>
	<x path="lime.ui.JoystickHatPosition"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> JoystickHatPosition>()]]></e></m></meta>
		</onHatMove>
		<onTrackballMove public="1" expr="new Event&lt;Int -&gt; Float -&gt; Float&gt;()">
			<c path="lime.app.Event"><f a="::">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Float -> Float>()]]></e></m></meta>
		</onTrackballMove>
		<get_guid get="inline" set="null" line="84">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_guid>
		<get_name get="inline" set="null" line="98">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_name>
		<get_numAxes get="inline" set="null" line="112">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numAxes>
		<get_numButtons get="inline" set="null" line="126">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numButtons>
		<get_numHats get="inline" set="null" line="140">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numHats>
		<get_numTrackballs get="inline" set="null" line="151">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numTrackballs>
		<new public="1" set="method" line="37"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.ui.JoystickHatPosition" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/JoystickHatPosition.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/JoystickHatPosition.hx" private="1" module="lime.ui.JoystickHatPosition">
	<CENTER public="1" get="inline" set="null" expr="0x00" line="7" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x00</e></m></meta>
	</CENTER>
	<DOWN public="1" get="inline" set="null" expr="0x04" line="8" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x04</e></m></meta>
	</DOWN>
	<LEFT public="1" get="inline" set="null" expr="0x08" line="9" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x08</e></m></meta>
	</LEFT>
	<RIGHT public="1" get="inline" set="null" expr="0x02" line="10" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x02</e></m></meta>
	</RIGHT>
	<UP public="1" get="inline" set="null" expr="0x01" line="11" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x01</e></m></meta>
	</UP>
	<DOWN_LEFT public="1" get="inline" set="null" expr="(0x04 | 0x08)" line="13" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x04 | 0x08)</e></m></meta>
	</DOWN_LEFT>
	<DOWN_RIGHT public="1" get="inline" set="null" expr="(0x04 | 0x02)" line="14" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x04 | 0x02)</e></m></meta>
	</DOWN_RIGHT>
	<UP_LEFT public="1" get="inline" set="null" expr="(0x01 | 0x08)" line="15" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x01 | 0x08)</e></m></meta>
	</UP_LEFT>
	<UP_RIGHT public="1" get="inline" set="null" expr="(0x01 | 0x02)" line="16" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x01 | 0x02)</e></m></meta>
	</UP_RIGHT>
	<center public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</center>
	<down public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</down>
	<left public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</left>
	<right public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</right>
	<up public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</up>
	<_new public="1" set="method" line="25" static="1">
		<f a="value">
			<x path="Int"/>
			<x path="lime.ui.JoystickHatPosition"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<get_center set="method" line="32" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_center>
	<set_center get="inline" set="null" line="39" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_center>
	<get_down set="method" line="52" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_down>
	<set_down get="inline" set="null" line="59" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_down>
	<get_left set="method" line="76" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_left>
	<set_left get="inline" set="null" line="83" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_left>
	<get_right set="method" line="100" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_right>
	<set_right get="inline" set="null" line="107" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_right>
	<get_up set="method" line="124" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_up>
	<set_up get="inline" set="null" line="131" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_up>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/JoystickHatPosition.hx" private="1" module="lime.ui.JoystickHatPosition">
		<CENTER public="1" get="inline" set="null" expr="0x00" line="7" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x00</e></m></meta>
		</CENTER>
		<DOWN public="1" get="inline" set="null" expr="0x04" line="8" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x04</e></m></meta>
		</DOWN>
		<LEFT public="1" get="inline" set="null" expr="0x08" line="9" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x08</e></m></meta>
		</LEFT>
		<RIGHT public="1" get="inline" set="null" expr="0x02" line="10" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x02</e></m></meta>
		</RIGHT>
		<UP public="1" get="inline" set="null" expr="0x01" line="11" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x01</e></m></meta>
		</UP>
		<DOWN_LEFT public="1" get="inline" set="null" expr="(0x04 | 0x08)" line="13" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x04 | 0x08)</e></m></meta>
		</DOWN_LEFT>
		<DOWN_RIGHT public="1" get="inline" set="null" expr="(0x04 | 0x02)" line="14" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x04 | 0x02)</e></m></meta>
		</DOWN_RIGHT>
		<UP_LEFT public="1" get="inline" set="null" expr="(0x01 | 0x08)" line="15" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x01 | 0x08)</e></m></meta>
		</UP_LEFT>
		<UP_RIGHT public="1" get="inline" set="null" expr="(0x01 | 0x02)" line="16" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x01 | 0x02)</e></m></meta>
		</UP_RIGHT>
		<center public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</center>
		<down public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</down>
		<left public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</left>
		<right public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</right>
		<up public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</up>
		<_new public="1" set="method" line="25" static="1">
			<f a="value">
				<x path="Int"/>
				<x path="lime.ui.JoystickHatPosition"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<get_center set="method" line="32" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_center>
		<set_center get="inline" set="null" line="39" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_center>
		<get_down set="method" line="52" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_down>
		<set_down get="inline" set="null" line="59" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_down>
		<get_left set="method" line="76" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_left>
		<set_left get="inline" set="null" line="83" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_left>
		<get_right set="method" line="100" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_right>
		<set_right get="inline" set="null" line="107" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_right>
		<get_up set="method" line="124" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_up>
		<set_up get="inline" set="null" line="131" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_up>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.ui.KeyCode" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/KeyCode.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="fromScanCode"><x path="lime.ui.ScanCode"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.ui._KeyCode.KeyCode_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/KeyCode.hx" private="1" module="lime.ui.KeyCode">
	<UNKNOWN public="1" get="inline" set="null" expr="cast 0x00" line="12" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x00</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<BACKSPACE public="1" get="inline" set="null" expr="cast 0x08" line="13" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x08</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSPACE>
	<TAB public="1" get="inline" set="null" expr="cast 0x09" line="14" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x09</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAB>
	<RETURN public="1" get="inline" set="null" expr="cast 0x0D" line="15" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x0D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN>
	<ESCAPE public="1" get="inline" set="null" expr="cast 0x1B" line="16" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x1B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ESCAPE>
	<SPACE public="1" get="inline" set="null" expr="cast 0x20" line="17" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPACE>
	<EXCLAMATION public="1" get="inline" set="null" expr="cast 0x21" line="18" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXCLAMATION>
	<QUOTE public="1" get="inline" set="null" expr="cast 0x22" line="19" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUOTE>
	<HASH public="1" get="inline" set="null" expr="cast 0x23" line="20" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HASH>
	<DOLLAR public="1" get="inline" set="null" expr="cast 0x24" line="21" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOLLAR>
	<PERCENT public="1" get="inline" set="null" expr="cast 0x25" line="22" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERCENT>
	<AMPERSAND public="1" get="inline" set="null" expr="cast 0x26" line="23" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AMPERSAND>
	<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 0x27" line="24" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SINGLE_QUOTE>
	<LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x28" line="25" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_PARENTHESIS>
	<RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x29" line="26" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_PARENTHESIS>
	<ASTERISK public="1" get="inline" set="null" expr="cast 0x2A" line="27" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ASTERISK>
	<PLUS public="1" get="inline" set="null" expr="cast 0x2B" line="28" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PLUS>
	<COMMA public="1" get="inline" set="null" expr="cast 0x2C" line="29" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMMA>
	<MINUS public="1" get="inline" set="null" expr="cast 0x2D" line="30" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MINUS>
	<PERIOD public="1" get="inline" set="null" expr="cast 0x2E" line="31" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERIOD>
	<SLASH public="1" get="inline" set="null" expr="cast 0x2F" line="32" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLASH>
	<NUMBER_0 public="1" get="inline" set="null" expr="cast 0x30" line="33" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_0>
	<NUMBER_1 public="1" get="inline" set="null" expr="cast 0x31" line="34" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_1>
	<NUMBER_2 public="1" get="inline" set="null" expr="cast 0x32" line="35" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_2>
	<NUMBER_3 public="1" get="inline" set="null" expr="cast 0x33" line="36" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_3>
	<NUMBER_4 public="1" get="inline" set="null" expr="cast 0x34" line="37" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_4>
	<NUMBER_5 public="1" get="inline" set="null" expr="cast 0x35" line="38" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_5>
	<NUMBER_6 public="1" get="inline" set="null" expr="cast 0x36" line="39" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_6>
	<NUMBER_7 public="1" get="inline" set="null" expr="cast 0x37" line="40" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_7>
	<NUMBER_8 public="1" get="inline" set="null" expr="cast 0x38" line="41" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_8>
	<NUMBER_9 public="1" get="inline" set="null" expr="cast 0x39" line="42" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x39</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_9>
	<COLON public="1" get="inline" set="null" expr="cast 0x3A" line="43" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLON>
	<SEMICOLON public="1" get="inline" set="null" expr="cast 0x3B" line="44" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEMICOLON>
	<LESS_THAN public="1" get="inline" set="null" expr="cast 0x3C" line="45" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN>
	<EQUALS public="1" get="inline" set="null" expr="cast 0x3D" line="46" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<GREATER_THAN public="1" get="inline" set="null" expr="cast 0x3E" line="47" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN>
	<QUESTION public="1" get="inline" set="null" expr="cast 0x3F" line="48" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUESTION>
	<AT public="1" get="inline" set="null" expr="cast 0x40" line="49" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AT>
	<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 0x5B" line="50" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_BRACKET>
	<BACKSLASH public="1" get="inline" set="null" expr="cast 0x5C" line="51" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSLASH>
	<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 0x5D" line="52" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_BRACKET>
	<CARET public="1" get="inline" set="null" expr="cast 0x5E" line="53" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CARET>
	<UNDERSCORE public="1" get="inline" set="null" expr="cast 0x5F" line="54" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDERSCORE>
	<GRAVE public="1" get="inline" set="null" expr="cast 0x60" line="55" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x60</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRAVE>
	<A public="1" get="inline" set="null" expr="cast 0x61" line="56" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x61</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" expr="cast 0x62" line="57" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x62</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<C public="1" get="inline" set="null" expr="cast 0x63" line="58" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x63</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</C>
	<D public="1" get="inline" set="null" expr="cast 0x64" line="59" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x64</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</D>
	<E public="1" get="inline" set="null" expr="cast 0x65" line="60" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x65</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</E>
	<F public="1" get="inline" set="null" expr="cast 0x66" line="61" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x66</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F>
	<G public="1" get="inline" set="null" expr="cast 0x67" line="62" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x67</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</G>
	<H public="1" get="inline" set="null" expr="cast 0x68" line="63" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x68</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</H>
	<I public="1" get="inline" set="null" expr="cast 0x69" line="64" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x69</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</I>
	<J public="1" get="inline" set="null" expr="cast 0x6A" line="65" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</J>
	<K public="1" get="inline" set="null" expr="cast 0x6B" line="66" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</K>
	<L public="1" get="inline" set="null" expr="cast 0x6C" line="67" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</L>
	<M public="1" get="inline" set="null" expr="cast 0x6D" line="68" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</M>
	<N public="1" get="inline" set="null" expr="cast 0x6E" line="69" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</N>
	<O public="1" get="inline" set="null" expr="cast 0x6F" line="70" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</O>
	<P public="1" get="inline" set="null" expr="cast 0x70" line="71" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x70</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</P>
	<Q public="1" get="inline" set="null" expr="cast 0x71" line="72" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x71</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Q>
	<R public="1" get="inline" set="null" expr="cast 0x72" line="73" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x72</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</R>
	<S public="1" get="inline" set="null" expr="cast 0x73" line="74" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x73</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</S>
	<T public="1" get="inline" set="null" expr="cast 0x74" line="75" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x74</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</T>
	<U public="1" get="inline" set="null" expr="cast 0x75" line="76" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x75</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</U>
	<V public="1" get="inline" set="null" expr="cast 0x76" line="77" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x76</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V>
	<W public="1" get="inline" set="null" expr="cast 0x77" line="78" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x77</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</W>
	<X public="1" get="inline" set="null" expr="cast 0x78" line="79" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x78</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" expr="cast 0x79" line="80" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x79</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<Z public="1" get="inline" set="null" expr="cast 0x7A" line="81" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x7A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Z>
	<DELETE public="1" get="inline" set="null" expr="cast 0x7F" line="82" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x7F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<CAPS_LOCK public="1" get="inline" set="null" expr="cast 0x40000039" line="83" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000039</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPS_LOCK>
	<F1 public="1" get="inline" set="null" expr="cast 0x4000003A" line="84" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F1>
	<F2 public="1" get="inline" set="null" expr="cast 0x4000003B" line="85" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F2>
	<F3 public="1" get="inline" set="null" expr="cast 0x4000003C" line="86" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F3>
	<F4 public="1" get="inline" set="null" expr="cast 0x4000003D" line="87" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F4>
	<F5 public="1" get="inline" set="null" expr="cast 0x4000003E" line="88" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F5>
	<F6 public="1" get="inline" set="null" expr="cast 0x4000003F" line="89" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F6>
	<F7 public="1" get="inline" set="null" expr="cast 0x40000040" line="90" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000040</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F7>
	<F8 public="1" get="inline" set="null" expr="cast 0x40000041" line="91" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000041</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F8>
	<F9 public="1" get="inline" set="null" expr="cast 0x40000042" line="92" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000042</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F9>
	<F10 public="1" get="inline" set="null" expr="cast 0x40000043" line="93" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000043</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F10>
	<F11 public="1" get="inline" set="null" expr="cast 0x40000044" line="94" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000044</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F11>
	<F12 public="1" get="inline" set="null" expr="cast 0x40000045" line="95" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000045</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F12>
	<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 0x40000046" line="96" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000046</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRINT_SCREEN>
	<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 0x40000047" line="97" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000047</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCROLL_LOCK>
	<PAUSE public="1" get="inline" set="null" expr="cast 0x40000048" line="98" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000048</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAUSE>
	<INSERT public="1" get="inline" set="null" expr="cast 0x40000049" line="99" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000049</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INSERT>
	<HOME public="1" get="inline" set="null" expr="cast 0x4000004A" line="100" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HOME>
	<PAGE_UP public="1" get="inline" set="null" expr="cast 0x4000004B" line="101" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_UP>
	<END public="1" get="inline" set="null" expr="cast 0x4000004D" line="102" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</END>
	<PAGE_DOWN public="1" get="inline" set="null" expr="cast 0x4000004E" line="103" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_DOWN>
	<RIGHT public="1" get="inline" set="null" expr="cast 0x4000004F" line="104" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<LEFT public="1" get="inline" set="null" expr="cast 0x40000050" line="105" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000050</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<DOWN public="1" get="inline" set="null" expr="cast 0x40000051" line="106" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000051</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOWN>
	<UP public="1" get="inline" set="null" expr="cast 0x40000052" line="107" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000052</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UP>
	<NUM_LOCK public="1" get="inline" set="null" expr="cast 0x40000053" line="108" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000053</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_LOCK>
	<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 0x40000054" line="109" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000054</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DIVIDE>
	<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 0x40000055" line="110" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000055</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MULTIPLY>
	<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 0x40000056" line="111" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000056</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MINUS>
	<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 0x40000057" line="112" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000057</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS>
	<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 0x40000058" line="113" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000058</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_ENTER>
	<NUMPAD_1 public="1" get="inline" set="null" expr="cast 0x40000059" line="114" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000059</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_1>
	<NUMPAD_2 public="1" get="inline" set="null" expr="cast 0x4000005A" line="115" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_2>
	<NUMPAD_3 public="1" get="inline" set="null" expr="cast 0x4000005B" line="116" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_3>
	<NUMPAD_4 public="1" get="inline" set="null" expr="cast 0x4000005C" line="117" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_4>
	<NUMPAD_5 public="1" get="inline" set="null" expr="cast 0x4000005D" line="118" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_5>
	<NUMPAD_6 public="1" get="inline" set="null" expr="cast 0x4000005E" line="119" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_6>
	<NUMPAD_7 public="1" get="inline" set="null" expr="cast 0x4000005F" line="120" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_7>
	<NUMPAD_8 public="1" get="inline" set="null" expr="cast 0x40000060" line="121" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000060</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_8>
	<NUMPAD_9 public="1" get="inline" set="null" expr="cast 0x40000061" line="122" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000061</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_9>
	<NUMPAD_0 public="1" get="inline" set="null" expr="cast 0x40000062" line="123" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000062</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_0>
	<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 0x40000063" line="124" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000063</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERIOD>
	<APPLICATION public="1" get="inline" set="null" expr="cast 0x40000065" line="125" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000065</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<POWER public="1" get="inline" set="null" expr="cast 0x40000066" line="126" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000066</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POWER>
	<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 0x40000067" line="127" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000067</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EQUALS>
	<F13 public="1" get="inline" set="null" expr="cast 0x40000068" line="128" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000068</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F13>
	<F14 public="1" get="inline" set="null" expr="cast 0x40000069" line="129" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000069</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F14>
	<F15 public="1" get="inline" set="null" expr="cast 0x4000006A" line="130" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F15>
	<F16 public="1" get="inline" set="null" expr="cast 0x4000006B" line="131" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F16>
	<F17 public="1" get="inline" set="null" expr="cast 0x4000006C" line="132" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F17>
	<F18 public="1" get="inline" set="null" expr="cast 0x4000006D" line="133" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F18>
	<F19 public="1" get="inline" set="null" expr="cast 0x4000006E" line="134" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F19>
	<F20 public="1" get="inline" set="null" expr="cast 0x4000006F" line="135" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F20>
	<F21 public="1" get="inline" set="null" expr="cast 0x40000070" line="136" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000070</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F21>
	<F22 public="1" get="inline" set="null" expr="cast 0x40000071" line="137" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000071</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F22>
	<F23 public="1" get="inline" set="null" expr="cast 0x40000072" line="138" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000072</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F23>
	<F24 public="1" get="inline" set="null" expr="cast 0x40000073" line="139" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000073</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F24>
	<EXECUTE public="1" get="inline" set="null" expr="cast 0x40000074" line="140" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000074</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXECUTE>
	<HELP public="1" get="inline" set="null" expr="cast 0x40000075" line="141" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000075</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HELP>
	<MENU public="1" get="inline" set="null" expr="cast 0x40000076" line="142" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000076</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MENU>
	<SELECT public="1" get="inline" set="null" expr="cast 0x40000077" line="143" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000077</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SELECT>
	<STOP public="1" get="inline" set="null" expr="cast 0x40000078" line="144" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000078</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STOP>
	<AGAIN public="1" get="inline" set="null" expr="cast 0x40000079" line="145" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000079</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AGAIN>
	<UNDO public="1" get="inline" set="null" expr="cast 0x4000007A" line="146" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDO>
	<CUT public="1" get="inline" set="null" expr="cast 0x4000007B" line="147" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUT>
	<COPY public="1" get="inline" set="null" expr="cast 0x4000007C" line="148" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPY>
	<PASTE public="1" get="inline" set="null" expr="cast 0x4000007D" line="149" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PASTE>
	<FIND public="1" get="inline" set="null" expr="cast 0x4000007E" line="150" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FIND>
	<MUTE public="1" get="inline" set="null" expr="cast 0x4000007F" line="151" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUTE>
	<VOLUME_UP public="1" get="inline" set="null" expr="cast 0x40000080" line="152" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000080</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_UP>
	<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 0x40000081" line="153" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000081</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_DOWN>
	<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 0x40000085" line="154" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000085</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COMMA>
	<ALT_ERASE public="1" get="inline" set="null" expr="cast 0x40000099" line="156" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000099</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALT_ERASE>
	<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 0x4000009A" line="157" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYSTEM_REQUEST>
	<CANCEL public="1" get="inline" set="null" expr="cast 0x4000009B" line="158" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CANCEL>
	<CLEAR public="1" get="inline" set="null" expr="cast 0x4000009C" line="159" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR>
	<PRIOR public="1" get="inline" set="null" expr="cast 0x4000009D" line="160" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIOR>
	<RETURN2 public="1" get="inline" set="null" expr="cast 0x4000009E" line="161" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN2>
	<SEPARATOR public="1" get="inline" set="null" expr="cast 0x4000009F" line="162" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEPARATOR>
	<OUT public="1" get="inline" set="null" expr="cast 0x400000A0" line="163" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT>
	<OPER public="1" get="inline" set="null" expr="cast 0x400000A1" line="164" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPER>
	<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 0x400000A2" line="165" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR_AGAIN>
	<CRSEL public="1" get="inline" set="null" expr="cast 0x400000A3" line="166" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRSEL>
	<EXSEL public="1" get="inline" set="null" expr="cast 0x400000A4" line="167" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXSEL>
	<NUMPAD_00 public="1" get="inline" set="null" expr="cast 0x400000B0" line="168" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_00>
	<NUMPAD_000 public="1" get="inline" set="null" expr="cast 0x400000B1" line="169" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_000>
	<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B2" line="170" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THOUSAND_SEPARATOR>
	<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B3" line="171" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECIMAL_SEPARATOR>
	<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 0x400000B4" line="172" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_UNIT>
	<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 0x400000B5" line="173" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_SUBUNIT>
	<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B6" line="174" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_PARENTHESIS>
	<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B7" line="175" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_PARENTHESIS>
	<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B8" line="176" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_BRACE>
	<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B9" line="177" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_BRACE>
	<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 0x400000BA" line="178" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_TAB>
	<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 0x400000BB" line="179" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BACKSPACE>
	<NUMPAD_A public="1" get="inline" set="null" expr="cast 0x400000BC" line="180" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_A>
	<NUMPAD_B public="1" get="inline" set="null" expr="cast 0x400000BD" line="181" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_B>
	<NUMPAD_C public="1" get="inline" set="null" expr="cast 0x400000BE" line="182" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_C>
	<NUMPAD_D public="1" get="inline" set="null" expr="cast 0x400000BF" line="183" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BF</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_D>
	<NUMPAD_E public="1" get="inline" set="null" expr="cast 0x400000C0" line="184" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_E>
	<NUMPAD_F public="1" get="inline" set="null" expr="cast 0x400000C1" line="185" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_F>
	<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 0x400000C2" line="186" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_XOR>
	<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 0x400000C3" line="187" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_POWER>
	<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 0x400000C4" line="188" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERCENT>
	<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 0x400000C5" line="189" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LESS_THAN>
	<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 0x400000C6" line="190" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_GREATER_THAN>
	<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C7" line="191" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AMPERSAND>
	<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C8" line="192" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_AMPERSAND>
	<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000C9" line="193" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_VERTICAL_BAR>
	<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000CA" line="194" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_VERTICAL_BAR>
	<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 0x400000CB" line="195" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COLON>
	<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 0x400000CC" line="196" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HASH>
	<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 0x400000CD" line="197" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_SPACE>
	<NUMPAD_AT public="1" get="inline" set="null" expr="cast 0x400000CE" line="198" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AT>
	<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 0x400000CF" line="199" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CF</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EXCLAMATION>
	<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 0x400000D0" line="200" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_STORE>
	<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 0x400000D1" line="201" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_RECALL>
	<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D2" line="202" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_CLEAR>
	<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 0x400000D3" line="203" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_ADD>
	<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 0x400000D4" line="204" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_SUBTRACT>
	<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 0x400000D5" line="205" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_MULTIPLY>
	<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 0x400000D6" line="206" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_DIVIDE>
	<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 0x400000D7" line="207" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS_MINUS>
	<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D8" line="208" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR>
	<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 0x400000D9" line="209" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR_ENTRY>
	<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 0x400000DA" line="210" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BINARY>
	<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 0x400000DB" line="211" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_OCTAL>
	<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 0x400000DC" line="212" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DECIMAL>
	<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 0x400000DD" line="213" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HEXADECIMAL>
	<LEFT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E0" line="214" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_CTRL>
	<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E1" line="215" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHIFT>
	<LEFT_ALT public="1" get="inline" set="null" expr="cast 0x400000E2" line="216" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_ALT>
	<LEFT_META public="1" get="inline" set="null" expr="cast 0x400000E3" line="217" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_META>
	<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E4" line="218" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_CTRL>
	<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E5" line="219" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHIFT>
	<RIGHT_ALT public="1" get="inline" set="null" expr="cast 0x400000E6" line="220" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_ALT>
	<RIGHT_META public="1" get="inline" set="null" expr="cast 0x400000E7" line="221" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_META>
	<MODE public="1" get="inline" set="null" expr="cast 0x40000101" line="222" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000101</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MODE>
	<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 0x40000102" line="223" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000102</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_NEXT>
	<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 0x40000103" line="224" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000103</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PREVIOUS>
	<AUDIO_STOP public="1" get="inline" set="null" expr="cast 0x40000104" line="225" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000104</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_STOP>
	<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 0x40000105" line="226" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000105</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PLAY>
	<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 0x40000106" line="227" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000106</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_MUTE>
	<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 0x40000107" line="228" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000107</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIA_SELECT>
	<WWW public="1" get="inline" set="null" expr="cast 0x40000108" line="229" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000108</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WWW>
	<MAIL public="1" get="inline" set="null" expr="cast 0x40000109" line="230" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000109</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL>
	<CALCULATOR public="1" get="inline" set="null" expr="cast 0x4000010A" line="231" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CALCULATOR>
	<COMPUTER public="1" get="inline" set="null" expr="cast 0x4000010B" line="232" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPUTER>
	<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 0x4000010C" line="233" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_SEARCH>
	<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 0x4000010D" line="234" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_HOME>
	<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 0x4000010E" line="235" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BACK>
	<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 0x4000010F" line="236" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_FORWARD>
	<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 0x40000110" line="237" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000110</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_STOP>
	<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 0x40000111" line="238" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000111</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_REFRESH>
	<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 0x40000112" line="239" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000112</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BOOKMARKS>
	<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 0x40000113" line="240" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000113</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_DOWN>
	<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 0x40000114" line="241" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000114</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_UP>
	<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 0x40000115" line="242" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000115</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DISPLAY_SWITCH>
	<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 0x40000116" line="243" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000116</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_TOGGLE>
	<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 0x40000117" line="244" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000117</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_DOWN>
	<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 0x40000118" line="245" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000118</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_UP>
	<EJECT public="1" get="inline" set="null" expr="cast 0x40000119" line="246" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000119</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EJECT>
	<SLEEP public="1" get="inline" set="null" expr="cast 0x4000011A" line="247" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000011A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLEEP>
	<fromScanCode public="1" set="method" line="249" static="1">
		<f a="scanCode">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.KeyCode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromScanCode>
	<toScanCode set="method" line="260" static="1"><f a="keyCode">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.ScanCode"/>
</f></toScanCode>
	<gt get="inline" set="null" line="271" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<gte get="inline" set="null" line="272" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gte>
	<lt get="inline" set="null" line="273" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<lte get="inline" set="null" line="274" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lte>
	<plus get="inline" set="null" line="275" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="Int"/>
			<x path="lime.ui.KeyCode"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</plus>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":enum"/>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._KeyCode.KeyCode_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/KeyCode.hx" private="1" module="lime.ui.KeyCode">
		<UNKNOWN public="1" get="inline" set="null" expr="cast 0x00" line="12" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x00</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<BACKSPACE public="1" get="inline" set="null" expr="cast 0x08" line="13" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x08</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSPACE>
		<TAB public="1" get="inline" set="null" expr="cast 0x09" line="14" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x09</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAB>
		<RETURN public="1" get="inline" set="null" expr="cast 0x0D" line="15" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x0D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN>
		<ESCAPE public="1" get="inline" set="null" expr="cast 0x1B" line="16" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x1B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ESCAPE>
		<SPACE public="1" get="inline" set="null" expr="cast 0x20" line="17" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPACE>
		<EXCLAMATION public="1" get="inline" set="null" expr="cast 0x21" line="18" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXCLAMATION>
		<QUOTE public="1" get="inline" set="null" expr="cast 0x22" line="19" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUOTE>
		<HASH public="1" get="inline" set="null" expr="cast 0x23" line="20" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HASH>
		<DOLLAR public="1" get="inline" set="null" expr="cast 0x24" line="21" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOLLAR>
		<PERCENT public="1" get="inline" set="null" expr="cast 0x25" line="22" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERCENT>
		<AMPERSAND public="1" get="inline" set="null" expr="cast 0x26" line="23" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AMPERSAND>
		<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 0x27" line="24" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SINGLE_QUOTE>
		<LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x28" line="25" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_PARENTHESIS>
		<RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x29" line="26" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_PARENTHESIS>
		<ASTERISK public="1" get="inline" set="null" expr="cast 0x2A" line="27" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ASTERISK>
		<PLUS public="1" get="inline" set="null" expr="cast 0x2B" line="28" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PLUS>
		<COMMA public="1" get="inline" set="null" expr="cast 0x2C" line="29" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMMA>
		<MINUS public="1" get="inline" set="null" expr="cast 0x2D" line="30" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MINUS>
		<PERIOD public="1" get="inline" set="null" expr="cast 0x2E" line="31" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERIOD>
		<SLASH public="1" get="inline" set="null" expr="cast 0x2F" line="32" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLASH>
		<NUMBER_0 public="1" get="inline" set="null" expr="cast 0x30" line="33" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_0>
		<NUMBER_1 public="1" get="inline" set="null" expr="cast 0x31" line="34" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_1>
		<NUMBER_2 public="1" get="inline" set="null" expr="cast 0x32" line="35" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_2>
		<NUMBER_3 public="1" get="inline" set="null" expr="cast 0x33" line="36" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_3>
		<NUMBER_4 public="1" get="inline" set="null" expr="cast 0x34" line="37" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_4>
		<NUMBER_5 public="1" get="inline" set="null" expr="cast 0x35" line="38" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_5>
		<NUMBER_6 public="1" get="inline" set="null" expr="cast 0x36" line="39" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_6>
		<NUMBER_7 public="1" get="inline" set="null" expr="cast 0x37" line="40" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_7>
		<NUMBER_8 public="1" get="inline" set="null" expr="cast 0x38" line="41" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_8>
		<NUMBER_9 public="1" get="inline" set="null" expr="cast 0x39" line="42" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x39</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_9>
		<COLON public="1" get="inline" set="null" expr="cast 0x3A" line="43" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLON>
		<SEMICOLON public="1" get="inline" set="null" expr="cast 0x3B" line="44" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEMICOLON>
		<LESS_THAN public="1" get="inline" set="null" expr="cast 0x3C" line="45" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN>
		<EQUALS public="1" get="inline" set="null" expr="cast 0x3D" line="46" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<GREATER_THAN public="1" get="inline" set="null" expr="cast 0x3E" line="47" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN>
		<QUESTION public="1" get="inline" set="null" expr="cast 0x3F" line="48" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUESTION>
		<AT public="1" get="inline" set="null" expr="cast 0x40" line="49" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AT>
		<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 0x5B" line="50" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_BRACKET>
		<BACKSLASH public="1" get="inline" set="null" expr="cast 0x5C" line="51" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSLASH>
		<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 0x5D" line="52" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_BRACKET>
		<CARET public="1" get="inline" set="null" expr="cast 0x5E" line="53" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CARET>
		<UNDERSCORE public="1" get="inline" set="null" expr="cast 0x5F" line="54" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDERSCORE>
		<GRAVE public="1" get="inline" set="null" expr="cast 0x60" line="55" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x60</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRAVE>
		<A public="1" get="inline" set="null" expr="cast 0x61" line="56" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x61</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" expr="cast 0x62" line="57" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x62</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<C public="1" get="inline" set="null" expr="cast 0x63" line="58" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x63</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</C>
		<D public="1" get="inline" set="null" expr="cast 0x64" line="59" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x64</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</D>
		<E public="1" get="inline" set="null" expr="cast 0x65" line="60" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x65</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</E>
		<F public="1" get="inline" set="null" expr="cast 0x66" line="61" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x66</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F>
		<G public="1" get="inline" set="null" expr="cast 0x67" line="62" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x67</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</G>
		<H public="1" get="inline" set="null" expr="cast 0x68" line="63" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x68</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</H>
		<I public="1" get="inline" set="null" expr="cast 0x69" line="64" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x69</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</I>
		<J public="1" get="inline" set="null" expr="cast 0x6A" line="65" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</J>
		<K public="1" get="inline" set="null" expr="cast 0x6B" line="66" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</K>
		<L public="1" get="inline" set="null" expr="cast 0x6C" line="67" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</L>
		<M public="1" get="inline" set="null" expr="cast 0x6D" line="68" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</M>
		<N public="1" get="inline" set="null" expr="cast 0x6E" line="69" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</N>
		<O public="1" get="inline" set="null" expr="cast 0x6F" line="70" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</O>
		<P public="1" get="inline" set="null" expr="cast 0x70" line="71" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x70</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</P>
		<Q public="1" get="inline" set="null" expr="cast 0x71" line="72" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x71</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Q>
		<R public="1" get="inline" set="null" expr="cast 0x72" line="73" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x72</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</R>
		<S public="1" get="inline" set="null" expr="cast 0x73" line="74" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x73</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</S>
		<T public="1" get="inline" set="null" expr="cast 0x74" line="75" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x74</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</T>
		<U public="1" get="inline" set="null" expr="cast 0x75" line="76" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x75</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</U>
		<V public="1" get="inline" set="null" expr="cast 0x76" line="77" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x76</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V>
		<W public="1" get="inline" set="null" expr="cast 0x77" line="78" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x77</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</W>
		<X public="1" get="inline" set="null" expr="cast 0x78" line="79" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x78</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" expr="cast 0x79" line="80" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x79</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<Z public="1" get="inline" set="null" expr="cast 0x7A" line="81" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x7A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Z>
		<DELETE public="1" get="inline" set="null" expr="cast 0x7F" line="82" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x7F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<CAPS_LOCK public="1" get="inline" set="null" expr="cast 0x40000039" line="83" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000039</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPS_LOCK>
		<F1 public="1" get="inline" set="null" expr="cast 0x4000003A" line="84" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F1>
		<F2 public="1" get="inline" set="null" expr="cast 0x4000003B" line="85" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F2>
		<F3 public="1" get="inline" set="null" expr="cast 0x4000003C" line="86" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F3>
		<F4 public="1" get="inline" set="null" expr="cast 0x4000003D" line="87" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F4>
		<F5 public="1" get="inline" set="null" expr="cast 0x4000003E" line="88" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F5>
		<F6 public="1" get="inline" set="null" expr="cast 0x4000003F" line="89" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F6>
		<F7 public="1" get="inline" set="null" expr="cast 0x40000040" line="90" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000040</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F7>
		<F8 public="1" get="inline" set="null" expr="cast 0x40000041" line="91" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000041</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F8>
		<F9 public="1" get="inline" set="null" expr="cast 0x40000042" line="92" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000042</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F9>
		<F10 public="1" get="inline" set="null" expr="cast 0x40000043" line="93" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000043</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F10>
		<F11 public="1" get="inline" set="null" expr="cast 0x40000044" line="94" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000044</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F11>
		<F12 public="1" get="inline" set="null" expr="cast 0x40000045" line="95" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000045</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F12>
		<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 0x40000046" line="96" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000046</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRINT_SCREEN>
		<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 0x40000047" line="97" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000047</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCROLL_LOCK>
		<PAUSE public="1" get="inline" set="null" expr="cast 0x40000048" line="98" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000048</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAUSE>
		<INSERT public="1" get="inline" set="null" expr="cast 0x40000049" line="99" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000049</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INSERT>
		<HOME public="1" get="inline" set="null" expr="cast 0x4000004A" line="100" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HOME>
		<PAGE_UP public="1" get="inline" set="null" expr="cast 0x4000004B" line="101" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_UP>
		<END public="1" get="inline" set="null" expr="cast 0x4000004D" line="102" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</END>
		<PAGE_DOWN public="1" get="inline" set="null" expr="cast 0x4000004E" line="103" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_DOWN>
		<RIGHT public="1" get="inline" set="null" expr="cast 0x4000004F" line="104" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<LEFT public="1" get="inline" set="null" expr="cast 0x40000050" line="105" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000050</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<DOWN public="1" get="inline" set="null" expr="cast 0x40000051" line="106" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000051</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOWN>
		<UP public="1" get="inline" set="null" expr="cast 0x40000052" line="107" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000052</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UP>
		<NUM_LOCK public="1" get="inline" set="null" expr="cast 0x40000053" line="108" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000053</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_LOCK>
		<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 0x40000054" line="109" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000054</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DIVIDE>
		<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 0x40000055" line="110" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000055</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MULTIPLY>
		<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 0x40000056" line="111" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000056</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MINUS>
		<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 0x40000057" line="112" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000057</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS>
		<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 0x40000058" line="113" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000058</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_ENTER>
		<NUMPAD_1 public="1" get="inline" set="null" expr="cast 0x40000059" line="114" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000059</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_1>
		<NUMPAD_2 public="1" get="inline" set="null" expr="cast 0x4000005A" line="115" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_2>
		<NUMPAD_3 public="1" get="inline" set="null" expr="cast 0x4000005B" line="116" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_3>
		<NUMPAD_4 public="1" get="inline" set="null" expr="cast 0x4000005C" line="117" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_4>
		<NUMPAD_5 public="1" get="inline" set="null" expr="cast 0x4000005D" line="118" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_5>
		<NUMPAD_6 public="1" get="inline" set="null" expr="cast 0x4000005E" line="119" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_6>
		<NUMPAD_7 public="1" get="inline" set="null" expr="cast 0x4000005F" line="120" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_7>
		<NUMPAD_8 public="1" get="inline" set="null" expr="cast 0x40000060" line="121" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000060</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_8>
		<NUMPAD_9 public="1" get="inline" set="null" expr="cast 0x40000061" line="122" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000061</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_9>
		<NUMPAD_0 public="1" get="inline" set="null" expr="cast 0x40000062" line="123" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000062</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_0>
		<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 0x40000063" line="124" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000063</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERIOD>
		<APPLICATION public="1" get="inline" set="null" expr="cast 0x40000065" line="125" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000065</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<POWER public="1" get="inline" set="null" expr="cast 0x40000066" line="126" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000066</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POWER>
		<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 0x40000067" line="127" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000067</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EQUALS>
		<F13 public="1" get="inline" set="null" expr="cast 0x40000068" line="128" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000068</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F13>
		<F14 public="1" get="inline" set="null" expr="cast 0x40000069" line="129" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000069</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F14>
		<F15 public="1" get="inline" set="null" expr="cast 0x4000006A" line="130" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F15>
		<F16 public="1" get="inline" set="null" expr="cast 0x4000006B" line="131" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F16>
		<F17 public="1" get="inline" set="null" expr="cast 0x4000006C" line="132" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F17>
		<F18 public="1" get="inline" set="null" expr="cast 0x4000006D" line="133" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F18>
		<F19 public="1" get="inline" set="null" expr="cast 0x4000006E" line="134" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F19>
		<F20 public="1" get="inline" set="null" expr="cast 0x4000006F" line="135" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F20>
		<F21 public="1" get="inline" set="null" expr="cast 0x40000070" line="136" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000070</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F21>
		<F22 public="1" get="inline" set="null" expr="cast 0x40000071" line="137" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000071</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F22>
		<F23 public="1" get="inline" set="null" expr="cast 0x40000072" line="138" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000072</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F23>
		<F24 public="1" get="inline" set="null" expr="cast 0x40000073" line="139" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000073</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F24>
		<EXECUTE public="1" get="inline" set="null" expr="cast 0x40000074" line="140" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000074</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXECUTE>
		<HELP public="1" get="inline" set="null" expr="cast 0x40000075" line="141" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000075</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HELP>
		<MENU public="1" get="inline" set="null" expr="cast 0x40000076" line="142" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000076</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MENU>
		<SELECT public="1" get="inline" set="null" expr="cast 0x40000077" line="143" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000077</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SELECT>
		<STOP public="1" get="inline" set="null" expr="cast 0x40000078" line="144" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000078</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STOP>
		<AGAIN public="1" get="inline" set="null" expr="cast 0x40000079" line="145" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000079</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AGAIN>
		<UNDO public="1" get="inline" set="null" expr="cast 0x4000007A" line="146" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDO>
		<CUT public="1" get="inline" set="null" expr="cast 0x4000007B" line="147" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUT>
		<COPY public="1" get="inline" set="null" expr="cast 0x4000007C" line="148" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPY>
		<PASTE public="1" get="inline" set="null" expr="cast 0x4000007D" line="149" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PASTE>
		<FIND public="1" get="inline" set="null" expr="cast 0x4000007E" line="150" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FIND>
		<MUTE public="1" get="inline" set="null" expr="cast 0x4000007F" line="151" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUTE>
		<VOLUME_UP public="1" get="inline" set="null" expr="cast 0x40000080" line="152" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000080</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_UP>
		<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 0x40000081" line="153" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000081</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_DOWN>
		<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 0x40000085" line="154" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000085</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COMMA>
		<ALT_ERASE public="1" get="inline" set="null" expr="cast 0x40000099" line="156" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000099</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALT_ERASE>
		<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 0x4000009A" line="157" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYSTEM_REQUEST>
		<CANCEL public="1" get="inline" set="null" expr="cast 0x4000009B" line="158" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CANCEL>
		<CLEAR public="1" get="inline" set="null" expr="cast 0x4000009C" line="159" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR>
		<PRIOR public="1" get="inline" set="null" expr="cast 0x4000009D" line="160" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIOR>
		<RETURN2 public="1" get="inline" set="null" expr="cast 0x4000009E" line="161" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN2>
		<SEPARATOR public="1" get="inline" set="null" expr="cast 0x4000009F" line="162" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEPARATOR>
		<OUT public="1" get="inline" set="null" expr="cast 0x400000A0" line="163" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT>
		<OPER public="1" get="inline" set="null" expr="cast 0x400000A1" line="164" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPER>
		<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 0x400000A2" line="165" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR_AGAIN>
		<CRSEL public="1" get="inline" set="null" expr="cast 0x400000A3" line="166" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRSEL>
		<EXSEL public="1" get="inline" set="null" expr="cast 0x400000A4" line="167" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXSEL>
		<NUMPAD_00 public="1" get="inline" set="null" expr="cast 0x400000B0" line="168" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_00>
		<NUMPAD_000 public="1" get="inline" set="null" expr="cast 0x400000B1" line="169" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_000>
		<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B2" line="170" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THOUSAND_SEPARATOR>
		<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B3" line="171" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECIMAL_SEPARATOR>
		<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 0x400000B4" line="172" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_UNIT>
		<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 0x400000B5" line="173" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_SUBUNIT>
		<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B6" line="174" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_PARENTHESIS>
		<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B7" line="175" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_PARENTHESIS>
		<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B8" line="176" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_BRACE>
		<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B9" line="177" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_BRACE>
		<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 0x400000BA" line="178" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_TAB>
		<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 0x400000BB" line="179" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BACKSPACE>
		<NUMPAD_A public="1" get="inline" set="null" expr="cast 0x400000BC" line="180" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_A>
		<NUMPAD_B public="1" get="inline" set="null" expr="cast 0x400000BD" line="181" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_B>
		<NUMPAD_C public="1" get="inline" set="null" expr="cast 0x400000BE" line="182" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_C>
		<NUMPAD_D public="1" get="inline" set="null" expr="cast 0x400000BF" line="183" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BF</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_D>
		<NUMPAD_E public="1" get="inline" set="null" expr="cast 0x400000C0" line="184" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_E>
		<NUMPAD_F public="1" get="inline" set="null" expr="cast 0x400000C1" line="185" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_F>
		<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 0x400000C2" line="186" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_XOR>
		<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 0x400000C3" line="187" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_POWER>
		<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 0x400000C4" line="188" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERCENT>
		<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 0x400000C5" line="189" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LESS_THAN>
		<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 0x400000C6" line="190" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_GREATER_THAN>
		<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C7" line="191" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AMPERSAND>
		<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C8" line="192" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_AMPERSAND>
		<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000C9" line="193" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_VERTICAL_BAR>
		<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000CA" line="194" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_VERTICAL_BAR>
		<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 0x400000CB" line="195" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COLON>
		<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 0x400000CC" line="196" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HASH>
		<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 0x400000CD" line="197" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_SPACE>
		<NUMPAD_AT public="1" get="inline" set="null" expr="cast 0x400000CE" line="198" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AT>
		<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 0x400000CF" line="199" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CF</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EXCLAMATION>
		<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 0x400000D0" line="200" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_STORE>
		<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 0x400000D1" line="201" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_RECALL>
		<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D2" line="202" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_CLEAR>
		<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 0x400000D3" line="203" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_ADD>
		<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 0x400000D4" line="204" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_SUBTRACT>
		<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 0x400000D5" line="205" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_MULTIPLY>
		<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 0x400000D6" line="206" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_DIVIDE>
		<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 0x400000D7" line="207" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS_MINUS>
		<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D8" line="208" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR>
		<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 0x400000D9" line="209" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR_ENTRY>
		<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 0x400000DA" line="210" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BINARY>
		<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 0x400000DB" line="211" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_OCTAL>
		<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 0x400000DC" line="212" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DECIMAL>
		<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 0x400000DD" line="213" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HEXADECIMAL>
		<LEFT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E0" line="214" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_CTRL>
		<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E1" line="215" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHIFT>
		<LEFT_ALT public="1" get="inline" set="null" expr="cast 0x400000E2" line="216" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_ALT>
		<LEFT_META public="1" get="inline" set="null" expr="cast 0x400000E3" line="217" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_META>
		<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E4" line="218" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_CTRL>
		<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E5" line="219" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHIFT>
		<RIGHT_ALT public="1" get="inline" set="null" expr="cast 0x400000E6" line="220" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_ALT>
		<RIGHT_META public="1" get="inline" set="null" expr="cast 0x400000E7" line="221" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_META>
		<MODE public="1" get="inline" set="null" expr="cast 0x40000101" line="222" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000101</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MODE>
		<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 0x40000102" line="223" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000102</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_NEXT>
		<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 0x40000103" line="224" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000103</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PREVIOUS>
		<AUDIO_STOP public="1" get="inline" set="null" expr="cast 0x40000104" line="225" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000104</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_STOP>
		<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 0x40000105" line="226" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000105</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PLAY>
		<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 0x40000106" line="227" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000106</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_MUTE>
		<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 0x40000107" line="228" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000107</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIA_SELECT>
		<WWW public="1" get="inline" set="null" expr="cast 0x40000108" line="229" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000108</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WWW>
		<MAIL public="1" get="inline" set="null" expr="cast 0x40000109" line="230" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000109</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL>
		<CALCULATOR public="1" get="inline" set="null" expr="cast 0x4000010A" line="231" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CALCULATOR>
		<COMPUTER public="1" get="inline" set="null" expr="cast 0x4000010B" line="232" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPUTER>
		<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 0x4000010C" line="233" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_SEARCH>
		<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 0x4000010D" line="234" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_HOME>
		<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 0x4000010E" line="235" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BACK>
		<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 0x4000010F" line="236" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_FORWARD>
		<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 0x40000110" line="237" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000110</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_STOP>
		<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 0x40000111" line="238" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000111</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_REFRESH>
		<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 0x40000112" line="239" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000112</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BOOKMARKS>
		<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 0x40000113" line="240" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000113</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_DOWN>
		<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 0x40000114" line="241" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000114</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_UP>
		<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 0x40000115" line="242" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000115</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DISPLAY_SWITCH>
		<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 0x40000116" line="243" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000116</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_TOGGLE>
		<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 0x40000117" line="244" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000117</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_DOWN>
		<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 0x40000118" line="245" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000118</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_UP>
		<EJECT public="1" get="inline" set="null" expr="cast 0x40000119" line="246" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000119</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EJECT>
		<SLEEP public="1" get="inline" set="null" expr="cast 0x4000011A" line="247" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000011A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLEEP>
		<fromScanCode public="1" set="method" line="249" static="1">
			<f a="scanCode">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.KeyCode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromScanCode>
		<toScanCode set="method" line="260" static="1"><f a="keyCode">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.ScanCode"/>
</f></toScanCode>
		<gt get="inline" set="null" line="271" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<gte get="inline" set="null" line="272" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gte>
		<lt get="inline" set="null" line="273" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<lte get="inline" set="null" line="274" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lte>
		<plus get="inline" set="null" line="275" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="Int"/>
				<x path="lime.ui.KeyCode"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</plus>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":enum"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.ui.KeyModifier" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/KeyModifier.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.ui._KeyModifier.KeyModifier_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/KeyModifier.hx" private="1" module="lime.ui.KeyModifier">
	<NONE public="1" get="inline" set="null" expr="0x0000" line="7" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0000</e></m></meta>
	</NONE>
	<LEFT_SHIFT public="1" get="inline" set="null" expr="0x0001" line="8" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0001</e></m></meta>
	</LEFT_SHIFT>
	<RIGHT_SHIFT public="1" get="inline" set="null" expr="0x0002" line="9" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0002</e></m></meta>
	</RIGHT_SHIFT>
	<LEFT_CTRL public="1" get="inline" set="null" expr="0x0040" line="10" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0040</e></m></meta>
	</LEFT_CTRL>
	<RIGHT_CTRL public="1" get="inline" set="null" expr="0x0080" line="11" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0080</e></m></meta>
	</RIGHT_CTRL>
	<LEFT_ALT public="1" get="inline" set="null" expr="0x0100" line="12" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0100</e></m></meta>
	</LEFT_ALT>
	<RIGHT_ALT public="1" get="inline" set="null" expr="0x0200" line="13" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0200</e></m></meta>
	</RIGHT_ALT>
	<LEFT_META public="1" get="inline" set="null" expr="0x0400" line="14" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0400</e></m></meta>
	</LEFT_META>
	<RIGHT_META public="1" get="inline" set="null" expr="0x0800" line="15" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0800</e></m></meta>
	</RIGHT_META>
	<NUM_LOCK public="1" get="inline" set="null" expr="0x1000" line="16" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x1000</e></m></meta>
	</NUM_LOCK>
	<CAPS_LOCK public="1" get="inline" set="null" expr="0x2000" line="17" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x2000</e></m></meta>
	</CAPS_LOCK>
	<MODE public="1" get="inline" set="null" expr="0x4000" line="18" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x4000</e></m></meta>
	</MODE>
	<CTRL public="1" get="inline" set="null" expr="(0x0040 | 0x0080)" line="20" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x0040 | 0x0080)</e></m></meta>
	</CTRL>
	<SHIFT public="1" get="inline" set="null" expr="(0x001 | 0x0002)" line="21" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x001 | 0x0002)</e></m></meta>
	</SHIFT>
	<ALT public="1" get="inline" set="null" expr="(0x0100 | 0x0200)" line="22" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x0100 | 0x0200)</e></m></meta>
	</ALT>
	<META public="1" get="inline" set="null" expr="(0x0400 | 0x0800)" line="23" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x0400 | 0x0800)</e></m></meta>
	</META>
	<altKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</altKey>
	<capsLock public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</capsLock>
	<ctrlKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</ctrlKey>
	<metaKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</metaKey>
	<numLock public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</numLock>
	<shiftKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</shiftKey>
	<get_altKey set="method" line="33" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_altKey>
	<set_altKey get="inline" set="null" line="40" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_altKey>
	<get_capsLock set="method" line="57" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_capsLock>
	<set_capsLock get="inline" set="null" line="64" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_capsLock>
	<get_ctrlKey set="method" line="81" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_ctrlKey>
	<set_ctrlKey get="inline" set="null" line="88" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_ctrlKey>
	<get_metaKey set="method" line="105" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_metaKey>
	<set_metaKey get="inline" set="null" line="112" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_metaKey>
	<get_numLock set="method" line="129" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_numLock>
	<set_numLock get="inline" set="null" line="136" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_numLock>
	<get_shiftKey set="method" line="153" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_shiftKey>
	<set_shiftKey get="inline" set="null" line="160" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_shiftKey>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._KeyModifier.KeyModifier_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/KeyModifier.hx" private="1" module="lime.ui.KeyModifier">
		<NONE public="1" get="inline" set="null" expr="0x0000" line="7" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</NONE>
		<LEFT_SHIFT public="1" get="inline" set="null" expr="0x0001" line="8" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</LEFT_SHIFT>
		<RIGHT_SHIFT public="1" get="inline" set="null" expr="0x0002" line="9" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</RIGHT_SHIFT>
		<LEFT_CTRL public="1" get="inline" set="null" expr="0x0040" line="10" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0040</e></m></meta>
		</LEFT_CTRL>
		<RIGHT_CTRL public="1" get="inline" set="null" expr="0x0080" line="11" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0080</e></m></meta>
		</RIGHT_CTRL>
		<LEFT_ALT public="1" get="inline" set="null" expr="0x0100" line="12" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0100</e></m></meta>
		</LEFT_ALT>
		<RIGHT_ALT public="1" get="inline" set="null" expr="0x0200" line="13" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0200</e></m></meta>
		</RIGHT_ALT>
		<LEFT_META public="1" get="inline" set="null" expr="0x0400" line="14" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0400</e></m></meta>
		</LEFT_META>
		<RIGHT_META public="1" get="inline" set="null" expr="0x0800" line="15" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0800</e></m></meta>
		</RIGHT_META>
		<NUM_LOCK public="1" get="inline" set="null" expr="0x1000" line="16" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x1000</e></m></meta>
		</NUM_LOCK>
		<CAPS_LOCK public="1" get="inline" set="null" expr="0x2000" line="17" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x2000</e></m></meta>
		</CAPS_LOCK>
		<MODE public="1" get="inline" set="null" expr="0x4000" line="18" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x4000</e></m></meta>
		</MODE>
		<CTRL public="1" get="inline" set="null" expr="(0x0040 | 0x0080)" line="20" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x0040 | 0x0080)</e></m></meta>
		</CTRL>
		<SHIFT public="1" get="inline" set="null" expr="(0x001 | 0x0002)" line="21" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x001 | 0x0002)</e></m></meta>
		</SHIFT>
		<ALT public="1" get="inline" set="null" expr="(0x0100 | 0x0200)" line="22" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x0100 | 0x0200)</e></m></meta>
		</ALT>
		<META public="1" get="inline" set="null" expr="(0x0400 | 0x0800)" line="23" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x0400 | 0x0800)</e></m></meta>
		</META>
		<altKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</altKey>
		<capsLock public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</capsLock>
		<ctrlKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</ctrlKey>
		<metaKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</metaKey>
		<numLock public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</numLock>
		<shiftKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</shiftKey>
		<get_altKey set="method" line="33" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_altKey>
		<set_altKey get="inline" set="null" line="40" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_altKey>
		<get_capsLock set="method" line="57" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_capsLock>
		<set_capsLock get="inline" set="null" line="64" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_capsLock>
		<get_ctrlKey set="method" line="81" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_ctrlKey>
		<set_ctrlKey get="inline" set="null" line="88" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_ctrlKey>
		<get_metaKey set="method" line="105" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_metaKey>
		<set_metaKey get="inline" set="null" line="112" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_metaKey>
		<get_numLock set="method" line="129" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_numLock>
		<set_numLock get="inline" set="null" line="136" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_numLock>
		<get_shiftKey set="method" line="153" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_shiftKey>
		<set_shiftKey get="inline" set="null" line="160" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_shiftKey>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.ui.Mouse" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/Mouse.hx">
		<cursor public="1" get="accessor" set="accessor" static="1"><e path="lime.ui.MouseCursor"/></cursor>
		<lock public="1" get="accessor" set="accessor" static="1"><x path="Bool"/></lock>
		<hide public="1" set="method" line="17" static="1"><f a=""><x path="Void"/></f></hide>
		<show public="1" set="method" line="24" static="1"><f a=""><x path="Void"/></f></show>
		<warp public="1" set="method" line="31" static="1">
			<f a="x:y:?window" v="::null">
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ window : null }</e></m></meta>
		</warp>
		<get_cursor set="method" line="45" static="1"><f a=""><e path="lime.ui.MouseCursor"/></f></get_cursor>
		<set_cursor set="method" line="52" static="1"><f a="value">
	<e path="lime.ui.MouseCursor"/>
	<e path="lime.ui.MouseCursor"/>
</f></set_cursor>
		<get_lock set="method" line="59" static="1"><f a=""><x path="Bool"/></f></get_lock>
		<set_lock set="method" line="66" static="1"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_lock>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.ui._Mouse.MouseBackend" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/Mouse.hx" private="1" module="lime.ui.Mouse">
		<c path="lime._backend.flash.FlashMouse"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<enum path="lime.ui.MouseCursor" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/MouseCursor.hx">
		<ARROW/>
		<CROSSHAIR/>
		<DEFAULT/>
		<MOVE/>
		<POINTER/>
		<RESIZE_NESW/>
		<RESIZE_NS/>
		<RESIZE_NWSE/>
		<RESIZE_WE/>
		<TEXT/>
		<WAIT/>
		<WAIT_ARROW/>
		<CUSTOM/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<abstract path="lime.ui.ScanCode" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/ScanCode.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="fromKeyCode"><x path="lime.ui.KeyCode"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.ui.KeyCode</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.ui._ScanCode.ScanCode_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/ScanCode.hx" private="1" module="lime.ui.ScanCode">
	<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<BACKSPACE public="1" get="inline" set="null" expr="cast 42" line="14" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 42</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSPACE>
	<TAB public="1" get="inline" set="null" expr="cast 43" line="15" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 43</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAB>
	<RETURN public="1" get="inline" set="null" expr="cast 40" line="16" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 40</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN>
	<ESCAPE public="1" get="inline" set="null" expr="cast 41" line="17" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 41</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ESCAPE>
	<SPACE public="1" get="inline" set="null" expr="cast 44" line="18" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 44</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPACE>
	<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 52" line="25" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 52</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SINGLE_QUOTE>
	<COMMA public="1" get="inline" set="null" expr="cast 54" line="30" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 54</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMMA>
	<MINUS public="1" get="inline" set="null" expr="cast 45" line="31" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 45</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MINUS>
	<PERIOD public="1" get="inline" set="null" expr="cast 55" line="32" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 55</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERIOD>
	<SLASH public="1" get="inline" set="null" expr="cast 56" line="33" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 56</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLASH>
	<NUMBER_0 public="1" get="inline" set="null" expr="cast 39" line="34" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 39</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_0>
	<NUMBER_1 public="1" get="inline" set="null" expr="cast 30" line="35" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_1>
	<NUMBER_2 public="1" get="inline" set="null" expr="cast 31" line="36" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_2>
	<NUMBER_3 public="1" get="inline" set="null" expr="cast 32" line="37" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_3>
	<NUMBER_4 public="1" get="inline" set="null" expr="cast 33" line="38" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_4>
	<NUMBER_5 public="1" get="inline" set="null" expr="cast 34" line="39" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_5>
	<NUMBER_6 public="1" get="inline" set="null" expr="cast 35" line="40" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_6>
	<NUMBER_7 public="1" get="inline" set="null" expr="cast 36" line="41" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_7>
	<NUMBER_8 public="1" get="inline" set="null" expr="cast 37" line="42" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_8>
	<NUMBER_9 public="1" get="inline" set="null" expr="cast 38" line="43" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_9>
	<SEMICOLON public="1" get="inline" set="null" expr="cast 51" line="45" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 51</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEMICOLON>
	<EQUALS public="1" get="inline" set="null" expr="cast 46" line="47" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 46</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 47" line="51" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 47</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_BRACKET>
	<BACKSLASH public="1" get="inline" set="null" expr="cast 49" line="52" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 49</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSLASH>
	<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 48" line="53" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 48</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_BRACKET>
	<GRAVE public="1" get="inline" set="null" expr="cast 53" line="56" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 53</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRAVE>
	<A public="1" get="inline" set="null" expr="cast 4" line="57" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" expr="cast 5" line="58" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<C public="1" get="inline" set="null" expr="cast 6" line="59" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</C>
	<D public="1" get="inline" set="null" expr="cast 7" line="60" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</D>
	<E public="1" get="inline" set="null" expr="cast 8" line="61" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</E>
	<F public="1" get="inline" set="null" expr="cast 9" line="62" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F>
	<G public="1" get="inline" set="null" expr="cast 10" line="63" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</G>
	<H public="1" get="inline" set="null" expr="cast 11" line="64" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</H>
	<I public="1" get="inline" set="null" expr="cast 12" line="65" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</I>
	<J public="1" get="inline" set="null" expr="cast 13" line="66" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</J>
	<K public="1" get="inline" set="null" expr="cast 14" line="67" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</K>
	<L public="1" get="inline" set="null" expr="cast 15" line="68" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</L>
	<M public="1" get="inline" set="null" expr="cast 16" line="69" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</M>
	<N public="1" get="inline" set="null" expr="cast 17" line="70" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</N>
	<O public="1" get="inline" set="null" expr="cast 18" line="71" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</O>
	<P public="1" get="inline" set="null" expr="cast 19" line="72" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</P>
	<Q public="1" get="inline" set="null" expr="cast 20" line="73" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Q>
	<R public="1" get="inline" set="null" expr="cast 21" line="74" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</R>
	<S public="1" get="inline" set="null" expr="cast 22" line="75" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</S>
	<T public="1" get="inline" set="null" expr="cast 23" line="76" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</T>
	<U public="1" get="inline" set="null" expr="cast 24" line="77" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</U>
	<V public="1" get="inline" set="null" expr="cast 25" line="78" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V>
	<W public="1" get="inline" set="null" expr="cast 26" line="79" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</W>
	<X public="1" get="inline" set="null" expr="cast 27" line="80" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" expr="cast 28" line="81" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<Z public="1" get="inline" set="null" expr="cast 29" line="82" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Z>
	<DELETE public="1" get="inline" set="null" expr="cast 76" line="83" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 76</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<CAPS_LOCK public="1" get="inline" set="null" expr="cast 57" line="84" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 57</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPS_LOCK>
	<F1 public="1" get="inline" set="null" expr="cast 58" line="85" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 58</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F1>
	<F2 public="1" get="inline" set="null" expr="cast 59" line="86" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 59</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F2>
	<F3 public="1" get="inline" set="null" expr="cast 60" line="87" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 60</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F3>
	<F4 public="1" get="inline" set="null" expr="cast 61" line="88" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 61</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F4>
	<F5 public="1" get="inline" set="null" expr="cast 62" line="89" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 62</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F5>
	<F6 public="1" get="inline" set="null" expr="cast 63" line="90" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 63</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F6>
	<F7 public="1" get="inline" set="null" expr="cast 64" line="91" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 64</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F7>
	<F8 public="1" get="inline" set="null" expr="cast 65" line="92" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 65</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F8>
	<F9 public="1" get="inline" set="null" expr="cast 66" line="93" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 66</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F9>
	<F10 public="1" get="inline" set="null" expr="cast 67" line="94" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 67</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F10>
	<F11 public="1" get="inline" set="null" expr="cast 68" line="95" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 68</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F11>
	<F12 public="1" get="inline" set="null" expr="cast 69" line="96" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 69</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F12>
	<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 70" line="97" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 70</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRINT_SCREEN>
	<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 71" line="98" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 71</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCROLL_LOCK>
	<PAUSE public="1" get="inline" set="null" expr="cast 72" line="99" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 72</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAUSE>
	<INSERT public="1" get="inline" set="null" expr="cast 73" line="100" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 73</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INSERT>
	<HOME public="1" get="inline" set="null" expr="cast 74" line="101" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 74</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HOME>
	<PAGE_UP public="1" get="inline" set="null" expr="cast 75" line="102" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 75</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_UP>
	<END public="1" get="inline" set="null" expr="cast 77" line="103" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 77</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</END>
	<PAGE_DOWN public="1" get="inline" set="null" expr="cast 78" line="104" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 78</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_DOWN>
	<RIGHT public="1" get="inline" set="null" expr="cast 79" line="105" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 79</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<LEFT public="1" get="inline" set="null" expr="cast 80" line="106" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 80</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<DOWN public="1" get="inline" set="null" expr="cast 81" line="107" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 81</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOWN>
	<UP public="1" get="inline" set="null" expr="cast 82" line="108" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 82</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UP>
	<NUM_LOCK public="1" get="inline" set="null" expr="cast 83" line="109" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 83</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_LOCK>
	<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 84" line="110" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 84</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DIVIDE>
	<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 85" line="111" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 85</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MULTIPLY>
	<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 86" line="112" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 86</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MINUS>
	<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 87" line="113" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 87</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS>
	<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 88" line="114" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 88</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_ENTER>
	<NUMPAD_1 public="1" get="inline" set="null" expr="cast 89" line="115" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 89</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_1>
	<NUMPAD_2 public="1" get="inline" set="null" expr="cast 90" line="116" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 90</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_2>
	<NUMPAD_3 public="1" get="inline" set="null" expr="cast 91" line="117" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 91</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_3>
	<NUMPAD_4 public="1" get="inline" set="null" expr="cast 92" line="118" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 92</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_4>
	<NUMPAD_5 public="1" get="inline" set="null" expr="cast 93" line="119" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 93</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_5>
	<NUMPAD_6 public="1" get="inline" set="null" expr="cast 94" line="120" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 94</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_6>
	<NUMPAD_7 public="1" get="inline" set="null" expr="cast 95" line="121" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 95</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_7>
	<NUMPAD_8 public="1" get="inline" set="null" expr="cast 96" line="122" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 96</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_8>
	<NUMPAD_9 public="1" get="inline" set="null" expr="cast 97" line="123" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 97</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_9>
	<NUMPAD_0 public="1" get="inline" set="null" expr="cast 98" line="124" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 98</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_0>
	<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 99" line="125" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 99</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERIOD>
	<APPLICATION public="1" get="inline" set="null" expr="cast 101" line="126" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 101</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<POWER public="1" get="inline" set="null" expr="cast 102" line="127" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 102</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POWER>
	<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 103" line="128" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 103</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EQUALS>
	<F13 public="1" get="inline" set="null" expr="cast 104" line="129" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 104</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F13>
	<F14 public="1" get="inline" set="null" expr="cast 105" line="130" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 105</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F14>
	<F15 public="1" get="inline" set="null" expr="cast 106" line="131" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 106</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F15>
	<F16 public="1" get="inline" set="null" expr="cast 107" line="132" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 107</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F16>
	<F17 public="1" get="inline" set="null" expr="cast 108" line="133" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 108</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F17>
	<F18 public="1" get="inline" set="null" expr="cast 109" line="134" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 109</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F18>
	<F19 public="1" get="inline" set="null" expr="cast 110" line="135" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 110</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F19>
	<F20 public="1" get="inline" set="null" expr="cast 111" line="136" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 111</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F20>
	<F21 public="1" get="inline" set="null" expr="cast 112" line="137" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 112</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F21>
	<F22 public="1" get="inline" set="null" expr="cast 113" line="138" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 113</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F22>
	<F23 public="1" get="inline" set="null" expr="cast 114" line="139" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 114</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F23>
	<F24 public="1" get="inline" set="null" expr="cast 115" line="140" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 115</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F24>
	<EXECUTE public="1" get="inline" set="null" expr="cast 116" line="141" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 116</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXECUTE>
	<HELP public="1" get="inline" set="null" expr="cast 117" line="142" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 117</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HELP>
	<MENU public="1" get="inline" set="null" expr="cast 118" line="143" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 118</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MENU>
	<SELECT public="1" get="inline" set="null" expr="cast 119" line="144" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 119</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SELECT>
	<STOP public="1" get="inline" set="null" expr="cast 120" line="145" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 120</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STOP>
	<AGAIN public="1" get="inline" set="null" expr="cast 121" line="146" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 121</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AGAIN>
	<UNDO public="1" get="inline" set="null" expr="cast 122" line="147" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 122</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDO>
	<CUT public="1" get="inline" set="null" expr="cast 123" line="148" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 123</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUT>
	<COPY public="1" get="inline" set="null" expr="cast 124" line="149" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 124</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPY>
	<PASTE public="1" get="inline" set="null" expr="cast 125" line="150" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 125</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PASTE>
	<FIND public="1" get="inline" set="null" expr="cast 126" line="151" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 126</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FIND>
	<MUTE public="1" get="inline" set="null" expr="cast 127" line="152" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 127</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUTE>
	<VOLUME_UP public="1" get="inline" set="null" expr="cast 128" line="153" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 128</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_UP>
	<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 129" line="154" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 129</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_DOWN>
	<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 133" line="155" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 133</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COMMA>
	<ALT_ERASE public="1" get="inline" set="null" expr="cast 153" line="157" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 153</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALT_ERASE>
	<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 154" line="158" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 154</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYSTEM_REQUEST>
	<CANCEL public="1" get="inline" set="null" expr="cast 155" line="159" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 155</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CANCEL>
	<CLEAR public="1" get="inline" set="null" expr="cast 156" line="160" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 156</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR>
	<PRIOR public="1" get="inline" set="null" expr="cast 157" line="161" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 157</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIOR>
	<RETURN2 public="1" get="inline" set="null" expr="cast 158" line="162" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 158</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN2>
	<SEPARATOR public="1" get="inline" set="null" expr="cast 159" line="163" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 159</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEPARATOR>
	<OUT public="1" get="inline" set="null" expr="cast 160" line="164" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 160</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT>
	<OPER public="1" get="inline" set="null" expr="cast 161" line="165" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 161</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPER>
	<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 162" line="166" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 162</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR_AGAIN>
	<CRSEL public="1" get="inline" set="null" expr="cast 163" line="167" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 163</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRSEL>
	<EXSEL public="1" get="inline" set="null" expr="cast 164" line="168" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 164</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXSEL>
	<NUMPAD_00 public="1" get="inline" set="null" expr="cast 176" line="169" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 176</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_00>
	<NUMPAD_000 public="1" get="inline" set="null" expr="cast 177" line="170" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 177</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_000>
	<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 178" line="171" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 178</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THOUSAND_SEPARATOR>
	<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 179" line="172" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 179</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECIMAL_SEPARATOR>
	<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 180" line="173" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 180</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_UNIT>
	<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 181" line="174" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 181</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_SUBUNIT>
	<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 182" line="175" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 182</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_PARENTHESIS>
	<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 183" line="176" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 183</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_PARENTHESIS>
	<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 184" line="177" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 184</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_BRACE>
	<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 185" line="178" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 185</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_BRACE>
	<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 186" line="179" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 186</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_TAB>
	<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 187" line="180" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 187</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BACKSPACE>
	<NUMPAD_A public="1" get="inline" set="null" expr="cast 188" line="181" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 188</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_A>
	<NUMPAD_B public="1" get="inline" set="null" expr="cast 189" line="182" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 189</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_B>
	<NUMPAD_C public="1" get="inline" set="null" expr="cast 190" line="183" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 190</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_C>
	<NUMPAD_D public="1" get="inline" set="null" expr="cast 191" line="184" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 191</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_D>
	<NUMPAD_E public="1" get="inline" set="null" expr="cast 192" line="185" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 192</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_E>
	<NUMPAD_F public="1" get="inline" set="null" expr="cast 193" line="186" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 193</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_F>
	<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 194" line="187" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 194</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_XOR>
	<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 195" line="188" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 195</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_POWER>
	<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 196" line="189" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 196</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERCENT>
	<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 197" line="190" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 197</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LESS_THAN>
	<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 198" line="191" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 198</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_GREATER_THAN>
	<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 199" line="192" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 199</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AMPERSAND>
	<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 200" line="193" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 200</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_AMPERSAND>
	<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 201" line="194" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 201</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_VERTICAL_BAR>
	<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 202" line="195" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 202</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_VERTICAL_BAR>
	<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 203" line="196" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 203</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COLON>
	<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 204" line="197" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 204</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HASH>
	<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 205" line="198" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 205</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_SPACE>
	<NUMPAD_AT public="1" get="inline" set="null" expr="cast 206" line="199" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 206</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AT>
	<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 207" line="200" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 207</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EXCLAMATION>
	<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 208" line="201" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 208</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_STORE>
	<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 209" line="202" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 209</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_RECALL>
	<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 210" line="203" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 210</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_CLEAR>
	<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 211" line="204" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 211</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_ADD>
	<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 212" line="205" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 212</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_SUBTRACT>
	<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 213" line="206" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 213</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_MULTIPLY>
	<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 214" line="207" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 214</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_DIVIDE>
	<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 215" line="208" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 215</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS_MINUS>
	<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 216" line="209" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 216</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR>
	<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 217" line="210" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 217</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR_ENTRY>
	<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 218" line="211" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 218</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BINARY>
	<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 219" line="212" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 219</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_OCTAL>
	<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 220" line="213" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 220</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DECIMAL>
	<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 221" line="214" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 221</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HEXADECIMAL>
	<LEFT_CTRL public="1" get="inline" set="null" expr="cast 224" line="215" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 224</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_CTRL>
	<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 225" line="216" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 225</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHIFT>
	<LEFT_ALT public="1" get="inline" set="null" expr="cast 226" line="217" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 226</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_ALT>
	<LEFT_META public="1" get="inline" set="null" expr="cast 227" line="218" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 227</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_META>
	<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 228" line="219" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 228</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_CTRL>
	<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 229" line="220" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 229</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHIFT>
	<RIGHT_ALT public="1" get="inline" set="null" expr="cast 230" line="221" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 230</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_ALT>
	<RIGHT_META public="1" get="inline" set="null" expr="cast 231" line="222" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 231</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_META>
	<MODE public="1" get="inline" set="null" expr="cast 257" line="223" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 257</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MODE>
	<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 258" line="224" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 258</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_NEXT>
	<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 259" line="225" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 259</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PREVIOUS>
	<AUDIO_STOP public="1" get="inline" set="null" expr="cast 260" line="226" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 260</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_STOP>
	<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 261" line="227" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 261</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PLAY>
	<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 262" line="228" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 262</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_MUTE>
	<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 263" line="229" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 263</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIA_SELECT>
	<WWW public="1" get="inline" set="null" expr="cast 264" line="230" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 264</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WWW>
	<MAIL public="1" get="inline" set="null" expr="cast 265" line="231" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 265</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL>
	<CALCULATOR public="1" get="inline" set="null" expr="cast 266" line="232" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 266</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CALCULATOR>
	<COMPUTER public="1" get="inline" set="null" expr="cast 267" line="233" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 267</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPUTER>
	<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 268" line="234" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 268</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_SEARCH>
	<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 269" line="235" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 269</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_HOME>
	<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 270" line="236" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 270</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BACK>
	<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 271" line="237" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 271</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_FORWARD>
	<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 272" line="238" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 272</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_STOP>
	<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 273" line="239" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 273</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_REFRESH>
	<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 274" line="240" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 274</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BOOKMARKS>
	<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 275" line="241" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 275</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_DOWN>
	<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 276" line="242" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 276</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_UP>
	<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 277" line="243" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 277</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DISPLAY_SWITCH>
	<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 278" line="244" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 278</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_TOGGLE>
	<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 279" line="245" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 279</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_DOWN>
	<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 280" line="246" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 280</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_UP>
	<EJECT public="1" get="inline" set="null" expr="cast 281" line="247" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 281</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EJECT>
	<SLEEP public="1" get="inline" set="null" expr="cast 282" line="248" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 282</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLEEP>
	<fromKeyCode public="1" set="method" line="250" static="1">
		<f a="keyCode">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.ScanCode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromKeyCode>
	<toKeyCode set="method" line="256" static="1"><f a="scanCode">
	<x path="lime.ui.ScanCode"/>
	<x path="lime.ui.KeyCode"/>
</f></toKeyCode>
	<gt get="inline" set="null" line="262" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<gte get="inline" set="null" line="263" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gte>
	<lt get="inline" set="null" line="264" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<lte get="inline" set="null" line="265" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lte>
	<plus get="inline" set="null" line="266" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="Int"/>
			<x path="lime.ui.ScanCode"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</plus>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
		<m n=":access"><e>lime.ui.KeyCode</e></m>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._ScanCode.ScanCode_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/ScanCode.hx" private="1" module="lime.ui.ScanCode">
		<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<BACKSPACE public="1" get="inline" set="null" expr="cast 42" line="14" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 42</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSPACE>
		<TAB public="1" get="inline" set="null" expr="cast 43" line="15" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 43</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAB>
		<RETURN public="1" get="inline" set="null" expr="cast 40" line="16" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 40</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN>
		<ESCAPE public="1" get="inline" set="null" expr="cast 41" line="17" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 41</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ESCAPE>
		<SPACE public="1" get="inline" set="null" expr="cast 44" line="18" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 44</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPACE>
		<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 52" line="25" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 52</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SINGLE_QUOTE>
		<COMMA public="1" get="inline" set="null" expr="cast 54" line="30" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 54</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMMA>
		<MINUS public="1" get="inline" set="null" expr="cast 45" line="31" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 45</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MINUS>
		<PERIOD public="1" get="inline" set="null" expr="cast 55" line="32" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 55</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERIOD>
		<SLASH public="1" get="inline" set="null" expr="cast 56" line="33" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 56</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLASH>
		<NUMBER_0 public="1" get="inline" set="null" expr="cast 39" line="34" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 39</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_0>
		<NUMBER_1 public="1" get="inline" set="null" expr="cast 30" line="35" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_1>
		<NUMBER_2 public="1" get="inline" set="null" expr="cast 31" line="36" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_2>
		<NUMBER_3 public="1" get="inline" set="null" expr="cast 32" line="37" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_3>
		<NUMBER_4 public="1" get="inline" set="null" expr="cast 33" line="38" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_4>
		<NUMBER_5 public="1" get="inline" set="null" expr="cast 34" line="39" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_5>
		<NUMBER_6 public="1" get="inline" set="null" expr="cast 35" line="40" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_6>
		<NUMBER_7 public="1" get="inline" set="null" expr="cast 36" line="41" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_7>
		<NUMBER_8 public="1" get="inline" set="null" expr="cast 37" line="42" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_8>
		<NUMBER_9 public="1" get="inline" set="null" expr="cast 38" line="43" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_9>
		<SEMICOLON public="1" get="inline" set="null" expr="cast 51" line="45" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 51</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEMICOLON>
		<EQUALS public="1" get="inline" set="null" expr="cast 46" line="47" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 46</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 47" line="51" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 47</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_BRACKET>
		<BACKSLASH public="1" get="inline" set="null" expr="cast 49" line="52" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 49</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSLASH>
		<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 48" line="53" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 48</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_BRACKET>
		<GRAVE public="1" get="inline" set="null" expr="cast 53" line="56" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 53</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRAVE>
		<A public="1" get="inline" set="null" expr="cast 4" line="57" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" expr="cast 5" line="58" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<C public="1" get="inline" set="null" expr="cast 6" line="59" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</C>
		<D public="1" get="inline" set="null" expr="cast 7" line="60" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</D>
		<E public="1" get="inline" set="null" expr="cast 8" line="61" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</E>
		<F public="1" get="inline" set="null" expr="cast 9" line="62" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F>
		<G public="1" get="inline" set="null" expr="cast 10" line="63" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</G>
		<H public="1" get="inline" set="null" expr="cast 11" line="64" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</H>
		<I public="1" get="inline" set="null" expr="cast 12" line="65" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</I>
		<J public="1" get="inline" set="null" expr="cast 13" line="66" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</J>
		<K public="1" get="inline" set="null" expr="cast 14" line="67" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</K>
		<L public="1" get="inline" set="null" expr="cast 15" line="68" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</L>
		<M public="1" get="inline" set="null" expr="cast 16" line="69" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</M>
		<N public="1" get="inline" set="null" expr="cast 17" line="70" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</N>
		<O public="1" get="inline" set="null" expr="cast 18" line="71" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</O>
		<P public="1" get="inline" set="null" expr="cast 19" line="72" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</P>
		<Q public="1" get="inline" set="null" expr="cast 20" line="73" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Q>
		<R public="1" get="inline" set="null" expr="cast 21" line="74" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</R>
		<S public="1" get="inline" set="null" expr="cast 22" line="75" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</S>
		<T public="1" get="inline" set="null" expr="cast 23" line="76" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</T>
		<U public="1" get="inline" set="null" expr="cast 24" line="77" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</U>
		<V public="1" get="inline" set="null" expr="cast 25" line="78" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V>
		<W public="1" get="inline" set="null" expr="cast 26" line="79" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</W>
		<X public="1" get="inline" set="null" expr="cast 27" line="80" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" expr="cast 28" line="81" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<Z public="1" get="inline" set="null" expr="cast 29" line="82" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Z>
		<DELETE public="1" get="inline" set="null" expr="cast 76" line="83" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 76</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<CAPS_LOCK public="1" get="inline" set="null" expr="cast 57" line="84" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 57</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPS_LOCK>
		<F1 public="1" get="inline" set="null" expr="cast 58" line="85" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 58</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F1>
		<F2 public="1" get="inline" set="null" expr="cast 59" line="86" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 59</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F2>
		<F3 public="1" get="inline" set="null" expr="cast 60" line="87" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 60</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F3>
		<F4 public="1" get="inline" set="null" expr="cast 61" line="88" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 61</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F4>
		<F5 public="1" get="inline" set="null" expr="cast 62" line="89" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 62</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F5>
		<F6 public="1" get="inline" set="null" expr="cast 63" line="90" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 63</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F6>
		<F7 public="1" get="inline" set="null" expr="cast 64" line="91" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 64</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F7>
		<F8 public="1" get="inline" set="null" expr="cast 65" line="92" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 65</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F8>
		<F9 public="1" get="inline" set="null" expr="cast 66" line="93" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 66</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F9>
		<F10 public="1" get="inline" set="null" expr="cast 67" line="94" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 67</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F10>
		<F11 public="1" get="inline" set="null" expr="cast 68" line="95" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 68</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F11>
		<F12 public="1" get="inline" set="null" expr="cast 69" line="96" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 69</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F12>
		<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 70" line="97" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 70</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRINT_SCREEN>
		<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 71" line="98" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 71</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCROLL_LOCK>
		<PAUSE public="1" get="inline" set="null" expr="cast 72" line="99" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 72</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAUSE>
		<INSERT public="1" get="inline" set="null" expr="cast 73" line="100" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 73</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INSERT>
		<HOME public="1" get="inline" set="null" expr="cast 74" line="101" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 74</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HOME>
		<PAGE_UP public="1" get="inline" set="null" expr="cast 75" line="102" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 75</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_UP>
		<END public="1" get="inline" set="null" expr="cast 77" line="103" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 77</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</END>
		<PAGE_DOWN public="1" get="inline" set="null" expr="cast 78" line="104" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 78</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_DOWN>
		<RIGHT public="1" get="inline" set="null" expr="cast 79" line="105" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 79</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<LEFT public="1" get="inline" set="null" expr="cast 80" line="106" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 80</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<DOWN public="1" get="inline" set="null" expr="cast 81" line="107" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 81</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOWN>
		<UP public="1" get="inline" set="null" expr="cast 82" line="108" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 82</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UP>
		<NUM_LOCK public="1" get="inline" set="null" expr="cast 83" line="109" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 83</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_LOCK>
		<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 84" line="110" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 84</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DIVIDE>
		<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 85" line="111" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 85</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MULTIPLY>
		<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 86" line="112" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 86</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MINUS>
		<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 87" line="113" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 87</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS>
		<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 88" line="114" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 88</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_ENTER>
		<NUMPAD_1 public="1" get="inline" set="null" expr="cast 89" line="115" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 89</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_1>
		<NUMPAD_2 public="1" get="inline" set="null" expr="cast 90" line="116" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 90</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_2>
		<NUMPAD_3 public="1" get="inline" set="null" expr="cast 91" line="117" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 91</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_3>
		<NUMPAD_4 public="1" get="inline" set="null" expr="cast 92" line="118" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 92</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_4>
		<NUMPAD_5 public="1" get="inline" set="null" expr="cast 93" line="119" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 93</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_5>
		<NUMPAD_6 public="1" get="inline" set="null" expr="cast 94" line="120" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 94</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_6>
		<NUMPAD_7 public="1" get="inline" set="null" expr="cast 95" line="121" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 95</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_7>
		<NUMPAD_8 public="1" get="inline" set="null" expr="cast 96" line="122" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 96</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_8>
		<NUMPAD_9 public="1" get="inline" set="null" expr="cast 97" line="123" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 97</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_9>
		<NUMPAD_0 public="1" get="inline" set="null" expr="cast 98" line="124" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 98</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_0>
		<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 99" line="125" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 99</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERIOD>
		<APPLICATION public="1" get="inline" set="null" expr="cast 101" line="126" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 101</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<POWER public="1" get="inline" set="null" expr="cast 102" line="127" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 102</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POWER>
		<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 103" line="128" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 103</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EQUALS>
		<F13 public="1" get="inline" set="null" expr="cast 104" line="129" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 104</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F13>
		<F14 public="1" get="inline" set="null" expr="cast 105" line="130" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 105</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F14>
		<F15 public="1" get="inline" set="null" expr="cast 106" line="131" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 106</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F15>
		<F16 public="1" get="inline" set="null" expr="cast 107" line="132" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 107</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F16>
		<F17 public="1" get="inline" set="null" expr="cast 108" line="133" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 108</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F17>
		<F18 public="1" get="inline" set="null" expr="cast 109" line="134" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 109</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F18>
		<F19 public="1" get="inline" set="null" expr="cast 110" line="135" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 110</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F19>
		<F20 public="1" get="inline" set="null" expr="cast 111" line="136" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 111</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F20>
		<F21 public="1" get="inline" set="null" expr="cast 112" line="137" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 112</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F21>
		<F22 public="1" get="inline" set="null" expr="cast 113" line="138" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 113</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F22>
		<F23 public="1" get="inline" set="null" expr="cast 114" line="139" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 114</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F23>
		<F24 public="1" get="inline" set="null" expr="cast 115" line="140" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 115</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F24>
		<EXECUTE public="1" get="inline" set="null" expr="cast 116" line="141" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 116</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXECUTE>
		<HELP public="1" get="inline" set="null" expr="cast 117" line="142" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 117</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HELP>
		<MENU public="1" get="inline" set="null" expr="cast 118" line="143" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 118</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MENU>
		<SELECT public="1" get="inline" set="null" expr="cast 119" line="144" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 119</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SELECT>
		<STOP public="1" get="inline" set="null" expr="cast 120" line="145" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 120</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STOP>
		<AGAIN public="1" get="inline" set="null" expr="cast 121" line="146" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 121</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AGAIN>
		<UNDO public="1" get="inline" set="null" expr="cast 122" line="147" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 122</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDO>
		<CUT public="1" get="inline" set="null" expr="cast 123" line="148" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 123</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUT>
		<COPY public="1" get="inline" set="null" expr="cast 124" line="149" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 124</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPY>
		<PASTE public="1" get="inline" set="null" expr="cast 125" line="150" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 125</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PASTE>
		<FIND public="1" get="inline" set="null" expr="cast 126" line="151" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 126</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FIND>
		<MUTE public="1" get="inline" set="null" expr="cast 127" line="152" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 127</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUTE>
		<VOLUME_UP public="1" get="inline" set="null" expr="cast 128" line="153" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 128</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_UP>
		<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 129" line="154" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 129</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_DOWN>
		<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 133" line="155" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 133</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COMMA>
		<ALT_ERASE public="1" get="inline" set="null" expr="cast 153" line="157" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 153</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALT_ERASE>
		<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 154" line="158" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 154</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYSTEM_REQUEST>
		<CANCEL public="1" get="inline" set="null" expr="cast 155" line="159" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 155</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CANCEL>
		<CLEAR public="1" get="inline" set="null" expr="cast 156" line="160" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 156</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR>
		<PRIOR public="1" get="inline" set="null" expr="cast 157" line="161" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 157</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIOR>
		<RETURN2 public="1" get="inline" set="null" expr="cast 158" line="162" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 158</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN2>
		<SEPARATOR public="1" get="inline" set="null" expr="cast 159" line="163" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 159</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEPARATOR>
		<OUT public="1" get="inline" set="null" expr="cast 160" line="164" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 160</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT>
		<OPER public="1" get="inline" set="null" expr="cast 161" line="165" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 161</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPER>
		<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 162" line="166" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 162</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR_AGAIN>
		<CRSEL public="1" get="inline" set="null" expr="cast 163" line="167" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 163</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRSEL>
		<EXSEL public="1" get="inline" set="null" expr="cast 164" line="168" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 164</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXSEL>
		<NUMPAD_00 public="1" get="inline" set="null" expr="cast 176" line="169" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 176</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_00>
		<NUMPAD_000 public="1" get="inline" set="null" expr="cast 177" line="170" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 177</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_000>
		<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 178" line="171" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 178</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THOUSAND_SEPARATOR>
		<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 179" line="172" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 179</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECIMAL_SEPARATOR>
		<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 180" line="173" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 180</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_UNIT>
		<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 181" line="174" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 181</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_SUBUNIT>
		<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 182" line="175" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 182</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_PARENTHESIS>
		<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 183" line="176" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 183</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_PARENTHESIS>
		<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 184" line="177" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 184</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_BRACE>
		<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 185" line="178" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 185</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_BRACE>
		<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 186" line="179" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 186</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_TAB>
		<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 187" line="180" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 187</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BACKSPACE>
		<NUMPAD_A public="1" get="inline" set="null" expr="cast 188" line="181" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 188</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_A>
		<NUMPAD_B public="1" get="inline" set="null" expr="cast 189" line="182" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 189</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_B>
		<NUMPAD_C public="1" get="inline" set="null" expr="cast 190" line="183" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 190</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_C>
		<NUMPAD_D public="1" get="inline" set="null" expr="cast 191" line="184" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 191</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_D>
		<NUMPAD_E public="1" get="inline" set="null" expr="cast 192" line="185" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 192</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_E>
		<NUMPAD_F public="1" get="inline" set="null" expr="cast 193" line="186" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 193</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_F>
		<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 194" line="187" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 194</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_XOR>
		<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 195" line="188" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 195</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_POWER>
		<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 196" line="189" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 196</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERCENT>
		<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 197" line="190" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 197</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LESS_THAN>
		<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 198" line="191" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 198</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_GREATER_THAN>
		<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 199" line="192" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 199</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AMPERSAND>
		<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 200" line="193" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 200</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_AMPERSAND>
		<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 201" line="194" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 201</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_VERTICAL_BAR>
		<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 202" line="195" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 202</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_VERTICAL_BAR>
		<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 203" line="196" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 203</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COLON>
		<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 204" line="197" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 204</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HASH>
		<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 205" line="198" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 205</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_SPACE>
		<NUMPAD_AT public="1" get="inline" set="null" expr="cast 206" line="199" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 206</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AT>
		<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 207" line="200" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 207</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EXCLAMATION>
		<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 208" line="201" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 208</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_STORE>
		<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 209" line="202" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 209</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_RECALL>
		<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 210" line="203" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 210</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_CLEAR>
		<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 211" line="204" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 211</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_ADD>
		<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 212" line="205" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 212</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_SUBTRACT>
		<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 213" line="206" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 213</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_MULTIPLY>
		<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 214" line="207" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 214</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_DIVIDE>
		<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 215" line="208" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 215</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS_MINUS>
		<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 216" line="209" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 216</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR>
		<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 217" line="210" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 217</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR_ENTRY>
		<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 218" line="211" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 218</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BINARY>
		<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 219" line="212" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 219</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_OCTAL>
		<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 220" line="213" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 220</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DECIMAL>
		<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 221" line="214" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 221</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HEXADECIMAL>
		<LEFT_CTRL public="1" get="inline" set="null" expr="cast 224" line="215" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 224</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_CTRL>
		<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 225" line="216" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 225</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHIFT>
		<LEFT_ALT public="1" get="inline" set="null" expr="cast 226" line="217" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 226</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_ALT>
		<LEFT_META public="1" get="inline" set="null" expr="cast 227" line="218" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 227</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_META>
		<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 228" line="219" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 228</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_CTRL>
		<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 229" line="220" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 229</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHIFT>
		<RIGHT_ALT public="1" get="inline" set="null" expr="cast 230" line="221" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 230</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_ALT>
		<RIGHT_META public="1" get="inline" set="null" expr="cast 231" line="222" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 231</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_META>
		<MODE public="1" get="inline" set="null" expr="cast 257" line="223" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 257</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MODE>
		<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 258" line="224" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 258</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_NEXT>
		<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 259" line="225" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 259</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PREVIOUS>
		<AUDIO_STOP public="1" get="inline" set="null" expr="cast 260" line="226" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 260</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_STOP>
		<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 261" line="227" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 261</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PLAY>
		<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 262" line="228" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 262</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_MUTE>
		<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 263" line="229" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 263</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIA_SELECT>
		<WWW public="1" get="inline" set="null" expr="cast 264" line="230" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 264</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WWW>
		<MAIL public="1" get="inline" set="null" expr="cast 265" line="231" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 265</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL>
		<CALCULATOR public="1" get="inline" set="null" expr="cast 266" line="232" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 266</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CALCULATOR>
		<COMPUTER public="1" get="inline" set="null" expr="cast 267" line="233" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 267</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPUTER>
		<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 268" line="234" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 268</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_SEARCH>
		<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 269" line="235" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 269</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_HOME>
		<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 270" line="236" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 270</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BACK>
		<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 271" line="237" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 271</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_FORWARD>
		<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 272" line="238" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 272</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_STOP>
		<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 273" line="239" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 273</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_REFRESH>
		<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 274" line="240" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 274</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BOOKMARKS>
		<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 275" line="241" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 275</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_DOWN>
		<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 276" line="242" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 276</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_UP>
		<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 277" line="243" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 277</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DISPLAY_SWITCH>
		<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 278" line="244" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 278</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_TOGGLE>
		<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 279" line="245" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 279</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_DOWN>
		<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 280" line="246" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 280</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_UP>
		<EJECT public="1" get="inline" set="null" expr="cast 281" line="247" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 281</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EJECT>
		<SLEEP public="1" get="inline" set="null" expr="cast 282" line="248" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 282</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLEEP>
		<fromKeyCode public="1" set="method" line="250" static="1">
			<f a="keyCode">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.ScanCode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromKeyCode>
		<toKeyCode set="method" line="256" static="1"><f a="scanCode">
	<x path="lime.ui.ScanCode"/>
	<x path="lime.ui.KeyCode"/>
</f></toKeyCode>
		<gt get="inline" set="null" line="262" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<gte get="inline" set="null" line="263" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gte>
		<lt get="inline" set="null" line="264" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<lte get="inline" set="null" line="265" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lte>
		<plus get="inline" set="null" line="266" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="Int"/>
				<x path="lime.ui.ScanCode"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</plus>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
			<m n=":access"><e>lime.ui.KeyCode</e></m>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.ui.Touch" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/Touch.hx">
		<onCancel public="1" expr="new Event&lt;Touch&gt;()" line="15" static="1">
			<c path="lime.app.Event"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onCancel>
		<onEnd public="1" expr="new Event&lt;Touch&gt;()" line="16" static="1">
			<c path="lime.app.Event"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onEnd>
		<onMove public="1" expr="new Event&lt;Touch&gt;()" line="17" static="1">
			<c path="lime.app.Event"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onMove>
		<onStart public="1" expr="new Event&lt;Touch&gt;()" line="18" static="1">
			<c path="lime.app.Event"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onStart>
		<device public="1"><x path="Int"/></device>
		<dx public="1"><x path="Float"/></dx>
		<dy public="1"><x path="Float"/></dy>
		<id public="1"><x path="Int"/></id>
		<pressure public="1"><x path="Float"/></pressure>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<new public="1" set="method" line="29"><f a="x:y:id:dx:dy:pressure:device">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.ui.Window" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/Window.hx">
		<application public="1" set="null"><c path="lime.app.Application"/></application>
		<borderless public="1" get="accessor" set="accessor"><x path="Bool"/></borderless>
		<config public="1"><t path="lime.app.WindowConfig"/></config>
		<display public="1" get="accessor" set="null"><c path="lime.system.Display"/></display>
		<displayMode public="1" get="accessor" set="accessor"><c path="lime.system.DisplayMode"/></displayMode>
		<enableTextEvents public="1" get="accessor" set="accessor"><x path="Bool"/></enableTextEvents>
		<fullscreen public="1" get="accessor" set="accessor"><x path="Bool"/></fullscreen>
		<height public="1" get="accessor" set="accessor"><x path="Int"/></height>
		<id public="1" set="null"><x path="Int"/></id>
		<maximized public="1" get="accessor" set="accessor"><x path="Bool"/></maximized>
		<minimized public="1" get="accessor" set="accessor"><x path="Bool"/></minimized>
		<onActivate public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onActivate>
		<onClose public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onClose>
		<onCreate public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onCreate>
		<onDeactivate public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onDeactivate>
		<onDropFile public="1" expr="new Event&lt;String&gt;()">
			<c path="lime.app.Event"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onDropFile>
		<onEnter public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onEnter>
		<onFocusIn public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onFocusIn>
		<onFocusOut public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onFocusOut>
		<onFullscreen public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onFullscreen>
		<onKeyDown public="1" expr="new Event&lt;KeyCode -&gt; KeyModifier&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<KeyCode -> KeyModifier>()]]></e></m></meta>
		</onKeyDown>
		<onKeyUp public="1" expr="new Event&lt;KeyCode -&gt; KeyModifier&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<KeyCode -> KeyModifier>()]]></e></m></meta>
		</onKeyUp>
		<onLeave public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onLeave>
		<onMinimize public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onMinimize>
		<onMouseDown public="1" expr="new Event&lt;Float -&gt; Float -&gt; Int&gt;()">
			<c path="lime.app.Event"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> Int>()]]></e></m></meta>
		</onMouseDown>
		<onMouseMove public="1" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMouseMove>
		<onMouseMoveRelative public="1" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMouseMoveRelative>
		<onMouseUp public="1" expr="new Event&lt;Float -&gt; Float -&gt; Int&gt;()">
			<c path="lime.app.Event"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> Int>()]]></e></m></meta>
		</onMouseUp>
		<onMouseWheel public="1" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMouseWheel>
		<onMove public="1" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMove>
		<onResize public="1" expr="new Event&lt;Int -&gt; Int&gt;()">
			<c path="lime.app.Event"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Int>()]]></e></m></meta>
		</onResize>
		<onRestore public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onRestore>
		<onTextEdit public="1" expr="new Event&lt;String -&gt; Int -&gt; Int&gt;()">
			<c path="lime.app.Event"><f a="::">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String -> Int -> Int>()]]></e></m></meta>
		</onTextEdit>
		<onTextInput public="1" expr="new Event&lt;String&gt;()">
			<c path="lime.app.Event"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onTextInput>
		<renderer public="1"><c path="lime.graphics.Renderer"/></renderer>
		<resizable public="1" get="accessor" set="accessor"><x path="Bool"/></resizable>
		<scale public="1" get="accessor" set="null"><x path="Float"/></scale>
		<stage public="1"><c path="openfl.display.Stage"/></stage>
		<title public="1" get="accessor" set="accessor"><c path="String"/></title>
		<width public="1" get="accessor" set="accessor"><x path="Int"/></width>
		<x public="1" get="accessor" set="accessor"><x path="Int"/></x>
		<y public="1" get="accessor" set="accessor"><x path="Int"/></y>
		<backend>
			<t path="lime.ui._Window.WindowBackend"/>
			<meta><m n=":noCompletion"/></meta>
		</backend>
		<__borderless>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__borderless>
		<__fullscreen>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__fullscreen>
		<__height>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__height>
		<__maximized>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__maximized>
		<__minimized>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__minimized>
		<__resizable>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__resizable>
		<__scale>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__scale>
		<__title>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__title>
		<__width>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__width>
		<__x>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__x>
		<__y>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__y>
		<alert public="1" set="method" line="119">
			<f a="?message:?title" v="null:null">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ title : null, message : null }</e></m></meta>
		</alert>
		<close public="1" set="method" line="126"><f a=""><x path="Void"/></f></close>
		<create public="1" set="method" line="133"><f a="application">
	<c path="lime.app.Application"/>
	<x path="Void"/>
</f></create>
		<focus public="1" set="method" line="360"><f a=""><x path="Void"/></f></focus>
		<move public="1" set="method" line="367"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></move>
		<resize public="1" set="method" line="377"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<setIcon public="1" set="method" line="387"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></setIcon>
		<toString public="1" set="method" line="400"><f a=""><c path="String"/></f></toString>
		<get_display set="method" line="414">
			<f a=""><c path="lime.system.Display"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_display>
		<get_displayMode set="method" line="421">
			<f a=""><c path="lime.system.DisplayMode"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_displayMode>
		<set_displayMode set="method" line="428">
			<f a="value">
				<c path="lime.system.DisplayMode"/>
				<c path="lime.system.DisplayMode"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_displayMode>
		<get_borderless get="inline" set="null" line="435">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_borderless>
		<set_borderless set="method" line="442">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_borderless>
		<get_enableTextEvents get="inline" set="null" line="449">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_enableTextEvents>
		<set_enableTextEvents get="inline" set="null" line="456">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_enableTextEvents>
		<get_fullscreen get="inline" set="null" line="463">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_fullscreen>
		<set_fullscreen set="method" line="470">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_fullscreen>
		<get_height get="inline" set="null" line="477">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_height>
		<set_height set="method" line="484">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_height>
		<get_maximized get="inline" set="null" line="492">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_maximized>
		<set_maximized get="inline" set="null" line="499">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_maximized>
		<get_minimized get="inline" set="null" line="507">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_minimized>
		<set_minimized set="method" line="514">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_minimized>
		<get_resizable get="inline" set="null" line="522">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_resizable>
		<set_resizable set="method" line="529">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_resizable>
		<get_scale get="inline" set="null" line="537">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_scale>
		<get_title get="inline" set="null" line="544">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_title>
		<set_title set="method" line="551">
			<f a="value">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_title>
		<get_width get="inline" set="null" line="558">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_width>
		<set_width set="method" line="565">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_width>
		<get_x get="inline" set="null" line="573">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_x>
		<set_x set="method" line="580">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_x>
		<get_y get="inline" set="null" line="588">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_y>
		<set_y set="method" line="595">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_y>
		<new public="1" set="method" line="86">
			<f a="?config" v="null">
				<t path="lime.app.WindowConfig"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ config : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.ui._Window.WindowBackend" params="" file="/home/joshua/Development/Haxe/lime/lime/ui/Window.hx" private="1" module="lime.ui.Window">
		<c path="lime._backend.flash.FlashWindow"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<abstract path="lime.utils.ArrayBuffer" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/ArrayBuffer.hx">
		<from><icast><c path="haxe.io.Bytes"/></icast></from>
		<this><c path="haxe.io.Bytes"/></this>
		<to><icast><c path="haxe.io.Bytes"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._ArrayBuffer.ArrayBuffer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/ArrayBuffer.hx" private="1" module="lime.utils.ArrayBuffer">
	<_new public="1" get="inline" set="null" line="13" static="1">
		<f a="byteLength">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._ArrayBuffer.ArrayBuffer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/ArrayBuffer.hx" private="1" module="lime.utils.ArrayBuffer">
		<_new public="1" get="inline" set="null" line="13" static="1">
			<f a="byteLength">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.TypedArrayType" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/ArrayBufferView.hx" module="lime.utils.ArrayBufferView">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.utils._ArrayBufferView.TypedArrayType_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/ArrayBufferView.hx" private="1" module="lime.utils.ArrayBufferView" extern="1">
	<None public="1" get="inline" set="null" expr="cast 0" line="409" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</None>
	<Int8 public="1" get="inline" set="null" expr="cast 1" line="410" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Int8>
	<Int16 public="1" get="inline" set="null" expr="cast 2" line="411" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Int16>
	<Int32 public="1" get="inline" set="null" expr="cast 3" line="412" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Int32>
	<Uint8 public="1" get="inline" set="null" expr="cast 4" line="413" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint8>
	<Uint8Clamped public="1" get="inline" set="null" expr="cast 5" line="414" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint8Clamped>
	<Uint16 public="1" get="inline" set="null" expr="cast 6" line="415" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint16>
	<Uint32 public="1" get="inline" set="null" expr="cast 7" line="416" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint32>
	<Float32 public="1" get="inline" set="null" expr="cast 8" line="417" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Float32>
	<Float64 public="1" get="inline" set="null" expr="cast 9" line="418" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Float64>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._ArrayBufferView.TypedArrayType_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/ArrayBufferView.hx" private="1" module="lime.utils.ArrayBufferView" extern="1">
		<None public="1" get="inline" set="null" expr="cast 0" line="409" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</None>
		<Int8 public="1" get="inline" set="null" expr="cast 1" line="410" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Int8>
		<Int16 public="1" get="inline" set="null" expr="cast 2" line="411" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Int16>
		<Int32 public="1" get="inline" set="null" expr="cast 3" line="412" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Int32>
		<Uint8 public="1" get="inline" set="null" expr="cast 4" line="413" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint8>
		<Uint8Clamped public="1" get="inline" set="null" expr="cast 5" line="414" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint8Clamped>
		<Uint16 public="1" get="inline" set="null" expr="cast 6" line="415" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint16>
		<Uint32 public="1" get="inline" set="null" expr="cast 7" line="416" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint32>
		<Float32 public="1" get="inline" set="null" expr="cast 8" line="417" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Float32>
		<Float64 public="1" get="inline" set="null" expr="cast 9" line="418" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Float64>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.utils.ArrayBufferIO" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/ArrayBufferView.hx" module="lime.utils.ArrayBufferView">
		<getInt8 public="1" get="inline" set="null" line="429" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getInt8>
		<setInt8 public="1" get="inline" set="null" line="441" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setInt8>
		<getUint8 public="1" get="inline" set="null" line="455" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<t path="Null"><x path="UInt"/></t>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint8>
		<setUint8Clamped public="1" get="inline" set="null" line="466" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint8Clamped>
		<setUint8 public="1" get="inline" set="null" line="473" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint8>
		<getInt16 public="1" set="method" line="488" static="1"><f a="buffer:byteOffset">
	<x path="lime.utils.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getInt16>
		<getInt16_BE public="1" set="method" line="505" static="1"><f a="buffer:byteOffset">
	<x path="lime.utils.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getInt16_BE>
		<setInt16 public="1" set="method" line="523" static="1"><f a="buffer:byteOffset:value">
	<x path="lime.utils.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setInt16>
		<setInt16_BE public="1" set="method" line="539" static="1"><f a="buffer:byteOffset:value">
	<x path="lime.utils.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setInt16_BE>
		<getUint16 public="1" get="inline" set="null" line="556" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<t path="Null"><x path="UInt"/></t>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint16>
		<getUint16_BE public="1" get="inline" set="null" line="572" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<t path="Null"><x path="UInt"/></t>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint16_BE>
		<setUint16 public="1" get="inline" set="null" line="588" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint16>
		<setUint16_BE public="1" get="inline" set="null" line="599" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint16_BE>
		<getInt32 public="1" get="inline" set="null" line="613" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getInt32>
		<getInt32_BE public="1" get="inline" set="null" line="624" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getInt32_BE>
		<setInt32 public="1" get="inline" set="null" line="635" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setInt32>
		<setInt32_BE public="1" get="inline" set="null" line="650" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setInt32_BE>
		<getUint32 public="1" get="inline" set="null" line="665" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<t path="Null"><x path="UInt"/></t>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint32>
		<getUint32_BE public="1" get="inline" set="null" line="676" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<t path="Null"><x path="UInt"/></t>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint32_BE>
		<setUint32 public="1" get="inline" set="null" line="687" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint32>
		<setUint32_BE public="1" get="inline" set="null" line="697" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint32_BE>
		<getFloat32 public="1" get="inline" set="null" line="710" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getFloat32>
		<getFloat32_BE public="1" get="inline" set="null" line="721" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getFloat32_BE>
		<setFloat32 public="1" get="inline" set="null" line="732" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setFloat32>
		<setFloat32_BE public="1" get="inline" set="null" line="746" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setFloat32_BE>
		<getFloat64 public="1" get="inline" set="null" line="760" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getFloat64>
		<getFloat64_BE public="1" get="inline" set="null" line="771" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getFloat64_BE>
		<setFloat64 public="1" get="inline" set="null" line="782" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setFloat64>
		<setFloat64_BE public="1" get="inline" set="null" line="796" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setFloat64_BE>
		<_clamp get="inline" set="null" line="813" static="1">
			<f a="_in">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<meta><m n=":extern"/></meta>
		</_clamp>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="lime.utils.AssetCache" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/AssetCache.hx">
		<audio public="1"><x path="Map">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</x></audio>
		<enabled public="1" expr="true">
			<x path="Bool"/>
			<meta><m n=":value"><e>true</e></m></meta>
		</enabled>
		<image public="1"><x path="Map">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</x></image>
		<font public="1"><x path="Map">
	<c path="String"/>
	<d/>
</x></font>
		<version public="1"><x path="Int"/></version>
		<exists public="1" set="method" line="34"><f a="id:?type">
	<c path="String"/>
	<x path="lime.utils.AssetType"/>
	<x path="Bool"/>
</f></exists>
		<set public="1" set="method" line="59"><f a="id:type:asset">
	<c path="String"/>
	<x path="lime.utils.AssetType"/>
	<d/>
	<x path="Void"/>
</f></set>
		<clear public="1" set="method" line="86">
			<f a="?prefix" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ prefix : null }</e></m></meta>
		</clear>
		<new public="1" set="method" line="24"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.utils.AssetLibrary" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/AssetLibrary.hx">
		<fromBytes public="1" set="method" line="104" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.utils.AssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromBytes>
		<fromFile public="1" set="method" line="111" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.AssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromFile>
		<fromManifest public="1" set="method" line="118" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="lime.utils.AssetLibrary"/>
</f></fromManifest>
		<loadFromBytes public="1" set="method" line="577" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromBytes>
		<loadFromFile public="1" set="method" line="588" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromFile>
		<loadFromManifest public="1" set="method" line="599" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
</f></loadFromManifest>
		<onChange public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onChange>
		<assetsLoaded><x path="Int"/></assetsLoaded>
		<assetsTotal><x path="Int"/></assetsTotal>
		<bytesLoaded><x path="Int"/></bytesLoaded>
		<bytesLoadedCache><x path="Map">
	<c path="String"/>
	<x path="Int"/>
</x></bytesLoadedCache>
		<bytesTotal><x path="Int"/></bytesTotal>
		<cachedAudioBuffers expr="new Map&lt;String,AudioBuffer&gt;()">
			<x path="Map">
				<c path="String"/>
				<c path="lime.media.AudioBuffer"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,AudioBuffer>()]]></e></m></meta>
		</cachedAudioBuffers>
		<cachedBytes expr="new Map&lt;String,Bytes&gt;()">
			<x path="Map">
				<c path="String"/>
				<x path="lime.utils.Bytes"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Bytes>()]]></e></m></meta>
		</cachedBytes>
		<cachedFonts expr="new Map&lt;String,Font&gt;()">
			<x path="Map">
				<c path="String"/>
				<c path="lime.text.Font"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Font>()]]></e></m></meta>
		</cachedFonts>
		<cachedImages expr="new Map&lt;String,Image&gt;()">
			<x path="Map">
				<c path="String"/>
				<c path="lime.graphics.Image"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Image>()]]></e></m></meta>
		</cachedImages>
		<cachedText expr="new Map&lt;String,String&gt;()">
			<x path="Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m></meta>
		</cachedText>
		<classTypes expr="new Map&lt;String,Class&lt;Dynamic&gt;&gt;()">
			<x path="Map">
				<c path="String"/>
				<x path="Class"><d/></x>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Class<Dynamic>>()]]></e></m></meta>
		</classTypes>
		<loaded><x path="Bool"/></loaded>
		<pathGroups expr="new Map&lt;String,Array&lt;String&gt;&gt;()">
			<x path="Map">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Array<String>>()]]></e></m></meta>
		</pathGroups>
		<paths expr="new Map&lt;String,String&gt;()">
			<x path="Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m></meta>
		</paths>
		<preload expr="new Map&lt;String,Bool&gt;()">
			<x path="Map">
				<c path="String"/>
				<x path="Bool"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Bool>()]]></e></m></meta>
		</preload>
		<promise><c path="lime.app.Promise_lime_utils_AssetLibrary"/></promise>
		<sizes expr="new Map&lt;String,Int&gt;()">
			<x path="Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m></meta>
		</sizes>
		<types expr="new Map&lt;String,AssetType&gt;()">
			<x path="Map">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,AssetType>()]]></e></m></meta>
		</types>
		<exists public="1" set="method" line="58"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></exists>
		<getAsset public="1" set="method" line="152"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<d/>
</f></getAsset>
		<getAudioBuffer public="1" set="method" line="170"><f a="id">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></getAudioBuffer>
		<getBytes public="1" set="method" line="199"><f a="id">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></getBytes>
		<getFont public="1" set="method" line="249"><f a="id">
	<c path="String"/>
	<c path="lime.text.Font"/>
</f></getFont>
		<getImage public="1" set="method" line="280"><f a="id">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</f></getImage>
		<getPath public="1" set="method" line="307"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getPath>
		<getText public="1" set="method" line="314"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getText>
		<isLocal public="1" set="method" line="339"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></isLocal>
		<list public="1" set="method" line="376"><f a="type">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></list>
		<loadAsset public="1" set="method" line="396"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<c path="lime.app.Future"><d/></c>
</f></loadAsset>
		<load public="1" set="method" line="414"><f a=""><c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c></f></load>
		<loadAudioBuffer public="1" set="method" line="498"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadAudioBuffer>
		<loadBytes public="1" set="method" line="525"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadBytes>
		<loadFont public="1" set="method" line="548"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFont>
		<loadImage public="1" set="method" line="616"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
</f></loadImage>
		<loadText public="1" set="method" line="635"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="String"/></c>
</f></loadText>
		<unload public="1" set="method" line="667"><f a=""><x path="Void"/></f></unload>
		<__assetLoaded set="method" line="674"><f a="id">
	<c path="String"/>
	<x path="Void"/>
</f></__assetLoaded>
		<__cacheBreak set="method" line="723"><f a="path">
	<c path="String"/>
	<c path="String"/>
</f></__cacheBreak>
		<__fromManifest set="method" line="742"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<x path="Void"/>
</f></__fromManifest>
		<loadAudioBuffer_onComplete set="method" line="827"><f a="id:audioBuffer">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
	<x path="Void"/>
</f></loadAudioBuffer_onComplete>
		<loadBytes_onComplete set="method" line="859"><f a="id:bytes">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
	<x path="Void"/>
</f></loadBytes_onComplete>
		<loadFont_onComplete set="method" line="867"><f a="id:font">
	<c path="String"/>
	<c path="lime.text.Font"/>
	<x path="Void"/>
</f></loadFont_onComplete>
		<loadImage_onComplete set="method" line="875"><f a="id:image">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></loadImage_onComplete>
		<loadText_onComplete set="method" line="883"><f a="id:text">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></loadText_onComplete>
		<load_onError set="method" line="891"><f a="id:message">
	<c path="String"/>
	<d/>
	<x path="Void"/>
</f></load_onError>
		<load_onProgress set="method" line="907"><f a="id:bytesLoaded:bytesTotal">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></load_onProgress>
		<new public="1" set="method" line="50"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.utils.AssetManifest" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/AssetManifest.hx">
		<fromBytes public="1" set="method" line="40" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.utils.AssetManifest"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromBytes>
		<fromFile public="1" set="method" line="55" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.AssetManifest"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromFile>
		<loadFromBytes public="1" set="method" line="67" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetManifest"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromBytes>
		<loadFromFile public="1" set="method" line="74" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetManifest"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromFile>
		<parse public="1" set="method" line="90" static="1">
			<f a="data:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.AssetManifest"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</parse>
		<__resolvePath set="method" line="143" static="1"><f a="path">
	<c path="String"/>
	<c path="String"/>
</f></__resolvePath>
		<__resolveRootPath set="method" line="189" static="1"><f a="rootPath:path">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></__resolveRootPath>
		<assets public="1"><c path="Array"><d/></c></assets>
		<libraryArgs public="1"><c path="Array"><c path="String"/></c></libraryArgs>
		<libraryType public="1"><c path="String"/></libraryType>
		<name public="1"><c path="String"/></name>
		<rootPath public="1"><c path="String"/></rootPath>
		<version public="1"><x path="Int"/></version>
		<serialize public="1" set="method" line="121"><f a=""><c path="String"/></f></serialize>
		<new public="1" set="method" line="31"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.AssetType" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/AssetType.hx">
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.utils._AssetType.AssetType_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/AssetType.hx" private="1" module="lime.utils.AssetType" extern="1">
	<BINARY public="1" get="inline" set="null" expr="cast &quot;BINARY&quot;" line="6" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "BINARY"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BINARY>
	<FONT public="1" get="inline" set="null" expr="cast &quot;FONT&quot;" line="7" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "FONT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONT>
	<IMAGE public="1" get="inline" set="null" expr="cast &quot;IMAGE&quot;" line="8" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "IMAGE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IMAGE>
	<MANIFEST public="1" get="inline" set="null" expr="cast &quot;MANIFEST&quot;" line="9" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "MANIFEST"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MANIFEST>
	<MUSIC public="1" get="inline" set="null" expr="cast &quot;MUSIC&quot;" line="10" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "MUSIC"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUSIC>
	<SOUND public="1" get="inline" set="null" expr="cast &quot;SOUND&quot;" line="11" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "SOUND"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOUND>
	<TEMPLATE public="1" get="inline" set="null" expr="cast &quot;TEMPLATE&quot;" line="12" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "TEMPLATE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEMPLATE>
	<TEXT public="1" get="inline" set="null" expr="cast &quot;TEXT&quot;" line="13" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "TEXT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._AssetType.AssetType_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/AssetType.hx" private="1" module="lime.utils.AssetType" extern="1">
		<BINARY public="1" get="inline" set="null" expr="cast &quot;BINARY&quot;" line="6" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "BINARY"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BINARY>
		<FONT public="1" get="inline" set="null" expr="cast &quot;FONT&quot;" line="7" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "FONT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONT>
		<IMAGE public="1" get="inline" set="null" expr="cast &quot;IMAGE&quot;" line="8" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "IMAGE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IMAGE>
		<MANIFEST public="1" get="inline" set="null" expr="cast &quot;MANIFEST&quot;" line="9" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "MANIFEST"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MANIFEST>
		<MUSIC public="1" get="inline" set="null" expr="cast &quot;MUSIC&quot;" line="10" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "MUSIC"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUSIC>
		<SOUND public="1" get="inline" set="null" expr="cast &quot;SOUND&quot;" line="11" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "SOUND"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOUND>
		<TEMPLATE public="1" get="inline" set="null" expr="cast &quot;TEMPLATE&quot;" line="12" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "TEMPLATE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEMPLATE>
		<TEXT public="1" get="inline" set="null" expr="cast &quot;TEXT&quot;" line="13" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "TEXT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.utils.Assets" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Assets.hx">
		<cache public="1" expr="new AssetCache()" line="47" static="1">
			<c path="lime.utils.AssetCache"/>
			<meta><m n=":value"><e>new AssetCache()</e></m></meta>
		</cache>
		<onChange public="1" expr="new Event&lt;Void&gt;()" line="48" static="1">
			<c path="lime.app.Event"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onChange>
		<defaultRootPath static="1"><c path="String"/></defaultRootPath>
		<libraries set="null" expr="new Map&lt;String,AssetLibrary&gt;()" line="51" static="1">
			<x path="Map">
				<c path="String"/>
				<c path="lime.utils.AssetLibrary"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,AssetLibrary>()]]></e></m></meta>
		</libraries>
		<libraryPaths expr="new Map&lt;String,String&gt;()" line="52" static="1">
			<x path="Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m></meta>
		</libraryPaths>
		<exists public="1" set="method" line="55" static="1">
			<f a="id:?type" v=":null">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</exists>
		<getAsset public="1" set="method" line="86" static="1">
			<f a="id:type:useCache">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
				<x path="Bool"/>
				<d/>
			</f>
			<haxe_doc>* Gets an instance of a cached or embedded asset
	 * @usage		var sound = Assets.getAsset("sound.wav", SOUND);
	 * @param	id		The ID or asset path for the asset
	 * @return		An Asset object, or null.</haxe_doc>
		</getAsset>
		<getAudioBuffer public="1" set="method" line="189" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.media.AudioBuffer"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded sound
	 * @usage		var sound = Assets.getSound("sound.wav");
	 * @param	id		The ID or asset path for the sound
	 * @return		A new Sound object</haxe_doc>
		</getAudioBuffer>
		<getBytes public="1" set="method" line="202" static="1">
			<f a="id">
				<c path="String"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded binary asset
	 * @usage		var bytes = Assets.getBytes("file.zip");
	 * @param	id		The ID or asset path for the file
	 * @return		A new Bytes object</haxe_doc>
		</getBytes>
		<getFont public="1" set="method" line="215" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.text.Font"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded font
	 * @usage		var fontName = Assets.getFont("font.ttf").fontName;
	 * @param	id		The ID or asset path for the font
	 * @return		A new Font object</haxe_doc>
		</getFont>
		<getImage public="1" set="method" line="229" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded bitmap
	 * @usage		var bitmap = new Bitmap(Assets.getBitmapData("image.jpg"));
	 * @param	id		The ID or asset path for the bitmap
	 * @param	useCache		(Optional) Whether to use BitmapData from the cache(Default: true)
	 * @return		A new BitmapData object</haxe_doc>
		</getImage>
		<getLibrary public="1" set="method" line="236" static="1"><f a="name">
	<c path="String"/>
	<c path="lime.utils.AssetLibrary"/>
</f></getLibrary>
		<getPath public="1" set="method" line="255" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets the file path (if available) for an asset
	 * @usage		var path = Assets.getPath("image.jpg");
	 * @param	id		The ID or asset path for the asset
	 * @return		The path to the asset (or null)</haxe_doc>
		</getPath>
		<getText public="1" set="method" line="292" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded text asset
	 * @usage		var text = Assets.getText("text.txt");
	 * @param	id		The ID or asset path for the file
	 * @return		A new String object</haxe_doc>
		</getText>
		<hasLibrary public="1" set="method" line="299" static="1"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasLibrary>
		<isLocal public="1" set="method" line="312" static="1">
			<f a="id:?type:?useCache" v=":null:true">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true, type : null }</e></m></meta>
		</isLocal>
		<isValidAudio set="method" line="334" static="1"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></isValidAudio>
		<isValidImage set="method" line="343" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Bool"/>
</f></isValidImage>
		<list public="1" set="method" line="352" static="1">
			<f a="?type" v="null">
				<x path="lime.utils.AssetType"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</list>
		<loadAsset public="1" set="method" line="373" static="1"><f a="id:type:useCache">
	<c path="String"/>
	<x path="lime.utils.AssetType"/>
	<x path="Bool"/>
	<c path="lime.app.Future"><d/></c>
</f></loadAsset>
		<loadAudioBuffer public="1" set="method" line="464" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
		</loadAudioBuffer>
		<loadBytes public="1" set="method" line="471" static="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadBytes>
		<loadFont public="1" set="method" line="478" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="lime.text.Font"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
		</loadFont>
		<loadImage public="1" set="method" line="485" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
		</loadImage>
		<loadLibrary public="1" set="method" line="492" static="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
</f></loadLibrary>
		<loadText public="1" set="method" line="556" static="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="String"/></c>
</f></loadText>
		<registerLibrary public="1" set="method" line="563" static="1"><f a="name:library">
	<c path="String"/>
	<c path="lime.utils.AssetLibrary"/>
	<x path="Void"/>
</f></registerLibrary>
		<unloadLibrary public="1" set="method" line="590" static="1"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></unloadLibrary>
		<__libraryNotFound set="method" line="611" static="1"><f a="name">
	<c path="String"/>
	<c path="String"/>
</f></__libraryNotFound>
		<library_onChange set="method" line="639" static="1"><f a=""><x path="Void"/></f></library_onChange>
		<haxe_doc><![CDATA[* <p>The Assets class provides a cross-platform interface to access 
 * embedded images, fonts, sounds and other resource files.</p>
 * 
 * <p>The contents are populated automatically when an application
 * is compiled using the Lime command-line tools, based on the
 * contents of the project file.</p>
 * 
 * <p>For most platforms, the assets are included in the same directory
 * or package as the application, and the paths are handled
 * automatically. For web content, the assets are preloaded before
 * the start of the rest of the application.</p>]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime.utils.AssetLibrary</e></m>
		</meta>
	</class>
	<class path="lime.utils._Assets.LibrarySymbol" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Assets.hx" private="1" module="lime.utils.Assets">
		<library public="1" set="null"><c path="lime.utils.AssetLibrary"/></library>
		<libraryName public="1" set="null"><c path="String"/></libraryName>
		<symbolName public="1" set="null"><c path="String"/></symbolName>
		<isLocal public="1" get="inline" set="null" line="668"><f a="?type">
	<c path="String"/>
	<x path="Bool"/>
</f></isLocal>
		<exists public="1" get="inline" set="null" line="669"><f a="?type">
	<c path="String"/>
	<x path="Bool"/>
</f></exists>
		<new public="1" get="inline" set="null" line="658"><f a="id">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.utils.BytePointer" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/BytePointer.hx">
		<from>
			<icast><c path="lime.utils.BytePointerData"/></icast>
			<icast field="fromArrayBufferView"><c path="lime.utils.ArrayBufferView"/></icast>
			<icast field="fromArrayBuffer"><x path="lime.utils.ArrayBuffer"/></icast>
			<icast field="fromBytes"><c path="haxe.io.Bytes"/></icast>
			<icast field="fromBytesData"><t path="haxe.io.BytesData"/></icast>
			<icast field="fromLimeBytes"><t path="lime.utils._Bytes.LimeBytes"/></icast>
		</from>
		<this><c path="lime.utils.BytePointerData"/></this>
		<to>
			<icast><c path="lime.utils.BytePointerData"/></icast>
			<icast field="toUInt8Array"><x path="lime.utils.UInt8Array"/></icast>
			<icast field="toUInt8ClampedArray"><x path="lime.utils.UInt8ClampedArray"/></icast>
			<icast field="toInt8Array"><x path="lime.utils.Int8Array"/></icast>
			<icast field="toUInt16Array"><x path="lime.utils.UInt16Array"/></icast>
			<icast field="toInt16Array"><x path="lime.utils.Int16Array"/></icast>
			<icast field="toUInt32Array"><x path="lime.utils.UInt32Array"/></icast>
			<icast field="toInt32Array"><x path="lime.utils.Int32Array"/></icast>
			<icast field="toFloat32Array"><x path="lime.utils.Float32Array"/></icast>
			<icast field="toFloat64Array"><x path="lime.utils.Float64Array"/></icast>
		</to>
		<meta>
			<m n=":access"><e>haxe.io.Bytes</e></m>
			<m n=":access"><e>lime.utils.BytePointerData</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.utils._BytePointer.BytePointer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/BytePointer.hx" private="1" module="lime.utils.BytePointer">
	<_new public="1" get="inline" set="null" line="16" static="1">
		<f a="?bytes:?offset" v="null:0">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0, bytes : null }</e></m>
			<m n=":impl"/>
		</meta>
	</_new>
	<set public="1" set="method" line="23" static="1">
		<f a="this:?bytes:?bufferView:?buffer:?offset">
			<c path="lime.utils.BytePointerData"/>
			<c path="haxe.io.Bytes"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="lime.utils.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set>
	<__arrayGet get="inline" set="null" line="55" static="1">
		<f a="this:index">
			<c path="lime.utils.BytePointerData"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
		</meta>
	</__arrayGet>
	<__arraySet get="inline" set="null" line="62" static="1">
		<f a="this:index:value">
			<c path="lime.utils.BytePointerData"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
		</meta>
	</__arraySet>
	<fromArrayBufferView public="1" set="method" line="70" static="1">
		<f a="arrayBufferView">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBufferView>
	<fromArrayBuffer public="1" set="method" line="83" static="1">
		<f a="buffer">
			<x path="lime.utils.ArrayBuffer"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBuffer>
	<fromBytes public="1" set="method" line="96" static="1">
		<f a="bytes">
			<c path="haxe.io.Bytes"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytes>
	<fromBytesData public="1" set="method" line="103" static="1">
		<f a="bytesData">
			<t path="haxe.io.BytesData"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesData>
	<fromFile public="1" set="method" line="111" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.BytePointer"/>
</f></fromFile>
	<fromLimeBytes public="1" set="method" line="118" static="1">
		<f a="bytes">
			<t path="lime.utils._Bytes.LimeBytes"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromLimeBytes>
	<toUInt8Array public="1" set="method" line="125" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt8Array>
	<toUInt8ClampedArray public="1" set="method" line="136" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt8ClampedArray>
	<toInt8Array public="1" set="method" line="149" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toInt8Array>
	<toUInt16Array public="1" set="method" line="162" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt16Array>
	<toInt16Array public="1" set="method" line="175" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toInt16Array>
	<toUInt32Array public="1" set="method" line="188" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt32Array>
	<toInt32Array public="1" set="method" line="201" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toInt32Array>
	<toFloat32Array public="1" set="method" line="214" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toFloat32Array>
	<toFloat64Array public="1" set="method" line="227" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toFloat64Array>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":access"><e>lime.utils.BytePointerData</e></m>
		<m n=":access"><e>haxe.io.Bytes</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._BytePointer.BytePointer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/BytePointer.hx" private="1" module="lime.utils.BytePointer">
		<_new public="1" get="inline" set="null" line="16" static="1">
			<f a="?bytes:?offset" v="null:0">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0, bytes : null }</e></m>
				<m n=":impl"/>
			</meta>
		</_new>
		<set public="1" set="method" line="23" static="1">
			<f a="this:?bytes:?bufferView:?buffer:?offset">
				<c path="lime.utils.BytePointerData"/>
				<c path="haxe.io.Bytes"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set>
		<__arrayGet get="inline" set="null" line="55" static="1">
			<f a="this:index">
				<c path="lime.utils.BytePointerData"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
			</meta>
		</__arrayGet>
		<__arraySet get="inline" set="null" line="62" static="1">
			<f a="this:index:value">
				<c path="lime.utils.BytePointerData"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
			</meta>
		</__arraySet>
		<fromArrayBufferView public="1" set="method" line="70" static="1">
			<f a="arrayBufferView">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBufferView>
		<fromArrayBuffer public="1" set="method" line="83" static="1">
			<f a="buffer">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBuffer>
		<fromBytes public="1" set="method" line="96" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytes>
		<fromBytesData public="1" set="method" line="103" static="1">
			<f a="bytesData">
				<t path="haxe.io.BytesData"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesData>
		<fromFile public="1" set="method" line="111" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.BytePointer"/>
</f></fromFile>
		<fromLimeBytes public="1" set="method" line="118" static="1">
			<f a="bytes">
				<t path="lime.utils._Bytes.LimeBytes"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromLimeBytes>
		<toUInt8Array public="1" set="method" line="125" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt8Array>
		<toUInt8ClampedArray public="1" set="method" line="136" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt8ClampedArray>
		<toInt8Array public="1" set="method" line="149" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toInt8Array>
		<toUInt16Array public="1" set="method" line="162" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt16Array>
		<toInt16Array public="1" set="method" line="175" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toInt16Array>
		<toUInt32Array public="1" set="method" line="188" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt32Array>
		<toInt32Array public="1" set="method" line="201" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toInt32Array>
		<toFloat32Array public="1" set="method" line="214" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toFloat32Array>
		<toFloat64Array public="1" set="method" line="227" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toFloat64Array>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":access"><e>lime.utils.BytePointerData</e></m>
			<m n=":access"><e>haxe.io.Bytes</e></m>
		</meta>
	</class>
	<abstract path="lime.utils.Bytes" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Bytes.hx">
		<from><icast><t path="haxe.io._Bytes.HaxeBytes"/></icast></from>
		<this><t path="haxe.io._Bytes.HaxeBytes"/></this>
		<to><icast><t path="haxe.io._Bytes.HaxeBytes"/></icast></to>
		<meta>
			<m n=":access"><e>haxe.io.Bytes</e></m>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.utils._Bytes.Bytes_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Bytes.hx" private="1" module="lime.utils.Bytes">
	<_new public="1" set="method" line="18" static="1">
		<f a="length:bytesData">
			<x path="Int"/>
			<t path="haxe.io.BytesData"/>
			<x path="lime.utils.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<alloc public="1" set="method" line="29" static="1"><f a="length">
	<x path="Int"/>
	<x path="lime.utils.Bytes"/>
</f></alloc>
	<fastGet public="1" get="inline" set="null" line="37" static="1"><f a="b:pos">
	<t path="haxe.io.BytesData"/>
	<x path="Int"/>
	<x path="Int"/>
</f></fastGet>
	<fromBytes public="1" set="method" line="44" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="lime.utils.Bytes"/>
</f></fromBytes>
	<fromFile public="1" set="method" line="53" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></fromFile>
	<loadFromBytes public="1" set="method" line="70" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromBytes>
	<loadFromFile public="1" set="method" line="77" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromFile>
	<ofData public="1" set="method" line="85" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<x path="lime.utils.Bytes"/>
</f></ofData>
	<ofString public="1" set="method" line="93" static="1"><f a="s">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></ofString>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		<m n=":access"><e>haxe.io.Bytes</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Bytes.Bytes_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Bytes.hx" private="1" module="lime.utils.Bytes">
		<_new public="1" set="method" line="18" static="1">
			<f a="length:bytesData">
				<x path="Int"/>
				<t path="haxe.io.BytesData"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<alloc public="1" set="method" line="29" static="1"><f a="length">
	<x path="Int"/>
	<x path="lime.utils.Bytes"/>
</f></alloc>
		<fastGet public="1" get="inline" set="null" line="37" static="1"><f a="b:pos">
	<t path="haxe.io.BytesData"/>
	<x path="Int"/>
	<x path="Int"/>
</f></fastGet>
		<fromBytes public="1" set="method" line="44" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="lime.utils.Bytes"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="53" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></fromFile>
		<loadFromBytes public="1" set="method" line="70" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromBytes>
		<loadFromFile public="1" set="method" line="77" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromFile>
		<ofData public="1" set="method" line="85" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<x path="lime.utils.Bytes"/>
</f></ofData>
		<ofString public="1" set="method" line="93" static="1"><f a="s">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></ofString>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
			<m n=":access"><e>haxe.io.Bytes</e></m>
		</meta>
	</class>
	<abstract path="lime.utils.DataPointer" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/DataPointer.hx">
		<from>
			<icast field="fromInt"><x path="Int"/></icast>
			<icast field="fromFloat"><x path="Float"/></icast>
			<icast field="fromBytesPointer"><x path="lime.utils.BytePointer"/></icast>
			<icast field="fromArrayBufferView"><c path="lime.utils.ArrayBufferView"/></icast>
			<icast field="fromArrayBuffer"><x path="lime.utils.ArrayBuffer"/></icast>
			<icast field="fromBytes"><c path="haxe.io.Bytes"/></icast>
			<icast field="fromBytesData"><t path="haxe.io.BytesData"/></icast>
			<icast field="fromLimeBytes"><t path="lime.utils._Bytes.LimeBytes"/></icast>
			<icast field="fromCFFIPointer"><x path="lime.system.CFFIPointer"/></icast>
		</from>
		<this><t path="lime.utils._DataPointer.DataPointerType"/></this>
		<to><icast><t path="lime.utils._DataPointer.DataPointerType"/></icast></to>
		<impl><class path="lime.utils._DataPointer.DataPointer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/DataPointer.hx" private="1" module="lime.utils.DataPointer">
	<_new set="method" line="18" static="1">
		<f a="data">
			<t path="lime.utils._DataPointer.DataPointerType"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<fromInt set="method" line="25" static="1">
		<f a="value">
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromInt>
	<fromFloat set="method" line="39" static="1">
		<f a="value">
			<x path="Float"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromFloat>
	<fromBytesPointer public="1" set="method" line="52" static="1">
		<f a="pointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesPointer>
	<fromArrayBufferView public="1" set="method" line="67" static="1">
		<f a="arrayBufferView">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBufferView>
	<fromArrayBuffer public="1" set="method" line="82" static="1">
		<f a="buffer">
			<x path="lime.utils.ArrayBuffer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBuffer>
	<fromBytes public="1" set="method" line="96" static="1">
		<f a="bytes">
			<c path="haxe.io.Bytes"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytes>
	<fromBytesData public="1" set="method" line="111" static="1">
		<f a="bytesData">
			<t path="haxe.io.BytesData"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesData>
	<fromLimeBytes public="1" set="method" line="125" static="1">
		<f a="bytes">
			<t path="lime.utils._Bytes.LimeBytes"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromLimeBytes>
	<fromCFFIPointer public="1" set="method" line="132" static="1">
		<f a="pointer">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromCFFIPointer>
	<fromFile public="1" set="method" line="144" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.DataPointer"/>
</f></fromFile>
	<__withOffset set="method" line="393" static="1"><f a="data:offset">
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></__withOffset>
	<equals get="inline" set="null" line="406" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equals>
	<equalsPointer get="inline" set="null" line="407" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equalsPointer>
	<greaterThan get="inline" set="null" line="408" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A > B]]></e></m>
		</meta>
	</greaterThan>
	<greaterThanPointer get="inline" set="null" line="409" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A > B]]></e></m>
		</meta>
	</greaterThanPointer>
	<greaterThanOrEqual get="inline" set="null" line="410" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A >= B]]></e></m>
		</meta>
	</greaterThanOrEqual>
	<greaterThanOrEqualPointer get="inline" set="null" line="411" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A >= B]]></e></m>
		</meta>
	</greaterThanOrEqualPointer>
	<lessThan get="inline" set="null" line="412" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A < B]]></e></m>
		</meta>
	</lessThan>
	<lessThanPointer get="inline" set="null" line="413" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A < B]]></e></m>
		</meta>
	</lessThanPointer>
	<lessThanOrEqual get="inline" set="null" line="414" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A <= B]]></e></m>
		</meta>
	</lessThanOrEqual>
	<lessThanOrEqualPointer get="inline" set="null" line="415" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A <= B]]></e></m>
		</meta>
	</lessThanOrEqualPointer>
	<notEquals get="inline" set="null" line="416" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEquals>
	<notEqualsPointer get="inline" set="null" line="417" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEqualsPointer>
	<plus get="inline" set="null" line="418" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A + B</e></m>
		</meta>
	</plus>
	<plusPointer get="inline" set="null" line="419" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A + B</e></m>
		</meta>
	</plusPointer>
	<minus get="inline" set="null" line="420" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A - B</e></m>
		</meta>
	</minus>
	<minusPointer get="inline" set="null" line="421" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A - B</e></m>
		</meta>
	</minusPointer>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._DataPointer.DataPointer_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/DataPointer.hx" private="1" module="lime.utils.DataPointer">
		<_new set="method" line="18" static="1">
			<f a="data">
				<t path="lime.utils._DataPointer.DataPointerType"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<fromInt set="method" line="25" static="1">
			<f a="value">
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromInt>
		<fromFloat set="method" line="39" static="1">
			<f a="value">
				<x path="Float"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromFloat>
		<fromBytesPointer public="1" set="method" line="52" static="1">
			<f a="pointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesPointer>
		<fromArrayBufferView public="1" set="method" line="67" static="1">
			<f a="arrayBufferView">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBufferView>
		<fromArrayBuffer public="1" set="method" line="82" static="1">
			<f a="buffer">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBuffer>
		<fromBytes public="1" set="method" line="96" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytes>
		<fromBytesData public="1" set="method" line="111" static="1">
			<f a="bytesData">
				<t path="haxe.io.BytesData"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesData>
		<fromLimeBytes public="1" set="method" line="125" static="1">
			<f a="bytes">
				<t path="lime.utils._Bytes.LimeBytes"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromLimeBytes>
		<fromCFFIPointer public="1" set="method" line="132" static="1">
			<f a="pointer">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromCFFIPointer>
		<fromFile public="1" set="method" line="144" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.DataPointer"/>
</f></fromFile>
		<__withOffset set="method" line="393" static="1"><f a="data:offset">
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></__withOffset>
		<equals get="inline" set="null" line="406" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equals>
		<equalsPointer get="inline" set="null" line="407" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equalsPointer>
		<greaterThan get="inline" set="null" line="408" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A > B]]></e></m>
			</meta>
		</greaterThan>
		<greaterThanPointer get="inline" set="null" line="409" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A > B]]></e></m>
			</meta>
		</greaterThanPointer>
		<greaterThanOrEqual get="inline" set="null" line="410" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A >= B]]></e></m>
			</meta>
		</greaterThanOrEqual>
		<greaterThanOrEqualPointer get="inline" set="null" line="411" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A >= B]]></e></m>
			</meta>
		</greaterThanOrEqualPointer>
		<lessThan get="inline" set="null" line="412" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A < B]]></e></m>
			</meta>
		</lessThan>
		<lessThanPointer get="inline" set="null" line="413" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A < B]]></e></m>
			</meta>
		</lessThanPointer>
		<lessThanOrEqual get="inline" set="null" line="414" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A <= B]]></e></m>
			</meta>
		</lessThanOrEqual>
		<lessThanOrEqualPointer get="inline" set="null" line="415" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A <= B]]></e></m>
			</meta>
		</lessThanOrEqualPointer>
		<notEquals get="inline" set="null" line="416" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEquals>
		<notEqualsPointer get="inline" set="null" line="417" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEqualsPointer>
		<plus get="inline" set="null" line="418" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A + B</e></m>
			</meta>
		</plus>
		<plusPointer get="inline" set="null" line="419" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A + B</e></m>
			</meta>
		</plusPointer>
		<minus get="inline" set="null" line="420" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A - B</e></m>
			</meta>
		</minus>
		<minusPointer get="inline" set="null" line="421" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A - B</e></m>
			</meta>
		</minusPointer>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<typedef path="lime.utils._DataPointer.DataPointerType" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/DataPointer.hx" private="1" module="lime.utils.DataPointer"><d/></typedef>
	<class path="lime.utils.DataPointerObject" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/DataPointer.hx" module="lime.utils.DataPointer">
		<buffer public="1"><x path="lime.utils.ArrayBuffer"/></buffer>
		<bufferView public="1"><c path="lime.utils.ArrayBufferView"/></bufferView>
		<offset public="1"><x path="Int"/></offset>
		<type public="1"><e path="lime.utils.DataPointerObjectType"/></type>
		<new public="1" set="method" line="441">
			<f a="?bufferView:?buffer:?offset" v="::0">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : 0 }</e></m></meta>
		</new>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<enum path="lime.utils.DataPointerObjectType" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/DataPointer.hx" module="lime.utils.DataPointer">
		<BUFFER/>
		<BUFFER_VIEW/>
		<VALUE/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</enum>
	<class path="lime.utils.DataView" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/DataView.hx">
		<buffer public="1"><x path="lime.utils.ArrayBuffer"/></buffer>
		<byteLength public="1"><x path="Int"/></byteLength>
		<byteOffset public="1"><x path="Int"/></byteOffset>
		<getInt8 public="1" get="inline" set="null" line="147"><f a="byteOffset">
	<x path="Int"/>
	<x path="Int"/>
</f></getInt8>
		<getInt16 public="1" get="inline" set="null" line="152">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getInt16>
		<getInt32 public="1" get="inline" set="null" line="159">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getInt32>
		<getUint8 public="1" get="inline" set="null" line="166"><f a="byteOffset">
	<x path="Int"/>
	<x path="UInt"/>
</f></getUint8>
		<getUint16 public="1" get="inline" set="null" line="171">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="UInt"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getUint16>
		<getUint32 public="1" get="inline" set="null" line="178">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="UInt"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getUint32>
		<getFloat32 public="1" get="inline" set="null" line="185">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Float"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getFloat32>
		<getFloat64 public="1" get="inline" set="null" line="192">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Float"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getFloat64>
		<setInt8 public="1" get="inline" set="null" line="202"><f a="byteOffset:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setInt8>
		<setInt16 public="1" get="inline" set="null" line="207">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setInt16>
		<setInt32 public="1" get="inline" set="null" line="214">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setInt32>
		<setUint8 public="1" get="inline" set="null" line="221"><f a="byteOffset:value">
	<x path="Int"/>
	<x path="UInt"/>
	<x path="Void"/>
</f></setUint8>
		<setUint16 public="1" get="inline" set="null" line="226">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setUint16>
		<setUint32 public="1" get="inline" set="null" line="233">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setUint32>
		<setFloat32 public="1" get="inline" set="null" line="240">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setFloat32>
		<setFloat64 public="1" get="inline" set="null" line="247">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setFloat64>
		<new public="1" get="inline" set="null" line="120">
			<f a="buffer:?byteOffset:?byteLength" v=":0:null">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ byteLength : null, byteOffset : 0 }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.Float32Array" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Float32Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Float32Array.Float32Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Float32Array.hx" private="1" module="lime.utils.Float32Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="66" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>4</e></m></meta>
	</BYTES_PER_ELEMENT>
	<hello public="1" static="1"><x path="Int"/></hello>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="71" static="1">
		<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<x path="openfl.Vector"><x path="Float"/></x>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="96" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="100" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="104" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<toString get="inline" set="null" line="110" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<t path="Null"><c path="String"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<get_length get="inline" set="null" line="112" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":extern"/>
		</meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="117" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="123" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Float32Array.Float32Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Float32Array.hx" private="1" module="lime.utils.Float32Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="66" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<hello public="1" static="1"><x path="Int"/></hello>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="71" static="1">
			<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<x path="openfl.Vector"><x path="Float"/></x>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="96" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="100" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="104" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<toString get="inline" set="null" line="110" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<t path="Null"><c path="String"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<get_length get="inline" set="null" line="112" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":extern"/>
			</meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="117" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="123" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.Float64Array" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Float64Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Float64Array.Float64Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Float64Array.hx" private="1" module="lime.utils.Float64Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="8" line="64" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>8</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="69" static="1">
		<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<x path="openfl.Vector"><x path="Float"/></x>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="94" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="98" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="102" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="108" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="113" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="119" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="124" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<t path="Null"><c path="String"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Float64Array.Float64Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Float64Array.hx" private="1" module="lime.utils.Float64Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="8" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="69" static="1">
			<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<x path="openfl.Vector"><x path="Float"/></x>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="94" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="98" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="102" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="108" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="113" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="119" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="124" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<t path="Null"><c path="String"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.utils.GLUtils" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/GLUtils.hx">
		<compileShader public="1" set="method" line="18" static="1"><f a="source:type">
	<c path="String"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShader"/>
</f></compileShader>
		<createProgram public="1" set="method" line="44" static="1"><f a="vertexSource:fragmentSource">
	<c path="String"/>
	<c path="String"/>
	<t path="lime.graphics.opengl.GLProgram"/>
</f></createProgram>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.Int16Array" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Int16Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Int16Array.Int16Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Int16Array.hx" private="1" module="lime.utils.Int16Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="64" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>2</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="69" static="1">
		<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<x path="openfl.Vector"><x path="Int"/></x>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="94" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="98" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="102" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="108" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="113" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="119" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="124" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<t path="Null"><c path="String"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Int16Array.Int16Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Int16Array.hx" private="1" module="lime.utils.Int16Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="69" static="1">
			<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<x path="openfl.Vector"><x path="Int"/></x>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="94" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="98" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="102" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="108" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="113" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="119" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="124" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<t path="Null"><c path="String"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.Int32Array" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Int32Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Int32Array.Int32Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Int32Array.hx" private="1" module="lime.utils.Int32Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="64" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>4</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="69" static="1">
		<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<x path="openfl.Vector"><x path="Int"/></x>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="94" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="98" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="102" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="108" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="113" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="119" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="124" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<t path="Null"><c path="String"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Int32Array.Int32Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Int32Array.hx" private="1" module="lime.utils.Int32Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="69" static="1">
			<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<x path="openfl.Vector"><x path="Int"/></x>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="94" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="98" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="102" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="108" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="113" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="119" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="124" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<t path="Null"><c path="String"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.Int8Array" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Int8Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Int8Array.Int8Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Int8Array.hx" private="1" module="lime.utils.Int8Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="62" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>1</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="67" static="1">
		<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<x path="openfl.Vector"><x path="Int"/></x>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="92" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="96" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="102" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="108" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="113" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="119" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="124" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<t path="Null"><c path="String"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Int8Array.Int8Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Int8Array.hx" private="1" module="lime.utils.Int8Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="62" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="67" static="1">
			<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<x path="openfl.Vector"><x path="Int"/></x>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="92" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="96" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="102" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="108" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="113" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="119" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="124" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<t path="Null"><c path="String"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.utils.Log" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Log.hx">
		<level public="1" static="1"><x path="lime.utils.LogLevel"/></level>
		<throwErrors public="1" expr="true" line="16" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>true</e></m></meta>
		</throwErrors>
		<debug public="1" set="method" line="19" static="1"><f a="message:?info">
	<c path="String"/>
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></debug>
		<error public="1" set="method" line="34" static="1"><f a="message:?info">
	<c path="String"/>
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></error>
		<info public="1" set="method" line="59" static="1"><f a="message:?info">
	<c path="String"/>
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></info>
		<print public="1" get="inline" set="null" line="74" static="1">
			<f a="message">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</print>
		<println public="1" get="inline" set="null" line="89" static="1">
			<f a="message">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</println>
		<verbose public="1" set="method" line="104" static="1"><f a="message:?info">
	<c path="String"/>
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></verbose>
		<warn public="1" set="method" line="115" static="1"><f a="message:?info">
	<c path="String"/>
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></warn>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.LogLevel" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Log.hx" module="lime.utils.Log">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.utils._Log.LogLevel_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Log.hx" private="1" module="lime.utils.Log">
	<NONE public="1" get="inline" set="null" expr="cast 0" line="173" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<ERROR public="1" get="inline" set="null" expr="cast 1" line="174" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ERROR>
	<WARN public="1" get="inline" set="null" expr="cast 2" line="175" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WARN>
	<INFO public="1" get="inline" set="null" expr="cast 3" line="176" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INFO>
	<DEBUG public="1" get="inline" set="null" expr="cast 4" line="177" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEBUG>
	<VERBOSE public="1" get="inline" set="null" expr="cast 5" line="178" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERBOSE>
	<gt get="inline" set="null" line="180" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<gte get="inline" set="null" line="181" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gte>
	<lt get="inline" set="null" line="182" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<lte get="inline" set="null" line="183" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lte>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Log.LogLevel_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Log.hx" private="1" module="lime.utils.Log">
		<NONE public="1" get="inline" set="null" expr="cast 0" line="173" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<ERROR public="1" get="inline" set="null" expr="cast 1" line="174" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ERROR>
		<WARN public="1" get="inline" set="null" expr="cast 2" line="175" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WARN>
		<INFO public="1" get="inline" set="null" expr="cast 3" line="176" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INFO>
		<DEBUG public="1" get="inline" set="null" expr="cast 4" line="177" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEBUG>
		<VERBOSE public="1" get="inline" set="null" expr="cast 5" line="178" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERBOSE>
		<gt get="inline" set="null" line="180" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<gte get="inline" set="null" line="181" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gte>
		<lt get="inline" set="null" line="182" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<lte get="inline" set="null" line="183" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lte>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.utils.ObjectPool" params="T" file="/home/joshua/Development/Haxe/lime/lime/utils/ObjectPool.hx">
		<activeObjects public="1" set="null"><x path="Int"/></activeObjects>
		<inactiveObjects public="1" set="null"><x path="Int"/></inactiveObjects>
		<size public="1" get="accessor" set="accessor"><t path="Null"><x path="Int"/></t></size>
		<__inactiveObject0><c path="lime.utils.ObjectPool.T"/></__inactiveObject0>
		<__inactiveObject1><c path="lime.utils.ObjectPool.T"/></__inactiveObject1>
		<__inactiveObjectList><c path="List"><c path="lime.utils.ObjectPool.T"/></c></__inactiveObjectList>
		<__pool><x path="Map">
	<c path="lime.utils.ObjectPool.T"/>
	<x path="Bool"/>
</x></__pool>
		<__size><t path="Null"><x path="Int"/></t></__size>
		<add public="1" set="method" line="58"><f a="object">
	<c path="lime.utils.ObjectPool.T"/>
	<x path="Void"/>
</f></add>
		<clean public="1" set="dynamic" line="71"><f a="object">
	<c path="lime.utils.ObjectPool.T"/>
	<x path="Void"/>
</f></clean>
		<clear public="1" set="method" line="78"><f a=""><x path="Void"/></f></clear>
		<create public="1" set="dynamic" line="92"><f a=""><c path="lime.utils.ObjectPool.T"/></f></create>
		<get public="1" set="method" line="99"><f a=""><c path="lime.utils.ObjectPool.T"/></f></get>
		<release public="1" set="method" line="125"><f a="object">
	<c path="lime.utils.ObjectPool.T"/>
	<x path="Void"/>
</f></release>
		<__addInactive get="inline" set="null" line="155"><f a="object">
	<c path="lime.utils.ObjectPool.T"/>
	<x path="Void"/>
</f></__addInactive>
		<__getInactive get="inline" set="null" line="180"><f a=""><c path="lime.utils.ObjectPool.T"/></f></__getInactive>
		<__removeInactive set="method" line="224"><f a="count">
	<x path="Int"/>
	<x path="Void"/>
</f></__removeInactive>
		<get_size set="method" line="271"><f a=""><t path="Null"><x path="Int"/></t></f></get_size>
		<set_size set="method" line="278"><f a="value">
	<t path="Null"><x path="Int"/></t>
	<t path="Null"><x path="Int"/></t>
</f></set_size>
		<new public="1" set="method" line="26">
			<f a="?create:?clean:?size" v="null:null:null">
				<f a=""><c path="lime.utils.ObjectPool.T"/></f>
				<f a="">
					<c path="lime.utils.ObjectPool.T"/>
					<x path="Void"/>
				</f>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ size : null, clean : null, create : null }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":generic"/>
		</meta>
	</class>
	<abstract path="lime.utils.Resource" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Resource.hx">
		<from>
			<icast><c path="haxe.io.Bytes"/></icast>
			<icast field="__fromString"><c path="String"/></icast>
		</from>
		<this><c path="haxe.io.Bytes"/></this>
		<to>
			<icast><c path="haxe.io.Bytes"/></icast>
			<icast field="__toString"><c path="String"/></icast>
		</to>
		<impl><class path="lime.utils._Resource.Resource_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Resource.hx" private="1" module="lime.utils.Resource">
	<_new public="1" set="method" line="10" static="1">
		<f a="?size" v="0">
			<x path="Int"/>
			<x path="lime.utils.Resource"/>
		</f>
		<meta>
			<m n=":value"><e>{ size : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</_new>
	<__fromString get="inline" set="null" line="17" static="1">
		<f a="value">
			<c path="String"/>
			<x path="lime.utils.Resource"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromString>
	<__toString get="inline" set="null" line="24" static="1">
		<f a="value">
			<x path="lime.utils.Resource"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</__toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Resource.Resource_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/Resource.hx" private="1" module="lime.utils.Resource">
		<_new public="1" set="method" line="10" static="1">
			<f a="?size" v="0">
				<x path="Int"/>
				<x path="lime.utils.Resource"/>
			</f>
			<meta>
				<m n=":value"><e>{ size : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</_new>
		<__fromString get="inline" set="null" line="17" static="1">
			<f a="value">
				<c path="String"/>
				<x path="lime.utils.Resource"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromString>
		<__toString get="inline" set="null" line="24" static="1">
			<f a="value">
				<x path="lime.utils.Resource"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</__toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.UInt16Array" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt16Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._UInt16Array.UInt16Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt16Array.hx" private="1" module="lime.utils.UInt16Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="64" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>2</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="69" static="1">
		<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<x path="openfl.Vector"><x path="Int"/></x>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="94" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="98" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="102" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="108" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="113" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<t path="Null"><x path="UInt"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="119" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="124" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<t path="Null"><c path="String"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt16Array.UInt16Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt16Array.hx" private="1" module="lime.utils.UInt16Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="69" static="1">
			<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<x path="openfl.Vector"><x path="Int"/></x>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="94" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="98" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="102" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="108" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="113" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<t path="Null"><x path="UInt"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="119" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="124" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<t path="Null"><c path="String"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.UInt32Array" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt32Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._UInt32Array.UInt32Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt32Array.hx" private="1" module="lime.utils.UInt32Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="64" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>4</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="69" static="1">
		<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<x path="openfl.Vector"><x path="Int"/></x>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="94" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="98" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="102" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="108" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="113" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<t path="Null"><x path="UInt"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="119" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="124" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<t path="Null"><c path="String"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt32Array.UInt32Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt32Array.hx" private="1" module="lime.utils.UInt32Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="69" static="1">
			<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<x path="openfl.Vector"><x path="Int"/></x>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="94" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="98" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="102" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="108" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="113" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<t path="Null"><x path="UInt"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="119" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="124" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<t path="Null"><c path="String"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.UInt8Array" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt8Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._UInt8Array.UInt8Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt8Array.hx" private="1" module="lime.utils.UInt8Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="64" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>1</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="69" static="1">
		<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<x path="openfl.Vector"><x path="Int"/></x>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="94" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="98" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="102" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<toString get="inline" set="null" line="108" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<t path="Null"><c path="String"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<get_length get="inline" set="null" line="110" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="115" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<t path="Null"><x path="UInt"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="121" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt8Array.UInt8Array_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt8Array.hx" private="1" module="lime.utils.UInt8Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="69" static="1">
			<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<x path="openfl.Vector"><x path="Int"/></x>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="94" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="98" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="102" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<toString get="inline" set="null" line="108" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<t path="Null"><c path="String"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<get_length get="inline" set="null" line="110" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="115" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<t path="Null"><x path="UInt"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="121" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.UInt8ClampedArray" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt8ClampedArray.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta>
			<m n=":forward"/>
			<m n=":arrayAccess"/>
		</meta>
		<impl><class path="lime.utils._UInt8ClampedArray.UInt8ClampedArray_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt8ClampedArray.hx" private="1" module="lime.utils.UInt8ClampedArray">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="73" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>1</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="78" static="1">
		<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<x path="openfl.Vector"><x path="Int"/></x>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="103" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="107" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="111" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="117" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="122" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<t path="Null"><x path="UInt"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="128" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="133" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<t path="Null"><c path="String"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt8ClampedArray.UInt8ClampedArray_Impl_" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/UInt8ClampedArray.hx" private="1" module="lime.utils.UInt8ClampedArray">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="73" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="78" static="1">
			<f a="?elements:?buffer:?array:?vector:?view:?byteoffset:?len" v=":::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<x path="openfl.Vector"><x path="Int"/></x>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="103" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="107" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="111" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="117" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="122" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<t path="Null"><x path="UInt"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="128" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="133" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<t path="Null"><c path="String"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.utils.compress.Deflate" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/compress/Deflate.hx">
		<compress public="1" set="method" line="22" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></compress>
		<decompress public="1" set="method" line="58" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decompress>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.utils.compress.GZip" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/compress/GZip.hx">
		<compress public="1" set="method" line="18" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></compress>
		<decompress public="1" set="method" line="44" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decompress>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.utils.compress.LZMA" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/compress/LZMA.hx">
		<compress public="1" set="method" line="23" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></compress>
		<decompress public="1" set="method" line="54" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decompress>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.utils.compress.Zlib" params="" file="/home/joshua/Development/Haxe/lime/lime/utils/compress/Zlib.hx">
		<compress public="1" set="method" line="22" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></compress>
		<decompress public="1" set="method" line="58" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decompress>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<typedef path="openfl.Assets" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/Assets.hx"><c path="openfl.utils.Assets"/></typedef>
	<class path="openfl.Lib" params="" file="/home/joshua/Development/Haxe/openfl/openfl/Lib.hx">
		<application public="1" static="1"><c path="openfl.display.Application"/></application>
		<current public="1" get="accessor" set="accessor" static="1"><c path="openfl.display.MovieClip"/></current>
		<__sentWarnings expr="new Map&lt;String,Bool&gt;()" line="41" static="1">
			<x path="Map">
				<c path="String"/>
				<x path="Bool"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Bool>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</__sentWarnings>
		<as public="1" params="T" set="method" line="44" static="1"><f a="v:c">
	<d/>
	<x path="Class"><c path="as.T"/></x>
	<t path="Null"><c path="as.T"/></t>
</f></as>
		<attach public="1" set="method" line="55" static="1"><f a="name">
	<c path="String"/>
	<c path="openfl.display.MovieClip"/>
</f></attach>
		<eval public="1" set="method" line="67" static="1"><f a="path">
	<c path="String"/>
	<d/>
</f></eval>
		<fscommand public="1" set="method" line="76" static="1"><f a="cmd:?param">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></fscommand>
		<getTimer public="1" set="method" line="84" static="1"><f a=""><x path="Int"/></f></getTimer>
		<getURL public="1" set="method" line="95" static="1">
			<f a="request:?target" v=":null">
				<c path="openfl.net.URLRequest"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ target : null }</e></m></meta>
		</getURL>
		<notImplemented public="1" set="method" line="112" static="1"><f a="?posInfo">
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></notImplemented>
		<preventDefaultTouchMove public="1" set="method" line="127" static="1"><f a=""><x path="Void"/></f></preventDefaultTouchMove>
		<redirectTraces public="1" set="method" line="141" static="1"><f a=""><x path="Void"/></f></redirectTraces>
		<trace public="1" set="method" line="149" static="1"><f a="arg">
	<d/>
	<x path="Void"/>
</f></trace>
		<get_current set="method" line="164" static="1">
			<f a=""><c path="openfl.display.MovieClip"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_current>
		<set_current set="method" line="171" static="1">
			<f a="current">
				<c path="openfl.display.MovieClip"/>
				<c path="openfl.display.MovieClip"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_current>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>openfl.display.Stage</e></m>
		</meta>
	</class>
	<class path="openfl.Memory" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Memory.hx" extern="1">
		<getByte public="1" get="inline" set="null" line="11" static="1">
			<f a="addr">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getByte>
		<getDouble public="1" get="inline" set="null" line="22" static="1">
			<f a="addr">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getDouble>
		<getI32 public="1" get="inline" set="null" line="33" static="1">
			<f a="addr">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getI32>
		<getFloat public="1" get="inline" set="null" line="44" static="1">
			<f a="addr">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getFloat>
		<getUI16 public="1" get="inline" set="null" line="55" static="1">
			<f a="addr">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getUI16>
		<select public="1" get="inline" set="null" line="66" static="1"><f a="b">
	<x path="openfl.utils.ByteArray"/>
	<x path="Void"/>
</f></select>
		<setByte public="1" get="inline" set="null" line="75" static="1">
			<f a="addr:v">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setByte>
		<setDouble public="1" get="inline" set="null" line="84" static="1">
			<f a="addr:v">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setDouble>
		<setFloat public="1" get="inline" set="null" line="93" static="1">
			<f a="addr:v">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setFloat>
		<setI16 public="1" get="inline" set="null" line="102" static="1">
			<f a="addr:v">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setI16>
		<setI32 public="1" get="inline" set="null" line="111" static="1">
			<f a="addr:v">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setI32>
		<signExtend1 public="1" get="inline" set="null" line="120" static="1">
			<f a="v">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</signExtend1>
		<signExtend8 public="1" get="inline" set="null" line="131" static="1">
			<f a="v">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</signExtend8>
		<signExtend16 public="1" get="inline" set="null" line="142" static="1">
			<f a="v">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</signExtend16>
	</class>
	<abstract path="openfl.Vector" params="T" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx">
		<from><icast><c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c></icast></from>
		<this><c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c></this>
		<to>
			<icast field="toBoolVector"><c path="openfl._Vector.AbstractVector"><c path="toBoolVector.T"/></c></icast>
			<icast field="toIntVector"><c path="openfl._Vector.AbstractVector"><c path="toIntVector.T"/></c></icast>
			<icast field="toFloatVector"><c path="openfl._Vector.AbstractVector"><c path="toFloatVector.T"/></c></icast>
			<icast field="toFunctionVector"><c path="openfl._Vector.AbstractVector"><c path="toFunctionVector.T"/></c></icast>
			<icast field="toObjectVector"><c path="openfl._Vector.AbstractVector"><c path="toObjectVector.T"/></c></icast>
		</to>
		<meta><m n=":multiType"><e>T</e></m></meta>
		<impl><class path="openfl._Vector.Vector_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx" private="1" module="openfl.Vector">
	<fixed public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</fixed>
	<length public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" set="method" static="1">
		<f a="?length:?fixed:?array">
			<x path="Int"/>
			<x path="Bool"/>
			<c path="Array"><c path="openfl.Vector.T"/></c>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta>
			<m n=":extern"/>
			<m n=":impl"/>
		</meta>
	</_new>
	<concat public="1" get="inline" set="null" line="20" static="1">
		<f a="this:?a">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</concat>
	<copy public="1" get="inline" set="null" line="28" static="1">
		<f a="this">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</copy>
	<get public="1" get="inline" set="null" line="35" static="1">
		<f a="this:index">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<c path="openfl.Vector.T"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<indexOf public="1" get="inline" set="null" line="42" static="1">
		<f a="this:x:?from" v="::0">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<c path="openfl.Vector.T"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ from : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<insertAt public="1" get="inline" set="null" line="49" static="1">
		<f a="this:index:element">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<c path="openfl.Vector.T"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</insertAt>
	<iterator public="1" params="T" get="inline" set="null" line="56" static="1">
		<f a="this">
			<c path="openfl._Vector.AbstractVector"><c path="iterator.T"/></c>
			<t path="Iterator"><c path="iterator.T"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</iterator>
	<join public="1" get="inline" set="null" line="63" static="1">
		<f a="this:?sep" v=":&quot;,&quot;">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ sep : "," }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<lastIndexOf public="1" get="inline" set="null" line="70" static="1">
		<f a="this:x:?from" v="::0">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<c path="openfl.Vector.T"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ from : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</lastIndexOf>
	<pop public="1" get="inline" set="null" line="77" static="1">
		<f a="this">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<t path="Null"><c path="openfl.Vector.T"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</pop>
	<push public="1" get="inline" set="null" line="84" static="1">
		<f a="this:x">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<c path="openfl.Vector.T"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</push>
	<removeAt public="1" get="inline" set="null" line="91" static="1">
		<f a="this:index">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<c path="openfl.Vector.T"/>
		</f>
		<meta><m n=":impl"/></meta>
	</removeAt>
	<reverse public="1" get="inline" set="null" line="98" static="1">
		<f a="this">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</reverse>
	<set public="1" get="inline" set="null" line="105" static="1">
		<f a="this:index:value">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<c path="openfl.Vector.T"/>
			<c path="openfl.Vector.T"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
	<shift public="1" get="inline" set="null" line="112" static="1">
		<f a="this">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<t path="Null"><c path="openfl.Vector.T"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</shift>
	<slice public="1" get="inline" set="null" line="119" static="1">
		<f a="this:?pos:?end">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<x path="Int"/>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</slice>
	<sort public="1" get="inline" set="null" line="126" static="1">
		<f a="this:f">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<f a=":">
				<c path="openfl.Vector.T"/>
				<c path="openfl.Vector.T"/>
				<x path="Int"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</sort>
	<splice public="1" get="inline" set="null" line="133" static="1">
		<f a="this:pos:len">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<x path="Int"/>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</splice>
	<toString public="1" get="inline" set="null" line="140" static="1">
		<f a="this">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<unshift public="1" get="inline" set="null" line="147" static="1">
		<f a="this:x">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<c path="openfl.Vector.T"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</unshift>
	<ofArray public="1" params="T" get="inline" set="null" line="154" static="1"><f a="a">
	<c path="Array"><c path="ofArray.T"/></c>
	<x path="openfl.Vector"><c path="ofArray.T"/></x>
</f></ofArray>
	<convert public="1" params="T:U" get="inline" set="null" line="169" static="1"><f a="v">
	<c path="openfl._Vector.AbstractVector"><c path="convert.T"/></c>
	<c path="openfl._Vector.AbstractVector"><c path="convert.U"/></c>
</f></convert>
	<toBoolVector params="T" set="method" line="176" static="1">
		<f a="t:length:fixed:array">
			<c path="openfl._Vector.AbstractVector"><c path="toBoolVector.T"/></c>
			<x path="Int"/>
			<x path="Bool"/>
			<c path="Array"><c path="toBoolVector.T"/></c>
			<c path="openfl._Vector.AbstractVector"><c path="toBoolVector.T"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toBoolVector>
	<toIntVector params="T" set="method" line="183" static="1">
		<f a="t:length:fixed:array">
			<c path="openfl._Vector.AbstractVector"><c path="toIntVector.T"/></c>
			<x path="Int"/>
			<x path="Bool"/>
			<c path="Array"><c path="toIntVector.T"/></c>
			<c path="openfl._Vector.AbstractVector"><c path="toIntVector.T"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toIntVector>
	<toFloatVector params="T" set="method" line="190" static="1">
		<f a="t:length:fixed:array">
			<c path="openfl._Vector.AbstractVector"><c path="toFloatVector.T"/></c>
			<x path="Int"/>
			<x path="Bool"/>
			<c path="Array"><c path="toFloatVector.T"/></c>
			<c path="openfl._Vector.AbstractVector"><c path="toFloatVector.T"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toFloatVector>
	<toFunctionVector params="T" set="method" line="198" static="1">
		<f a="t:length:fixed:array">
			<c path="openfl._Vector.AbstractVector"><c path="toFunctionVector.T"/></c>
			<x path="Int"/>
			<x path="Bool"/>
			<c path="Array"><c path="toFunctionVector.T"/></c>
			<c path="openfl._Vector.AbstractVector"><c path="toFunctionVector.T"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toFunctionVector>
	<toObjectVector params="T" set="method" line="206" static="1">
		<f a="t:length:fixed:array">
			<c path="openfl._Vector.AbstractVector"><c path="toObjectVector.T"/></c>
			<x path="Int"/>
			<x path="Bool"/>
			<c path="Array"><c path="toObjectVector.T"/></c>
			<c path="openfl._Vector.AbstractVector"><c path="toObjectVector.T"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toObjectVector>
	<get_fixed get="inline" set="null" line="220" static="1">
		<f a="this">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_fixed>
	<set_fixed get="inline" set="null" line="227" static="1">
		<f a="this:value">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_fixed>
	<get_length get="inline" set="null" line="234" static="1">
		<f a="this">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_length>
	<set_length get="inline" set="null" line="241" static="1">
		<f a="this:value">
			<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_length>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl._Vector.Vector_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx" private="1" module="openfl.Vector">
		<fixed public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</fixed>
		<length public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" set="method" static="1">
			<f a="?length:?fixed:?array">
				<x path="Int"/>
				<x path="Bool"/>
				<c path="Array"><c path="openfl.Vector.T"/></c>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta>
				<m n=":extern"/>
				<m n=":impl"/>
			</meta>
		</_new>
		<concat public="1" get="inline" set="null" line="20" static="1">
			<f a="this:?a">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</concat>
		<copy public="1" get="inline" set="null" line="28" static="1">
			<f a="this">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</copy>
		<get public="1" get="inline" set="null" line="35" static="1">
			<f a="this:index">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<c path="openfl.Vector.T"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<indexOf public="1" get="inline" set="null" line="42" static="1">
			<f a="this:x:?from" v="::0">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<c path="openfl.Vector.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ from : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<insertAt public="1" get="inline" set="null" line="49" static="1">
			<f a="this:index:element">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<c path="openfl.Vector.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</insertAt>
		<iterator public="1" params="T" get="inline" set="null" line="56" static="1">
			<f a="this">
				<c path="openfl._Vector.AbstractVector"><c path="iterator.T"/></c>
				<t path="Iterator"><c path="iterator.T"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</iterator>
		<join public="1" get="inline" set="null" line="63" static="1">
			<f a="this:?sep" v=":&quot;,&quot;">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ sep : "," }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<lastIndexOf public="1" get="inline" set="null" line="70" static="1">
			<f a="this:x:?from" v="::0">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<c path="openfl.Vector.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ from : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</lastIndexOf>
		<pop public="1" get="inline" set="null" line="77" static="1">
			<f a="this">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<t path="Null"><c path="openfl.Vector.T"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</pop>
		<push public="1" get="inline" set="null" line="84" static="1">
			<f a="this:x">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<c path="openfl.Vector.T"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</push>
		<removeAt public="1" get="inline" set="null" line="91" static="1">
			<f a="this:index">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<c path="openfl.Vector.T"/>
			</f>
			<meta><m n=":impl"/></meta>
		</removeAt>
		<reverse public="1" get="inline" set="null" line="98" static="1">
			<f a="this">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</reverse>
		<set public="1" get="inline" set="null" line="105" static="1">
			<f a="this:index:value">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<c path="openfl.Vector.T"/>
				<c path="openfl.Vector.T"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
		<shift public="1" get="inline" set="null" line="112" static="1">
			<f a="this">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<t path="Null"><c path="openfl.Vector.T"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</shift>
		<slice public="1" get="inline" set="null" line="119" static="1">
			<f a="this:?pos:?end">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</slice>
		<sort public="1" get="inline" set="null" line="126" static="1">
			<f a="this:f">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<f a=":">
					<c path="openfl.Vector.T"/>
					<c path="openfl.Vector.T"/>
					<x path="Int"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</sort>
		<splice public="1" get="inline" set="null" line="133" static="1">
			<f a="this:pos:len">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</splice>
		<toString public="1" get="inline" set="null" line="140" static="1">
			<f a="this">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<unshift public="1" get="inline" set="null" line="147" static="1">
			<f a="this:x">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<c path="openfl.Vector.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</unshift>
		<ofArray public="1" params="T" get="inline" set="null" line="154" static="1"><f a="a">
	<c path="Array"><c path="ofArray.T"/></c>
	<x path="openfl.Vector"><c path="ofArray.T"/></x>
</f></ofArray>
		<convert public="1" params="T:U" get="inline" set="null" line="169" static="1"><f a="v">
	<c path="openfl._Vector.AbstractVector"><c path="convert.T"/></c>
	<c path="openfl._Vector.AbstractVector"><c path="convert.U"/></c>
</f></convert>
		<toBoolVector params="T" set="method" line="176" static="1">
			<f a="t:length:fixed:array">
				<c path="openfl._Vector.AbstractVector"><c path="toBoolVector.T"/></c>
				<x path="Int"/>
				<x path="Bool"/>
				<c path="Array"><c path="toBoolVector.T"/></c>
				<c path="openfl._Vector.AbstractVector"><c path="toBoolVector.T"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toBoolVector>
		<toIntVector params="T" set="method" line="183" static="1">
			<f a="t:length:fixed:array">
				<c path="openfl._Vector.AbstractVector"><c path="toIntVector.T"/></c>
				<x path="Int"/>
				<x path="Bool"/>
				<c path="Array"><c path="toIntVector.T"/></c>
				<c path="openfl._Vector.AbstractVector"><c path="toIntVector.T"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toIntVector>
		<toFloatVector params="T" set="method" line="190" static="1">
			<f a="t:length:fixed:array">
				<c path="openfl._Vector.AbstractVector"><c path="toFloatVector.T"/></c>
				<x path="Int"/>
				<x path="Bool"/>
				<c path="Array"><c path="toFloatVector.T"/></c>
				<c path="openfl._Vector.AbstractVector"><c path="toFloatVector.T"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toFloatVector>
		<toFunctionVector params="T" set="method" line="198" static="1">
			<f a="t:length:fixed:array">
				<c path="openfl._Vector.AbstractVector"><c path="toFunctionVector.T"/></c>
				<x path="Int"/>
				<x path="Bool"/>
				<c path="Array"><c path="toFunctionVector.T"/></c>
				<c path="openfl._Vector.AbstractVector"><c path="toFunctionVector.T"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toFunctionVector>
		<toObjectVector params="T" set="method" line="206" static="1">
			<f a="t:length:fixed:array">
				<c path="openfl._Vector.AbstractVector"><c path="toObjectVector.T"/></c>
				<x path="Int"/>
				<x path="Bool"/>
				<c path="Array"><c path="toObjectVector.T"/></c>
				<c path="openfl._Vector.AbstractVector"><c path="toObjectVector.T"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toObjectVector>
		<get_fixed get="inline" set="null" line="220" static="1">
			<f a="this">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_fixed>
		<set_fixed get="inline" set="null" line="227" static="1">
			<f a="this:value">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_fixed>
		<get_length get="inline" set="null" line="234" static="1">
			<f a="this">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_length>
		<set_length get="inline" set="null" line="241" static="1">
			<f a="this:value">
				<c path="openfl._Vector.AbstractVector"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_length>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="openfl._Vector.AbstractVector" params="T" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx" private="1" module="openfl.Vector">
		<data public="1"><c path="openfl._Vector.IVector"><c path="openfl._Vector.AbstractVector.T"/></c></data>
		<toJSON set="method" line="291">
			<f a=""><unknown/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":keep"/>
			</meta>
		</toJSON>
		<new public="1" set="method" line="269"><f a="data:?array">
	<c path="openfl._Vector.IVector"><c path="openfl._Vector.AbstractVector.T"/></c>
	<c path="Array"><c path="openfl._Vector.AbstractVector.T"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="openfl._Vector.IVector" params="T" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx" private="1" module="openfl.Vector" interface="1">
		<get_length public="1" set="method">
			<f a=""><x path="Int"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</get_length>
		<set_length public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":compilerGenerated"/></meta>
		</set_length>
		<fixed public="1"><x path="Bool"/></fixed>
		<length public="1" get="accessor" set="accessor"><x path="Int"/></length>
		<concat public="1" set="method"><f a="?a">
	<c path="openfl._Vector.IVector"><c path="openfl._Vector.IVector.T"/></c>
	<c path="openfl._Vector.IVector"><c path="openfl._Vector.IVector.T"/></c>
</f></concat>
		<copy public="1" set="method"><f a=""><c path="openfl._Vector.IVector"><c path="openfl._Vector.IVector.T"/></c></f></copy>
		<get public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="openfl._Vector.IVector.T"/>
</f></get>
		<indexOf public="1" set="method">
			<f a="x:?from" v=":0">
				<c path="openfl._Vector.IVector.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</indexOf>
		<insertAt public="1" set="method"><f a="index:element">
	<x path="Int"/>
	<c path="openfl._Vector.IVector.T"/>
	<x path="Void"/>
</f></insertAt>
		<iterator public="1" params="T" set="method"><f a=""><t path="Iterator"><c path="iterator.T"/></t></f></iterator>
		<join public="1" set="method">
			<f a="?sep" v="&quot;,&quot;">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ sep : "," }</e></m></meta>
		</join>
		<lastIndexOf public="1" set="method">
			<f a="x:?from" v=":0">
				<c path="openfl._Vector.IVector.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</lastIndexOf>
		<pop public="1" set="method"><f a=""><t path="Null"><c path="openfl._Vector.IVector.T"/></t></f></pop>
		<push public="1" set="method"><f a="x">
	<c path="openfl._Vector.IVector.T"/>
	<x path="Int"/>
</f></push>
		<removeAt public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="openfl._Vector.IVector.T"/>
</f></removeAt>
		<reverse public="1" set="method"><f a=""><c path="openfl._Vector.IVector"><c path="openfl._Vector.IVector.T"/></c></f></reverse>
		<set public="1" set="method"><f a="index:value">
	<x path="Int"/>
	<c path="openfl._Vector.IVector.T"/>
	<c path="openfl._Vector.IVector.T"/>
</f></set>
		<shift public="1" set="method"><f a=""><t path="Null"><c path="openfl._Vector.IVector.T"/></t></f></shift>
		<slice public="1" set="method"><f a="?pos:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="openfl._Vector.IVector"><c path="openfl._Vector.IVector.T"/></c>
</f></slice>
		<sort public="1" set="method"><f a="f">
	<f a=":">
		<c path="openfl._Vector.IVector.T"/>
		<c path="openfl._Vector.IVector.T"/>
		<x path="Int"/>
	</f>
	<x path="Void"/>
</f></sort>
		<splice public="1" set="method"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="openfl._Vector.IVector"><c path="openfl._Vector.IVector.T"/></c>
</f></splice>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<unshift public="1" set="method"><f a="x">
	<c path="openfl._Vector.IVector.T"/>
	<x path="Void"/>
</f></unshift>
		<toJSON set="method">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</toJSON>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<class path="openfl._Vector.BoolVector" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx" private="1" module="openfl.Vector">
		<implements path="openfl._Vector.IVector"><x path="Bool"/></implements>
		<fixed public="1"><x path="Bool"/></fixed>
		<length public="1" get="accessor" set="accessor"><x path="Int"/></length>
		<__array><c path="Array"><x path="Bool"/></c></__array>
		<concat public="1" set="method" line="339"><f a="?a">
	<c path="openfl._Vector.IVector"><x path="Bool"/></c>
	<c path="openfl._Vector.IVector"><x path="Bool"/></c>
</f></concat>
		<copy public="1" set="method" line="354"><f a=""><c path="openfl._Vector.IVector"><x path="Bool"/></c></f></copy>
		<get public="1" set="method" line="361"><f a="index">
	<x path="Int"/>
	<x path="Bool"/>
</f></get>
		<indexOf public="1" set="method" line="376">
			<f a="x:?from" v=":0">
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</indexOf>
		<insertAt public="1" set="method" line="393"><f a="index:element">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></insertAt>
		<iterator public="1" params="Bool" set="method" line="404"><f a=""><t path="Iterator"><c path="iterator.Bool"/></t></f></iterator>
		<join public="1" set="method" line="411">
			<f a="?sep" v="&quot;,&quot;">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ sep : "," }</e></m></meta>
		</join>
		<lastIndexOf public="1" set="method" line="418">
			<f a="x:?from" v=":0">
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</lastIndexOf>
		<pop public="1" set="method" line="434"><f a=""><t path="Null"><x path="Bool"/></t></f></pop>
		<push public="1" set="method" line="449"><f a="x">
	<x path="Bool"/>
	<x path="Int"/>
</f></push>
		<removeAt public="1" set="method" line="464"><f a="index">
	<x path="Int"/>
	<x path="Bool"/>
</f></removeAt>
		<reverse public="1" set="method" line="477"><f a=""><c path="openfl._Vector.IVector"><x path="Bool"/></c></f></reverse>
		<set public="1" set="method" line="485"><f a="index:value">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></set>
		<shift public="1" set="method" line="500"><f a=""><t path="Null"><x path="Bool"/></t></f></shift>
		<slice public="1" set="method" line="515">
			<f a="?startIndex:?endIndex" v="0:16777215">
				<x path="Int"/>
				<x path="Int"/>
				<c path="openfl._Vector.IVector"><x path="Bool"/></c>
			</f>
			<meta><m n=":value"><e>{ endIndex : 16777215, startIndex : 0 }</e></m></meta>
		</slice>
		<sort public="1" set="method" line="522"><f a="f">
	<f a=":">
		<x path="Bool"/>
		<x path="Bool"/>
		<x path="Int"/>
	</f>
	<x path="Void"/>
</f></sort>
		<splice public="1" set="method" line="529"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="openfl._Vector.IVector"><x path="Bool"/></c>
</f></splice>
		<toJSON set="method" line="536">
			<f a=""><c path="Array"><x path="Bool"/></c></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":keep"/>
			</meta>
		</toJSON>
		<toString public="1" set="method" line="543"><f a=""><c path="String"/></f></toString>
		<unshift public="1" set="method" line="550"><f a="x">
	<x path="Bool"/>
	<x path="Void"/>
</f></unshift>
		<get_length set="method" line="568">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<set_length set="method" line="575">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_length>
		<new public="1" set="method" line="318"><f a="?length:?fixed:?array">
	<x path="Int"/>
	<x path="Bool"/>
	<c path="Array"><x path="Bool"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="openfl._Vector.FloatVector" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx" private="1" module="openfl.Vector">
		<implements path="openfl._Vector.IVector"><x path="Float"/></implements>
		<fixed public="1"><x path="Bool"/></fixed>
		<length public="1" get="accessor" set="accessor"><x path="Int"/></length>
		<__array><c path="Array"><x path="Float"/></c></__array>
		<concat public="1" set="method" line="656"><f a="?a">
	<c path="openfl._Vector.IVector"><x path="Float"/></c>
	<c path="openfl._Vector.IVector"><x path="Float"/></c>
</f></concat>
		<copy public="1" set="method" line="671"><f a=""><c path="openfl._Vector.IVector"><x path="Float"/></c></f></copy>
		<get public="1" set="method" line="678"><f a="index">
	<x path="Int"/>
	<x path="Float"/>
</f></get>
		<indexOf public="1" set="method" line="685">
			<f a="x:?from" v=":0">
				<x path="Float"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</indexOf>
		<insertAt public="1" set="method" line="702"><f a="index:element">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></insertAt>
		<iterator public="1" params="Float" set="method" line="713"><f a=""><t path="Iterator"><c path="iterator.Float"/></t></f></iterator>
		<join public="1" set="method" line="720">
			<f a="?sep" v="&quot;,&quot;">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ sep : "," }</e></m></meta>
		</join>
		<lastIndexOf public="1" set="method" line="727">
			<f a="x:?from" v=":0">
				<x path="Float"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</lastIndexOf>
		<pop public="1" set="method" line="743"><f a=""><t path="Null"><x path="Float"/></t></f></pop>
		<push public="1" set="method" line="758"><f a="x">
	<x path="Float"/>
	<x path="Int"/>
</f></push>
		<removeAt public="1" set="method" line="773"><f a="index">
	<x path="Int"/>
	<x path="Float"/>
</f></removeAt>
		<reverse public="1" set="method" line="786"><f a=""><c path="openfl._Vector.IVector"><x path="Float"/></c></f></reverse>
		<set public="1" set="method" line="794"><f a="index:value">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
</f></set>
		<shift public="1" set="method" line="809"><f a=""><t path="Null"><x path="Float"/></t></f></shift>
		<slice public="1" set="method" line="824">
			<f a="?startIndex:?endIndex" v="0:16777215">
				<x path="Int"/>
				<x path="Int"/>
				<c path="openfl._Vector.IVector"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ endIndex : 16777215, startIndex : 0 }</e></m></meta>
		</slice>
		<sort public="1" set="method" line="831"><f a="f">
	<f a=":">
		<x path="Float"/>
		<x path="Float"/>
		<x path="Int"/>
	</f>
	<x path="Void"/>
</f></sort>
		<splice public="1" set="method" line="838"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="openfl._Vector.IVector"><x path="Float"/></c>
</f></splice>
		<toJSON set="method" line="845">
			<f a=""><c path="Array"><x path="Float"/></c></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":keep"/>
			</meta>
		</toJSON>
		<toString public="1" set="method" line="852"><f a=""><c path="String"/></f></toString>
		<unshift public="1" set="method" line="859"><f a="x">
	<x path="Float"/>
	<x path="Void"/>
</f></unshift>
		<get_length set="method" line="877">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<set_length set="method" line="884">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_length>
		<new public="1" set="method" line="635"><f a="?length:?fixed:?array">
	<x path="Int"/>
	<x path="Bool"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="openfl._Vector.FunctionVector" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx" private="1" module="openfl.Vector">
		<implements path="openfl._Vector.IVector"><x path="haxe.Function"/></implements>
		<fixed public="1"><x path="Bool"/></fixed>
		<length public="1" get="accessor" set="accessor"><x path="Int"/></length>
		<__array><c path="Array"><x path="haxe.Function"/></c></__array>
		<concat public="1" set="method" line="966"><f a="?a">
	<c path="openfl._Vector.IVector"><x path="haxe.Function"/></c>
	<c path="openfl._Vector.IVector"><x path="haxe.Function"/></c>
</f></concat>
		<copy public="1" set="method" line="981"><f a=""><c path="openfl._Vector.IVector"><x path="haxe.Function"/></c></f></copy>
		<get public="1" set="method" line="988"><f a="index">
	<x path="Int"/>
	<x path="haxe.Function"/>
</f></get>
		<indexOf public="1" set="method" line="1003">
			<f a="x:?from" v=":0">
				<x path="haxe.Function"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</indexOf>
		<insertAt public="1" set="method" line="1020"><f a="index:element">
	<x path="Int"/>
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></insertAt>
		<iterator public="1" params="Function" set="method" line="1031"><f a=""><t path="Iterator"><c path="iterator.Function"/></t></f></iterator>
		<join public="1" set="method" line="1038">
			<f a="?sep" v="&quot;,&quot;">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ sep : "," }</e></m></meta>
		</join>
		<lastIndexOf public="1" set="method" line="1045">
			<f a="x:?from" v=":0">
				<x path="haxe.Function"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</lastIndexOf>
		<pop public="1" set="method" line="1061"><f a=""><x path="haxe.Function"/></f></pop>
		<push public="1" set="method" line="1076"><f a="x">
	<x path="haxe.Function"/>
	<x path="Int"/>
</f></push>
		<removeAt public="1" set="method" line="1091"><f a="index">
	<x path="Int"/>
	<x path="haxe.Function"/>
</f></removeAt>
		<reverse public="1" set="method" line="1104"><f a=""><c path="openfl._Vector.IVector"><x path="haxe.Function"/></c></f></reverse>
		<set public="1" set="method" line="1112"><f a="index:value">
	<x path="Int"/>
	<x path="haxe.Function"/>
	<x path="haxe.Function"/>
</f></set>
		<shift public="1" set="method" line="1127"><f a=""><x path="haxe.Function"/></f></shift>
		<slice public="1" set="method" line="1142">
			<f a="?startIndex:?endIndex" v="0:16777215">
				<x path="Int"/>
				<x path="Int"/>
				<c path="openfl._Vector.IVector"><x path="haxe.Function"/></c>
			</f>
			<meta><m n=":value"><e>{ endIndex : 16777215, startIndex : 0 }</e></m></meta>
		</slice>
		<sort public="1" set="method" line="1149"><f a="f">
	<f a=":">
		<x path="haxe.Function"/>
		<x path="haxe.Function"/>
		<x path="Int"/>
	</f>
	<x path="Void"/>
</f></sort>
		<splice public="1" set="method" line="1156"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="openfl._Vector.IVector"><x path="haxe.Function"/></c>
</f></splice>
		<toJSON set="method" line="1163">
			<f a=""><c path="Array"><x path="haxe.Function"/></c></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":keep"/>
			</meta>
		</toJSON>
		<toString public="1" set="method" line="1170"><f a=""><c path="String"/></f></toString>
		<unshift public="1" set="method" line="1177"><f a="x">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></unshift>
		<get_length set="method" line="1195">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<set_length set="method" line="1202">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_length>
		<new public="1" set="method" line="945"><f a="?length:?fixed:?array">
	<x path="Int"/>
	<x path="Bool"/>
	<c path="Array"><x path="haxe.Function"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="openfl._Vector.IntVector" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx" private="1" module="openfl.Vector">
		<implements path="openfl._Vector.IVector"><x path="Int"/></implements>
		<fixed public="1"><x path="Bool"/></fixed>
		<length public="1" get="accessor" set="accessor"><x path="Int"/></length>
		<__array><c path="Array"><x path="Int"/></c></__array>
		<concat public="1" set="method" line="1284"><f a="?a">
	<c path="openfl._Vector.IVector"><x path="Int"/></c>
	<c path="openfl._Vector.IVector"><x path="Int"/></c>
</f></concat>
		<copy public="1" set="method" line="1299"><f a=""><c path="openfl._Vector.IVector"><x path="Int"/></c></f></copy>
		<get public="1" set="method" line="1306"><f a="index">
	<x path="Int"/>
	<x path="Int"/>
</f></get>
		<indexOf public="1" set="method" line="1313">
			<f a="x:?from" v=":0">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</indexOf>
		<insertAt public="1" set="method" line="1330"><f a="index:element">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></insertAt>
		<iterator public="1" params="Int" set="method" line="1341"><f a=""><t path="Iterator"><c path="iterator.Int"/></t></f></iterator>
		<join public="1" set="method" line="1348">
			<f a="?sep" v="&quot;,&quot;">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ sep : "," }</e></m></meta>
		</join>
		<lastIndexOf public="1" set="method" line="1355">
			<f a="x:?from" v=":0">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</lastIndexOf>
		<pop public="1" set="method" line="1371"><f a=""><t path="Null"><x path="Int"/></t></f></pop>
		<push public="1" set="method" line="1386"><f a="x">
	<x path="Int"/>
	<x path="Int"/>
</f></push>
		<removeAt public="1" set="method" line="1401"><f a="index">
	<x path="Int"/>
	<x path="Int"/>
</f></removeAt>
		<reverse public="1" set="method" line="1414"><f a=""><c path="openfl._Vector.IVector"><x path="Int"/></c></f></reverse>
		<set public="1" set="method" line="1422"><f a="index:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></set>
		<shift public="1" set="method" line="1437"><f a=""><t path="Null"><x path="Int"/></t></f></shift>
		<slice public="1" set="method" line="1452">
			<f a="?startIndex:?endIndex" v="0:16777215">
				<x path="Int"/>
				<x path="Int"/>
				<c path="openfl._Vector.IVector"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ endIndex : 16777215, startIndex : 0 }</e></m></meta>
		</slice>
		<sort public="1" set="method" line="1459"><f a="f">
	<f a=":">
		<x path="Int"/>
		<x path="Int"/>
		<x path="Int"/>
	</f>
	<x path="Void"/>
</f></sort>
		<splice public="1" set="method" line="1466"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="openfl._Vector.IVector"><x path="Int"/></c>
</f></splice>
		<toJSON set="method" line="1473">
			<f a=""><c path="Array"><x path="Int"/></c></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":keep"/>
			</meta>
		</toJSON>
		<toString public="1" set="method" line="1480"><f a=""><c path="String"/></f></toString>
		<unshift public="1" set="method" line="1487"><f a="x">
	<x path="Int"/>
	<x path="Void"/>
</f></unshift>
		<get_length set="method" line="1505">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<set_length set="method" line="1512">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_length>
		<new public="1" set="method" line="1263"><f a="?length:?fixed:?array">
	<x path="Int"/>
	<x path="Bool"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="openfl._Vector.ObjectVector" params="T" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/Vector.hx" private="1" module="openfl.Vector">
		<implements path="openfl._Vector.IVector"><c path="openfl._Vector.ObjectVector.T"/></implements>
		<fixed public="1"><x path="Bool"/></fixed>
		<length public="1" get="accessor" set="accessor"><x path="Int"/></length>
		<__array><c path="Array"><c path="openfl._Vector.ObjectVector.T"/></c></__array>
		<concat public="1" set="method" line="1593"><f a="?a">
	<c path="openfl._Vector.IVector"><c path="openfl._Vector.ObjectVector.T"/></c>
	<c path="openfl._Vector.IVector"><c path="openfl._Vector.ObjectVector.T"/></c>
</f></concat>
		<copy public="1" set="method" line="1608"><f a=""><c path="openfl._Vector.IVector"><c path="openfl._Vector.ObjectVector.T"/></c></f></copy>
		<get public="1" set="method" line="1615"><f a="index">
	<x path="Int"/>
	<c path="openfl._Vector.ObjectVector.T"/>
</f></get>
		<indexOf public="1" set="method" line="1622">
			<f a="x:?from" v=":0">
				<c path="openfl._Vector.ObjectVector.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</indexOf>
		<insertAt public="1" set="method" line="1639"><f a="index:element">
	<x path="Int"/>
	<c path="openfl._Vector.ObjectVector.T"/>
	<x path="Void"/>
</f></insertAt>
		<iterator public="1" params="T" set="method" line="1650"><f a=""><t path="Iterator"><c path="iterator.T"/></t></f></iterator>
		<join public="1" set="method" line="1657">
			<f a="?sep" v="&quot;,&quot;">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ sep : "," }</e></m></meta>
		</join>
		<lastIndexOf public="1" set="method" line="1664">
			<f a="x:?from" v=":0">
				<c path="openfl._Vector.ObjectVector.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ from : 0 }</e></m></meta>
		</lastIndexOf>
		<pop public="1" set="method" line="1680"><f a=""><c path="openfl._Vector.ObjectVector.T"/></f></pop>
		<push public="1" set="method" line="1695"><f a="x">
	<c path="openfl._Vector.ObjectVector.T"/>
	<x path="Int"/>
</f></push>
		<removeAt public="1" set="method" line="1710"><f a="index">
	<x path="Int"/>
	<c path="openfl._Vector.ObjectVector.T"/>
</f></removeAt>
		<reverse public="1" set="method" line="1723"><f a=""><c path="openfl._Vector.IVector"><c path="openfl._Vector.ObjectVector.T"/></c></f></reverse>
		<set public="1" set="method" line="1731"><f a="index:value">
	<x path="Int"/>
	<c path="openfl._Vector.ObjectVector.T"/>
	<c path="openfl._Vector.ObjectVector.T"/>
</f></set>
		<shift public="1" set="method" line="1746"><f a=""><c path="openfl._Vector.ObjectVector.T"/></f></shift>
		<slice public="1" set="method" line="1761">
			<f a="?startIndex:?endIndex" v="0:16777215">
				<x path="Int"/>
				<x path="Int"/>
				<c path="openfl._Vector.IVector"><c path="openfl._Vector.ObjectVector.T"/></c>
			</f>
			<meta><m n=":value"><e>{ endIndex : 16777215, startIndex : 0 }</e></m></meta>
		</slice>
		<sort public="1" set="method" line="1768"><f a="f">
	<f a=":">
		<c path="openfl._Vector.ObjectVector.T"/>
		<c path="openfl._Vector.ObjectVector.T"/>
		<x path="Int"/>
	</f>
	<x path="Void"/>
</f></sort>
		<splice public="1" set="method" line="1775"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="openfl._Vector.IVector"><c path="openfl._Vector.ObjectVector.T"/></c>
</f></splice>
		<toJSON set="method" line="1782">
			<f a=""><c path="Array"><c path="openfl._Vector.ObjectVector.T"/></c></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":keep"/>
			</meta>
		</toJSON>
		<toString public="1" set="method" line="1789"><f a=""><c path="String"/></f></toString>
		<unshift public="1" set="method" line="1796"><f a="x">
	<c path="openfl._Vector.ObjectVector.T"/>
	<x path="Void"/>
</f></unshift>
		<get_length set="method" line="1814">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<set_length set="method" line="1821">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_length>
		<new public="1" set="method" line="1572"><f a="?length:?fixed:?array">
	<x path="Int"/>
	<x path="Bool"/>
	<c path="Array"><c path="openfl._Vector.ObjectVector.T"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="openfl.desktop.Clipboard" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/desktop/Clipboard.hx" extern="1">
		<generalClipboard public="1" set="null" static="1"><c path="openfl.desktop.Clipboard"/></generalClipboard>
		<formats public="1" get="null" set="null"><c path="Array"><x path="openfl.desktop.ClipboardFormats"/></c></formats>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<clearData public="1" set="method"><f a="format">
	<x path="openfl.desktop.ClipboardFormats"/>
	<x path="Void"/>
</f></clearData>
		<getData public="1" set="method">
			<f a="format:?transferMode" v=":null">
				<x path="openfl.desktop.ClipboardFormats"/>
				<x path="openfl.desktop.ClipboardTransferMode"/>
				<x path="openfl.utils.Object"/>
			</f>
			<meta><m n=":value"><e>{ transferMode : null }</e></m></meta>
		</getData>
		<hasFormat public="1" set="method"><f a="format">
	<x path="openfl.desktop.ClipboardFormats"/>
	<x path="Bool"/>
</f></hasFormat>
		<setData public="1" set="method">
			<f a="format:data:?serializable" v="::true">
				<x path="openfl.desktop.ClipboardFormats"/>
				<x path="openfl.utils.Object"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ serializable : true }</e></m></meta>
		</setData>
		<setDataHandler public="1" set="method">
			<f a="format:handler:?serializable" v="::true">
				<x path="openfl.desktop.ClipboardFormats"/>
				<f a=""><d/></f>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ serializable : true }</e></m></meta>
		</setDataHandler>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="openfl.desktop.ClipboardFormats" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/desktop/ClipboardFormats.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.desktop._ClipboardFormats.ClipboardFormats_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/desktop/ClipboardFormats.hx" private="1" module="openfl.desktop.ClipboardFormats">
	<HTML_FORMAT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.desktop.ClipboardFormats"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTML_FORMAT>
	<RICH_TEXT_FORMAT public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.desktop.ClipboardFormats"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RICH_TEXT_FORMAT>
	<TEXT_FORMAT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.desktop.ClipboardFormats"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT_FORMAT>
	<fromString set="method" line="10" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.desktop.ClipboardFormats"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="23" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.desktop._ClipboardFormats.ClipboardFormats_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/desktop/ClipboardFormats.hx" private="1" module="openfl.desktop.ClipboardFormats">
		<HTML_FORMAT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.desktop.ClipboardFormats"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTML_FORMAT>
		<RICH_TEXT_FORMAT public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.desktop.ClipboardFormats"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RICH_TEXT_FORMAT>
		<TEXT_FORMAT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.desktop.ClipboardFormats"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT_FORMAT>
		<fromString set="method" line="10" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.desktop.ClipboardFormats"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="23" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.desktop.ClipboardTransferMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/desktop/ClipboardTransferMode.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.desktop._ClipboardTransferMode.ClipboardTransferMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/desktop/ClipboardTransferMode.hx" private="1" module="openfl.desktop.ClipboardTransferMode">
	<CLONE_ONLY public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.desktop.ClipboardTransferMode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLONE_ONLY>
	<CLONE_PREFERRED public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.desktop.ClipboardTransferMode"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLONE_PREFERRED>
	<ORIGINAL_ONLY public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.desktop.ClipboardTransferMode"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ORIGINAL_ONLY>
	<ORIGINAL_PREFERRED public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.desktop.ClipboardTransferMode"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ORIGINAL_PREFERRED>
	<fromString set="method" line="11" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.desktop.ClipboardTransferMode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="25" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.desktop._ClipboardTransferMode.ClipboardTransferMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/desktop/ClipboardTransferMode.hx" private="1" module="openfl.desktop.ClipboardTransferMode">
		<CLONE_ONLY public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.desktop.ClipboardTransferMode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLONE_ONLY>
		<CLONE_PREFERRED public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.desktop.ClipboardTransferMode"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLONE_PREFERRED>
		<ORIGINAL_ONLY public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.desktop.ClipboardTransferMode"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ORIGINAL_ONLY>
		<ORIGINAL_PREFERRED public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.desktop.ClipboardTransferMode"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ORIGINAL_PREFERRED>
		<fromString set="method" line="11" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.desktop.ClipboardTransferMode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="25" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.Application" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/Application.hx" extern="1">
		<extends path="lime.app.Application"/>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.display.Bitmap" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/Bitmap.hx" extern="1">
		<extends path="openfl.display.DisplayObject"/>
		<bitmapData public="1">
			<c path="openfl.display.BitmapData"/>
			<haxe_doc>* The BitmapData object being referenced.</haxe_doc>
		</bitmapData>
		<pixelSnapping public="1">
			<x path="openfl.display.PixelSnapping"/>
			<haxe_doc>* Controls whether or not the Bitmap object is snapped to the nearest pixel.
	 * This value is ignored in the native and HTML5 targets.
	 * The PixelSnapping class includes possible values:
	 * 
	 *  * `PixelSnapping.NEVER` - No pixel snapping occurs.
	 *  * `PixelSnapping.ALWAYS` - The image is always snapped to
	 * the nearest pixel, independent of transformation.
	 *  * `PixelSnapping.AUTO` - The image is snapped to the
	 * nearest pixel if it is drawn with no rotation or skew and it is drawn at a
	 * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the
	 * bitmap image is drawn at 100% scale, snapped to the nearest pixel.
	 * When targeting Flash Player, this value allows the image to be drawn as fast 
	 * as possible using the internal vector renderer.
	 *</haxe_doc>
		</pixelSnapping>
		<smoothing public="1">
			<x path="Bool"/>
			<haxe_doc>* Controls whether or not the bitmap is smoothed when scaled. If
	 * `true`, the bitmap is smoothed when scaled. If
	 * `false`, the bitmap is not smoothed when scaled.</haxe_doc>
		</smoothing>
		<new public="1" set="method">
			<f a="?bitmapData:?pixelSnapping:?smoothing" v="null::false">
				<c path="openfl.display.BitmapData"/>
				<x path="openfl.display.PixelSnapping"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ smoothing : false, bitmapData : null }</e></m></meta>
		</new>
		<haxe_doc>* The Bitmap class represents display objects that represent bitmap images.
 * These can be images that you load with the `openfl.Assets` or 
 * `openfl.display.Loader` classes, or they can be images that you 
 * create with the `Bitmap()` constructor.
 *
 * The `Bitmap()` constructor allows you to create a Bitmap
 * object that contains a reference to a BitmapData object. After you create a
 * Bitmap object, use the `addChild()` or `addChildAt()`
 * method of the parent DisplayObjectContainer instance to place the bitmap on
 * the display list.
 *
 * A Bitmap object can share its BitmapData reference among several Bitmap
 * objects, independent of translation or rotation properties. Because you can
 * create multiple Bitmap objects that reference the same BitmapData object,
 * multiple display objects can use the same complex BitmapData object without
 * incurring the memory overhead of a BitmapData object for each display
 * object instance.
 *
 * A BitmapData object can be drawn to the screen by a Bitmap object in one
 * of two ways: by using the default hardware renderer with a single hardware surface, 
 * or by using the slower software renderer when 3D acceleration is not available.
 * 
 * If you would prefer to perform a batch rendering command, rather than using a
 * single surface for each Bitmap object, you can also draw to the screen using the
 * `openfl.display.Tilemap` class.
 *
 * **Note:** The Bitmap class is not a subclass of the InteractiveObject
 * class, so it cannot dispatch mouse events. However, you can use the
 * `addEventListener()` method of the display object container that
 * contains the Bitmap object.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.display.BitmapData" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/BitmapData.hx" extern="1">
		<implements path="openfl.display.IBitmapDrawable"/>
		<fromBase64 public="1" set="method" static="1"><f a="base64:type">
	<c path="String"/>
	<c path="String"/>
	<c path="openfl.display.BitmapData"/>
</f></fromBase64>
		<fromBytes public="1" set="method" static="1">
			<f a="bytes:?rawAlpha" v=":null">
				<x path="openfl.utils.ByteArray"/>
				<x path="openfl.utils.ByteArray"/>
				<c path="openfl.display.BitmapData"/>
			</f>
			<meta><m n=":value"><e>{ rawAlpha : null }</e></m></meta>
		</fromBytes>
		<fromFile public="1" set="method" static="1"><f a="path">
	<c path="String"/>
	<c path="openfl.display.BitmapData"/>
</f></fromFile>
		<fromImage public="1" set="method" static="1">
			<f a="image:?transparent" v=":true">
				<c path="lime.graphics.Image"/>
				<x path="Bool"/>
				<c path="openfl.display.BitmapData"/>
			</f>
			<meta><m n=":value"><e>{ transparent : true }</e></m></meta>
		</fromImage>
		<loadFromBase64 public="1" set="method" static="1"><f a="base64:type">
	<c path="String"/>
	<c path="String"/>
	<c path="lime.app.Future"><c path="openfl.display.BitmapData"/></c>
</f></loadFromBase64>
		<loadFromBytes public="1" set="method" static="1">
			<f a="bytes:?rawAlpha" v=":null">
				<x path="openfl.utils.ByteArray"/>
				<x path="openfl.utils.ByteArray"/>
				<c path="lime.app.Future"><c path="openfl.display.BitmapData"/></c>
			</f>
			<meta><m n=":value"><e>{ rawAlpha : null }</e></m></meta>
		</loadFromBytes>
		<loadFromFile public="1" set="method" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="openfl.display.BitmapData"/></c>
</f></loadFromFile>
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The height of the bitmap image in pixels.</haxe_doc>
		</height>
		<image public="1" get="null" set="null">
			<c path="lime.graphics.Image"/>
			<haxe_doc>* The Lime image that holds the pixels for the current image.
	 * 
	 * In Flash Player, this property is always `null`.</haxe_doc>
		</image>
		<readable public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Defines whether the bitmap image is readable. Hardware-only bitmap images
	 * do not support `getPixels`, `setPixels` and other 
	 * BitmapData methods, though they can still be used inside a Bitmap object 
	 * or other display objects that do not need to modify the pixels.
	 * 
	 * As an exception to the rule, `bitmapData.draw` is supported for
	 * non-readable bitmap images.
	 * 
	 * Since non-readable bitmap images do not have a software image buffer, they
	 * will need to be recreated if the current hardware rendering context is lost.</haxe_doc>
		</readable>
		<rect public="1" set="null">
			<c path="openfl.geom.Rectangle"/>
			<haxe_doc>* The rectangle that defines the size and location of the bitmap image. The
	 * top and left of the rectangle are 0; the width and height are equal to the
	 * width and height in pixels of the BitmapData object.</haxe_doc>
		</rect>
		<transparent public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Defines whether the bitmap image supports per-pixel transparency. You can
	 * set this value only when you construct a BitmapData object by passing in
	 * `true` for the `transparent` parameter of the
	 * constructor. Then, after you create a BitmapData object, you can check
	 * whether it supports per-pixel transparency by determining if the value of
	 * the `transparent` property is `true`.</haxe_doc>
		</transparent>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The width of the bitmap image in pixels.</haxe_doc>
		</width>
		<applyFilter public="1" set="method">
			<f a="sourceBitmapData:sourceRect:destPoint:filter">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<c path="openfl.filters.BitmapFilter"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Takes a source image and a filter object and generates the filtered image. 
	 * 
	 * This method relies on the behavior of built-in filter objects, which determine the 
	 * destination rectangle that is affected by an input source rectangle.
	 * 
	 * After a filter is applied, the resulting image can be larger than the input image. 
	 * For example, if you use a BlurFilter class to blur a source rectangle of(50,50,100,100) 
	 * and a destination point of(10,10), the area that changes in the destination image is 
	 * larger than(10,10,60,60) because of the blurring. This happens internally during the 
	 * applyFilter() call.
	 * 
	 * If the `sourceRect` parameter of the sourceBitmapData parameter is an 
	 * interior region, such as(50,50,100,100) in a 200 x 200 image, the filter uses the source 
	 * pixels outside the `sourceRect` parameter to generate the destination rectangle.
	 * 
	 * If the BitmapData object and the object specified as the `sourceBitmapData` 
	 * parameter are the same object, the application uses a temporary copy of the object to 
	 * perform the filter. For best performance, avoid this situation.
	 * 
	 * @param	sourceBitmapData		The input bitmap image to use. The source image can be a different BitmapData object or it can refer to the current BitmapData instance.
	 * @param	sourceRect		A rectangle that defines the area of the source image to use as input.
	 * @param	destPoint		The point within the destination image(the current BitmapData instance) that corresponds to the upper-left corner of the source rectangle. 
	 * @param	filter		The filter object that you use to perform the filtering operation.</haxe_doc>
		</applyFilter>
		<clone public="1" set="method">
			<f a=""><c path="openfl.display.BitmapData"/></f>
			<haxe_doc>* Returns a new BitmapData object that is a clone of the original instance with an exact copy of the contained bitmap. 
	 * @return		A new BitmapData object that is identical to the original.</haxe_doc>
		</clone>
		<colorTransform public="1" set="method">
			<f a="rect:colorTransform">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.ColorTransform"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adjusts the color values in a specified area of a bitmap image by using a `ColorTransform`
	 * object. If the rectangle matches the boundaries of the bitmap image, this method transforms the color 
	 * values of the entire image. 
	 * @param	rect		A Rectangle object that defines the area of the image in which the ColorTransform object is applied.
	 * @param	colorTransform		A ColorTransform object that describes the color transformation values to apply.</haxe_doc>
		</colorTransform>
		<compare public="1" set="method">
			<f a="otherBitmapData">
				<c path="openfl.display.BitmapData"/>
				<x path="openfl.utils.Object"/>
			</f>
			<haxe_doc>* Compares two BitmapData objects. If the two BitmapData objects have the same dimensions (width and height), the method returns a new BitmapData object, in which each pixel is the "difference" between the pixels in the two source objects:
	 * 
	 * - If two pixels are equal, the difference pixel is 0x00000000.
	 * - If two pixels have different RGB values (ignoring the alpha value), the difference pixel is 0xFFRRGGBB where RR/GG/BB are the individual difference values between red, green, and blue channels. Alpha channel differences are ignored in this case.
	 * - If only the alpha channel value is different, the pixel value is 0xZZFFFFFF, where ZZ is the difference in the alpha value.
	 * 
	 * @param	otherBitmapData The BitmapData object to compare with the source BitmapData object.
	 * @return If the two BitmapData objects have the same dimensions (width and height), the method returns a new BitmapData object that has the difference between the two objects (see the main discussion).If the BitmapData objects are equivalent, the method returns the number 0. If no argument is passed or if the argument is not a BitmapData object, the method returns -1. If either BitmapData object has been disposed of, the method returns -2. If the widths of the BitmapData objects are not equal, the method returns the number -3. If the heights of the BitmapData objects are not equal, the method returns the number -4.</haxe_doc>
		</compare>
		<copyChannel public="1" set="method">
			<f a="sourceBitmapData:sourceRect:destPoint:sourceChannel:destChannel">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<x path="openfl.display.BitmapDataChannel"/>
				<x path="openfl.display.BitmapDataChannel"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Transfers data from one channel of another BitmapData object or the
	 * current BitmapData object into a channel of the current BitmapData object.
	 * All of the data in the other channels in the destination BitmapData object
	 * are preserved.
	 *
	 * The source channel value and destination channel value can be one of
	 * following values: 
	 *
	 * 
	 *  * `BitmapDataChannel.RED`
	 *  * `BitmapDataChannel.GREEN`
	 *  * `BitmapDataChannel.BLUE`
	 *  * `BitmapDataChannel.ALPHA`
	 * 
	 * 
	 * @param sourceBitmapData The input bitmap image to use. The source image
	 *                         can be a different BitmapData object or it can
	 *                         refer to the current BitmapData object.
	 * @param sourceRect       The source Rectangle object. To copy only channel
	 *                         data from a smaller area within the bitmap,
	 *                         specify a source rectangle that is smaller than
	 *                         the overall size of the BitmapData object.
	 * @param destPoint        The destination Point object that represents the
	 *                         upper-left corner of the rectangular area where
	 *                         the new channel data is placed. To copy only
	 *                         channel data from one area to a different area in
	 *                         the destination image, specify a point other than
	 *                        (0,0).
	 * @param sourceChannel    The source channel. Use a value from the
	 *                         BitmapDataChannel class
	 *                        (`BitmapDataChannel.RED`,
	 *                         `BitmapDataChannel.BLUE`,
	 *                         `BitmapDataChannel.GREEN`,
	 *                         `BitmapDataChannel.ALPHA`).
	 * @param destChannel      The destination channel. Use a value from the
	 *                         BitmapDataChannel class
	 *                        (`BitmapDataChannel.RED`,
	 *                         `BitmapDataChannel.BLUE`,
	 *                         `BitmapDataChannel.GREEN`,
	 *                         `BitmapDataChannel.ALPHA`).
	 * @throws TypeError The sourceBitmapData, sourceRect or destPoint are null.</haxe_doc>
		</copyChannel>
		<copyPixels public="1" set="method">
			<f a="sourceBitmapData:sourceRect:destPoint:?alphaBitmapData:?alphaPoint:?mergeAlpha" v=":::null:null:false">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Point"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaBitmapData : null }</e></m></meta>
			<haxe_doc>* Provides a fast routine to perform pixel manipulation between images with
	 * no stretching, rotation, or color effects. This method copies a
	 * rectangular area of a source image to a rectangular area of the same size
	 * at the destination point of the destination BitmapData object.
	 *
	 * If you include the `alphaBitmap` and `alphaPoint`
	 * parameters, you can use a secondary image as an alpha source for the
	 * source image. If the source image has alpha data, both sets of alpha data
	 * are used to composite pixels from the source image to the destination
	 * image. The `alphaPoint` parameter is the point in the alpha
	 * image that corresponds to the upper-left corner of the source rectangle.
	 * Any pixels outside the intersection of the source image and alpha image
	 * are not copied to the destination image.
	 *
	 * The `mergeAlpha` property controls whether or not the alpha
	 * channel is used when a transparent image is copied onto another
	 * transparent image. To copy pixels with the alpha channel data, set the
	 * `mergeAlpha` property to `true`. By default, the
	 * `mergeAlpha` property is `false`.
	 * 
	 * @param sourceBitmapData The input bitmap image from which to copy pixels.
	 *                         The source image can be a different BitmapData
	 *                         instance, or it can refer to the current
	 *                         BitmapData instance.
	 * @param sourceRect       A rectangle that defines the area of the source
	 *                         image to use as input.
	 * @param destPoint        The destination point that represents the
	 *                         upper-left corner of the rectangular area where
	 *                         the new pixels are placed.
	 * @param alphaBitmapData  A secondary, alpha BitmapData object source.
	 * @param alphaPoint       The point in the alpha BitmapData object source
	 *                         that corresponds to the upper-left corner of the
	 *                         `sourceRect` parameter.
	 * @param mergeAlpha       To use the alpha channel, set the value to
	 *                         `true`. To copy pixels with no alpha
	 *                         channel, set the value to `false`.
	 * @throws TypeError The sourceBitmapData, sourceRect, destPoint are null.</haxe_doc>
		</copyPixels>
		<copyPixelsToByteArray public="1" set="method">
			<f a="rect:data">
				<c path="openfl.geom.Rectangle"/>
				<x path="openfl.utils.ByteArray"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_4</e></m>
			</meta>
		</copyPixelsToByteArray>
		<dispose public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Frees memory that is used to store the BitmapData object.
	 *
	 * When the `dispose()` method is called on an image, the width
	 * and height of the image are set to 0. All subsequent calls to methods or
	 * properties of this BitmapData instance fail, and an exception is thrown.
	 * 
	 *
	 * `BitmapData.dispose()` releases the memory occupied by the
	 * actual bitmap data, immediately(a bitmap can consume up to 64 MB of
	 * memory). After using `BitmapData.dispose()`, the BitmapData
	 * object is no longer usable and an exception may be thrown if
	 * you call functions on the BitmapData object. However,
	 * `BitmapData.dispose()` does not garbage collect the BitmapData
	 * object(approximately 128 bytes); the memory occupied by the actual
	 * BitmapData object is released at the time the BitmapData object is
	 * collected by the garbage collector.
	 *</haxe_doc>
		</dispose>
		<disposeImage public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Frees the backing Lime image buffer, if possible.
	 * 
	 * When using a software renderer, such as Flash Player or desktop targets
	 * without OpenGL, the software buffer will be retained so that the BitmapData
	 * will work properly. When using a hardware renderer, the Lime image
	 * buffer will be available to garbage collection after a hardware texture
	 * has been created internally.
	 * 
	 * `BitmapData.disposeImage()` will immediately change the value of 
	 * the `readable` property to `false`.</haxe_doc>
		</disposeImage>
		<draw public="1" set="method">
			<f a="source:?matrix:?colorTransform:?blendMode:?clipRect:?smoothing" v=":null:null::null:false">
				<c path="openfl.display.IBitmapDrawable"/>
				<c path="openfl.geom.Matrix"/>
				<c path="openfl.geom.ColorTransform"/>
				<x path="openfl.display.BlendMode"/>
				<c path="openfl.geom.Rectangle"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ smoothing : false, clipRect : null, colorTransform : null, matrix : null }</e></m></meta>
			<haxe_doc>* Draws the `source` display object onto the bitmap image, using
	 * the OpenFL software renderer. You can specify `matrix`,
	 * `colorTransform`, `blendMode`, and a destination
	 * `clipRect` parameter to control how the rendering performs.
	 * Optionally, you can specify whether the bitmap should be smoothed when
	 * scaled(this works only if the source object is a BitmapData object).
	 *
	 * The source display object does not use any of its applied
	 * transformations for this call. It is treated as it exists in the library
	 * or file, with no matrix transform, no color transform, and no blend mode.
	 * To draw a display object(such as a movie clip) by using its own transform
	 * properties, you can copy its `transform` property object to the
	 * `transform` property of the Bitmap object that uses the
	 * BitmapData object.
	 * 
	 * @param source         The display object or BitmapData object to draw to
	 *                       the BitmapData object.(The DisplayObject and
	 *                       BitmapData classes implement the IBitmapDrawable
	 *                       interface.)
	 * @param matrix         A Matrix object used to scale, rotate, or translate
	 *                       the coordinates of the bitmap. If you do not want to
	 *                       apply a matrix transformation to the image, set this
	 *                       parameter to an identity matrix, created with the
	 *                       default `new Matrix()` constructor, or
	 *                       pass a `null` value.
	 * @param colorTransform A ColorTransform object that you use to adjust the
	 *                       color values of the bitmap. If no object is
	 *                       supplied, the bitmap image's colors are not
	 *                       transformed. If you must pass this parameter but you
	 *                       do not want to transform the image, set this
	 *                       parameter to a ColorTransform object created with
	 *                       the default `new ColorTransform()`
	 *                       constructor.
	 * @param blendMode      A string value, from the openfl.display.BlendMode
	 *                       class, specifying the blend mode to be applied to
	 *                       the resulting bitmap.
	 * @param clipRect       A Rectangle object that defines the area of the
	 *                       source object to draw. If you do not supply this
	 *                       value, no clipping occurs and the entire source
	 *                       object is drawn.
	 * @param smoothing      A Boolean value that determines whether a BitmapData
	 *                       object is smoothed when scaled or rotated, due to a
	 *                       scaling or rotation in the `matrix`
	 *                       parameter. The `smoothing` parameter only
	 *                       applies if the `source` parameter is a
	 *                       BitmapData object. With `smoothing` set
	 *                       to `false`, the rotated or scaled
	 *                       BitmapData image can appear pixelated or jagged. For
	 *                       example, the following two images use the same
	 *                       BitmapData object for the `source`
	 *                       parameter, but the `smoothing` parameter
	 *                       is set to `true` on the left and
	 *                       `false` on the right:
	 *
	 *                       Drawing a bitmap with `smoothing` set
	 *                       to `true` takes longer than doing so with
	 *                       `smoothing` set to
	 *                       `false`.
	 * @throws ArgumentError The `source` parameter is not a
	 *                       BitmapData or DisplayObject object.
	 * @throws ArgumentError The source is null or not a valid IBitmapDrawable
	 *                       object.
	 * @throws SecurityError The `source` object and(in the case of a
	 *                       Sprite or MovieClip object) all of its child objects
	 *                       do not come from the same domain as the caller, or
	 *                       are not in a content that is accessible to the
	 *                       caller by having called the
	 *                       `Security.allowDomain()` method. This
	 *                       restriction does not apply to AIR content in the
	 *                       application security sandbox.</haxe_doc>
		</draw>
		<drawWithQuality public="1" set="method">
			<f a="source:?matrix:?colorTransform:?blendMode:?clipRect:?smoothing:?quality" v=":null:null::null:false:">
				<c path="openfl.display.IBitmapDrawable"/>
				<c path="openfl.geom.Matrix"/>
				<c path="openfl.geom.ColorTransform"/>
				<x path="openfl.display.BlendMode"/>
				<c path="openfl.geom.Rectangle"/>
				<x path="Bool"/>
				<x path="openfl.display.StageQuality"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ smoothing : false, clipRect : null, colorTransform : null, matrix : null }</e></m></meta>
		</drawWithQuality>
		<encode public="1" set="method">
			<f a="rect:compressor:?byteArray" v="::null">
				<c path="openfl.geom.Rectangle"/>
				<x path="openfl.utils.Object"/>
				<x path="openfl.utils.ByteArray"/>
				<x path="openfl.utils.ByteArray"/>
			</f>
			<meta><m n=":value"><e>{ byteArray : null }</e></m></meta>
		</encode>
		<fillRect public="1" set="method">
			<f a="rect:color">
				<c path="openfl.geom.Rectangle"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Fills a rectangular area of pixels with a specified ARGB color.
	 * 
	 * @param rect  The rectangular area to fill.
	 * @param color The ARGB color value that fills the area. ARGB colors are
	 *              often specified in hexadecimal format; for example,
	 *              0xFF336699.
	 * @throws TypeError The rect is null.</haxe_doc>
		</fillRect>
		<floodFill public="1" set="method">
			<f a="x:y:color">
				<x path="Int"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Performs a flood fill operation on an image starting at an(_x_,
	 * _y_) coordinate and filling with a certain color. The
	 * `floodFill()` method is similar to the paint bucket tool in
	 * various paint programs. The color is an ARGB color that contains alpha
	 * information and color information.
	 * 
	 * @param x     The _x_ coordinate of the image.
	 * @param y     The _y_ coordinate of the image.
	 * @param color The ARGB color to use as a fill.</haxe_doc>
		</floodFill>
		<generateFilterRect public="1" set="method">
			<f a="sourceRect:filter">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.filters.BitmapFilter"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc>* Determines the destination rectangle that the `applyFilter()`
	 * method call affects, given a BitmapData object, a source rectangle, and a
	 * filter object.
	 *
	 * For example, a blur filter normally affects an area larger than the
	 * size of the original image. A 100 x 200 pixel image that is being filtered
	 * by a default BlurFilter instance, where `blurX = blurY = 4`
	 * generates a destination rectangle of `(-2,-2,104,204)`. The
	 * `generateFilterRect()` method lets you find out the size of
	 * this destination rectangle in advance so that you can size the destination
	 * image appropriately before you perform a filter operation.
	 *
	 * Some filters clip their destination rectangle based on the source image
	 * size. For example, an inner `DropShadow` does not generate a
	 * larger result than its source image. In this API, the BitmapData object is
	 * used as the source bounds and not the source `rect`
	 * parameter.
	 * 
	 * @param sourceRect A rectangle defining the area of the source image to use
	 *                   as input.
	 * @param filter     A filter object that you use to calculate the
	 *                   destination rectangle.
	 * @return A destination rectangle computed by using an image, the
	 *         `sourceRect` parameter, and a filter.
	 * @throws TypeError The sourceRect or filter are null.</haxe_doc>
		</generateFilterRect>
		<getColorBoundsRect public="1" set="method">
			<f a="mask:color:?findColor" v="::true">
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ findColor : true }</e></m></meta>
			<haxe_doc><![CDATA[* Determines a rectangular region that either fully encloses all pixels of a
	 * specified color within the bitmap image(if the `findColor`
	 * parameter is set to `true`) or fully encloses all pixels that
	 * do not include the specified color(if the `findColor`
	 * parameter is set to `false`).
	 *
	 * For example, if you have a source image and you want to determine the
	 * rectangle of the image that contains a nonzero alpha channel, pass
	 * `{mask: 0xFF000000, color: 0x00000000}` as parameters. If the
	 * `findColor` parameter is set to `true`, the entire
	 * image is searched for the bounds of pixels for which `(value & mask)
	 * == color`(where `value` is the color value of the
	 * pixel). If the `findColor` parameter is set to
	 * `false`, the entire image is searched for the bounds of pixels
	 * for which `(value & mask) != color`(where `value`
	 * is the color value of the pixel). To determine white space around an
	 * image, pass `{mask: 0xFFFFFFFF, color: 0xFFFFFFFF}` to find the
	 * bounds of nonwhite pixels.
	 * 
	 * @param mask      A hexadecimal value, specifying the bits of the ARGB
	 *                  color to consider. The color value is combined with this
	 *                  hexadecimal value, by using the `&`(bitwise
	 *                  AND) operator.
	 * @param color     A hexadecimal value, specifying the ARGB color to match
	 *                 (if `findColor` is set to `true`)
	 *                  or _not_ to match(if `findColor` is set
	 *                  to `false`).
	 * @param findColor If the value is set to `true`, returns the
	 *                  bounds of a color value in an image. If the value is set
	 *                  to `false`, returns the bounds of where this
	 *                  color doesn't exist in an image.
	 * @return The region of the image that is the specified color.]]></haxe_doc>
		</getColorBoundsRect>
		<getPixel public="1" set="method">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Returns an integer that represents an RGB pixel value from a BitmapData
	 * object at a specific point(_x_, _y_). The
	 * `getPixel()` method returns an unmultiplied pixel value. No
	 * alpha information is returned.
	 *
	 * All pixels in a BitmapData object are stored as premultiplied color
	 * values. A premultiplied image pixel has the red, green, and blue color
	 * channel values already multiplied by the alpha data. For example, if the
	 * alpha value is 0, the values for the RGB channels are also 0, independent
	 * of their unmultiplied values. This loss of data can cause some problems
	 * when you perform operations. All BitmapData methods take and return
	 * unmultiplied values. The internal pixel representation is converted from
	 * premultiplied to unmultiplied before it is returned as a value. During a
	 * set operation, the pixel value is premultiplied before the raw image pixel
	 * is set.
	 * 
	 * @param x The _x_ position of the pixel.
	 * @param y The _y_ position of the pixel.
	 * @return A number that represents an RGB pixel value. If the(_x_,
	 *         _y_) coordinates are outside the bounds of the image, the
	 *         method returns 0.</haxe_doc>
		</getPixel>
		<getPixel32 public="1" set="method">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Returns an ARGB color value that contains alpha channel data and RGB data.
	 * This method is similar to the `getPixel()` method, which
	 * returns an RGB color without alpha channel data.
	 *
	 * All pixels in a BitmapData object are stored as premultiplied color
	 * values. A premultiplied image pixel has the red, green, and blue color
	 * channel values already multiplied by the alpha data. For example, if the
	 * alpha value is 0, the values for the RGB channels are also 0, independent
	 * of their unmultiplied values. This loss of data can cause some problems
	 * when you perform operations. All BitmapData methods take and return
	 * unmultiplied values. The internal pixel representation is converted from
	 * premultiplied to unmultiplied before it is returned as a value. During a
	 * set operation, the pixel value is premultiplied before the raw image pixel
	 * is set.
	 * 
	 * @param x The _x_ position of the pixel.
	 * @param y The _y_ position of the pixel.
	 * @return A number representing an ARGB pixel value. If the(_x_,
	 *         _y_) coordinates are outside the bounds of the image, 0 is
	 *         returned.</haxe_doc>
		</getPixel32>
		<getPixels public="1" set="method">
			<f a="rect">
				<c path="openfl.geom.Rectangle"/>
				<x path="openfl.utils.ByteArray"/>
			</f>
			<haxe_doc>* Generates a byte array from a rectangular region of pixel data. Writes an
	 * unsigned integer(a 32-bit unmultiplied pixel value) for each pixel into
	 * the byte array.
	 * 
	 * @param rect A rectangular area in the current BitmapData object.
	 * @return A ByteArray representing the pixels in the given Rectangle.
	 * @throws TypeError The rect is null.</haxe_doc>
		</getPixels>
		<getVector public="1" set="method">
			<f a="rect">
				<c path="openfl.geom.Rectangle"/>
				<x path="openfl.Vector"><x path="UInt"/></x>
			</f>
			<haxe_doc>* Generates a vector array from a rectangular region of pixel data. Returns
	 * a Vector object of unsigned integers(a 32-bit unmultiplied pixel value)
	 * for the specified rectangle.
	 * 
	 * @param rect A rectangular area in the current BitmapData object.
	 * @return A Vector representing the given Rectangle.
	 * @throws TypeError The rect is null.</haxe_doc>
		</getVector>
		<histogram public="1" set="method">
			<f a="?hRect" v="null">
				<c path="openfl.geom.Rectangle"/>
				<x path="openfl.Vector"><x path="openfl.Vector"><x path="Float"/></x></x>
			</f>
			<meta><m n=":value"><e>{ hRect : null }</e></m></meta>
		</histogram>
		<hitTest public="1" set="method">
			<f a="firstPoint:firstAlphaThreshold:secondObject:?secondBitmapDataPoint:?secondAlphaThreshold" v=":::null:1">
				<c path="openfl.geom.Point"/>
				<x path="UInt"/>
				<x path="openfl.utils.Object"/>
				<c path="openfl.geom.Point"/>
				<x path="UInt"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ secondAlphaThreshold : 1, secondBitmapDataPoint : null }</e></m></meta>
		</hitTest>
		<lock public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Locks an image so that any objects that reference the BitmapData object,
	 * such as Bitmap objects, are not updated when this BitmapData object
	 * changes. To improve performance, use this method along with the
	 * `unlock()` method before and after numerous calls to the
	 * `setPixel()` or `setPixel32()` method.
	 *</haxe_doc>
		</lock>
		<merge public="1" set="method"><f a="sourceBitmapData:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
	<c path="openfl.display.BitmapData"/>
	<c path="openfl.geom.Rectangle"/>
	<c path="openfl.geom.Point"/>
	<x path="UInt"/>
	<x path="UInt"/>
	<x path="UInt"/>
	<x path="UInt"/>
	<x path="Void"/>
</f></merge>
		<noise public="1" set="method">
			<f a="randomSeed:?low:?high:?channelOptions:?grayScale" v=":0:255:7:false">
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ grayScale : false, channelOptions : 7, high : 255, low : 0 }</e></m></meta>
			<haxe_doc>* Fills an image with pixels representing random noise.
	 * 
	 * @param randomSeed     The random seed number to use. If you keep all other
	 *                       parameters the same, you can generate different
	 *                       pseudo-random results by varying the random seed
	 *                       value. The noise function is a mapping function, not
	 *                       a true random-number generation function, so it
	 *                       creates the same results each time from the same
	 *                       random seed.
	 * @param low            The lowest value to generate for each channel(0 to
	 *                       255).
	 * @param high           The highest value to generate for each channel(0 to
	 *                       255).
	 * @param channelOptions A number that can be a combination of any of the
	 *                       four color channel values
	 *                      (`BitmapDataChannel.RED`,
	 *                       `BitmapDataChannel.BLUE`,
	 *                       `BitmapDataChannel.GREEN`, and
	 *                       `BitmapDataChannel.ALPHA`). You can use
	 *                       the logical OR operator(`|`) to combine
	 *                       channel values.
	 * @param grayScale      A Boolean value. If the value is `true`,
	 *                       a grayscale image is created by setting all of the
	 *                       color channels to the same value. The alpha channel
	 *                       selection is not affected by setting this parameter
	 *                       to `true`.</haxe_doc>
		</noise>
		<paletteMap public="1" set="method">
			<f a="sourceBitmapData:sourceRect:destPoint:?redArray:?greenArray:?blueArray:?alphaArray" v=":::null:null:null:null">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<c path="Array"><x path="Int"/></c>
				<c path="Array"><x path="Int"/></c>
				<c path="Array"><x path="Int"/></c>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ alphaArray : null, blueArray : null, greenArray : null, redArray : null }</e></m></meta>
		</paletteMap>
		<perlinNoise public="1" set="method">
			<f a="baseX:baseY:numOctaves:randomSeed:stitch:fractalNoise:?channelOptions:?grayScale:?offsets" v="::::::7:false:null">
				<x path="Float"/>
				<x path="Float"/>
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<c path="Array"><c path="openfl.geom.Point"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offsets : null, grayScale : false, channelOptions : 7 }</e></m></meta>
			<haxe_doc>* Generates a Perlin noise image.
	 *
	 * The Perlin noise generation algorithm interpolates and combines
	 * individual random noise functions(called octaves) into a single function
	 * that generates more natural-seeming random noise. Like musical octaves,
	 * each octave function is twice the frequency of the one before it. Perlin
	 * noise has been described as a "fractal sum of noise" because it combines
	 * multiple sets of noise data with different levels of detail.
	 *
	 * You can use Perlin noise functions to simulate natural phenomena and
	 * landscapes, such as wood grain, clouds, and mountain ranges. In most
	 * cases, the output of a Perlin noise function is not displayed directly but
	 * is used to enhance other images and give them pseudo-random
	 * variations.
	 *
	 * Simple digital random noise functions often produce images with harsh,
	 * contrasting points. This kind of harsh contrast is not often found in
	 * nature. The Perlin noise algorithm blends multiple noise functions that
	 * operate at different levels of detail. This algorithm results in smaller
	 * variations among neighboring pixel values.
	 * 
	 * @param baseX          Frequency to use in the _x_ direction. For
	 *                       example, to generate a noise that is sized for a 64
	 *                       x 128 image, pass 64 for the `baseX`
	 *                       value.
	 * @param baseY          Frequency to use in the _y_ direction. For
	 *                       example, to generate a noise that is sized for a 64
	 *                       x 128 image, pass 128 for the `baseY`
	 *                       value.
	 * @param numOctaves     Number of octaves or individual noise functions to
	 *                       combine to create this noise. Larger numbers of
	 *                       octaves create images with greater detail. Larger
	 *                       numbers of octaves also require more processing
	 *                       time.
	 * @param randomSeed     The random seed number to use. If you keep all other
	 *                       parameters the same, you can generate different
	 *                       pseudo-random results by varying the random seed
	 *                       value. The Perlin noise function is a mapping
	 *                       function, not a true random-number generation
	 *                       function, so it creates the same results each time
	 *                       from the same random seed.
	 * @param stitch         A Boolean value. If the value is `true`,
	 *                       the method attempts to smooth the transition edges
	 *                       of the image to create seamless textures for tiling
	 *                       as a bitmap fill.
	 * @param fractalNoise   A Boolean value. If the value is `true`,
	 *                       the method generates fractal noise; otherwise, it
	 *                       generates turbulence. An image with turbulence has
	 *                       visible discontinuities in the gradient that can
	 *                       make it better approximate sharper visual effects
	 *                       like flames and ocean waves.
	 * @param channelOptions A number that can be a combination of any of the
	 *                       four color channel values
	 *                      (`BitmapDataChannel.RED`,
	 *                       `BitmapDataChannel.BLUE`,
	 *                       `BitmapDataChannel.GREEN`, and
	 *                       `BitmapDataChannel.ALPHA`). You can use
	 *                       the logical OR operator(`|`) to combine
	 *                       channel values.
	 * @param grayScale      A Boolean value. If the value is `true`,
	 *                       a grayscale image is created by setting each of the
	 *                       red, green, and blue color channels to identical
	 *                       values. The alpha channel value is not affected if
	 *                       this value is set to `true`.</haxe_doc>
		</perlinNoise>
		<pixelDissolve public="1" set="method">
			<f a="sourceBitmapData:sourceRect:destPoint:?randomSeed:?numPixels:?fillColor" v=":::0:0:0">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fillColor : 0, numPixels : 0, randomSeed : 0 }</e></m>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</pixelDissolve>
		<scroll public="1" set="method">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Scrolls an image by a certain(_x_, _y_) pixel amount. Edge
	 * regions outside the scrolling area are left unchanged.
	 * 
	 * @param x The amount by which to scroll horizontally.
	 * @param y The amount by which to scroll vertically.</haxe_doc>
		</scroll>
		<setPixel public="1" set="method">
			<f a="x:y:color">
				<x path="Int"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Sets a single pixel of a BitmapData object. The current alpha channel
	 * value of the image pixel is preserved during this operation. The value of
	 * the RGB color parameter is treated as an unmultiplied color value.
	 *
	 * **Note:** To increase performance, when you use the
	 * `setPixel()` or `setPixel32()` method repeatedly,
	 * call the `lock()` method before you call the
	 * `setPixel()` or `setPixel32()` method, and then call
	 * the `unlock()` method when you have made all pixel changes.
	 * This process prevents objects that reference this BitmapData instance from
	 * updating until you finish making the pixel changes.
	 * 
	 * @param x     The _x_ position of the pixel whose value changes.
	 * @param y     The _y_ position of the pixel whose value changes.
	 * @param color The resulting RGB color for the pixel.</haxe_doc>
		</setPixel>
		<setPixel32 public="1" set="method">
			<f a="x:y:color">
				<x path="Int"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Sets the color and alpha transparency values of a single pixel of a
	 * BitmapData object. This method is similar to the `setPixel()`
	 * method; the main difference is that the `setPixel32()` method
	 * takes an ARGB color value that contains alpha channel information.
	 *
	 * All pixels in a BitmapData object are stored as premultiplied color
	 * values. A premultiplied image pixel has the red, green, and blue color
	 * channel values already multiplied by the alpha data. For example, if the
	 * alpha value is 0, the values for the RGB channels are also 0, independent
	 * of their unmultiplied values. This loss of data can cause some problems
	 * when you perform operations. All BitmapData methods take and return
	 * unmultiplied values. The internal pixel representation is converted from
	 * premultiplied to unmultiplied before it is returned as a value. During a
	 * set operation, the pixel value is premultiplied before the raw image pixel
	 * is set.
	 *
	 * **Note:** To increase performance, when you use the
	 * `setPixel()` or `setPixel32()` method repeatedly,
	 * call the `lock()` method before you call the
	 * `setPixel()` or `setPixel32()` method, and then call
	 * the `unlock()` method when you have made all pixel changes.
	 * This process prevents objects that reference this BitmapData instance from
	 * updating until you finish making the pixel changes.
	 * 
	 * @param x     The _x_ position of the pixel whose value changes.
	 * @param y     The _y_ position of the pixel whose value changes.
	 * @param color The resulting ARGB color for the pixel. If the bitmap is
	 *              opaque(not transparent), the alpha transparency portion of
	 *              this color value is ignored.</haxe_doc>
		</setPixel32>
		<setPixels public="1" set="method">
			<f a="rect:byteArray">
				<c path="openfl.geom.Rectangle"/>
				<x path="openfl.utils.ByteArray"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Converts a byte array into a rectangular region of pixel data. For each
	 * pixel, the `ByteArray.readUnsignedInt()` method is called and
	 * the return value is written into the pixel. If the byte array ends before
	 * the full rectangle is written, the function returns. The data in the byte
	 * array is expected to be 32-bit ARGB pixel values. No seeking is performed
	 * on the byte array before or after the pixels are read.
	 * 
	 * @param rect           Specifies the rectangular region of the BitmapData
	 *                       object.
	 * @param inputByteArray A ByteArray object that consists of 32-bit
	 *                       unmultiplied pixel values to be used in the
	 *                       rectangular region.
	 * @throws EOFError  The `inputByteArray` object does not include
	 *                   enough data to fill the area of the `rect`
	 *                   rectangle. The method fills as many pixels as possible
	 *                   before throwing the exception.
	 * @throws TypeError The rect or inputByteArray are null.</haxe_doc>
		</setPixels>
		<setVector public="1" set="method">
			<f a="rect:inputVector">
				<c path="openfl.geom.Rectangle"/>
				<x path="openfl.Vector"><x path="UInt"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>* Converts a Vector into a rectangular region of pixel data. For each pixel,
	 * a Vector element is read and written into the BitmapData pixel. The data
	 * in the Vector is expected to be 32-bit ARGB pixel values.
	 * 
	 * @param rect Specifies the rectangular region of the BitmapData object.
	 * @throws RangeError The vector array is not large enough to read all the
	 *                    pixel data.</haxe_doc>
		</setVector>
		<threshold public="1" set="method">
			<f a="sourceBitmapData:sourceRect:destPoint:operation:threshold:?color:?mask:?copySource" v=":::::0x00000000:0xFFFFFFFF:false">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<c path="String"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ copySource : false, mask : 0xFFFFFFFF, color : 0x00000000 }</e></m></meta>
			<haxe_doc><![CDATA[* Tests pixel values in an image against a specified threshold and sets
	 * pixels that pass the test to new color values. Using the
	 * `threshold()` method, you can isolate and replace color ranges
	 * in an image and perform other logical operations on image pixels.
	 *
	 * The `threshold()` method's test logic is as follows:
	 *
	 *  1. If `((pixelValue & mask) operation(threshold & mask))`,
	 * then set the pixel to `color`;
	 *  2. Otherwise, if `copySource == true`, then set the pixel to
	 * corresponding pixel value from `sourceBitmap`.
	 *
	 * The `operation` parameter specifies the comparison operator
	 * to use for the threshold test. For example, by using "==" as the
	 * `operation` parameter, you can isolate a specific color value
	 * in an image. Or by using `{operation: "<", mask: 0xFF000000,
	 * threshold: 0x7F000000, color: 0x00000000}`, you can set all
	 * destination pixels to be fully transparent when the source image pixel's
	 * alpha is less than 0x7F. You can use this technique for animated
	 * transitions and other effects.
	 * 
	 * @param sourceBitmapData The input bitmap image to use. The source image
	 *                         can be a different BitmapData object or it can
	 *                         refer to the current BitmapData instance.
	 * @param sourceRect       A rectangle that defines the area of the source
	 *                         image to use as input.
	 * @param destPoint        The point within the destination image(the
	 *                         current BitmapData instance) that corresponds to
	 *                         the upper-left corner of the source rectangle.
	 * @param operation        One of the following comparison operators, passed
	 *                         as a String: "<", "<=", ">", ">=", "==", "!="
	 * @param threshold        The value that each pixel is tested against to see
	 *                         if it meets or exceeds the threshhold.
	 * @param color            The color value that a pixel is set to if the
	 *                         threshold test succeeds. The default value is
	 *                         0x00000000.
	 * @param mask             The mask to use to isolate a color component.
	 * @param copySource       If the value is `true`, pixel values
	 *                         from the source image are copied to the
	 *                         destination when the threshold test fails. If the
	 *                         value is `false`, the source image is
	 *                         not copied when the threshold test fails.
	 * @return The number of pixels that were changed.
	 * @throws ArgumentError The operation string is not a valid operation
	 * @throws TypeError     The sourceBitmapData, sourceRect destPoint or
	 *                       operation are null.]]></haxe_doc>
		</threshold>
		<unlock public="1" set="method">
			<f a="?changeRect" v="null">
				<c path="openfl.geom.Rectangle"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ changeRect : null }</e></m></meta>
			<haxe_doc>* Unlocks an image so that any objects that reference the BitmapData object,
	 * such as Bitmap objects, are updated when this BitmapData object changes.
	 * To improve performance, use this method along with the `lock()`
	 * method before and after numerous calls to the `setPixel()` or
	 * `setPixel32()` method.
	 * 
	 * @param changeRect The area of the BitmapData object that has changed. If
	 *                   you do not specify a value for this parameter, the
	 *                   entire area of the BitmapData object is considered
	 *                   changed.</haxe_doc>
		</unlock>
		<new public="1" set="method">
			<f a="width:height:?transparent:?fillColor" v="::true:0xFFFFFFFF">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ fillColor : 0xFFFFFFFF, transparent : true }</e></m></meta>
			<haxe_doc>* Creates a BitmapData object with a specified width and height. If you specify a value for 
	 * the `fillColor` parameter, every pixel in the bitmap is set to that color. 
	 * 
	 * By default, the bitmap is created as transparent, unless you pass the value `false`
	 * for the transparent parameter. After you create an opaque bitmap, you cannot change it 
	 * to a transparent bitmap. Every pixel in an opaque bitmap uses only 24 bits of color channel 
	 * information. If you define the bitmap as transparent, every pixel uses 32 bits of color 
	 * channel information, including an alpha transparency channel.
	 * 
	 * @param	width		The width of the bitmap image in pixels. 
	 * @param	height		The height of the bitmap image in pixels. 
	 * @param	transparent		Specifies whether the bitmap image supports per-pixel transparency. The default value is `true`(transparent). To create a fully transparent bitmap, set the value of the `transparent` parameter to `true` and the value of the `fillColor` parameter to 0x00000000(or to 0). Setting the `transparent` property to `false` can result in minor improvements in rendering performance.
	 * @param	fillColor		A 32-bit ARGB color value that you use to fill the bitmap image area. The default value is 0xFFFFFFFF(solid white).</haxe_doc>
		</new>
		<haxe_doc>* The BitmapData class lets you work with the data(pixels) of a Bitmap
 * object. You can use the methods of the BitmapData class to create
 * arbitrarily sized transparent or opaque bitmap images and manipulate them
 * in various ways at runtime. You can also access the BitmapData for a bitmap
 * image that you load with the `openfl.Assets` or 
 * `openfl.display.Loader` classes.
 *
 * This class lets you separate bitmap rendering operations from the
 * internal display updating routines of OpenFL. By manipulating a
 * BitmapData object directly, you can create complex images without incurring
 * the per-frame overhead of constantly redrawing the content from vector
 * data.
 *
 * The methods of the BitmapData class support effects that are not
 * available through the filters available to non-bitmap display objects.
 *
 * A BitmapData object contains an array of pixel data. This data can
 * represent either a fully opaque bitmap or a transparent bitmap that
 * contains alpha channel data. Either type of BitmapData object is stored as
 * a buffer of 32-bit integers. Each 32-bit integer determines the properties
 * of a single pixel in the bitmap.
 *
 * Each 32-bit integer is a combination of four 8-bit channel values(from
 * 0 to 255) that describe the alpha transparency and the red, green, and blue
 * (ARGB) values of the pixel.(For ARGB values, the most significant byte
 * represents the alpha channel value, followed by red, green, and blue.)
 *
 * The four channels(alpha, red, green, and blue) are represented as
 * numbers when you use them with the `BitmapData.copyChannel()`
 * method or the `DisplacementMapFilter.componentX` and
 * `DisplacementMapFilter.componentY` properties, and these numbers
 * are represented by the following constants in the BitmapDataChannel
 * class:
 *
 * 
 *  * `BitmapDataChannel.ALPHA`
 *  * `BitmapDataChannel.RED`
 *  * `BitmapDataChannel.GREEN`
 *  * `BitmapDataChannel.BLUE`
 * 
 *
 * You can attach BitmapData objects to a Bitmap object by using the
 * `bitmapData` property of the Bitmap object.
 *
 * You can use a BitmapData object to fill a Graphics object by using the
 * `Graphics.beginBitmapFill()` method.
 * 
 * You can also use a BitmapData object to perform batch tile rendering
 * using the `openfl.display.Tilemap` class.
 *
 * In Flash Player 10, the maximum size for a BitmapData object
 * is 8,191 pixels in width or height, and the total number of pixels cannot
 * exceed 16,777,215 pixels.(So, if a BitmapData object is 8,191 pixels wide,
 * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation 
 * is 2,880 pixels in height and 2,880 in width.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="openfl.display.BitmapDataChannel" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/BitmapDataChannel.hx">
		<from>
			<icast><x path="Int"/></icast>
			<icast><x path="UInt"/></icast>
		</from>
		<this><x path="UInt"/></this>
		<to>
			<icast><x path="Int"/></icast>
			<icast><x path="UInt"/></icast>
		</to>
		<haxe_doc>* The BitmapDataChannel class is an enumeration of constant values that
 * indicate which channel to use: red, blue, green, or alpha transparency.
 *
 * When you call some methods, you can use the bitwise OR operator
 * (`|`) to combine BitmapDataChannel constants to indicate
 * multiple color channels.
 *
 * The BitmapDataChannel constants are provided for use as values in the
 * following:
 *
 * 
 *  * The `sourceChannel` and `destChannel`
 * parameters of the `openfl.display.BitmapData.copyChannel()`
 * method
 *  * The `channelOptions` parameter of the
 * `openfl.display.BitmapData.noise()` method
 *  * The `openfl.filters.DisplacementMapFilter.componentX` and
 * `openfl.filters.DisplacementMapFilter.componentY` properties
 *</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._BitmapDataChannel.BitmapDataChannel_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/BitmapDataChannel.hx" private="1" module="openfl.display.BitmapDataChannel" extern="1">
	<ALPHA public="1" get="inline" set="null" expr="cast 8" line="30" static="1">
		<x path="openfl.display.BitmapDataChannel"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* The alpha channel.</haxe_doc>
	</ALPHA>
	<BLUE public="1" get="inline" set="null" expr="cast 4" line="35" static="1">
		<x path="openfl.display.BitmapDataChannel"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* The blue channel.</haxe_doc>
	</BLUE>
	<GREEN public="1" get="inline" set="null" expr="cast 2" line="40" static="1">
		<x path="openfl.display.BitmapDataChannel"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* The green channel.</haxe_doc>
	</GREEN>
	<RED public="1" get="inline" set="null" expr="cast 1" line="45" static="1">
		<x path="openfl.display.BitmapDataChannel"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* The red channel.</haxe_doc>
	</RED>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._BitmapDataChannel.BitmapDataChannel_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/BitmapDataChannel.hx" private="1" module="openfl.display.BitmapDataChannel" extern="1">
		<ALPHA public="1" get="inline" set="null" expr="cast 8" line="30" static="1">
			<x path="openfl.display.BitmapDataChannel"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* The alpha channel.</haxe_doc>
		</ALPHA>
		<BLUE public="1" get="inline" set="null" expr="cast 4" line="35" static="1">
			<x path="openfl.display.BitmapDataChannel"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* The blue channel.</haxe_doc>
		</BLUE>
		<GREEN public="1" get="inline" set="null" expr="cast 2" line="40" static="1">
			<x path="openfl.display.BitmapDataChannel"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* The green channel.</haxe_doc>
		</GREEN>
		<RED public="1" get="inline" set="null" expr="cast 1" line="45" static="1">
			<x path="openfl.display.BitmapDataChannel"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* The red channel.</haxe_doc>
		</RED>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display.BlendMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/BlendMode.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* A class that provides constant values for visual blend mode effects. These
 * constants are used in the following:
 * 
 *  *  The `blendMode` property of the
 * openfl.display.DisplayObject class.
 *  *  The `blendMode` parameter of the `draw()`
 * method of the openfl.display.BitmapData class
 *</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._BlendMode.BlendMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/BlendMode.hx" private="1" module="openfl.display.BlendMode">
	<ADD public="1" get="inline" set="null" expr="cast 0" line="26" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc><![CDATA[* Adds the values of the constituent colors of the display object to the
	 * colors of its background, applying a ceiling of 0xFF. This setting is
	 * commonly used for animating a lightening dissolve between two objects.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the
	 * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +
	 * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).]]></haxe_doc>
	</ADD>
	<ALPHA public="1" get="inline" set="null" expr="cast 1" line="36" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Applies the alpha value of each pixel of the display object to the
	 * background. This requires the `blendMode` property of the
	 * parent display object be set to
	 * `openfl.display.BlendMode.LAYER`.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
	</ALPHA>
	<DARKEN public="1" get="inline" set="null" expr="cast 2" line="50" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc><![CDATA[* Selects the darker of the constituent colors of the display object and the
	 * colors of the background(the colors with the smaller values). This
	 * setting is commonly used for superimposing type.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the
	 * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >
	 * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).
	 *
	 * Not supported under GPU rendering.]]></haxe_doc>
	</DARKEN>
	<DIFFERENCE public="1" get="inline" set="null" expr="cast 3" line="63" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Compares the constituent colors of the display object with the colors of
	 * its background, and subtracts the darker of the values of the two
	 * constituent colors from the lighter value. This setting is commonly used
	 * for more vibrant colors.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the
	 * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -
	 * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</haxe_doc>
	</DIFFERENCE>
	<ERASE public="1" get="inline" set="null" expr="cast 4" line="72" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Erases the background based on the alpha value of the display object. This
	 * process requires that the `blendMode` property of the parent
	 * display object be set to `openfl.display.BlendMode.LAYER`.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
	</ERASE>
	<HARDLIGHT public="1" get="inline" set="null" expr="cast 5" line="84" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Adjusts the color of each pixel based on the darkness of the display
	 * object. If the display object is lighter than 50% gray, the display object
	 * and background colors are screened, which results in a lighter color. If
	 * the display object is darker than 50% gray, the colors are multiplied,
	 * which results in a darker color. This setting is commonly used for shading
	 * effects.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
	</HARDLIGHT>
	<INVERT public="1" get="inline" set="null" expr="cast 6" line="89" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Inverts the background.</haxe_doc>
	</INVERT>
	<LAYER public="1" get="inline" set="null" expr="cast 7" line="101" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Forces the creation of a transparency group for the display object. This
	 * means that the display object is precomposed in a temporary buffer before
	 * it is processed further. The precomposition is done automatically if the
	 * display object is precached by means of bitmap caching or if the display
	 * object is a display object container that has at least one child object
	 * with a `blendMode` setting other than `"normal"`.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
	</LAYER>
	<LIGHTEN public="1" get="inline" set="null" expr="cast 8" line="115" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc><![CDATA[* Selects the lighter of the constituent colors of the display object and
	 * the colors of the background(the colors with the larger values). This
	 * setting is commonly used for superimposing type.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the
	 * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >
	 * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).
	 *
	 * Not supported under GPU rendering.]]></haxe_doc>
	</LIGHTEN>
	<MULTIPLY public="1" get="inline" set="null" expr="cast 9" line="130" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Multiplies the values of the display object constituent colors by the
	 * constituent colors of the background color, and normalizes by dividing by
	 * 0xFF, resulting in darker colors. This setting is commonly used for
	 * shadows and depth effects.
	 *
	 * For example, if a constituent color(such as red) of one pixel in the
	 * display object and the corresponding color of the pixel in the background
	 * both have the value 0x88, the multiplied result is 0x4840. Dividing by
	 * 0xFF yields a value of 0x48 for that constituent color, which is a darker
	 * shade than the color of the display object or the color of the
	 * background.</haxe_doc>
	</MULTIPLY>
	<NORMAL public="1" get="inline" set="null" expr="cast 10" line="137" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* The display object appears in front of the background. Pixel values of the
	 * display object override the pixel values of the background. Where the
	 * display object is transparent, the background is visible.</haxe_doc>
	</NORMAL>
	<OVERLAY public="1" get="inline" set="null" expr="cast 11" line="149" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Adjusts the color of each pixel based on the darkness of the background.
	 * If the background is lighter than 50% gray, the display object and
	 * background colors are screened, which results in a lighter color. If the
	 * background is darker than 50% gray, the colors are multiplied, which
	 * results in a darker color. This setting is commonly used for shading
	 * effects.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
	</OVERLAY>
	<SCREEN public="1" get="inline" set="null" expr="cast 12" line="157" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Multiplies the complement(inverse) of the display object color by the
	 * complement of the background color, resulting in a bleaching effect. This
	 * setting is commonly used for highlights or to remove black areas of the
	 * display object.</haxe_doc>
	</SCREEN>
	<SHADER public="1" get="inline" set="null" expr="cast 13" line="159" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHADER>
	<SUBTRACT public="1" get="inline" set="null" expr="cast 14" line="171" static="1">
		<x path="openfl.display.BlendMode"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc><![CDATA[* Subtracts the values of the constituent colors in the display object from
	 * the values of the background color, applying a floor of 0. This setting is
	 * commonly used for animating a darkening dissolve between two objects.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the
	 * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -
	 * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).]]></haxe_doc>
	</SUBTRACT>
	<fromString set="method" line="173" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.BlendMode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="198" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._BlendMode.BlendMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/BlendMode.hx" private="1" module="openfl.display.BlendMode">
		<ADD public="1" get="inline" set="null" expr="cast 0" line="26" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc><![CDATA[* Adds the values of the constituent colors of the display object to the
	 * colors of its background, applying a ceiling of 0xFF. This setting is
	 * commonly used for animating a lightening dissolve between two objects.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the
	 * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +
	 * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).]]></haxe_doc>
		</ADD>
		<ALPHA public="1" get="inline" set="null" expr="cast 1" line="36" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Applies the alpha value of each pixel of the display object to the
	 * background. This requires the `blendMode` property of the
	 * parent display object be set to
	 * `openfl.display.BlendMode.LAYER`.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
		</ALPHA>
		<DARKEN public="1" get="inline" set="null" expr="cast 2" line="50" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc><![CDATA[* Selects the darker of the constituent colors of the display object and the
	 * colors of the background(the colors with the smaller values). This
	 * setting is commonly used for superimposing type.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the
	 * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >
	 * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).
	 *
	 * Not supported under GPU rendering.]]></haxe_doc>
		</DARKEN>
		<DIFFERENCE public="1" get="inline" set="null" expr="cast 3" line="63" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Compares the constituent colors of the display object with the colors of
	 * its background, and subtracts the darker of the values of the two
	 * constituent colors from the lighter value. This setting is commonly used
	 * for more vibrant colors.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the
	 * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -
	 * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</haxe_doc>
		</DIFFERENCE>
		<ERASE public="1" get="inline" set="null" expr="cast 4" line="72" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Erases the background based on the alpha value of the display object. This
	 * process requires that the `blendMode` property of the parent
	 * display object be set to `openfl.display.BlendMode.LAYER`.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
		</ERASE>
		<HARDLIGHT public="1" get="inline" set="null" expr="cast 5" line="84" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Adjusts the color of each pixel based on the darkness of the display
	 * object. If the display object is lighter than 50% gray, the display object
	 * and background colors are screened, which results in a lighter color. If
	 * the display object is darker than 50% gray, the colors are multiplied,
	 * which results in a darker color. This setting is commonly used for shading
	 * effects.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
		</HARDLIGHT>
		<INVERT public="1" get="inline" set="null" expr="cast 6" line="89" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Inverts the background.</haxe_doc>
		</INVERT>
		<LAYER public="1" get="inline" set="null" expr="cast 7" line="101" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Forces the creation of a transparency group for the display object. This
	 * means that the display object is precomposed in a temporary buffer before
	 * it is processed further. The precomposition is done automatically if the
	 * display object is precached by means of bitmap caching or if the display
	 * object is a display object container that has at least one child object
	 * with a `blendMode` setting other than `"normal"`.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
		</LAYER>
		<LIGHTEN public="1" get="inline" set="null" expr="cast 8" line="115" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc><![CDATA[* Selects the lighter of the constituent colors of the display object and
	 * the colors of the background(the colors with the larger values). This
	 * setting is commonly used for superimposing type.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the
	 * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >
	 * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).
	 *
	 * Not supported under GPU rendering.]]></haxe_doc>
		</LIGHTEN>
		<MULTIPLY public="1" get="inline" set="null" expr="cast 9" line="130" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Multiplies the values of the display object constituent colors by the
	 * constituent colors of the background color, and normalizes by dividing by
	 * 0xFF, resulting in darker colors. This setting is commonly used for
	 * shadows and depth effects.
	 *
	 * For example, if a constituent color(such as red) of one pixel in the
	 * display object and the corresponding color of the pixel in the background
	 * both have the value 0x88, the multiplied result is 0x4840. Dividing by
	 * 0xFF yields a value of 0x48 for that constituent color, which is a darker
	 * shade than the color of the display object or the color of the
	 * background.</haxe_doc>
		</MULTIPLY>
		<NORMAL public="1" get="inline" set="null" expr="cast 10" line="137" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* The display object appears in front of the background. Pixel values of the
	 * display object override the pixel values of the background. Where the
	 * display object is transparent, the background is visible.</haxe_doc>
		</NORMAL>
		<OVERLAY public="1" get="inline" set="null" expr="cast 11" line="149" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Adjusts the color of each pixel based on the darkness of the background.
	 * If the background is lighter than 50% gray, the display object and
	 * background colors are screened, which results in a lighter color. If the
	 * background is darker than 50% gray, the colors are multiplied, which
	 * results in a darker color. This setting is commonly used for shading
	 * effects.
	 *
	 * Not supported under GPU rendering.</haxe_doc>
		</OVERLAY>
		<SCREEN public="1" get="inline" set="null" expr="cast 12" line="157" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Multiplies the complement(inverse) of the display object color by the
	 * complement of the background color, resulting in a bleaching effect. This
	 * setting is commonly used for highlights or to remove black areas of the
	 * display object.</haxe_doc>
		</SCREEN>
		<SHADER public="1" get="inline" set="null" expr="cast 13" line="159" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHADER>
		<SUBTRACT public="1" get="inline" set="null" expr="cast 14" line="171" static="1">
			<x path="openfl.display.BlendMode"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc><![CDATA[* Subtracts the values of the constituent colors in the display object from
	 * the values of the background color, applying a floor of 0. This setting is
	 * commonly used for animating a darkening dissolve between two objects.
	 *
	 * For example, if the display object has a pixel with an RGB value of
	 * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the
	 * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -
	 * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).]]></haxe_doc>
		</SUBTRACT>
		<fromString set="method" line="173" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.BlendMode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="198" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display.CapsStyle" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/CapsStyle.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The CapsStyle class is an enumeration of constant values that specify the
 * caps style to use in drawing lines. The constants are provided for use as
 * values in the `caps` parameter of the
 * `openfl.display.Graphics.lineStyle()` method. You can specify the
 * following three types of caps:</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._CapsStyle.CapsStyle_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/CapsStyle.hx" private="1" module="openfl.display.CapsStyle">
	<NONE public="1" get="inline" set="null" expr="cast 0" line="17" static="1">
		<x path="openfl.display.CapsStyle"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Used to specify no caps in the `caps` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
	</NONE>
	<ROUND public="1" get="inline" set="null" expr="cast 1" line="23" static="1">
		<x path="openfl.display.CapsStyle"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Used to specify round caps in the `caps` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
	</ROUND>
	<SQUARE public="1" get="inline" set="null" expr="cast 2" line="29" static="1">
		<x path="openfl.display.CapsStyle"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Used to specify square caps in the `caps` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
	</SQUARE>
	<fromString set="method" line="31" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.CapsStyle"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="44" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._CapsStyle.CapsStyle_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/CapsStyle.hx" private="1" module="openfl.display.CapsStyle">
		<NONE public="1" get="inline" set="null" expr="cast 0" line="17" static="1">
			<x path="openfl.display.CapsStyle"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Used to specify no caps in the `caps` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
		</NONE>
		<ROUND public="1" get="inline" set="null" expr="cast 1" line="23" static="1">
			<x path="openfl.display.CapsStyle"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Used to specify round caps in the `caps` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
		</ROUND>
		<SQUARE public="1" get="inline" set="null" expr="cast 2" line="29" static="1">
			<x path="openfl.display.CapsStyle"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Used to specify square caps in the `caps` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
		</SQUARE>
		<fromString set="method" line="31" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.CapsStyle"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="44" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.DirectRenderer" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/DirectRenderer.hx" extern="1">
		<extends path="openfl.display.DisplayObject"/>
		<render public="1" get="null" set="null"><d/></render>
		<new public="1" set="method">
			<f a="?type" v="&quot;DirectRenderer&quot;">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ type : "DirectRenderer" }</e></m></meta>
		</new>
	</class>
	<class path="openfl.text.TextField" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextField.hx" extern="1">
		<extends path="openfl.display.InteractiveObject"/>
		<antiAliasType public="1" get="null" set="null">
			<x path="openfl.text.AntiAliasType"/>
			<haxe_doc>* The type of anti-aliasing used for this text field. Use
	 * `flash.text.AntiAliasType` constants for this property. You can
	 * control this setting only if the font is embedded(with the
	 * `embedFonts` property set to `true`). The default
	 * setting is `flash.text.AntiAliasType.NORMAL`.
	 *
	 * To set values for this property, use the following string values:</haxe_doc>
		</antiAliasType>
		<autoSize public="1" get="null" set="null">
			<x path="openfl.text.TextFieldAutoSize"/>
			<haxe_doc>* Controls automatic sizing and alignment of text fields. Acceptable values
	 * for the `TextFieldAutoSize` constants:
	 * `TextFieldAutoSize.NONE`(the default),
	 * `TextFieldAutoSize.LEFT`, `TextFieldAutoSize.RIGHT`,
	 * and `TextFieldAutoSize.CENTER`.
	 *
	 * If `autoSize` is set to `TextFieldAutoSize.NONE`
	 * (the default) no resizing occurs.
	 *
	 * If `autoSize` is set to `TextFieldAutoSize.LEFT`,
	 * the text is treated as left-justified text, meaning that the left margin
	 * of the text field remains fixed and any resizing of a single line of the
	 * text field is on the right margin. If the text includes a line break(for
	 * example, `"\n"` or `"\r"`), the bottom is also
	 * resized to fit the next line of text. If `wordWrap` is also set
	 * to `true`, only the bottom of the text field is resized and the
	 * right side remains fixed.
	 *
	 * If `autoSize` is set to
	 * `TextFieldAutoSize.RIGHT`, the text is treated as
	 * right-justified text, meaning that the right margin of the text field
	 * remains fixed and any resizing of a single line of the text field is on
	 * the left margin. If the text includes a line break(for example,
	 * `"\n" or "\r")`, the bottom is also resized to fit the next
	 * line of text. If `wordWrap` is also set to `true`,
	 * only the bottom of the text field is resized and the left side remains
	 * fixed.
	 *
	 * If `autoSize` is set to
	 * `TextFieldAutoSize.CENTER`, the text is treated as
	 * center-justified text, meaning that any resizing of a single line of the
	 * text field is equally distributed to both the right and left margins. If
	 * the text includes a line break(for example, `"\n"` or
	 * `"\r"`), the bottom is also resized to fit the next line of
	 * text. If `wordWrap` is also set to `true`, only the
	 * bottom of the text field is resized and the left and right sides remain
	 * fixed.
	 * 
	 * @throws ArgumentError The `autoSize` specified is not a member
	 *                       of flash.text.TextFieldAutoSize.</haxe_doc>
		</autoSize>
		<background public="1" get="null" set="null">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the text field has a background fill. If
	 * `true`, the text field has a background fill. If
	 * `false`, the text field has no background fill. Use the
	 * `backgroundColor` property to set the background color of a
	 * text field.
	 * 
	 * @default false</haxe_doc>
		</background>
		<backgroundColor public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The color of the text field background. The default value is
	 * `0xFFFFFF`(white). This property can be retrieved or set, even
	 * if there currently is no background, but the color is visible only if the
	 * text field has the `background` property set to
	 * `true`.</haxe_doc>
		</backgroundColor>
		<border public="1" get="null" set="null">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the text field has a border. If `true`, the
	 * text field has a border. If `false`, the text field has no
	 * border. Use the `borderColor` property to set the border color.
	 * 
	 * @default false</haxe_doc>
		</border>
		<borderColor public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The color of the text field border. The default value is
	 * `0x000000`(black). This property can be retrieved or set, even
	 * if there currently is no border, but the color is visible only if the text
	 * field has the `border` property set to `true`.</haxe_doc>
		</borderColor>
		<bottomScrollV public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* An integer(1-based index) that indicates the bottommost line that is
	 * currently visible in the specified text field. Think of the text field as
	 * a window onto a block of text. The `scrollV` property is the
	 * 1-based index of the topmost visible line in the window.
	 *
	 * All the text between the lines indicated by `scrollV` and
	 * `bottomScrollV` is currently visible in the text field.</haxe_doc>
		</bottomScrollV>
		<caretIndex public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The index of the insertion point(caret) position. If no insertion point
	 * is displayed, the value is the position the insertion point would be if
	 * you restored focus to the field(typically where the insertion point last
	 * was, or 0 if the field has not had focus).
	 *
	 * Selection span indexes are zero-based(for example, the first position
	 * is 0, the second position is 1, and so on).</haxe_doc>
		</caretIndex>
		<defaultTextFormat public="1" get="null" set="null">
			<c path="openfl.text.TextFormat"/>
			<haxe_doc>* Specifies the format applied to newly inserted text, such as text entered
	 * by a user or text inserted with the `replaceSelectedText()`
	 * method.
	 *
	 * **Note:** When selecting characters to be replaced with
	 * `setSelection()` and `replaceSelectedText()`, the
	 * `defaultTextFormat` will be applied only if the text has been
	 * selected up to and including the last character. Here is an example:
	 *
	 * ```
	 * var my_txt:TextField new TextField();
	 * my_txt.text = "Flash Macintosh version"; var my_fmt:TextFormat = new
	 * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;
	 * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat
	 * not applied my_txt.setSelection(6,23); // text selected to end -
	 * defaultTextFormat applied my_txt.replaceSelectedText("Windows version");
	 * ```
	 *
	 * When you access the `defaultTextFormat` property, the
	 * returned TextFormat object has all of its properties defined. No property
	 * is `null`.
	 *
	 * **Note:** You can't set this property if a style sheet is applied to
	 * the text field.
	 * 
	 * @throws Error This method cannot be used on a text field with a style
	 *               sheet.</haxe_doc>
		</defaultTextFormat>
		<displayAsPassword public="1" get="null" set="null">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the text field is a password text field. If the value of
	 * this property is `true`, the text field is treated as a
	 * password text field and hides the input characters using asterisks instead
	 * of the actual characters. If `false`, the text field is not
	 * treated as a password text field. When password mode is enabled, the Cut
	 * and Copy commands and their corresponding keyboard shortcuts will not
	 * function. This security mechanism prevents an unscrupulous user from using
	 * the shortcuts to discover a password on an unattended computer.
	 * 
	 * @default false</haxe_doc>
		</displayAsPassword>
		<embedFonts public="1" get="null" set="null">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether to render by using embedded font outlines. If
	 * `false`, Flash Player renders the text field by using device
	 * fonts.
	 *
	 * If you set the `embedFonts` property to `true`
	 * for a text field, you must specify a font for that text by using the
	 * `font` property of a TextFormat object applied to the text
	 * field. If the specified font is not embedded in the SWF file, the text is
	 * not displayed.
	 * 
	 * @default false</haxe_doc>
		</embedFonts>
		<gridFitType public="1" get="null" set="null">
			<x path="openfl.text.GridFitType"/>
			<haxe_doc>* The type of grid fitting used for this text field. This property applies
	 * only if the `flash.text.AntiAliasType` property of the text
	 * field is set to `flash.text.AntiAliasType.ADVANCED`.
	 *
	 * The type of grid fitting used determines whether Flash Player forces
	 * strong horizontal and vertical lines to fit to a pixel or subpixel grid,
	 * or not at all.
	 *
	 * For the `flash.text.GridFitType` property, you can use the
	 * following string values:
	 * 
	 * @default pixel</haxe_doc>
		</gridFitType>
		<htmlText public="1" get="null" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[* Contains the HTML representation of the text field contents.
	 *
	 * Flash Player supports the following HTML tags:
	 *
	 * Flash Player and AIR also support explicit character codes, such as
	 * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol).]]></haxe_doc>
		</htmlText>
		<length public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The number of characters in a text field. A character such as tab
	 * (`\t`) counts as one character.</haxe_doc>
		</length>
		<maxChars public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The maximum number of characters that the text field can contain, as
	 * entered by a user. A script can insert more text than
	 * `maxChars` allows; the `maxChars` property indicates
	 * only how much text a user can enter. If the value of this property is
	 * `0`, a user can enter an unlimited amount of text.
	 * 
	 * @default 0</haxe_doc>
		</maxChars>
		<maxScrollH public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The maximum value of `scrollH`.</haxe_doc>
		</maxScrollH>
		<maxScrollV public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The maximum value of `scrollV`.</haxe_doc>
		</maxScrollV>
		<mouseWheelEnabled public="1" get="null" set="null"><x path="Bool"/></mouseWheelEnabled>
		<multiline public="1" get="null" set="null">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether field is a multiline text field. If the value is
	 * `true`, the text field is multiline; if the value is
	 * `false`, the text field is a single-line text field. In a field
	 * of type `TextFieldType.INPUT`, the `multiline` value
	 * determines whether the `Enter` key creates a new line(a value
	 * of `false`, and the `Enter` key is ignored). If you
	 * paste text into a `TextField` with a `multiline`
	 * value of `false`, newlines are stripped out of the text.
	 * 
	 * @default false</haxe_doc>
		</multiline>
		<numLines public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* Defines the number of text lines in a multiline text field. If
	 * `wordWrap` property is set to `true`, the number of
	 * lines increases when text wraps.</haxe_doc>
		</numLines>
		<restrict public="1" get="null" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[* Indicates the set of characters that a user can enter into the text field.
	 * If the value of the `restrict` property is `null`,
	 * you can enter any character. If the value of the `restrict`
	 * property is an empty string, you cannot enter any character. If the value
	 * of the `restrict` property is a string of characters, you can
	 * enter only characters in the string into the text field. The string is
	 * scanned from left to right. You can specify a range by using the hyphen
	 * (-) character. Only user interaction is restricted; a script can put any
	 * text into the text field. <ph outputclass="flashonly">This property does
	 * not synchronize with the Embed font options in the Property inspector.
	 *
	 * If the string begins with a caret(^) character, all characters are
	 * initially accepted and succeeding characters in the string are excluded
	 * from the set of accepted characters. If the string does not begin with a
	 * caret(^) character, no characters are initially accepted and succeeding
	 * characters in the string are included in the set of accepted
	 * characters.
	 *
	 * The following example allows only uppercase characters, spaces, and
	 * numbers to be entered into a text field:
	 * `my_txt.restrict = "A-Z 0-9";`
	 *
	 * The following example includes all characters, but excludes lowercase
	 * letters:
	 * `my_txt.restrict = "^a-z";`
	 *
	 * You can use a backslash to enter a ^ or - verbatim. The accepted
	 * backslash sequences are \-, \^ or \\. The backslash must be an actual
	 * character in the string, so when specified in ActionScript, a double
	 * backslash must be used. For example, the following code includes only the
	 * dash(-) and caret(^):
	 * `my_txt.restrict = "\\-\\^";`
	 *
	 * The ^ can be used anywhere in the string to toggle between including
	 * characters and excluding characters. The following code includes only
	 * uppercase letters, but excludes the uppercase letter Q:
	 * `my_txt.restrict = "A-Z^Q";`
	 *
	 * You can use the `\u` escape sequence to construct
	 * `restrict` strings. The following code includes only the
	 * characters from ASCII 32(space) to ASCII 126(tilde).
	 * `my_txt.restrict = "\u0020-\u007E";`
	 * 
	 * @default null]]></haxe_doc>
		</restrict>
		<scrollH public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The current horizontal scrolling position. If the `scrollH`
	 * property is 0, the text is not horizontally scrolled. This property value
	 * is an integer that represents the horizontal position in pixels.
	 *
	 * The units of horizontal scrolling are pixels, whereas the units of
	 * vertical scrolling are lines. Horizontal scrolling is measured in pixels
	 * because most fonts you typically use are proportionally spaced; that is,
	 * the characters can have different widths. Flash Player performs vertical
	 * scrolling by line because users usually want to see a complete line of
	 * text rather than a partial line. Even if a line uses multiple fonts, the
	 * height of the line adjusts to fit the largest font in use.
	 *
	 * **Note: **The `scrollH` property is zero-based, not
	 * 1-based like the `scrollV` vertical scrolling property.</haxe_doc>
		</scrollH>
		<scrollV public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The vertical position of text in a text field. The `scrollV`
	 * property is useful for directing users to a specific paragraph in a long
	 * passage, or creating scrolling text fields.
	 *
	 * The units of vertical scrolling are lines, whereas the units of
	 * horizontal scrolling are pixels. If the first line displayed is the first
	 * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling
	 * is measured in pixels because most fonts are proportionally spaced; that
	 * is, the characters can have different widths. Flash performs vertical
	 * scrolling by line because users usually want to see a complete line of
	 * text rather than a partial line. Even if there are multiple fonts on a
	 * line, the height of the line adjusts to fit the largest font in use.</haxe_doc>
		</scrollV>
		<selectable public="1" get="null" set="null">
			<x path="Bool"/>
			<haxe_doc>* A Boolean value that indicates whether the text field is selectable. The
	 * value `true` indicates that the text is selectable. The
	 * `selectable` property controls whether a text field is
	 * selectable, not whether a text field is editable. A dynamic text field can
	 * be selectable even if it is not editable. If a dynamic text field is not
	 * selectable, the user cannot select its text.
	 *
	 * If `selectable` is set to `false`, the text in
	 * the text field does not respond to selection commands from the mouse or
	 * keyboard, and the text cannot be copied with the Copy command. If
	 * `selectable` is set to `true`, the text in the text
	 * field can be selected with the mouse or keyboard, and the text can be
	 * copied with the Copy command. You can select text this way even if the
	 * text field is a dynamic text field instead of an input text field. 
	 * 
	 * @default true</haxe_doc>
		</selectable>
		<selectionBeginIndex public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The zero-based character index value of the first character in the current
	 * selection. For example, the first character is 0, the second character is
	 * 1, and so on. If no text is selected, this property is the value of
	 * `caretIndex`.</haxe_doc>
		</selectionBeginIndex>
		<selectionEndIndex public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The zero-based character index value of the last character in the current
	 * selection. For example, the first character is 0, the second character is
	 * 1, and so on. If no text is selected, this property is the value of
	 * `caretIndex`.</haxe_doc>
		</selectionEndIndex>
		<sharpness public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The sharpness of the glyph edges in this text field. This property applies
	 * only if the `flash.text.AntiAliasType` property of the text
	 * field is set to `flash.text.AntiAliasType.ADVANCED`. The range
	 * for `sharpness` is a number from -400 to 400. If you attempt to
	 * set `sharpness` to a value outside that range, Flash sets the
	 * property to the nearest value in the range(either -400 or 400).
	 * 
	 * @default 0</haxe_doc>
		</sharpness>
		<text public="1" get="null" set="null">
			<c path="String"/>
			<haxe_doc>* A string that is the current text in the text field. Lines are separated
	 * by the carriage return character(`'\r'`, ASCII 13). This
	 * property contains unformatted text in the text field, without HTML tags.
	 *
	 * To get the text in HTML form, use the `htmlText`
	 * property.</haxe_doc>
		</text>
		<textColor public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* The color of the text in a text field, in hexadecimal format. The
	 * hexadecimal color system uses six digits to represent color values. Each
	 * digit has 16 possible values or characters. The characters range from 0-9
	 * and then A-F. For example, black is `0x000000`; white is
	 * `0xFFFFFF`.
	 * 
	 * @default 0(0x000000)</haxe_doc>
		</textColor>
		<textHeight public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The height of the text in pixels.</haxe_doc>
		</textHeight>
		<textWidth public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The width of the text in pixels.</haxe_doc>
		</textWidth>
		<type public="1" get="null" set="null">
			<x path="openfl.text.TextFieldType"/>
			<haxe_doc>* The type of the text field. Either one of the following TextFieldType
	 * constants: `TextFieldType.DYNAMIC`, which specifies a dynamic
	 * text field, which a user cannot edit, or `TextFieldType.INPUT`,
	 * which specifies an input text field, which a user can edit.
	 * 
	 * @default dynamic
	 * @throws ArgumentError The `type` specified is not a member of
	 *                       flash.text.TextFieldType.</haxe_doc>
		</type>
		<wordWrap public="1" get="null" set="null">
			<x path="Bool"/>
			<haxe_doc>* A Boolean value that indicates whether the text field has word wrap. If
	 * the value of `wordWrap` is `true`, the text field
	 * has word wrap; if the value is `false`, the text field does not
	 * have word wrap. The default value is `false`.</haxe_doc>
		</wordWrap>
		<appendText public="1" set="method">
			<f a="text">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Appends the string specified by the `newText` parameter to the
	 * end of the text of the text field. This method is more efficient than an
	 * addition assignment(`+=`) on a `text` property
	 * (such as `someTextField.text += moreText`), particularly for a
	 * text field that contains a significant amount of content.
	 * 
	 * @param newText The string to append to the existing text.</haxe_doc>
		</appendText>
		<getCharBoundaries public="1" set="method">
			<f a="charIndex">
				<x path="Int"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc>* Returns a rectangle that is the bounding box of the character.
	 * 
	 * @param charIndex The zero-based index value for the character(for
	 *                  example, the first position is 0, the second position is
	 *                  1, and so on).
	 * @return A rectangle with `x` and `y` minimum and
	 *         maximum values defining the bounding box of the character.</haxe_doc>
		</getCharBoundaries>
		<getCharIndexAtPoint public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Returns the zero-based index value of the character at the point specified
	 * by the `x` and `y` parameters.
	 * 
	 * @param x The _x_ coordinate of the character.
	 * @param y The _y_ coordinate of the character.
	 * @return The zero-based index value of the character(for example, the
	 *         first position is 0, the second position is 1, and so on). Returns
	 *         -1 if the point is not over any character.</haxe_doc>
		</getCharIndexAtPoint>
		<getFirstCharInParagraph public="1" set="method"><f a="charIndex">
	<x path="Int"/>
	<x path="Int"/>
</f></getFirstCharInParagraph>
		<getLineIndexAtPoint public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Returns the zero-based index value of the line at the point specified by
	 * the `x` and `y` parameters.
	 * 
	 * @param x The _x_ coordinate of the line.
	 * @param y The _y_ coordinate of the line.
	 * @return The zero-based index value of the line(for example, the first
	 *         line is 0, the second line is 1, and so on). Returns -1 if the
	 *         point is not over any line.</haxe_doc>
		</getLineIndexAtPoint>
		<getLineIndexOfChar public="1" set="method"><f a="charIndex">
	<x path="Int"/>
	<x path="Int"/>
</f></getLineIndexOfChar>
		<getLineLength public="1" set="method"><f a="lineIndex">
	<x path="Int"/>
	<x path="Int"/>
</f></getLineLength>
		<getLineMetrics public="1" set="method">
			<f a="lineIndex">
				<x path="Int"/>
				<c path="openfl.text.TextLineMetrics"/>
			</f>
			<haxe_doc>* Returns metrics information about a given text line.
	 * 
	 * @param lineIndex The line number for which you want metrics information.
	 * @return A TextLineMetrics object.
	 * @throws RangeError The line number specified is out of range.</haxe_doc>
		</getLineMetrics>
		<getLineOffset public="1" set="method">
			<f a="lineIndex">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Returns the character index of the first character in the line that the
	 * `lineIndex` parameter specifies.
	 * 
	 * @param lineIndex The zero-based index value of the line(for example, the
	 *                  first line is 0, the second line is 1, and so on).
	 * @return The zero-based index value of the first character in the line.
	 * @throws RangeError The line number specified is out of range.</haxe_doc>
		</getLineOffset>
		<getLineText public="1" set="method">
			<f a="lineIndex">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Returns the text of the line specified by the `lineIndex`
	 * parameter.
	 * 
	 * @param lineIndex The zero-based index value of the line(for example, the
	 *                  first line is 0, the second line is 1, and so on).
	 * @return The text string contained in the specified line.
	 * @throws RangeError The line number specified is out of range.</haxe_doc>
		</getLineText>
		<getParagraphLength public="1" set="method"><f a="charIndex">
	<x path="Int"/>
	<x path="Int"/>
</f></getParagraphLength>
		<getTextFormat public="1" set="method">
			<f a="?beginIndex:?endIndex" v="0:0">
				<x path="Int"/>
				<x path="Int"/>
				<c path="openfl.text.TextFormat"/>
			</f>
			<meta><m n=":value"><e>{ endIndex : 0, beginIndex : 0 }</e></m></meta>
			<haxe_doc>* Returns a TextFormat object that contains formatting information for the
	 * range of text that the `beginIndex` and `endIndex`
	 * parameters specify. Only properties that are common to the entire text
	 * specified are set in the resulting TextFormat object. Any property that is
	 * _mixed_, meaning that it has different values at different points in
	 * the text, has a value of `null`.
	 *
	 * If you do not specify values for these parameters, this method is
	 * applied to all the text in the text field. 
	 *
	 * The following table describes three possible usages:
	 * 
	 * @return The TextFormat object that represents the formatting properties
	 *         for the specified text.
	 * @throws RangeError The `beginIndex` or `endIndex`
	 *                    specified is out of range.</haxe_doc>
		</getTextFormat>
		<replaceSelectedText public="1" set="method"><f a="value">
	<c path="String"/>
	<x path="Void"/>
</f></replaceSelectedText>
		<replaceText public="1" set="method"><f a="beginIndex:endIndex:newText">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></replaceText>
		<setSelection public="1" set="method">
			<f a="beginIndex:endIndex">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Sets as selected the text designated by the index values of the first and
	 * last characters, which are specified with the `beginIndex` and
	 * `endIndex` parameters. If the two parameter values are the
	 * same, this method sets the insertion point, as if you set the
	 * `caretIndex` property.
	 * 
	 * @param beginIndex The zero-based index value of the first character in the
	 *                   selection(for example, the first character is 0, the
	 *                   second character is 1, and so on).
	 * @param endIndex   The zero-based index value of the last character in the
	 *                   selection.</haxe_doc>
		</setSelection>
		<setTextFormat public="1" set="method">
			<f a="format:?beginIndex:?endIndex" v=":0:0">
				<c path="openfl.text.TextFormat"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ endIndex : 0, beginIndex : 0 }</e></m></meta>
			<haxe_doc>* Applies the text formatting that the `format` parameter
	 * specifies to the specified text in a text field. The value of
	 * `format` must be a TextFormat object that specifies the desired
	 * text formatting changes. Only the non-null properties of
	 * `format` are applied to the text field. Any property of
	 * `format` that is set to `null` is not applied. By
	 * default, all of the properties of a newly created TextFormat object are
	 * set to `null`.
	 *
	 * **Note:** This method does not work if a style sheet is applied to
	 * the text field.
	 *
	 * The `setTextFormat()` method changes the text formatting
	 * applied to a range of characters or to the entire body of text in a text
	 * field. To apply the properties of format to all text in the text field, do
	 * not specify values for `beginIndex` and `endIndex`.
	 * To apply the properties of the format to a range of text, specify values
	 * for the `beginIndex` and the `endIndex` parameters.
	 * You can use the `length` property to determine the index
	 * values.
	 *
	 * The two types of formatting information in a TextFormat object are
	 * character level formatting and paragraph level formatting. Each character
	 * in a text field can have its own character formatting settings, such as
	 * font name, font size, bold, and italic.
	 *
	 * For paragraphs, the first character of the paragraph is examined for
	 * the paragraph formatting settings for the entire paragraph. Examples of
	 * paragraph formatting settings are left margin, right margin, and
	 * indentation.
	 *
	 * Any text inserted manually by the user, or replaced by the
	 * `replaceSelectedText()` method, receives the default text field
	 * formatting for new text, and not the formatting specified for the text
	 * insertion point. To set the default formatting for new text, use
	 * `defaultTextFormat`.
	 * 
	 * @param format A TextFormat object that contains character and paragraph
	 *               formatting information.
	 * @throws Error      This method cannot be used on a text field with a style
	 *                    sheet.
	 * @throws RangeError The `beginIndex` or `endIndex`
	 *                    specified is out of range.</haxe_doc>
		</setTextFormat>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Creates a new TextField instance. After you create the TextField instance,
	 * call the `addChild()` or `addChildAt()` method of
	 * the parent DisplayObjectContainer object to add the TextField instance to
	 * the display list.
	 *
	 * The default size for a text field is 100 x 100 pixels.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[* The TextField class is used to create display objects for text display and
 * input. <ph outputclass="flexonly">You can use the TextField class to
 * perform low-level text rendering. However, in Flex, you typically use the
 * Label, Text, TextArea, and TextInput controls to process text. <ph
 * outputclass="flashonly">You can give a text field an instance name in the
 * Property inspector and use the methods and properties of the TextField
 * class to manipulate it with ActionScript. TextField instance names are
 * displayed in the Movie Explorer and in the Insert Target Path dialog box in
 * the Actions panel.
 *
 * To create a text field dynamically, use the `TextField()`
 * constructor.
 *
 * The methods of the TextField class let you set, select, and manipulate
 * text in a dynamic or input text field that you create during authoring or
 * at runtime. 
 *
 * ActionScript provides several ways to format your text at runtime. The
 * TextFormat class lets you set character and paragraph formatting for
 * TextField objects. You can apply Cascading Style Sheets(CSS) styles to
 * text fields by using the `TextField.styleSheet` property and the
 * StyleSheet class. You can use CSS to style built-in HTML tags, define new
 * formatting tags, or apply styles. You can assign HTML formatted text, which
 * optionally uses CSS styles, directly to a text field. HTML text that you
 * assign to a text field can contain embedded media(movie clips, SWF files,
 * GIF files, PNG files, and JPEG files). The text wraps around the embedded
 * media in the same way that a web browser wraps text around media embedded
 * in an HTML document. 
 *
 * Flash Player supports a subset of HTML tags that you can use to format
 * text. See the list of supported HTML tags in the description of the
 * `htmlText` property.
 * 
 * @event change                    Dispatched after a control value is
 *                                  modified, unlike the
 *                                  `textInput` event, which is
 *                                  dispatched before the value is modified.
 *                                  Unlike the W3C DOM Event Model version of
 *                                  the `change` event, which
 *                                  dispatches the event only after the
 *                                  control loses focus, the ActionScript 3.0
 *                                  version of the `change` event
 *                                  is dispatched any time the control
 *                                  changes. For example, if a user types text
 *                                  into a text field, a `change`
 *                                  event is dispatched after every keystroke.
 * @event link                      Dispatched when a user clicks a hyperlink
 *                                  in an HTML-enabled text field, where the
 *                                  URL begins with "event:". The remainder of
 *                                  the URL after "event:" is placed in the
 *                                  text property of the LINK event.
 *
 *                                  **Note:** The default behavior,
 *                                  adding the text to the text field, occurs
 *                                  only when Flash Player generates the
 *                                  event, which in this case happens when a
 *                                  user attempts to input text. You cannot
 *                                  put text into a text field by sending it
 *                                  `textInput` events.
 * @event scroll                    Dispatched by a TextField object
 *                                  _after_ the user scrolls.
 * @event textInput                 Flash Player dispatches the
 *                                  `textInput` event when a user
 *                                  enters one or more characters of text.
 *                                  Various text input methods can generate
 *                                  this event, including standard keyboards,
 *                                  input method editors(IMEs), voice or
 *                                  speech recognition systems, and even the
 *                                  act of pasting plain text with no
 *                                  formatting or style information.
 * @event textInteractionModeChange Flash Player dispatches the
 *                                  `textInteractionModeChange`
 *                                  event when a user changes the interaction
 *                                  mode of a text field. for example on
 *                                  Android, one can toggle from NORMAL mode
 *                                  to SELECTION mode using context menu
 *                                  options]]></haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.display.FPS" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/FPS.hx" extern="1">
		<extends path="openfl.text.TextField"/>
		<currentFPS public="1" set="null"><x path="Int"/></currentFPS>
		<new public="1" set="method">
			<f a="?x:?y:?color" v="10:10:0x000000">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ color : 0x000000, y : 10, x : 10 }</e></m></meta>
		</new>
	</class>
	<class path="openfl.display.FrameLabel" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/FrameLabel.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<frame public="1" get="null" set="null"><x path="Int"/></frame>
		<name public="1" get="null" set="null"><c path="String"/></name>
		<new public="1" set="method"><f a="name:frame">
	<c path="String"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="openfl.display.GradientType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GradientType.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The GradientType class provides values for the `type` parameter
 * in the `beginGradientFill()` and
 * `lineGradientStyle()` methods of the openfl.display.Graphics
 * class.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._GradientType.GradientType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GradientType.hx" private="1" module="openfl.display.GradientType">
	<LINEAR public="1" get="inline" set="null" expr="cast 0" line="15" static="1">
		<x path="openfl.display.GradientType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Value used to specify a linear gradient fill.</haxe_doc>
	</LINEAR>
	<RADIAL public="1" get="inline" set="null" expr="cast 1" line="20" static="1">
		<x path="openfl.display.GradientType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Value used to specify a radial gradient fill.</haxe_doc>
	</RADIAL>
	<fromString set="method" line="22" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.GradientType"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="34" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._GradientType.GradientType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GradientType.hx" private="1" module="openfl.display.GradientType">
		<LINEAR public="1" get="inline" set="null" expr="cast 0" line="15" static="1">
			<x path="openfl.display.GradientType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Value used to specify a linear gradient fill.</haxe_doc>
		</LINEAR>
		<RADIAL public="1" get="inline" set="null" expr="cast 1" line="20" static="1">
			<x path="openfl.display.GradientType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Value used to specify a radial gradient fill.</haxe_doc>
		</RADIAL>
		<fromString set="method" line="22" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.GradientType"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="34" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.Graphics" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/Graphics.hx" extern="1">
		<beginBitmapFill public="1" set="method">
			<f a="bitmap:?matrix:?repeat:?smooth" v=":null:true:false">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ smooth : false, repeat : true, matrix : null }</e></m></meta>
			<haxe_doc>* Fills a drawing area with a bitmap image. The bitmap can be repeated or
	 * tiled to fill the area. The fill remains in effect until you call the
	 * `beginFill()`, `beginBitmapFill()`,
	 * `beginGradientFill()`, or `beginShaderFill()`
	 * method. Calling the `clear()` method clears the fill.
	 *
	 * The application renders the fill whenever three or more points are
	 * drawn, or when the `endFill()` method is called. 
	 * 
	 * @param bitmap A transparent or opaque bitmap image that contains the bits
	 *               to be displayed.
	 * @param matrix A matrix object(of the openfl.geom.Matrix class), which you
	 *               can use to define transformations on the bitmap. For
	 *               example, you can use the following matrix to rotate a bitmap
	 *               by 45 degrees(pi/4 radians):
	 * @param repeat If `true`, the bitmap image repeats in a tiled
	 *               pattern. If `false`, the bitmap image does not
	 *               repeat, and the edges of the bitmap are used for any fill
	 *               area that extends beyond the bitmap.
	 *
	 *               For example, consider the following bitmap(a 20 x
	 *               20-pixel checkerboard pattern):
	 *
	 *               When `repeat` is set to `true`(as
	 *               in the following example), the bitmap fill repeats the
	 *               bitmap:
	 *
	 *               When `repeat` is set to `false`,
	 *               the bitmap fill uses the edge pixels for the fill area
	 *               outside the bitmap:
	 * @param smooth If `false`, upscaled bitmap images are rendered
	 *               by using a nearest-neighbor algorithm and look pixelated. If
	 *               `true`, upscaled bitmap images are rendered by
	 *               using a bilinear algorithm. Rendering by using the nearest
	 *               neighbor algorithm is faster.</haxe_doc>
		</beginBitmapFill>
		<beginFill public="1" set="method">
			<f a="?color:?alpha" v="0:1">
				<x path="UInt"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ alpha : 1, color : 0 }</e></m></meta>
			<haxe_doc>* Specifies a simple one-color fill that subsequent calls to other Graphics
	 * methods(such as `lineTo()` or `drawCircle()`) use
	 * when drawing. The fill remains in effect until you call the
	 * `beginFill()`, `beginBitmapFill()`,
	 * `beginGradientFill()`, or `beginShaderFill()`
	 * method. Calling the `clear()` method clears the fill.
	 *
	 * The application renders the fill whenever three or more points are
	 * drawn, or when the `endFill()` method is called.
	 * 
	 * @param color The color of the fill(0xRRGGBB).
	 * @param alpha The alpha value of the fill(0.0 to 1.0).</haxe_doc>
		</beginFill>
		<beginGradientFill public="1" set="method">
			<f a="type:colors:alphas:ratios:?matrix:?spreadMethod:?interpolationMethod:?focalPointRatio" v="::::null:::">
				<x path="openfl.display.GradientType"/>
				<c path="Array"><x path="UInt"/></c>
				<c path="Array"><x path="Float"/></c>
				<c path="Array"><x path="Int"/></c>
				<c path="openfl.geom.Matrix"/>
				<x path="openfl.display.SpreadMethod"/>
				<x path="openfl.display.InterpolationMethod"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ matrix : null }</e></m></meta>
			<haxe_doc>* Specifies a gradient fill used by subsequent calls to other Graphics
	 * methods(such as `lineTo()` or `drawCircle()`) for
	 * the object. The fill remains in effect until you call the
	 * `beginFill()`, `beginBitmapFill()`,
	 * `beginGradientFill()`, or `beginShaderFill()`
	 * method. Calling the `clear()` method clears the fill.
	 *
	 * The application renders the fill whenever three or more points are
	 * drawn, or when the `endFill()` method is called. 
	 * 
	 * @param type                A value from the GradientType class that
	 *                            specifies which gradient type to use:
	 *                            `GradientType.LINEAR` or
	 *                            `GradientType.RADIAL`.
	 * @param matrix              A transformation matrix as defined by the
	 *                            openfl.geom.Matrix class. The openfl.geom.Matrix
	 *                            class includes a
	 *                            `createGradientBox()` method, which
	 *                            lets you conveniently set up the matrix for use
	 *                            with the `beginGradientFill()`
	 *                            method.
	 * @param spreadMethod        A value from the SpreadMethod class that
	 *                            specifies which spread method to use, either:
	 *                            `SpreadMethod.PAD`,
	 *                            `SpreadMethod.REFLECT`, or
	 *                            `SpreadMethod.REPEAT`.
	 *
	 *                            For example, consider a simple linear
	 *                            gradient between two colors:
	 *
	 *                            This example uses
	 *                            `SpreadMethod.PAD` for the spread
	 *                            method, and the gradient fill looks like the
	 *                            following:
	 *
	 *                            If you use `SpreadMethod.REFLECT`
	 *                            for the spread method, the gradient fill looks
	 *                            like the following:
	 *
	 *                            If you use `SpreadMethod.REPEAT`
	 *                            for the spread method, the gradient fill looks
	 *                            like the following:
	 * @param interpolationMethod A value from the InterpolationMethod class that
	 *                            specifies which value to use:
	 *                            `InterpolationMethod.LINEAR_RGB` or
	 *                            `InterpolationMethod.RGB`
	 *
	 *                            For example, consider a simple linear
	 *                            gradient between two colors(with the
	 *                            `spreadMethod` parameter set to
	 *                            `SpreadMethod.REFLECT`). The
	 *                            different interpolation methods affect the
	 *                            appearance as follows: 
	 * @param focalPointRatio     A number that controls the location of the
	 *                            focal point of the gradient. 0 means that the
	 *                            focal point is in the center. 1 means that the
	 *                            focal point is at one border of the gradient
	 *                            circle. -1 means that the focal point is at the
	 *                            other border of the gradient circle. A value
	 *                            less than -1 or greater than 1 is rounded to -1
	 *                            or 1. For example, the following example shows
	 *                            a `focalPointRatio` set to 0.75:
	 * @throws ArgumentError If the `type` parameter is not valid.</haxe_doc>
		</beginGradientFill>
		<beginShaderFill public="1" set="method">
			<f a="shader:?matrix" v=":null">
				<c path="openfl.display.Shader"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ matrix : null }</e></m>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</beginShaderFill>
		<clear public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Clears the graphics that were drawn to this Graphics object, and resets
	 * fill and line style settings.
	 *</haxe_doc>
		</clear>
		<copyFrom public="1" set="method"><f a="sourceGraphics">
	<c path="openfl.display.Graphics"/>
	<x path="Void"/>
</f></copyFrom>
		<cubicCurveTo public="1" set="method"><f a="controlX1:controlY1:controlX2:controlY2:anchorX:anchorY">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></cubicCurveTo>
		<curveTo public="1" set="method">
			<f a="controlX:controlY:anchorX:anchorY">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Draws a curve using the current line style from the current drawing
	 * position to(anchorX, anchorY) and using the control point that
	 * (`controlX`, `controlY`) specifies. The current
	 * drawing position is then set to(`anchorX`,
	 * `anchorY`). If the movie clip in which you are drawing contains
	 * content created with the Flash drawing tools, calls to the
	 * `curveTo()` method are drawn underneath this content. If you
	 * call the `curveTo()` method before any calls to the
	 * `moveTo()` method, the default of the current drawing position
	 * is(0, 0). If any of the parameters are missing, this method fails and the
	 * current drawing position is not changed.
	 *
	 * The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves
	 * consist of two anchor points and one control point. The curve interpolates
	 * the two anchor points and curves toward the control point. 
	 * 
	 * @param controlX A number that specifies the horizontal position of the
	 *                 control point relative to the registration point of the
	 *                 parent display object.
	 * @param controlY A number that specifies the vertical position of the
	 *                 control point relative to the registration point of the
	 *                 parent display object.
	 * @param anchorX  A number that specifies the horizontal position of the
	 *                 next anchor point relative to the registration point of
	 *                 the parent display object.
	 * @param anchorY  A number that specifies the vertical position of the next
	 *                 anchor point relative to the registration point of the
	 *                 parent display object.</haxe_doc>
		</curveTo>
		<drawCircle public="1" set="method">
			<f a="x:y:radius">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Draws a circle. Set the line style, fill, or both before you call the
	 * `drawCircle()` method, by calling the `linestyle()`,
	 * `lineGradientStyle()`, `beginFill()`,
	 * `beginGradientFill()`, or `beginBitmapFill()`
	 * method.
	 * 
	 * @param x      The _x_ location of the center of the circle relative
	 *               to the registration point of the parent display object(in
	 *               pixels).
	 * @param y      The _y_ location of the center of the circle relative
	 *               to the registration point of the parent display object(in
	 *               pixels).
	 * @param radius The radius of the circle(in pixels).</haxe_doc>
		</drawCircle>
		<drawEllipse public="1" set="method">
			<f a="x:y:width:height">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Draws an ellipse. Set the line style, fill, or both before you call the
	 * `drawEllipse()` method, by calling the
	 * `linestyle()`, `lineGradientStyle()`,
	 * `beginFill()`, `beginGradientFill()`, or
	 * `beginBitmapFill()` method.
	 * 
	 * @param x      The _x_ location of the top-left of the bounding-box of
	 *               the ellipse relative to the registration point of the parent
	 *               display object(in pixels).
	 * @param y      The _y_ location of the top left of the bounding-box of
	 *               the ellipse relative to the registration point of the parent
	 *               display object(in pixels).
	 * @param width  The width of the ellipse(in pixels).
	 * @param height The height of the ellipse(in pixels).</haxe_doc>
		</drawEllipse>
		<drawGraphicsData public="1" set="method">
			<f a="graphicsData">
				<x path="openfl.Vector"><c path="openfl.display.IGraphicsData"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>* Submits a series of IGraphicsData instances for drawing. This method
	 * accepts a Vector containing objects including paths, fills, and strokes
	 * that implement the IGraphicsData interface. A Vector of IGraphicsData
	 * instances can refer to a part of a shape, or a complex fully defined set
	 * of data for rendering a complete shape.
	 *
	 *  Graphics paths can contain other graphics paths. If the
	 * `graphicsData` Vector includes a path, that path and all its
	 * sub-paths are rendered during this operation. 
	 *</haxe_doc>
		</drawGraphicsData>
		<drawPath public="1" set="method">
			<f a="commands:data:?winding">
				<x path="openfl.Vector"><x path="Int"/></x>
				<x path="openfl.Vector"><x path="Float"/></x>
				<x path="openfl.display.GraphicsPathWinding"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Submits a series of commands for drawing. The `drawPath()`
	 * method uses vector arrays to consolidate individual `moveTo()`,
	 * `lineTo()`, and `curveTo()` drawing commands into a
	 * single call. The `drawPath()` method parameters combine drawing
	 * commands with x- and y-coordinate value pairs and a drawing direction. The
	 * drawing commands are values from the GraphicsPathCommand class. The x- and
	 * y-coordinate value pairs are Numbers in an array where each pair defines a
	 * coordinate location. The drawing direction is a value from the
	 * GraphicsPathWinding class.
	 *
	 *  Generally, drawings render faster with `drawPath()` than
	 * with a series of individual `lineTo()` and
	 * `curveTo()` methods. 
	 *
	 *  The `drawPath()` method uses a uses a floating computation
	 * so rotation and scaling of shapes is more accurate and gives better
	 * results. However, curves submitted using the `drawPath()`
	 * method can have small sub-pixel alignment errors when used in conjunction
	 * with the `lineTo()` and `curveTo()` methods. 
	 *
	 *  The `drawPath()` method also uses slightly different rules
	 * for filling and drawing lines. They are: 
	 *
	 * 
	 *  * When a fill is applied to rendering a path:
	 * 
	 *  * A sub-path of less than 3 points is not rendered.(But note that the
	 * stroke rendering will still occur, consistent with the rules for strokes
	 * below.)
	 *  * A sub-path that isn't closed(the end point is not equal to the
	 * begin point) is implicitly closed.
	 * 
	 * 
	 *  * When a stroke is applied to rendering a path:
	 * 
	 *  * The sub-paths can be composed of any number of points.
	 *  * The sub-path is never implicitly closed.
	 * 
	 * 
	 * 
	 * 
	 * @param winding Specifies the winding rule using a value defined in the
	 *                GraphicsPathWinding class.</haxe_doc>
		</drawPath>
		<drawRect public="1" set="method">
			<f a="x:y:width:height">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Draws a rectangle. Set the line style, fill, or both before you call the
	 * `drawRect()` method, by calling the `linestyle()`,
	 * `lineGradientStyle()`, `beginFill()`,
	 * `beginGradientFill()`, or `beginBitmapFill()`
	 * method.
	 * 
	 * @param x      A number indicating the horizontal position relative to the
	 *               registration point of the parent display object(in pixels).
	 * @param y      A number indicating the vertical position relative to the
	 *               registration point of the parent display object(in pixels).
	 * @param width  The width of the rectangle(in pixels).
	 * @param height The height of the rectangle(in pixels).
	 * @throws ArgumentError If the `width` or `height`
	 *                       parameters are not a number
	 *                      (`Number.NaN`).</haxe_doc>
		</drawRect>
		<drawRoundRect public="1" set="method">
			<f a="x:y:width:height:ellipseWidth:?ellipseHeight">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Draws a rounded rectangle. Set the line style, fill, or both before you
	 * call the `drawRoundRect()` method, by calling the
	 * `linestyle()`, `lineGradientStyle()`,
	 * `beginFill()`, `beginGradientFill()`, or
	 * `beginBitmapFill()` method.
	 * 
	 * @param x             A number indicating the horizontal position relative
	 *                      to the registration point of the parent display
	 *                      object(in pixels).
	 * @param y             A number indicating the vertical position relative to
	 *                      the registration point of the parent display object
	 *                     (in pixels).
	 * @param width         The width of the round rectangle(in pixels).
	 * @param height        The height of the round rectangle(in pixels).
	 * @param ellipseWidth  The width of the ellipse used to draw the rounded
	 *                      corners(in pixels).
	 * @param ellipseHeight The height of the ellipse used to draw the rounded
	 *                      corners(in pixels). Optional; if no value is
	 *                      specified, the default value matches that provided
	 *                      for the `ellipseWidth` parameter.
	 * @throws ArgumentError If the `width`, `height`,
	 *                       `ellipseWidth` or
	 *                       `ellipseHeight` parameters are not a
	 *                       number(`Number.NaN`).</haxe_doc>
		</drawRoundRect>
		<drawRoundRectComplex public="1" set="method"><f a="x:y:width:height:topLeftRadius:topRightRadius:bottomLeftRadius:bottomRightRadius">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></drawRoundRectComplex>
		<drawTriangles public="1" set="method">
			<f a="vertices:?indices:?uvtData:?culling" v=":null:null:">
				<x path="openfl.Vector"><x path="Float"/></x>
				<x path="openfl.Vector"><x path="Int"/></x>
				<x path="openfl.Vector"><x path="Float"/></x>
				<x path="openfl.display.TriangleCulling"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ uvtData : null, indices : null }</e></m></meta>
			<haxe_doc>* Renders a set of triangles, typically to distort bitmaps and give them a
	 * three-dimensional appearance. The `drawTriangles()` method maps
	 * either the current fill, or a bitmap fill, to the triangle faces using a
	 * set of(u,v) coordinates.
	 *
	 *  Any type of fill can be used, but if the fill has a transform matrix
	 * that transform matrix is ignored. 
	 *
	 *  A `uvtData` parameter improves texture mapping when a
	 * bitmap fill is used. 
	 * 
	 * @param culling Specifies whether to render triangles that face in a
	 *                specified direction. This parameter prevents the rendering
	 *                of triangles that cannot be seen in the current view. This
	 *                parameter can be set to any value defined by the
	 *                TriangleCulling class.</haxe_doc>
		</drawTriangles>
		<endFill public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Applies a fill to the lines and curves that were added since the last call
	 * to the `beginFill()`, `beginGradientFill()`, or
	 * `beginBitmapFill()` method. Flash uses the fill that was
	 * specified in the previous call to the `beginFill()`,
	 * `beginGradientFill()`, or `beginBitmapFill()`
	 * method. If the current drawing position does not equal the previous
	 * position specified in a `moveTo()` method and a fill is
	 * defined, the path is closed with a line and then filled.
	 *</haxe_doc>
		</endFill>
		<lineBitmapStyle public="1" set="method">
			<f a="bitmap:?matrix:?repeat:?smooth" v=":null:true:false">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ smooth : false, repeat : true, matrix : null }</e></m></meta>
			<haxe_doc>* Specifies a bitmap to use for the line stroke when drawing lines.
	 *
	 * The bitmap line style is used for subsequent calls to Graphics methods
	 * such as the `lineTo()` method or the `drawCircle()`
	 * method. The line style remains in effect until you call the
	 * `lineStyle()` or `lineGradientStyle()` methods, or
	 * the `lineBitmapStyle()` method again with different parameters.
	 * 
	 *
	 * You can call the `lineBitmapStyle()` method in the middle of
	 * drawing a path to specify different styles for different line segments
	 * within a path. 
	 *
	 * Call the `lineStyle()` method before you call the
	 * `lineBitmapStyle()` method to enable a stroke, or else the
	 * value of the line style is `undefined`.
	 *
	 * Calls to the `clear()` method set the line style back to
	 * `undefined`. 
	 * 
	 * @param bitmap The bitmap to use for the line stroke.
	 * @param matrix An optional transformation matrix as defined by the
	 *               openfl.geom.Matrix class. The matrix can be used to scale or
	 *               otherwise manipulate the bitmap before applying it to the
	 *               line style.
	 * @param repeat Whether to repeat the bitmap in a tiled fashion.
	 * @param smooth Whether smoothing should be applied to the bitmap.</haxe_doc>
		</lineBitmapStyle>
		<lineGradientStyle public="1" set="method">
			<f a="type:colors:alphas:ratios:?matrix:?spreadMethod:?interpolationMethod:?focalPointRatio" v="::::null:::">
				<x path="openfl.display.GradientType"/>
				<c path="Array"><x path="UInt"/></c>
				<c path="Array"><x path="Float"/></c>
				<c path="Array"><x path="Int"/></c>
				<c path="openfl.geom.Matrix"/>
				<x path="openfl.display.SpreadMethod"/>
				<x path="openfl.display.InterpolationMethod"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ matrix : null }</e></m></meta>
			<haxe_doc>* Specifies a gradient to use for the stroke when drawing lines.
	 *
	 * The gradient line style is used for subsequent calls to Graphics
	 * methods such as the `lineTo()` methods or the
	 * `drawCircle()` method. The line style remains in effect until
	 * you call the `lineStyle()` or `lineBitmapStyle()`
	 * methods, or the `lineGradientStyle()` method again with
	 * different parameters. 
	 *
	 * You can call the `lineGradientStyle()` method in the middle
	 * of drawing a path to specify different styles for different line segments
	 * within a path. 
	 *
	 * Call the `lineStyle()` method before you call the
	 * `lineGradientStyle()` method to enable a stroke, or else the
	 * value of the line style is `undefined`.
	 *
	 * Calls to the `clear()` method set the line style back to
	 * `undefined`. 
	 * 
	 * @param type                A value from the GradientType class that
	 *                            specifies which gradient type to use, either
	 *                            GradientType.LINEAR or GradientType.RADIAL.
	 * @param matrix              A transformation matrix as defined by the
	 *                            openfl.geom.Matrix class. The openfl.geom.Matrix
	 *                            class includes a
	 *                            `createGradientBox()` method, which
	 *                            lets you conveniently set up the matrix for use
	 *                            with the `lineGradientStyle()`
	 *                            method.
	 * @param spreadMethod        A value from the SpreadMethod class that
	 *                            specifies which spread method to use:
	 * @param interpolationMethod A value from the InterpolationMethod class that
	 *                            specifies which value to use. For example,
	 *                            consider a simple linear gradient between two
	 *                            colors(with the `spreadMethod`
	 *                            parameter set to
	 *                            `SpreadMethod.REFLECT`). The
	 *                            different interpolation methods affect the
	 *                            appearance as follows:
	 * @param focalPointRatio     A number that controls the location of the
	 *                            focal point of the gradient. The value 0 means
	 *                            the focal point is in the center. The value 1
	 *                            means the focal point is at one border of the
	 *                            gradient circle. The value -1 means that the
	 *                            focal point is at the other border of the
	 *                            gradient circle. Values less than -1 or greater
	 *                            than 1 are rounded to -1 or 1. The following
	 *                            image shows a gradient with a
	 *                            `focalPointRatio` of -0.75:</haxe_doc>
		</lineGradientStyle>
		<lineStyle public="1" set="method">
			<f a="?thickness:?color:?alpha:?pixelHinting:?scaleMode:?caps:?joints:?miterLimit" v="null:::::::3">
				<x path="Float"/>
				<x path="UInt"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="openfl.display.LineScaleMode"/>
				<x path="openfl.display.CapsStyle"/>
				<x path="openfl.display.JointStyle"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ miterLimit : 3, thickness : null }</e></m></meta>
			<haxe_doc>* Specifies a line style used for subsequent calls to Graphics methods such
	 * as the `lineTo()` method or the `drawCircle()`
	 * method. The line style remains in effect until you call the
	 * `lineGradientStyle()` method, the
	 * `lineBitmapStyle()` method, or the `lineStyle()`
	 * method with different parameters.
	 *
	 * You can call the `lineStyle()` method in the middle of
	 * drawing a path to specify different styles for different line segments
	 * within the path.
	 *
	 * **Note: **Calls to the `clear()` method set the line
	 * style back to `undefined`.
	 *
	 * **Note: **Flash Lite 4 supports only the first three parameters
	 * (`thickness`, `color`, and `alpha`).
	 * 
	 * @param thickness    An integer that indicates the thickness of the line in
	 *                     points; valid values are 0-255. If a number is not
	 *                     specified, or if the parameter is undefined, a line is
	 *                     not drawn. If a value of less than 0 is passed, the
	 *                     default is 0. The value 0 indicates hairline
	 *                     thickness; the maximum thickness is 255. If a value
	 *                     greater than 255 is passed, the default is 255.
	 * @param color        A hexadecimal color value of the line; for example,
	 *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a
	 *                     value is not indicated, the default is 0x000000
	 *                    (black). Optional.
	 * @param alpha        A number that indicates the alpha value of the color
	 *                     of the line; valid values are 0 to 1. If a value is
	 *                     not indicated, the default is 1(solid). If the value
	 *                     is less than 0, the default is 0. If the value is
	 *                     greater than 1, the default is 1.
	 * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that
	 *                     specifies whether to hint strokes to full pixels. This
	 *                     affects both the position of anchors of a curve and
	 *                     the line stroke size itself. With
	 *                     `pixelHinting` set to `true`,
	 *                     line widths are adjusted to full pixel widths. With
	 *                     `pixelHinting` set to `false`,
	 *                     disjoints can appear for curves and straight lines.
	 *                     For example, the following illustrations show how
	 *                     Flash Player or Adobe AIR renders two rounded
	 *                     rectangles that are identical, except that the
	 *                     `pixelHinting` parameter used in the
	 *                     `lineStyle()` method is set differently
	 *                    (the images are scaled by 200%, to emphasize the
	 *                     difference):
	 *
	 *                     If a value is not supplied, the line does not use
	 *                     pixel hinting.
	 * @param scaleMode   (Not supported in Flash Lite 4) A value from the
	 *                     LineScaleMode class that specifies which scale mode to
	 *                     use:
	 *                     
	 *                      *  `LineScaleMode.NORMAL` - Always
	 *                     scale the line thickness when the object is scaled
	 *                    (the default). 
	 *                      *  `LineScaleMode.NONE` - Never scale
	 *                     the line thickness. 
	 *                      *  `LineScaleMode.VERTICAL` - Do not
	 *                     scale the line thickness if the object is scaled
	 *                     vertically _only_. For example, consider the
	 *                     following circles, drawn with a one-pixel line, and
	 *                     each with the `scaleMode` parameter set to
	 *                     `LineScaleMode.VERTICAL`. The circle on the
	 *                     left is scaled vertically only, and the circle on the
	 *                     right is scaled both vertically and horizontally:
	 *                     
	 *                      *  `LineScaleMode.HORIZONTAL` - Do not
	 *                     scale the line thickness if the object is scaled
	 *                     horizontally _only_. For example, consider the
	 *                     following circles, drawn with a one-pixel line, and
	 *                     each with the `scaleMode` parameter set to
	 *                     `LineScaleMode.HORIZONTAL`. The circle on
	 *                     the left is scaled horizontally only, and the circle
	 *                     on the right is scaled both vertically and
	 *                     horizontally:   
	 *                     
	 * @param caps        (Not supported in Flash Lite 4) A value from the
	 *                     CapsStyle class that specifies the type of caps at the
	 *                     end of lines. Valid values are:
	 *                     `CapsStyle.NONE`,
	 *                     `CapsStyle.ROUND`, and
	 *                     `CapsStyle.SQUARE`. If a value is not
	 *                     indicated, Flash uses round caps.
	 *
	 *                     For example, the following illustrations show the
	 *                     different `capsStyle` settings. For each
	 *                     setting, the illustration shows a blue line with a
	 *                     thickness of 30(for which the `capsStyle`
	 *                     applies), and a superimposed black line with a
	 *                     thickness of 1(for which no `capsStyle`
	 *                     applies): 
	 * @param joints      (Not supported in Flash Lite 4) A value from the
	 *                     JointStyle class that specifies the type of joint
	 *                     appearance used at angles. Valid values are:
	 *                     `JointStyle.BEVEL`,
	 *                     `JointStyle.MITER`, and
	 *                     `JointStyle.ROUND`. If a value is not
	 *                     indicated, Flash uses round joints.
	 *
	 *                     For example, the following illustrations show the
	 *                     different `joints` settings. For each
	 *                     setting, the illustration shows an angled blue line
	 *                     with a thickness of 30(for which the
	 *                     `jointStyle` applies), and a superimposed
	 *                     angled black line with a thickness of 1(for which no
	 *                     `jointStyle` applies): 
	 *
	 *                     **Note:** For `joints` set to
	 *                     `JointStyle.MITER`, you can use the
	 *                     `miterLimit` parameter to limit the length
	 *                     of the miter.
	 * @param miterLimit  (Not supported in Flash Lite 4) A number that
	 *                     indicates the limit at which a miter is cut off. Valid
	 *                     values range from 1 to 255(and values outside that
	 *                     range are rounded to 1 or 255). This value is only
	 *                     used if the `jointStyle` is set to
	 *                     `"miter"`. The `miterLimit`
	 *                     value represents the length that a miter can extend
	 *                     beyond the point at which the lines meet to form a
	 *                     joint. The value expresses a factor of the line
	 *                     `thickness`. For example, with a
	 *                     `miterLimit` factor of 2.5 and a
	 *                     `thickness` of 10 pixels, the miter is cut
	 *                     off at 25 pixels.
	 *
	 *                     For example, consider the following angled lines,
	 *                     each drawn with a `thickness` of 20, but
	 *                     with `miterLimit` set to 1, 2, and 4.
	 *                     Superimposed are black reference lines showing the
	 *                     meeting points of the joints:
	 *
	 *                     Notice that a given `miterLimit` value
	 *                     has a specific maximum angle for which the miter is
	 *                     cut off. The following table lists some examples:</haxe_doc>
		</lineStyle>
		<lineTo public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Draws a line using the current line style from the current drawing
	 * position to(`x`, `y`); the current drawing position
	 * is then set to(`x`, `y`). If the display object in
	 * which you are drawing contains content that was created with the Flash
	 * drawing tools, calls to the `lineTo()` method are drawn
	 * underneath the content. If you call `lineTo()` before any calls
	 * to the `moveTo()` method, the default position for the current
	 * drawing is(_0, 0_). If any of the parameters are missing, this
	 * method fails and the current drawing position is not changed.
	 * 
	 * @param x A number that indicates the horizontal position relative to the
	 *          registration point of the parent display object(in pixels).
	 * @param y A number that indicates the vertical position relative to the
	 *          registration point of the parent display object(in pixels).</haxe_doc>
		</lineTo>
		<moveTo public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Moves the current drawing position to(`x`, `y`). If
	 * any of the parameters are missing, this method fails and the current
	 * drawing position is not changed.
	 * 
	 * @param x A number that indicates the horizontal position relative to the
	 *          registration point of the parent display object(in pixels).
	 * @param y A number that indicates the vertical position relative to the
	 *          registration point of the parent display object(in pixels).</haxe_doc>
		</moveTo>
		<readGraphicsData public="1" set="method">
			<f a="?recurse" v="true">
				<x path="Bool"/>
				<x path="openfl.Vector"><c path="openfl.display.IGraphicsData"/></x>
			</f>
			<meta><m n=":value"><e>{ recurse : true }</e></m></meta>
		</readGraphicsData>
		<haxe_doc>* The Graphics class contains a set of methods that you can use to create a
 * vector shape. Display objects that support drawing include Sprite and Shape
 * objects. Each of these classes includes a `graphics` property
 * that is a Graphics object. The following are among those helper functions
 * provided for ease of use: `drawRect()`,
 * `drawRoundRect()`, `drawCircle()`, and
 * `drawEllipse()`.
 *
 * You cannot create a Graphics object directly from ActionScript code. If
 * you call `new Graphics()`, an exception is thrown.
 *
 * The Graphics class is final; it cannot be subclassed.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display.IGraphicsFill" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/IGraphicsFill.hx" extern="1" interface="1"><meta><m n=":native"><e>"flash.display.IGraphicsFill"</e></m></meta></class>
	<class path="openfl.display.IGraphicsData" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/IGraphicsData.hx" extern="1" interface="1"><meta><m n=":native"><e>"flash.display.IGraphicsData"</e></m></meta></class>
	<class path="openfl.display.GraphicsBitmapFill" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsBitmapFill.hx" extern="1">
		<implements path="openfl.display.IGraphicsFill"/>
		<implements path="openfl.display.IGraphicsData"/>
		<bitmapData public="1"><c path="openfl.display.BitmapData"/></bitmapData>
		<matrix public="1"><c path="openfl.geom.Matrix"/></matrix>
		<repeat public="1"><x path="Bool"/></repeat>
		<smooth public="1"><x path="Bool"/></smooth>
		<new public="1" set="method">
			<f a="?bitmapData:?matrix:?repeat:?smooth" v="null:null:true:false">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ smooth : false, repeat : true, matrix : null, bitmapData : null }</e></m></meta>
		</new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display.GraphicsEndFill" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsEndFill.hx" extern="1">
		<implements path="openfl.display.IGraphicsFill"/>
		<implements path="openfl.display.IGraphicsData"/>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Creates an object to use with the `Graphics.drawGraphicsData()`
	 * method to end the fill, explicitly.</haxe_doc>
		</new>
		<haxe_doc>* Indicates the end of a graphics fill. Use a GraphicsEndFill object with the
 * `Graphics.drawGraphicsData()` method.
 *
 *  Drawing a GraphicsEndFill object is the equivalent of calling the
 * `Graphics.endFill()` method.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display.GraphicsGradientFill" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsGradientFill.hx" extern="1">
		<implements path="openfl.display.IGraphicsFill"/>
		<implements path="openfl.display.IGraphicsData"/>
		<alphas public="1"><c path="Array"><x path="Float"/></c></alphas>
		<colors public="1"><c path="Array"><x path="UInt"/></c></colors>
		<focalPointRatio public="1"><x path="Float"/></focalPointRatio>
		<interpolationMethod public="1"><x path="openfl.display.InterpolationMethod"/></interpolationMethod>
		<matrix public="1"><c path="openfl.geom.Matrix"/></matrix>
		<ratios public="1"><c path="Array"><x path="UInt"/></c></ratios>
		<spreadMethod public="1"><x path="openfl.display.SpreadMethod"/></spreadMethod>
		<type public="1"><x path="openfl.display.GradientType"/></type>
		<new public="1" set="method">
			<f a="?type:?colors:?alphas:?ratios:?matrix:?spreadMethod:?interpolationMethod:?focalPointRatio" v=":null:null:null:null:::0">
				<x path="openfl.display.GradientType"/>
				<c path="Array"><x path="UInt"/></c>
				<c path="Array"><x path="Float"/></c>
				<c path="Array"><x path="UInt"/></c>
				<c path="openfl.geom.Matrix"/>
				<x path="openfl.display.SpreadMethod"/>
				<x path="openfl.display.InterpolationMethod"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ focalPointRatio : 0, matrix : null, ratios : null, alphas : null, colors : null }</e></m></meta>
		</new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display.IGraphicsPath" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/IGraphicsPath.hx" extern="1" interface="1"><meta><m n=":native"><e>"flash.display.IGraphicsPath"</e></m></meta></class>
	<class path="openfl.display.GraphicsPath" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsPath.hx" extern="1">
		<implements path="openfl.display.IGraphicsPath"/>
		<implements path="openfl.display.IGraphicsData"/>
		<commands public="1">
			<x path="openfl.Vector"><x path="Int"/></x>
			<haxe_doc>* The Vector of drawing commands as integers representing the path. Each
	 * command can be one of the values defined by the GraphicsPathCommand class.</haxe_doc>
		</commands>
		<data public="1">
			<x path="openfl.Vector"><x path="Float"/></x>
			<haxe_doc>* The Vector of Numbers containing the parameters used with the drawing
	 * commands.</haxe_doc>
		</data>
		<winding public="1">
			<x path="openfl.display.GraphicsPathWinding"/>
			<haxe_doc>* Specifies the winding rule using a value defined in the
	 * GraphicsPathWinding class.</haxe_doc>
		</winding>
		<cubicCurveTo public="1" set="method"><f a="controlX1:controlY1:controlX2:controlY2:anchorX:anchorY">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></cubicCurveTo>
		<curveTo public="1" set="method">
			<f a="controlX:controlY:anchorX:anchorY">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adds a new "curveTo" command to the `commands` vector and new
	 * coordinates to the `data` vector.
	 * 
	 * @param controlX A number that specifies the horizontal position of the
	 *                 control point relative to the registration point of the
	 *                 parent display object.
	 * @param controlY A number that specifies the vertical position of the
	 *                 control point relative to the registration point of the
	 *                 parent display object.
	 * @param anchorX  A number that specifies the horizontal position of the
	 *                 next anchor point relative to the registration point of
	 *                 the parent display object.
	 * @param anchorY  A number that specifies the vertical position of the next
	 *                 anchor point relative to the registration point of the
	 *                 parent display object.</haxe_doc>
		</curveTo>
		<lineTo public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adds a new "lineTo" command to the `commands` vector and new
	 * coordinates to the `data` vector.
	 * 
	 * @param x The x coordinate of the destination point for the line.
	 * @param y The y coordinate of the destination point for the line.</haxe_doc>
		</lineTo>
		<moveTo public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adds a new "moveTo" command to the `commands` vector and new
	 * coordinates to the `data` vector.
	 * 
	 * @param x The x coordinate of the destination point.
	 * @param y The y coordinate of the destination point.</haxe_doc>
		</moveTo>
		<wideLineTo public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adds a new "wideLineTo" command to the `commands` vector and
	 * new coordinates to the `data` vector.
	 * 
	 * @param x The x-coordinate of the destination point for the line.
	 * @param y The y-coordinate of the destination point for the line.</haxe_doc>
		</wideLineTo>
		<wideMoveTo public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adds a new "wideMoveTo" command to the `commands` vector and
	 * new coordinates to the `data` vector.
	 * 
	 * @param x The x-coordinate of the destination point.
	 * @param y The y-coordinate of the destination point.</haxe_doc>
		</wideMoveTo>
		<new public="1" set="method">
			<f a="?commands:?data:?winding" v="null:null:">
				<x path="openfl.Vector"><x path="Int"/></x>
				<x path="openfl.Vector"><x path="Float"/></x>
				<x path="openfl.display.GraphicsPathWinding"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ data : null, commands : null }</e></m></meta>
			<haxe_doc>* Creates a new GraphicsPath object.
	 * 
	 * @param winding Specifies the winding rule using a value defined in the
	 *                GraphicsPathWinding class.</haxe_doc>
		</new>
		<haxe_doc>* A collection of drawing commands and the coordinate parameters for those
 * commands.
 *
 *  Use a GraphicsPath object with the
 * `Graphics.drawGraphicsData()` method. Drawing a GraphicsPath
 * object is the equivalent of calling the `Graphics.drawPath()`
 * method. 
 *
 * The GraphicsPath class also has its own set of methods
 * (`curveTo()`, `lineTo()`, `moveTo()`
 * `wideLineTo()` and `wideMoveTo()`) similar to those
 * in the Graphics class for making adjustments to the
 * `GraphicsPath.commands` and `GraphicsPath.data`
 * vector arrays.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="openfl.display.GraphicsPathCommand" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsPathCommand.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>* Defines the values to use for specifying path-drawing commands.
 *
 * The values in this class are used by the
 * `Graphics.drawPath()` method, or stored in the
 * `commands` vector of a GraphicsPath object.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._GraphicsPathCommand.GraphicsPathCommand_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsPathCommand.hx" private="1" module="openfl.display.GraphicsPathCommand" extern="1">
	<CUBIC_CURVE_TO public="1" get="inline" set="null" expr="cast 6" line="13" static="1">
		<x path="openfl.display.GraphicsPathCommand"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
			<m n=":require"><e>flash11</e></m>
		</meta>
	</CUBIC_CURVE_TO>
	<CURVE_TO public="1" get="inline" set="null" expr="cast 3" line="14" static="1">
		<x path="openfl.display.GraphicsPathCommand"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURVE_TO>
	<LINE_TO public="1" get="inline" set="null" expr="cast 2" line="15" static="1">
		<x path="openfl.display.GraphicsPathCommand"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINE_TO>
	<MOVE_TO public="1" get="inline" set="null" expr="cast 1" line="16" static="1">
		<x path="openfl.display.GraphicsPathCommand"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOVE_TO>
	<NO_OP public="1" get="inline" set="null" expr="cast 0" line="17" static="1">
		<x path="openfl.display.GraphicsPathCommand"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_OP>
	<WIDE_LINE_TO public="1" get="inline" set="null" expr="cast 5" line="18" static="1">
		<x path="openfl.display.GraphicsPathCommand"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WIDE_LINE_TO>
	<WIDE_MOVE_TO public="1" get="inline" set="null" expr="cast 4" line="19" static="1">
		<x path="openfl.display.GraphicsPathCommand"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WIDE_MOVE_TO>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._GraphicsPathCommand.GraphicsPathCommand_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsPathCommand.hx" private="1" module="openfl.display.GraphicsPathCommand" extern="1">
		<CUBIC_CURVE_TO public="1" get="inline" set="null" expr="cast 6" line="13" static="1">
			<x path="openfl.display.GraphicsPathCommand"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</CUBIC_CURVE_TO>
		<CURVE_TO public="1" get="inline" set="null" expr="cast 3" line="14" static="1">
			<x path="openfl.display.GraphicsPathCommand"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURVE_TO>
		<LINE_TO public="1" get="inline" set="null" expr="cast 2" line="15" static="1">
			<x path="openfl.display.GraphicsPathCommand"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINE_TO>
		<MOVE_TO public="1" get="inline" set="null" expr="cast 1" line="16" static="1">
			<x path="openfl.display.GraphicsPathCommand"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOVE_TO>
		<NO_OP public="1" get="inline" set="null" expr="cast 0" line="17" static="1">
			<x path="openfl.display.GraphicsPathCommand"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_OP>
		<WIDE_LINE_TO public="1" get="inline" set="null" expr="cast 5" line="18" static="1">
			<x path="openfl.display.GraphicsPathCommand"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WIDE_LINE_TO>
		<WIDE_MOVE_TO public="1" get="inline" set="null" expr="cast 4" line="19" static="1">
			<x path="openfl.display.GraphicsPathCommand"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WIDE_MOVE_TO>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display.GraphicsPathWinding" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsPathWinding.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The GraphicsPathWinding class provides values for the
 * `openfl.display.GraphicsPath.winding` property and the
 * `openfl.display.Graphics.drawPath()` method to determine the
 * direction to draw a path. A clockwise path is positively wound, and a
 * counter-clockwise path is negatively wound:
 *
 *  When paths intersect or overlap, the winding direction determines the
 * rules for filling the areas created by the intersection or overlap:</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._GraphicsPathWinding.GraphicsPathWinding_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsPathWinding.hx" private="1" module="openfl.display.GraphicsPathWinding">
	<EVEN_ODD public="1" get="inline" set="null" expr="cast 0" line="16" static="1">
		<x path="openfl.display.GraphicsPathWinding"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EVEN_ODD>
	<NON_ZERO public="1" get="inline" set="null" expr="cast 1" line="17" static="1">
		<x path="openfl.display.GraphicsPathWinding"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NON_ZERO>
	<fromString set="method" line="19" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.GraphicsPathWinding"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="31" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._GraphicsPathWinding.GraphicsPathWinding_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsPathWinding.hx" private="1" module="openfl.display.GraphicsPathWinding">
		<EVEN_ODD public="1" get="inline" set="null" expr="cast 0" line="16" static="1">
			<x path="openfl.display.GraphicsPathWinding"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EVEN_ODD>
		<NON_ZERO public="1" get="inline" set="null" expr="cast 1" line="17" static="1">
			<x path="openfl.display.GraphicsPathWinding"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NON_ZERO>
		<fromString set="method" line="19" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.GraphicsPathWinding"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="31" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.GraphicsSolidFill" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsSolidFill.hx" extern="1">
		<implements path="openfl.display.IGraphicsFill"/>
		<implements path="openfl.display.IGraphicsData"/>
		<alpha public="1">
			<x path="Float"/>
			<haxe_doc>* Indicates the alpha transparency value of the fill. Valid values are 0
	 * (fully transparent) to 1(fully opaque). The default value is 1. Display
	 * objects with alpha set to 0 are active, even though they are invisible.</haxe_doc>
		</alpha>
		<color public="1">
			<x path="UInt"/>
			<haxe_doc>* The color of the fill. Valid values are in the hexadecimal format
	 * 0xRRGGBB. The default value is 0xFF0000(or the uint 0).</haxe_doc>
		</color>
		<new public="1" set="method">
			<f a="?color:?alpha" v="0:1">
				<x path="UInt"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ alpha : 1, color : 0 }</e></m></meta>
			<haxe_doc>* Creates a new GraphicsSolidFill object.
	 * 
	 * @param color The color value. Valid values are in the hexadecimal format
	 *              0xRRGGBB.
	 * @param alpha The alpha transparency value. Valid values are 0(fully
	 *              transparent) to 1(fully opaque).</haxe_doc>
		</new>
		<haxe_doc>* Defines a solid fill.
 *
 *  Use a GraphicsSolidFill object with the
 * `Graphics.drawGraphicsData()` method. Drawing a
 * GraphicsSolidFill object is the equivalent of calling the
 * `Graphics.beginFill()` method.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display.IGraphicsStroke" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/IGraphicsStroke.hx" extern="1" interface="1"><meta><m n=":native"><e>"flash.display.IGraphicsStroke"</e></m></meta></class>
	<class path="openfl.display.GraphicsStroke" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/GraphicsStroke.hx" extern="1">
		<implements path="openfl.display.IGraphicsStroke"/>
		<implements path="openfl.display.IGraphicsData"/>
		<caps public="1">
			<x path="openfl.display.CapsStyle"/>
			<haxe_doc>* Specifies the type of caps at the end of lines. Valid values are:
	 * `CapsStyle.NONE`, `CapsStyle.ROUND`, and
	 * `CapsStyle.SQUARE`. If a value is not indicated, Flash uses
	 * round caps.
	 *
	 * For example, the following illustrations show the different
	 * `capsStyle` settings. For each setting, the illustration shows
	 * a blue line with a thickness of 30(for which the `capsStyle`
	 * applies), and a superimposed black line with a thickness of 1(for which
	 * no `capsStyle` applies):</haxe_doc>
		</caps>
		<fill public="1">
			<c path="openfl.display.IGraphicsFill"/>
			<haxe_doc>* Specifies the instance containing data for filling a stroke. An
	 * IGraphicsFill instance can represent a series of fill commands.</haxe_doc>
		</fill>
		<joints public="1">
			<x path="openfl.display.JointStyle"/>
			<haxe_doc>* Specifies the type of joint appearance used at angles. Valid values are:
	 * `JointStyle.BEVEL`, `JointStyle.MITER`, and
	 * `JointStyle.ROUND`. If a value is not indicated, Flash uses
	 * round joints.
	 *
	 * For example, the following illustrations show the different
	 * `joints` settings. For each setting, the illustration shows an
	 * angled blue line with a thickness of 30(for which the
	 * `jointStyle` applies), and a superimposed angled black line
	 * with a thickness of 1(for which no `jointStyle` applies): 
	 *
	 * **Note:** For `joints` set to
	 * `JointStyle.MITER`, you can use the `miterLimit`
	 * parameter to limit the length of the miter.</haxe_doc>
		</joints>
		<miterLimit public="1">
			<x path="Float"/>
			<haxe_doc>* Indicates the limit at which a miter is cut off. Valid values range from 1
	 * to 255(and values outside that range are rounded to 1 or 255). This value
	 * is only used if the `jointStyle` is set to
	 * `"miter"`. The `miterLimit` value represents the
	 * length that a miter can extend beyond the point at which the lines meet to
	 * form a joint. The value expresses a factor of the line
	 * `thickness`. For example, with a `miterLimit` factor
	 * of 2.5 and a `thickness` of 10 pixels, the miter is cut off at
	 * 25 pixels.
	 *
	 * For example, consider the following angled lines, each drawn with a
	 * `thickness` of 20, but with `miterLimit` set to 1,
	 * 2, and 4. Superimposed are black reference lines showing the meeting
	 * points of the joints:
	 *
	 * Notice that a given `miterLimit` value has a specific
	 * maximum angle for which the miter is cut off. The following table lists
	 * some examples:</haxe_doc>
		</miterLimit>
		<pixelHinting public="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether to hint strokes to full pixels. This affects both the
	 * position of anchors of a curve and the line stroke size itself. With
	 * `pixelHinting` set to `true`, Flash Player hints
	 * line widths to full pixel widths. With `pixelHinting` set to
	 * `false`, disjoints can appear for curves and straight lines.
	 * For example, the following illustrations show how Flash Player renders two
	 * rounded rectangles that are identical, except that the
	 * `pixelHinting` parameter used in the `lineStyle()`
	 * method is set differently(the images are scaled by 200%, to emphasize the
	 * difference):</haxe_doc>
		</pixelHinting>
		<scaleMode public="1">
			<x path="openfl.display.LineScaleMode"/>
			<haxe_doc>* Specifies the stroke thickness scaling. Valid values are:
	 * 
	 *  *  `LineScaleMode.NORMAL` - Always scale the line thickness
	 * when the object is scaled(the default). 
	 *  *  `LineScaleMode.NONE` - Never scale the line thickness.
	 * 
	 *  *  `LineScaleMode.VERTICAL` - Do not scale the line
	 * thickness if the object is scaled vertically _only_. For example,
	 * consider the following circles, drawn with a one-pixel line, and each with
	 * the `scaleMode` parameter set to
	 * `LineScaleMode.VERTICAL`. The circle on the left is scaled
	 * vertically only, and the circle on the right is scaled both vertically and
	 * horizontally:   
	 *  *  `LineScaleMode.HORIZONTAL` - Do not scale the line
	 * thickness if the object is scaled horizontally _only_. For example,
	 * consider the following circles, drawn with a one-pixel line, and each with
	 * the `scaleMode` parameter set to
	 * `LineScaleMode.HORIZONTAL`. The circle on the left is scaled
	 * horizontally only, and the circle on the right is scaled both vertically
	 * and horizontally:   
	 *</haxe_doc>
		</scaleMode>
		<thickness public="1">
			<x path="Float"/>
			<haxe_doc>* Indicates the thickness of the line in points; valid values are 0-255. If
	 * a number is not specified, or if the parameter is undefined, a line is not
	 * drawn. If a value of less than 0 is passed, the default is 0. The value 0
	 * indicates hairline thickness; the maximum thickness is 255. If a value
	 * greater than 255 is passed, the default is 255.</haxe_doc>
		</thickness>
		<new public="1" set="method">
			<f a="?thickness:?pixelHinting:?scaleMode:?caps:?joints:?miterLimit:?fill" v="Math.NaN:false::::3:null">
				<x path="Float"/>
				<x path="Bool"/>
				<x path="openfl.display.LineScaleMode"/>
				<x path="openfl.display.CapsStyle"/>
				<x path="openfl.display.JointStyle"/>
				<x path="Float"/>
				<c path="openfl.display.IGraphicsFill"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ fill : null, miterLimit : 3, pixelHinting : false, thickness : Math.NaN }</e></m></meta>
			<haxe_doc>* Creates a new GraphicsStroke object.
	 * 
	 * @param pixelHinting A Boolean value that specifies whether to hint strokes
	 *                     to full pixels. This affects both the position of
	 *                     anchors of a curve and the line stroke size itself.
	 *                     With `pixelHinting` set to
	 *                     `true`, Flash Player hints line widths to
	 *                     full pixel widths. With `pixelHinting` set
	 *                     to `false`, disjoints can appear for curves
	 *                     and straight lines. For example, the following
	 *                     illustrations show how Flash Player renders two
	 *                     rounded rectangles that are identical, except that the
	 *                     `pixelHinting` parameter used in the
	 *                     `lineStyle()` method is set differently
	 *                    (the images are scaled by 200%, to emphasize the
	 *                     difference):
	 *
	 *                     If a value is not supplied, the line does not use
	 *                     pixel hinting.
	 * @param scaleMode    A value from the LineScaleMode class that specifies
	 *                     which scale mode to use:
	 *                     
	 *                      *  `LineScaleMode.NORMAL` - Always
	 *                     scale the line thickness when the object is scaled
	 *                    (the default). 
	 *                      *  `LineScaleMode.NONE` - Never scale
	 *                     the line thickness. 
	 *                      *  `LineScaleMode.VERTICAL` - Do not
	 *                     scale the line thickness if the object is scaled
	 *                     vertically _only_. For example, consider the
	 *                     following circles, drawn with a one-pixel line, and
	 *                     each with the `scaleMode` parameter set to
	 *                     `LineScaleMode.VERTICAL`. The circle on the
	 *                     left is scaled vertically only, and the circle on the
	 *                     right is scaled both vertically and horizontally:
	 *                     
	 *                      *  `LineScaleMode.HORIZONTAL` - Do not
	 *                     scale the line thickness if the object is scaled
	 *                     horizontally _only_. For example, consider the
	 *                     following circles, drawn with a one-pixel line, and
	 *                     each with the `scaleMode` parameter set to
	 *                     `LineScaleMode.HORIZONTAL`. The circle on
	 *                     the left is scaled horizontally only, and the circle
	 *                     on the right is scaled both vertically and
	 *                     horizontally:   
	 *                     
	 * @param caps         A value from the CapsStyle class that specifies the
	 *                     type of caps at the end of lines. Valid values are:
	 *                     `CapsStyle.NONE`,
	 *                     `CapsStyle.ROUND`, and
	 *                     `CapsStyle.SQUARE`. If a value is not
	 *                     indicated, Flash uses round caps.
	 *
	 *                     For example, the following illustrations show the
	 *                     different `capsStyle` settings. For each
	 *                     setting, the illustration shows a blue line with a
	 *                     thickness of 30(for which the `capsStyle`
	 *                     applies), and a superimposed black line with a
	 *                     thickness of 1(for which no `capsStyle`
	 *                     applies): 
	 * @param joints       A value from the JointStyle class that specifies the
	 *                     type of joint appearance used at angles. Valid values
	 *                     are: `JointStyle.BEVEL`,
	 *                     `JointStyle.MITER`, and
	 *                     `JointStyle.ROUND`. If a value is not
	 *                     indicated, Flash uses round joints.
	 *
	 *                     For example, the following illustrations show the
	 *                     different `joints` settings. For each
	 *                     setting, the illustration shows an angled blue line
	 *                     with a thickness of 30(for which the
	 *                     `jointStyle` applies), and a superimposed
	 *                     angled black line with a thickness of 1(for which no
	 *                     `jointStyle` applies): 
	 *
	 *                     **Note:** For `joints` set to
	 *                     `JointStyle.MITER`, you can use the
	 *                     `miterLimit` parameter to limit the length
	 *                     of the miter.</haxe_doc>
		</new>
		<haxe_doc>* Defines a line style or stroke.
 *
 *  Use a GraphicsStroke object with the
 * `Graphics.drawGraphicsData()` method. Drawing a GraphicsStroke
 * object is the equivalent of calling one of the methods of the Graphics
 * class that sets the line style, such as the
 * `Graphics.lineStyle()` method, the
 * `Graphics.lineBitmapStyle()` method, or the
 * `Graphics.lineGradientStyle()` method.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="openfl.display.InterpolationMethod" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/InterpolationMethod.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The InterpolationMethod class provides values for the
 * `interpolationMethod` parameter in the
 * `Graphics.beginGradientFill()` and
 * `Graphics.lineGradientStyle()` methods. This parameter
 * determines the RGB space to use when rendering the gradient.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._InterpolationMethod.InterpolationMethod_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/InterpolationMethod.hx" private="1" module="openfl.display.InterpolationMethod">
	<LINEAR_RGB public="1" get="inline" set="null" expr="cast 0" line="25" static="1">
		<x path="openfl.display.InterpolationMethod"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the RGB interpolation method should be used. This means
	 * that the gradient is rendered with exponential sRGB(standard RGB) space.
	 * The sRGB space is a W3C-endorsed standard that defines a non-linear
	 * conversion between red, green, and blue component values and the actual
	 * intensity of the visible component color.
	 *
	 * For example, consider a simple linear gradient between two colors(with
	 * the `spreadMethod` parameter set to
	 * `SpreadMethod.REFLECT`). The different interpolation methods
	 * affect the appearance as follows:</haxe_doc>
	</LINEAR_RGB>
	<RGB public="1" get="inline" set="null" expr="cast 1" line="39" static="1">
		<x path="openfl.display.InterpolationMethod"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the RGB interpolation method should be used. This means
	 * that the gradient is rendered with exponential sRGB(standard RGB) space.
	 * The sRGB space is a W3C-endorsed standard that defines a non-linear
	 * conversion between red, green, and blue component values and the actual
	 * intensity of the visible component color.
	 *
	 * For example, consider a simple linear gradient between two colors(with
	 * the `spreadMethod` parameter set to
	 * `SpreadMethod.REFLECT`). The different interpolation methods
	 * affect the appearance as follows:</haxe_doc>
	</RGB>
	<fromString set="method" line="41" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.InterpolationMethod"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="53" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._InterpolationMethod.InterpolationMethod_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/InterpolationMethod.hx" private="1" module="openfl.display.InterpolationMethod">
		<LINEAR_RGB public="1" get="inline" set="null" expr="cast 0" line="25" static="1">
			<x path="openfl.display.InterpolationMethod"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the RGB interpolation method should be used. This means
	 * that the gradient is rendered with exponential sRGB(standard RGB) space.
	 * The sRGB space is a W3C-endorsed standard that defines a non-linear
	 * conversion between red, green, and blue component values and the actual
	 * intensity of the visible component color.
	 *
	 * For example, consider a simple linear gradient between two colors(with
	 * the `spreadMethod` parameter set to
	 * `SpreadMethod.REFLECT`). The different interpolation methods
	 * affect the appearance as follows:</haxe_doc>
		</LINEAR_RGB>
		<RGB public="1" get="inline" set="null" expr="cast 1" line="39" static="1">
			<x path="openfl.display.InterpolationMethod"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the RGB interpolation method should be used. This means
	 * that the gradient is rendered with exponential sRGB(standard RGB) space.
	 * The sRGB space is a W3C-endorsed standard that defines a non-linear
	 * conversion between red, green, and blue component values and the actual
	 * intensity of the visible component color.
	 *
	 * For example, consider a simple linear gradient between two colors(with
	 * the `spreadMethod` parameter set to
	 * `SpreadMethod.REFLECT`). The different interpolation methods
	 * affect the appearance as follows:</haxe_doc>
		</RGB>
		<fromString set="method" line="41" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.InterpolationMethod"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="53" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.JPEGEncoderOptions" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/JPEGEncoderOptions.hx" extern="1">
		<quality public="1"><x path="UInt"/></quality>
		<new public="1" set="method">
			<f a="?quality" v="80">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ quality : 80 }</e></m></meta>
		</new>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="openfl.display.JointStyle" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/JointStyle.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The JointStyle class is an enumeration of constant values that specify the
 * joint style to use in drawing lines. These constants are provided for use
 * as values in the `joints` parameter of the
 * `openfl.display.Graphics.lineStyle()` method. The method supports
 * three types of joints: miter, round, and bevel, as the following example
 * shows:</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._JointStyle.JointStyle_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/JointStyle.hx" private="1" module="openfl.display.JointStyle">
	<BEVEL public="1" get="inline" set="null" expr="cast 0" line="18" static="1">
		<x path="openfl.display.JointStyle"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies beveled joints in the `joints` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
	</BEVEL>
	<MITER public="1" get="inline" set="null" expr="cast 1" line="24" static="1">
		<x path="openfl.display.JointStyle"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies mitered joints in the `joints` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
	</MITER>
	<ROUND public="1" get="inline" set="null" expr="cast 2" line="30" static="1">
		<x path="openfl.display.JointStyle"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies round joints in the `joints` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
	</ROUND>
	<fromString set="method" line="32" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.JointStyle"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="45" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._JointStyle.JointStyle_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/JointStyle.hx" private="1" module="openfl.display.JointStyle">
		<BEVEL public="1" get="inline" set="null" expr="cast 0" line="18" static="1">
			<x path="openfl.display.JointStyle"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies beveled joints in the `joints` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
		</BEVEL>
		<MITER public="1" get="inline" set="null" expr="cast 1" line="24" static="1">
			<x path="openfl.display.JointStyle"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies mitered joints in the `joints` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
		</MITER>
		<ROUND public="1" get="inline" set="null" expr="cast 2" line="30" static="1">
			<x path="openfl.display.JointStyle"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies round joints in the `joints` parameter of the
	 * `openfl.display.Graphics.lineStyle()` method.</haxe_doc>
		</ROUND>
		<fromString set="method" line="32" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.JointStyle"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="45" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display.LineScaleMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/LineScaleMode.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The LineScaleMode class provides values for the `scaleMode`
 * parameter in the `Graphics.lineStyle()` method.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._LineScaleMode.LineScaleMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/LineScaleMode.hx" private="1" module="openfl.display.LineScaleMode">
	<HORIZONTAL public="1" get="inline" set="null" expr="cast 0" line="19" static="1">
		<x path="openfl.display.LineScaleMode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* With this setting used as the `scaleMode` parameter of the
	 * `lineStyle()` method, the thickness of the line scales
	 * _only_ vertically. For example, consider the following circles, drawn
	 * with a one-pixel line, and each with the `scaleMode` parameter
	 * set to `LineScaleMode.VERTICAL`. The circle on the left is
	 * scaled only vertically, and the circle on the right is scaled both
	 * vertically and horizontally.</haxe_doc>
	</HORIZONTAL>
	<NONE public="1" get="inline" set="null" expr="cast 1" line="25" static="1">
		<x path="openfl.display.LineScaleMode"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* With this setting used as the `scaleMode` parameter of the
	 * `lineStyle()` method, the thickness of the line never scales.</haxe_doc>
	</NONE>
	<NORMAL public="1" get="inline" set="null" expr="cast 2" line="32" static="1">
		<x path="openfl.display.LineScaleMode"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* With this setting used as the `scaleMode` parameter of the
	 * `lineStyle()` method, the thickness of the line always scales
	 * when the object is scaled(the default).</haxe_doc>
	</NORMAL>
	<VERTICAL public="1" get="inline" set="null" expr="cast 3" line="43" static="1">
		<x path="openfl.display.LineScaleMode"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* With this setting used as the `scaleMode` parameter of the
	 * `lineStyle()` method, the thickness of the line scales
	 * _only_ horizontally. For example, consider the following circles,
	 * drawn with a one-pixel line, and each with the `scaleMode`
	 * parameter set to `LineScaleMode.HORIZONTAL`. The circle on the
	 * left is scaled only horizontally, and the circle on the right is scaled
	 * both vertically and horizontally.</haxe_doc>
	</VERTICAL>
	<fromString set="method" line="45" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.LineScaleMode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="59" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._LineScaleMode.LineScaleMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/LineScaleMode.hx" private="1" module="openfl.display.LineScaleMode">
		<HORIZONTAL public="1" get="inline" set="null" expr="cast 0" line="19" static="1">
			<x path="openfl.display.LineScaleMode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* With this setting used as the `scaleMode` parameter of the
	 * `lineStyle()` method, the thickness of the line scales
	 * _only_ vertically. For example, consider the following circles, drawn
	 * with a one-pixel line, and each with the `scaleMode` parameter
	 * set to `LineScaleMode.VERTICAL`. The circle on the left is
	 * scaled only vertically, and the circle on the right is scaled both
	 * vertically and horizontally.</haxe_doc>
		</HORIZONTAL>
		<NONE public="1" get="inline" set="null" expr="cast 1" line="25" static="1">
			<x path="openfl.display.LineScaleMode"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* With this setting used as the `scaleMode` parameter of the
	 * `lineStyle()` method, the thickness of the line never scales.</haxe_doc>
		</NONE>
		<NORMAL public="1" get="inline" set="null" expr="cast 2" line="32" static="1">
			<x path="openfl.display.LineScaleMode"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* With this setting used as the `scaleMode` parameter of the
	 * `lineStyle()` method, the thickness of the line always scales
	 * when the object is scaled(the default).</haxe_doc>
		</NORMAL>
		<VERTICAL public="1" get="inline" set="null" expr="cast 3" line="43" static="1">
			<x path="openfl.display.LineScaleMode"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* With this setting used as the `scaleMode` parameter of the
	 * `lineStyle()` method, the thickness of the line scales
	 * _only_ horizontally. For example, consider the following circles,
	 * drawn with a one-pixel line, and each with the `scaleMode`
	 * parameter set to `LineScaleMode.HORIZONTAL`. The circle on the
	 * left is scaled only horizontally, and the circle on the right is scaled
	 * both vertically and horizontally.</haxe_doc>
		</VERTICAL>
		<fromString set="method" line="45" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.LineScaleMode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="59" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.Loader" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/Loader.hx" extern="1">
		<extends path="openfl.display.DisplayObjectContainer"/>
		<content public="1" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc>* Contains the root display object of the SWF file or image(JPG, PNG, or
	 * GIF) file that was loaded by using the `load()` or
	 * `loadBytes()` methods.
	 * 
	 * @throws SecurityError The loaded SWF file or image file belongs to a
	 *                       security sandbox to which you do not have access.
	 *                       For a loaded SWF file, you can avoid this situation
	 *                       by having the file call the
	 *                       `Security.allowDomain()` method or by
	 *                       having the loading file specify a
	 *                       `loaderContext` parameter with its
	 *                       `securityDomain` property set to
	 *                       `SecurityDomain.currentDomain` when you
	 *                       call the `load()` or
	 *                       `loadBytes()` method.</haxe_doc>
		</content>
		<contentLoaderInfo public="1" set="null">
			<c path="openfl.display.LoaderInfo"/>
			<haxe_doc>* Returns a LoaderInfo object corresponding to the object being loaded.
	 * LoaderInfo objects are shared between the Loader object and the loaded
	 * content object. The LoaderInfo object supplies loading progress
	 * information and statistics about the loaded file.
	 *
	 * Events related to the load are dispatched by the LoaderInfo object
	 * referenced by the `contentLoaderInfo` property of the Loader
	 * object. The `contentLoaderInfo` property is set to a valid
	 * LoaderInfo object, even before the content is loaded, so that you can add
	 * event listeners to the object prior to the load.
	 *
	 * To detect uncaught errors that happen in a loaded SWF, use the
	 * `Loader.uncaughtErrorEvents` property, not the
	 * `Loader.contentLoaderInfo.uncaughtErrorEvents` property.</haxe_doc>
		</contentLoaderInfo>
		<uncaughtErrorEvents public="1" set="null"><c path="openfl.events.UncaughtErrorEvents"/></uncaughtErrorEvents>
		<close public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Cancels a `load()` method operation that is currently in
	 * progress for the Loader instance.
	 *</haxe_doc>
		</close>
		<load public="1" set="method">
			<f a="request:?context" v=":null">
				<c path="openfl.net.URLRequest"/>
				<c path="openfl.system.LoaderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ context : null }</e></m></meta>
			<haxe_doc>* Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an
	 * object that is a child of this Loader object. If you load an animated GIF
	 * file, only the first frame is displayed. As the Loader object can contain
	 * only a single child, issuing a subsequent `load()` request
	 * terminates the previous request, if still pending, and commences a new
	 * load.
	 *
	 * **Note**: In AIR 1.5 and Flash Player 10, the maximum size for a
	 * loaded image is 8,191 pixels in width or height, and the total number of
	 * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191
	 * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and
	 * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height
	 * and 2,880 pixels in width.
	 *
	 * A SWF file or image loaded into a Loader object inherits the position,
	 * rotation, and scale properties of the parent display objects of the Loader
	 * object. 
	 *
	 * Use the `unload()` method to remove movies or images loaded
	 * with this method, or to cancel a load operation that is in progress.
	 *
	 * You can prevent a SWF file from using this method by setting the
	 * `allowNetworking` parameter of the the `object` and
	 * `embed` tags in the HTML page that contains the SWF
	 * content.
	 *
	 * When you use this method, consider the Flash Player security model,
	 * which is described in the Loader class description. 
	 *
	 *  In Flash Player 10 and later, if you use a multipart Content-Type(for
	 * example "multipart/form-data") that contains an upload(indicated by a
	 * "filename" parameter in a "content-disposition" header within the POST
	 * body), the POST operation is subject to the security rules applied to
	 * uploads:
	 *
	 * 
	 *  * The POST operation must be performed in response to a user-initiated
	 * action, such as a mouse click or key press.
	 *  * If the POST operation is cross-domain(the POST target is not on the
	 * same server as the SWF file that is sending the POST request), the target
	 * server must provide a URL policy file that permits cross-domain
	 * access.
	 * 
	 *
	 * Also, for any multipart Content-Type, the syntax must be valid
	 * (according to the RFC2046 standard). If the syntax appears to be invalid,
	 * the POST operation is subject to the security rules applied to
	 * uploads.
	 *
	 * For more information related to security, see the Flash Player
	 * Developer Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
	 * 
	 * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG
	 *                file to be loaded. A relative path must be relative to the
	 *                main SWF file. Absolute URLs must include the protocol
	 *                reference, such as http:// or file:///. Filenames cannot
	 *                include disk drive specifications.
	 * @param context A LoaderContext object, which has properties that define
	 *                the following:
	 *                
	 *                 * Whether or not to check for the existence of a policy
	 *                file upon loading the object
	 *                 * The ApplicationDomain for the loaded object
	 *                 * The SecurityDomain for the loaded object
	 *                 * The ImageDecodingPolicy for the loaded image
	 *                object
	 *                
	 *                If the `context` parameter is not specified
	 *                or refers to a null object, the loaded content remains in
	 *                its own security domain.
	 *
	 *                For complete details, see the description of the
	 *                properties in the [LoaderContext](../system/LoaderContext.html)
	 *                class.
	 * @throws IOError               The `digest` property of the
	 *                               `request` object is not
	 *                               `null`. You should only set the
	 *                               `digest` property of a URLRequest
	 *                               object when calling the
	 *                               `URLLoader.load()` method when
	 *                               loading a SWZ file(an Adobe platform
	 *                               component).
	 * @throws IllegalOperationError If the `requestedContentParent`
	 *                               property of the `context`
	 *                               parameter is a `Loader`.
	 * @throws IllegalOperationError If the `LoaderContext.parameters`
	 *                               parameter is set to non-null and has some
	 *                               values which are not Strings.
	 * @throws SecurityError         The value of
	 *                               `LoaderContext.securityDomain`
	 *                               must be either `null` or
	 *                               `SecurityDomain.currentDomain`.
	 *                               This reflects the fact that you can only
	 *                               place the loaded media in its natural
	 *                               security sandbox or your own(the latter
	 *                               requires a policy file).
	 * @throws SecurityError         Local SWF files may not set
	 *                               LoaderContext.securityDomain to anything
	 *                               other than `null`. It is not
	 *                               permitted to import non-local media into a
	 *                               local sandbox, or to place other local media
	 *                               in anything other than its natural sandbox.
	 * @throws SecurityError         You cannot connect to commonly reserved
	 *                               ports. For a complete list of blocked ports,
	 *                               see "Restricting Networking APIs" in the
	 *                               _ActionScript 3.0 Developer's Guide_.
	 * @throws SecurityError         If the `applicationDomain` or
	 *                               `securityDomain` properties of
	 *                               the `context` parameter are from
	 *                               a disallowed domain.
	 * @throws SecurityError         If a local SWF file is attempting to use the
	 *                               `securityDomain` property of the
	 *                               `context` parameter.
	 * @event asyncError    Dispatched by the `contentLoaderInfo`
	 *                      object if the
	 *                      `LoaderContext.requestedContentParent`
	 *                      property has been specified and it is not possible to
	 *                      add the loaded content as a child to the specified
	 *                      DisplayObjectContainer. This could happen if the
	 *                      loaded content is a
	 *                      `openfl.display.AVM1Movie` or if the
	 *                      `addChild()` call to the
	 *                      requestedContentParent throws an error.
	 * @event complete      Dispatched by the `contentLoaderInfo`
	 *                      object when the file has completed loading. The
	 *                      `complete` event is always dispatched
	 *                      after the `init` event.
	 * @event httpStatus    Dispatched by the `contentLoaderInfo`
	 *                      object when a network request is made over HTTP and
	 *                      Flash Player can detect the HTTP status code.
	 * @event init          Dispatched by the `contentLoaderInfo`
	 *                      object when the properties and methods of the loaded
	 *                      SWF file are accessible. The `init` event
	 *                      always precedes the `complete` event.
	 * @event ioError       Dispatched by the `contentLoaderInfo`
	 *                      object when an input or output error occurs that
	 *                      causes a load operation to fail.
	 * @event open          Dispatched by the `contentLoaderInfo`
	 *                      object when the loading operation starts.
	 * @event progress      Dispatched by the `contentLoaderInfo`
	 *                      object as data is received while load operation
	 *                      progresses.
	 * @event securityError Dispatched by the `contentLoaderInfo`
	 *                      object if a SWF file in the local-with-filesystem
	 *                      sandbox attempts to load content in the
	 *                      local-with-networking sandbox, or vice versa.
	 * @event securityError Dispatched by the `contentLoaderInfo`
	 *                      object if the
	 *                      `LoaderContext.requestedContentParent`
	 *                      property has been specified and the security sandbox
	 *                      of the
	 *                      `LoaderContext.requestedContentParent`
	 *                      does not have access to the loaded SWF.
	 * @event unload        Dispatched by the `contentLoaderInfo`
	 *                      object when a loaded object is removed.</haxe_doc>
		</load>
		<loadBytes public="1" set="method">
			<f a="buffer:?context" v=":null">
				<x path="openfl.utils.ByteArray"/>
				<c path="openfl.system.LoaderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ context : null }</e></m></meta>
			<haxe_doc>* Loads from binary data stored in a ByteArray object.
	 *
	 * The `loadBytes()` method is asynchronous. You must wait for
	 * the "init" event before accessing the properties of a loaded object.
	 *
	 * When you use this method, consider the Flash Player security model,
	 * which is described in the Loader class description. 
	 * 
	 * @param bytes   A ByteArray object. The contents of the ByteArray can be
	 *                any of the file formats supported by the Loader class: SWF,
	 *                GIF, JPEG, or PNG.
	 * @param context A LoaderContext object. Only the
	 *                `applicationDomain` property of the
	 *                LoaderContext object applies; the
	 *                `checkPolicyFile` and
	 *                `securityDomain` properties of the LoaderContext
	 *                object do not apply.
	 *
	 *                If the `context` parameter is not specified
	 *                or refers to a null object, the content is loaded into the
	 *                current security domain -  a process referred to as "import
	 *                loading" in Flash Player security documentation.
	 *                Specifically, if the loading SWF file trusts the remote SWF
	 *                by incorporating the remote SWF into its code, then the
	 *                loading SWF can import it directly into its own security
	 *                domain.
	 *
	 *                For more information related to security, see the Flash
	 *                Player Developer Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
	 * @throws ArgumentError         If the `length` property of the
	 *                               ByteArray object is not greater than 0.
	 * @throws IllegalOperationError If the `checkPolicyFile` or
	 *                               `securityDomain` property of the
	 *                               `context` parameter are non-null.
	 * @throws IllegalOperationError If the `requestedContentParent`
	 *                               property of the `context`
	 *                               parameter is a `Loader`.
	 * @throws IllegalOperationError If the `LoaderContext.parameters`
	 *                               parameter is set to non-null and has some
	 *                               values which are not Strings.
	 * @throws SecurityError         If the provided
	 *                               `applicationDomain` property of
	 *                               the `context` property is from a
	 *                               disallowed domain.
	 * @throws SecurityError         You cannot connect to commonly reserved
	 *                               ports. For a complete list of blocked ports,
	 *                               see "Restricting Networking APIs" in the
	 *                               _ActionScript 3.0 Developer's Guide_.
	 * @event asyncError    Dispatched by the `contentLoaderInfo`
	 *                      object if the
	 *                      `LoaderContext.requestedContentParent`
	 *                      property has been specified and it is not possible to
	 *                      add the loaded content as a child to the specified
	 *                      DisplayObjectContainer. This could happen if the
	 *                      loaded content is a
	 *                      `openfl.display.AVM1Movie` or if the
	 *                      `addChild()` call to the
	 *                      requestedContentParent throws an error.
	 * @event complete      Dispatched by the `contentLoaderInfo`
	 *                      object when the operation is complete. The
	 *                      `complete` event is always dispatched
	 *                      after the `init` event.
	 * @event init          Dispatched by the `contentLoaderInfo`
	 *                      object when the properties and methods of the loaded
	 *                      data are accessible. The `init` event
	 *                      always precedes the `complete` event.
	 * @event ioError       Dispatched by the `contentLoaderInfo`
	 *                      object when the runtime cannot parse the data in the
	 *                      byte array.
	 * @event open          Dispatched by the `contentLoaderInfo`
	 *                      object when the operation starts.
	 * @event progress      Dispatched by the `contentLoaderInfo`
	 *                      object as data is transfered in memory.
	 * @event securityError Dispatched by the `contentLoaderInfo`
	 *                      object if the
	 *                      `LoaderContext.requestedContentParent`
	 *                      property has been specified and the security sandbox
	 *                      of the
	 *                      `LoaderContext.requestedContentParent`
	 *                      does not have access to the loaded SWF.
	 * @event unload        Dispatched by the `contentLoaderInfo`
	 *                      object when a loaded object is removed.</haxe_doc>
		</loadBytes>
		<unload public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Removes a child of this Loader object that was loaded by using the
	 * `load()` method. The `property` of the associated
	 * LoaderInfo object is reset to `null`. The child is not
	 * necessarily destroyed because other objects might have references to it;
	 * however, it is no longer a child of the Loader object.
	 *
	 * As a best practice, before you unload a child SWF file, you should
	 * explicitly close any streams in the child SWF file's objects, such as
	 * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,
	 * audio in the child SWF file might continue to play, even though the child
	 * SWF file was unloaded. To close streams in the child SWF file, add an
	 * event listener to the child that listens for the `unload`
	 * event. When the parent calls `Loader.unload()`, the
	 * `unload` event is dispatched to the child. The following code
	 * shows how you might do this:
	 *
	 * ```
	 * function closeAllStreams(evt:Event) {
	 *     myNetStream.close();
	 *     mySound.close();
	 *     myNetConnection.close();
	 *     myLocalConnection.close();
	 * }
	 * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,
	 * closeAllStreams);
	 * ```</haxe_doc>
		</unload>
		<unloadAndStop public="1" set="method">
			<f a="?gc" v="true">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ gc : true }</e></m></meta>
			<haxe_doc>* Attempts to unload child SWF file contents and stops the execution of
	 * commands from loaded SWF files. This method attempts to unload SWF files
	 * that were loaded using `Loader.load()` or
	 * `Loader.loadBytes()` by removing references to EventDispatcher,
	 * NetConnection, Timer, Sound, or Video objects of the child SWF file. As a
	 * result, the following occurs for the child SWF file and the child SWF
	 * file's display list:
	 * 
	 *  * Sounds are stopped.
	 *  * Stage event listeners are removed.
	 *  * Event listeners for `enterFrame`,
	 * `frameConstructed`, `exitFrame`,
	 * `activate` and `deactivate` are removed.
	 *  * Timers are stopped.
	 *  * Camera and Microphone instances are detached
	 *  * Movie clips are stopped.
	 * 
	 * 
	 * @param gc Provides a hint to the garbage collector to run on the child SWF
	 *           objects(`true`) or not(`false`). If you
	 *           are unloading many objects asynchronously, setting the
	 *           `gc` paramter to `false` might improve
	 *           application performance. However, if the parameter is set to
	 *           `false`, media and display objects of the child SWF
	 *           file might persist in memory after running the
	 *           `unloadAndStop()` command.</haxe_doc>
		</unloadAndStop>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Creates a Loader object that you can use to load files, such as SWF, JPEG,
	 * GIF, or PNG files. Call the `load()` method to load the asset
	 * as a child of the Loader instance. You can then add the Loader object to
	 * the display list(for instance, by using the `addChild()`
	 * method of a DisplayObjectContainer instance). The asset appears on the
	 * Stage as it loads.
	 *
	 * You can also use a Loader instance "offlist," that is without adding it
	 * to a display object container on the display list. In this mode, the
	 * Loader instance might be used to load a SWF file that contains additional
	 * modules of an application. 
	 *
	 * To detect when the SWF file is finished loading, you can use the events
	 * of the LoaderInfo object associated with the
	 * `contentLoaderInfo` property of the Loader object. At that
	 * point, the code in the module SWF file can be executed to initialize and
	 * start the module. In the offlist mode, a Loader instance might also be
	 * used to load a SWF file that contains components or media assets. Again,
	 * you can use the LoaderInfo object event notifications to detect when the
	 * components are finished loading. At that point, the application can start
	 * using the components and media assets in the library of the SWF file by
	 * instantiating the ActionScript 3.0 classes that represent those components
	 * and assets.
	 *
	 * To determine the status of a Loader object, monitor the following
	 * events that the LoaderInfo object associated with the
	 * `contentLoaderInfo` property of the Loader object:
	 *
	 * 
	 *  * The `open` event is dispatched when loading begins.
	 *  * The `ioError` or `securityError` event is
	 * dispatched if the file cannot be loaded or if an error occured during the
	 * load process. 
	 *  * The `progress` event fires continuously while the file is
	 * being loaded.
	 *  * The `complete` event is dispatched when a file completes
	 * downloading, but before the loaded movie clip's methods and properties are
	 * available. 
	 *  * The `init` event is dispatched after the properties and
	 * methods of the loaded SWF file are accessible, so you can begin
	 * manipulating the loaded SWF file. This event is dispatched before the
	 * `complete` handler. In streaming SWF files, the
	 * `init` event can occur significantly earlier than the
	 * `complete` event. For most purposes, use the `init`
	 * handler.
	 *</haxe_doc>
		</new>
		<haxe_doc>* The Loader class is used to load SWF files or image (JPG, PNG, or GIF)
 * files. Use the `load()` method to initiate loading. The loaded
 * display object is added as a child of the Loader object.
 *
 * Use the URLLoader class to load text or binary data.
 *
 * The Loader class overrides the following methods that it inherits,
 * because a Loader object can only have one child display object - the
 * display object that it loads. Calling the following methods throws an
 * exception: `addChild()`, `addChildAt()`,
 * `removeChild()`, `removeChildAt()`, and
 * `setChildIndex()`. To remove a loaded display object, you must
 * remove the _Loader_ object from its parent DisplayObjectContainer
 * child array. 
 *
 * **Note:** The ActionScript 2.0 MovieClipLoader and LoadVars classes
 * are not used in ActionScript 3.0. The Loader and URLLoader classes replace
 * them.
 *
 * When you use the Loader class, consider the Flash Player and Adobe AIR
 * security model: 
 * 
 *  * You can load content from any accessible source. 
 *  * Loading is not allowed if the calling SWF file is in a network
 * sandbox and the file to be loaded is local. 
 *  * If the loaded content is a SWF file written with ActionScript 3.0, it
 * cannot be cross-scripted by a SWF file in another security sandbox unless
 * that cross-scripting arrangement was approved through a call to the
 * `System.allowDomain()` or the
 * `System.allowInsecureDomain()` method in the loaded content
 * file.
 *  * If the loaded content is an AVM1 SWF file(written using ActionScript
 * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using
 * ActionScript 3.0). However, you can communicate between the two SWF files
 * by using the LocalConnection class.
 *  * If the loaded content is an image, its data cannot be accessed by a
 * SWF file outside of the security sandbox, unless the domain of that SWF
 * file was included in a URL policy file at the origin domain of the
 * image.
 *  * Movie clips in the local-with-file-system sandbox cannot script movie
 * clips in the local-with-networking sandbox, and the reverse is also
 * prevented. 
 *  * You cannot connect to commonly reserved ports. For a complete list of
 * blocked ports, see "Restricting Networking APIs" in the _ActionScript 3.0
 * Developer's Guide_. 
 * 
 * However, in AIR, content in the `application` security
 * sandbox(content installed with the AIR application) are not restricted by
 * these security limitations.
 *
 * For more information related to security, see the Flash Player Developer
 * Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
 *
 * When loading a SWF file from an untrusted source(such as a domain other
 * than that of the Loader object's root SWF file), you may want to define a
 * mask for the Loader object, to prevent the loaded content(which is a child
 * of the Loader object) from drawing to portions of the Stage outside of that
 * mask, as shown in the following code:</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.display.LoaderInfo" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/LoaderInfo.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<getLoaderInfoByDefinition public="1" set="method" static="1">
			<f a="object">
				<d/>
				<c path="openfl.display.LoaderInfo"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</getLoaderInfoByDefinition>
		<actionScriptVersion public="1" set="null">
			<e path="flash.display.ActionScriptVersion"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</actionScriptVersion>
		<applicationDomain public="1" set="null">
			<c path="openfl.system.ApplicationDomain"/>
			<haxe_doc>* When an external SWF file is loaded, all ActionScript 3.0 definitions
	 * contained in the loaded class are stored in the
	 * `applicationDomain` property.
	 *
	 * All code in a SWF file is defined to exist in an application domain.
	 * The current application domain is where your main application runs. The
	 * system domain contains all application domains, including the current
	 * domain and all classes used by Flash Player or Adobe AIR.
	 *
	 * All application domains, except the system domain, have an associated
	 * parent domain. The parent domain of your main application's
	 * `applicationDomain` is the system domain. Loaded classes are
	 * defined only when their parent doesn't already define them. You cannot
	 * override a loaded class definition with a newer definition.
	 *
	 * For usage examples of application domains, see the "Client System
	 * Environment" chapter in the _ActionScript 3.0 Developer's Guide_.
	 * 
	 * @throws SecurityError This security sandbox of the caller is not allowed
	 *                       to access this ApplicationDomain.</haxe_doc>
		</applicationDomain>
		<bytes public="1" set="null">
			<x path="openfl.utils.ByteArray"/>
			<haxe_doc>* The bytes associated with a LoaderInfo object.
	 * 
	 * @throws SecurityError If the object accessing this API is prevented from
	 *                       accessing the loaded object due to security
	 *                       restrictions. This situation can occur, for
	 *                       instance, when a Loader object attempts to access
	 *                       the `contentLoaderInfo.content` property
	 *                       and it is not granted security permission to access
	 *                       the loaded content.
	 *
	 *                       For more information related to security, see the
	 *                       Flash Player Developer Center Topic:
	 *                       [Security](http://www.adobe.com/go/devnet_security_en).</haxe_doc>
		</bytes>
		<bytesLoaded public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The number of bytes that are loaded for the media. When this number equals
	 * the value of `bytesTotal`, all of the bytes are loaded.</haxe_doc>
		</bytesLoaded>
		<bytesTotal public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The number of compressed bytes in the entire media file.
	 *
	 * Before the first `progress` event is dispatched by this
	 * LoaderInfo object's corresponding Loader object, `bytesTotal`
	 * is 0. After the first `progress` event from the Loader object,
	 * `bytesTotal` reflects the actual number of bytes to be
	 * downloaded.</haxe_doc>
		</bytesTotal>
		<childAllowsParent public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Expresses the trust relationship from content(child) to the Loader
	 * (parent). If the child has allowed the parent access, `true`;
	 * otherwise, `false`. This property is set to `true`
	 * if the child object has called the `allowDomain()` method to
	 * grant permission to the parent domain or if a URL policy is loaded at the
	 * child domain that grants permission to the parent domain. If child and
	 * parent are in the same domain, this property is set to `true`.
	 *
	 * For more information related to security, see the Flash Player
	 * Developer Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
	 * 
	 * @throws Error Thrown if the file is not downloaded sufficiently to
	 *               retrieve the requested information.</haxe_doc>
		</childAllowsParent>
		<childSandboxBridge public="1">
			<d/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_4</e></m>
			</meta>
		</childSandboxBridge>
		<content public="1" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc>* The loaded object associated with this LoaderInfo object.
	 * 
	 * @throws SecurityError If the object accessing this API is prevented from
	 *                       accessing the loaded object due to security
	 *                       restrictions. This situation can occur, for
	 *                       instance, when a Loader object attempts to access
	 *                       the `contentLoaderInfo.content` property
	 *                       and it is not granted security permission to access
	 *                       the loaded content.
	 *
	 *                       For more information related to security, see the
	 *                       Flash Player Developer Center Topic:
	 *                       [Security](http://www.adobe.com/go/devnet_security_en).</haxe_doc>
		</content>
		<contentType public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The MIME type of the loaded file. The value is `null` if not
	 * enough of the file has loaded in order to determine the type. The
	 * following list gives the possible values:
	 * 
	 *  * `"application/x-shockwave-flash"`
	 *  * `"image/jpeg"`
	 *  * `"image/gif"`
	 *  * `"image/png"`
	 *</haxe_doc>
		</contentType>
		<frameRate public="1" set="null">
			<x path="Float"/>
			<haxe_doc>* The nominal frame rate, in frames per second, of the loaded SWF file. This
	 * number is often an integer, but need not be.
	 *
	 * This value may differ from the actual frame rate in use. Flash Player
	 * or Adobe AIR only uses a single frame rate for all loaded SWF files at any
	 * one time, and this frame rate is determined by the nominal frame rate of
	 * the main SWF file. Also, the main frame rate may not be able to be
	 * achieved, depending on hardware, sound synchronization, and other
	 * factors.
	 * 
	 * @throws Error If the file is not downloaded sufficiently to retrieve the
	 *               requested information.
	 * @throws Error If the file is not a SWF file.</haxe_doc>
		</frameRate>
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The nominal height of the loaded file. This value might differ from the
	 * actual height at which the content is displayed, since the loaded content
	 * or its parent display objects might be scaled.
	 * 
	 * @throws Error If the file is not downloaded sufficiently to retrieve the
	 *               requested information.</haxe_doc>
		</height>
		<isURLInaccessible public="1" set="null">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</isURLInaccessible>
		<loader public="1" set="null">
			<c path="openfl.display.Loader"/>
			<haxe_doc>* The Loader object associated with this LoaderInfo object. If this
	 * LoaderInfo object is the `loaderInfo` property of the instance
	 * of the main class of the SWF file, no Loader object is associated.
	 * 
	 * @throws SecurityError If the object accessing this API is prevented from
	 *                       accessing the Loader object because of security
	 *                       restrictions. This can occur, for instance, when a
	 *                       loaded SWF file attempts to access its
	 *                       `loaderInfo.loader` property and it is
	 *                       not granted security permission to access the
	 *                       loading SWF file.
	 *
	 *                       For more information related to security, see the
	 *                       Flash Player Developer Center Topic:
	 *                       [Security](http://www.adobe.com/go/devnet_security_en).</haxe_doc>
		</loader>
		<loaderURL public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The URL of the SWF file that initiated the loading of the media described
	 * by this LoaderInfo object. For the instance of the main class of the SWF
	 * file, this URL is the same as the SWF file's own URL.</haxe_doc>
		</loaderURL>
		<parameters public="1" set="null">
			<d><c path="String"/></d>
			<haxe_doc>* An object that contains name-value pairs that represent the parameters
	 * provided to the loaded SWF file.
	 *
	 * You can use a `for-in` loop to extract all the names and
	 * values from the `parameters` object.
	 *
	 * The two sources of parameters are: the query string in the URL of the
	 * main SWF file, and the value of the `FlashVars` HTML parameter
	 * (this affects only the main SWF file).
	 *
	 * The `parameters` property replaces the ActionScript 1.0 and
	 * 2.0 technique of providing SWF file parameters as properties of the main
	 * timeline.
	 *
	 * The value of the `parameters` property is null for Loader
	 * objects that contain SWF files that use ActionScript 1.0 or 2.0. It is
	 * only non-null for Loader objects that contain SWF files that use
	 * ActionScript 3.0.</haxe_doc>
		</parameters>
		<parentAllowsChild public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Expresses the trust relationship from Loader(parent) to the content
	 * (child). If the parent has allowed the child access, `true`;
	 * otherwise, `false`. This property is set to `true`
	 * if the parent object called the `allowDomain()` method to grant
	 * permission to the child domain or if a URL policy file is loaded at the
	 * parent domain granting permission to the child domain. If child and parent
	 * are in the same domain, this property is set to `true`.
	 *
	 * For more information related to security, see the Flash Player
	 * Developer Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
	 * 
	 * @throws Error Thrown if the file is not downloaded sufficiently to
	 *               retrieve the requested information.</haxe_doc>
		</parentAllowsChild>
		<parentSandboxBridge public="1">
			<d/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_4</e></m>
			</meta>
		</parentSandboxBridge>
		<sameDomain public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Expresses the domain relationship between the loader and the content:
	 * `true` if they have the same origin domain; `false`
	 * otherwise.
	 * 
	 * @throws Error Thrown if the file is not downloaded sufficiently to
	 *               retrieve the requested information.</haxe_doc>
		</sameDomain>
		<sharedEvents public="1" set="null">
			<c path="openfl.events.EventDispatcher"/>
			<haxe_doc>* An EventDispatcher instance that can be used to exchange events across
	 * security boundaries. Even when the Loader object and the loaded content
	 * originate from security domains that do not trust one another, both can
	 * access `sharedEvents` and send and receive events via this
	 * object.</haxe_doc>
		</sharedEvents>
		<swfVersion public="1" set="null">
			<x path="UInt"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</swfVersion>
		<uncaughtErrorEvents public="1" set="null">
			<c path="openfl.events.UncaughtErrorEvents"/>
			<haxe_doc>* An object that dispatches an `uncaughtError` event when an
	 * unhandled error occurs in code in this LoaderInfo object's SWF file. An
	 * uncaught error happens when an error is thrown outside of any
	 * `try..catch` blocks or when an ErrorEvent object is dispatched
	 * with no registered listeners.
	 *
	 * This property is created when the SWF associated with this LoaderInfo
	 * has finished loading. Until then the `uncaughtErrorEvents`
	 * property is `null`. In an ActionScript-only project, you can
	 * access this property during or after the execution of the constructor
	 * function of the main class of the SWF file. For a Flex project, the
	 * `uncaughtErrorEvents` property is available after the
	 * `applicationComplete` event is dispatched.</haxe_doc>
		</uncaughtErrorEvents>
		<url public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The URL of the media being loaded.
	 *
	 * Before the first `progress` event is dispatched by this
	 * LoaderInfo object's corresponding Loader object, the value of the
	 * `url` property might reflect only the initial URL specified in
	 * the call to the `load()` method of the Loader object. After the
	 * first `progress` event, the `url` property reflects
	 * the media's final URL, after any redirects and relative URLs are
	 * resolved.
	 *
	 * In some cases, the value of the `url` property is truncated;
	 * see the `isURLInaccessible` property for details.</haxe_doc>
		</url>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The nominal width of the loaded content. This value might differ from the
	 * actual width at which the content is displayed, since the loaded content
	 * or its parent display objects might be scaled.
	 * 
	 * @throws Error If the file is not downloaded sufficiently to retrieve the
	 *               requested information.</haxe_doc>
		</width>
		<new set="method"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* The LoaderInfo class provides information about a loaded SWF file or a
 * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for
 * any display object. The information provided includes load progress, the
 * URLs of the loader and loaded content, the number of bytes total for the
 * media, and the nominal height and width of the media.
 *
 * You can access LoaderInfo objects in two ways: 
 *
 * 
 *  * The `contentLoaderInfo` property of a flash.display.Loader
 * object -  The `contentLoaderInfo` property is always available
 * for any Loader object. For a Loader object that has not called the
 * `load()` or `loadBytes()` method, or that has not
 * sufficiently loaded, attempting to access many of the properties of the
 * `contentLoaderInfo` property throws an error.
 *  * The `loaderInfo` property of a display object. 
 * 
 *
 * The `contentLoaderInfo` property of a Loader object provides
 * information about the content that the Loader object is loading, whereas
 * the `loaderInfo` property of a DisplayObject provides
 * information about the root SWF file for that display object. 
 *
 * When you use a Loader object to load a display object(such as a SWF
 * file or a bitmap), the `loaderInfo` property of the display
 * object is the same as the `contentLoaderInfo` property of the
 * Loader object(`DisplayObject.loaderInfo =
 * Loader.contentLoaderInfo`). Because the instance of the main class of
 * the SWF file has no Loader object, the `loaderInfo` property is
 * the only way to access the LoaderInfo for the instance of the main class of
 * the SWF file.
 *
 * The following diagram shows the different uses of the LoaderInfo
 * object - for the instance of the main class of the SWF file, for the
 * `contentLoaderInfo` property of a Loader object, and for the
 * `loaderInfo` property of a loaded object:
 *
 * When a loading operation is not complete, some properties of the
 * `contentLoaderInfo` property of a Loader object are not
 * available. You can obtain some properties, such as
 * `bytesLoaded`, `bytesTotal`, `url`,
 * `loaderURL`, and `applicationDomain`. When the
 * `loaderInfo` object dispatches the `init` event, you
 * can access all properties of the `loaderInfo` object and the
 * loaded image or SWF file.
 *
 * **Note:** All properties of LoaderInfo objects are read-only.
 *
 * The `EventDispatcher.dispatchEvent()` method is not
 * applicable to LoaderInfo objects. If you call `dispatchEvent()`
 * on a LoaderInfo object, an IllegalOperationError exception is thrown.
 * 
 * @event complete   Dispatched when data has loaded successfully. In other
 *                   words, it is dispatched when all the content has been
 *                   downloaded and the loading has finished. The
 *                   `complete` event is always dispatched after
 *                   the `init` event. The `init` event
 *                   is dispatched when the object is ready to access, though
 *                   the content may still be downloading.
 * @event httpStatus Dispatched when a network request is made over HTTP and
 *                   an HTTP status code can be detected.
 * @event init       Dispatched when the properties and methods of a loaded
 *                   SWF file are accessible and ready for use. The content,
 *                   however, can still be downloading. A LoaderInfo object
 *                   dispatches the `init` event when the following
 *                   conditions exist:
 *                   
 *                    * All properties and methods associated with the
 *                   loaded object and those associated with the LoaderInfo
 *                   object are accessible.
 *                    * The constructors for all child objects have
 *                   completed.
 *                    * All ActionScript code in the first frame of the
 *                   loaded SWF's main timeline has been executed.
 *                   
 *
 *                   For example, an `Event.INIT` is dispatched
 *                   when the first frame of a movie or animation is loaded.
 *                   The movie is then accessible and can be added to the
 *                   display list. The complete movie, however, can take
 *                   longer to download. The `Event.COMPLETE` is
 *                   only dispatched once the full movie is loaded.
 *
 *                   The `init` event always precedes the
 *                   `complete` event.
 * @event ioError    Dispatched when an input or output error occurs that
 *                   causes a load operation to fail.
 * @event open       Dispatched when a load operation starts.
 * @event progress   Dispatched when data is received as the download
 *                   operation progresses.
 * @event unload     Dispatched by a LoaderInfo object whenever a loaded
 *                   object is removed by using the `unload()`
 *                   method of the Loader object, or when a second load is
 *                   performed by the same Loader object and the original
 *                   content is removed prior to the load beginning.</haxe_doc>
	</class>
	<class path="openfl.display.OpenGLView" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/OpenGLView.hx" extern="1">
		<extends path="openfl.display.DirectRenderer"/>
		<CONTEXT_LOST public="1" get="inline" set="null" expr="&quot;glcontextlost&quot;" line="7" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"glcontextlost"</e></m></meta>
		</CONTEXT_LOST>
		<CONTEXT_RESTORED public="1" get="inline" set="null" expr="&quot;glcontextrestored&quot;" line="8" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"glcontextrestored"</e></m></meta>
		</CONTEXT_RESTORED>
		<isSupported public="1" get="null" set="null" static="1"><x path="Bool"/></isSupported>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.display.PNGEncoderOptions" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/PNGEncoderOptions.hx" extern="1">
		<fastCompression public="1"><x path="Bool"/></fastCompression>
		<new public="1" set="method">
			<f a="?fastCompression" v="false">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ fastCompression : false }</e></m></meta>
		</new>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="openfl.display.PixelSnapping" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/PixelSnapping.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The PixelSnapping class is an enumeration of constant values for setting
 * the pixel snapping options by using the `pixelSnapping` property
 * of a Bitmap object.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._PixelSnapping.PixelSnapping_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/PixelSnapping.hx" private="1" module="openfl.display.PixelSnapping">
	<ALWAYS public="1" get="inline" set="null" expr="cast 0" line="16" static="1">
		<x path="openfl.display.PixelSnapping"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* A constant value used in the `pixelSnapping` property of a
	 * Bitmap object to specify that the bitmap image is always snapped to the
	 * nearest pixel, independent of any transformation.</haxe_doc>
	</ALWAYS>
	<AUTO public="1" get="inline" set="null" expr="cast 1" line="27" static="1">
		<x path="openfl.display.PixelSnapping"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* A constant value used in the `pixelSnapping` property of a
	 * Bitmap object to specify that the bitmap image is snapped to the nearest
	 * pixel if it is drawn with no rotation or skew and it is drawn at a scale
	 * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is
	 * drawn at 100% scale, snapped to the nearest pixel. Internally, this
	 * setting allows the image to be drawn as fast as possible by using the
	 * vector renderer.</haxe_doc>
	</AUTO>
	<NEVER public="1" get="inline" set="null" expr="cast 2" line="33" static="1">
		<x path="openfl.display.PixelSnapping"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* A constant value used in the `pixelSnapping` property of a
	 * Bitmap object to specify that no pixel snapping occurs.</haxe_doc>
	</NEVER>
	<fromString set="method" line="35" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.PixelSnapping"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="48" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._PixelSnapping.PixelSnapping_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/PixelSnapping.hx" private="1" module="openfl.display.PixelSnapping">
		<ALWAYS public="1" get="inline" set="null" expr="cast 0" line="16" static="1">
			<x path="openfl.display.PixelSnapping"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* A constant value used in the `pixelSnapping` property of a
	 * Bitmap object to specify that the bitmap image is always snapped to the
	 * nearest pixel, independent of any transformation.</haxe_doc>
		</ALWAYS>
		<AUTO public="1" get="inline" set="null" expr="cast 1" line="27" static="1">
			<x path="openfl.display.PixelSnapping"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* A constant value used in the `pixelSnapping` property of a
	 * Bitmap object to specify that the bitmap image is snapped to the nearest
	 * pixel if it is drawn with no rotation or skew and it is drawn at a scale
	 * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is
	 * drawn at 100% scale, snapped to the nearest pixel. Internally, this
	 * setting allows the image to be drawn as fast as possible by using the
	 * vector renderer.</haxe_doc>
		</AUTO>
		<NEVER public="1" get="inline" set="null" expr="cast 2" line="33" static="1">
			<x path="openfl.display.PixelSnapping"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* A constant value used in the `pixelSnapping` property of a
	 * Bitmap object to specify that no pixel snapping occurs.</haxe_doc>
		</NEVER>
		<fromString set="method" line="35" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.PixelSnapping"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="48" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.Preloader" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/Preloader.hx" extern="1">
		<extends path="lime.app.Preloader"/>
		<new public="1" set="method">
			<f a="?display" v="null">
				<c path="openfl.display.Sprite"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ display : null }</e></m></meta>
		</new>
	</class>
	<class path="openfl.display.DefaultPreloader" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/Preloader.hx" module="openfl.display.Preloader" extern="1">
		<extends path="openfl.display.Sprite"/>
		<getBackgroundColor public="1" set="method"><f a=""><x path="Int"/></f></getBackgroundColor>
		<getHeight public="1" set="method"><f a=""><x path="Float"/></f></getHeight>
		<getWidth public="1" set="method"><f a=""><x path="Float"/></f></getWidth>
		<onInit public="1" set="method"><f a=""><x path="Void"/></f></onInit>
		<onLoaded public="1" set="method"><f a=""><x path="Void"/></f></onLoaded>
		<onUpdate public="1" set="method"><f a="bytesLoaded:bytesTotal">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onUpdate>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<class path="openfl.display.Shader" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/Shader.hx" extern="1">
		<byteCode public="1" get="null"><x path="openfl.utils.ByteArray"/></byteCode>
		<data public="1"><c path="openfl.display.ShaderData"/></data>
		<glFragmentSource public="1" get="null" set="null"><c path="String"/></glFragmentSource>
		<glProgram public="1" set="null"><d/></glProgram>
		<glVertexSource public="1" get="null" set="null"><c path="String"/></glVertexSource>
		<precisionHint public="1"><x path="openfl.display.ShaderPrecision"/></precisionHint>
		<new public="1" set="method">
			<f a="?code" v="null">
				<x path="openfl.utils.ByteArray"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ code : null }</e></m></meta>
		</new>
	</class>
	<class path="openfl.display.ShaderData" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderData.hx" extern="1">
		<new public="1" set="method"><f a="byteArray">
	<x path="openfl.utils.ByteArray"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":final"/></meta>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="openfl.display.ShaderInput" params="T" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderInput.hx" extern="1">
		<channels public="1" set="null"><x path="Int"/></channels>
		<height public="1"><x path="Int"/></height>
		<index public="1" set="null"><x path="Int"/></index>
		<input public="1"><c path="openfl.display.ShaderInput.T"/></input>
		<width public="1"><x path="Int"/></width>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":generic"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="openfl.display.ShaderJob" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderJob.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<width public="1"><x path="Int"/></width>
		<height public="1"><x path="Int"/></height>
		<progress public="1" set="null"><x path="Float"/></progress>
		<shader public="1"><c path="openfl.display.Shader"/></shader>
		<target public="1"><d/></target>
		<cancel public="1" set="method"><f a=""><x path="Void"/></f></cancel>
		<start public="1" set="method">
			<f a="?waitForCompletion" v="false">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ waitForCompletion : false }</e></m></meta>
		</start>
		<new public="1" set="method">
			<f a="?shader:?target:?width:?height" v="null:null:0:0">
				<c path="openfl.display.Shader"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ height : 0, width : 0, target : null, shader : null }</e></m></meta>
		</new>
	</class>
	<class path="openfl.display.ShaderParameter" params="T" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderParameter.hx" extern="1">
		<index public="1" set="null"><x path="Int"/></index>
		<type public="1" set="null"><x path="openfl.display.ShaderParameterType"/></type>
		<value public="1"><c path="Array"><c path="openfl.display.ShaderParameter.T"/></c></value>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":generic"/>
			<m n=":final"/>
		</meta>
	</class>
	<abstract path="openfl.display.ShaderParameterType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderParameterType.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._ShaderParameterType.ShaderParameterType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderParameterType.hx" private="1" module="openfl.display.ShaderParameterType">
	<BOOL public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOOL>
	<BOOL2 public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOOL2>
	<BOOL3 public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOOL3>
	<BOOL4 public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOOL4>
	<FLOAT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT>
	<FLOAT2 public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT2>
	<FLOAT3 public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT3>
	<FLOAT4 public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT4>
	<INT public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INT>
	<INT2 public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INT2>
	<INT3 public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INT3>
	<INT4 public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INT4>
	<MATRIX2X2 public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MATRIX2X2>
	<MATRIX2X3 public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MATRIX2X3>
	<MATRIX2X4 public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MATRIX2X4>
	<MATRIX3X2 public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MATRIX3X2>
	<MATRIX3X3 public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MATRIX3X3>
	<MATRIX3X4 public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MATRIX3X4>
	<MATRIX4X2 public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MATRIX4X2>
	<MATRIX4X3 public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MATRIX4X3>
	<MATRIX4X4 public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
		<x path="openfl.display.ShaderParameterType"/>
		<meta>
			<m n=":value"><e>cast 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MATRIX4X4>
	<fromString set="method" line="28" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.ShaderParameterType"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="59" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._ShaderParameterType.ShaderParameterType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderParameterType.hx" private="1" module="openfl.display.ShaderParameterType">
		<BOOL public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOOL>
		<BOOL2 public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOOL2>
		<BOOL3 public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOOL3>
		<BOOL4 public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOOL4>
		<FLOAT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT>
		<FLOAT2 public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT2>
		<FLOAT3 public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT3>
		<FLOAT4 public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT4>
		<INT public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INT>
		<INT2 public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INT2>
		<INT3 public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INT3>
		<INT4 public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INT4>
		<MATRIX2X2 public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MATRIX2X2>
		<MATRIX2X3 public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MATRIX2X3>
		<MATRIX2X4 public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MATRIX2X4>
		<MATRIX3X2 public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MATRIX3X2>
		<MATRIX3X3 public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MATRIX3X3>
		<MATRIX3X4 public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MATRIX3X4>
		<MATRIX4X2 public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MATRIX4X2>
		<MATRIX4X3 public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MATRIX4X3>
		<MATRIX4X4 public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
			<x path="openfl.display.ShaderParameterType"/>
			<meta>
				<m n=":value"><e>cast 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MATRIX4X4>
		<fromString set="method" line="28" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.ShaderParameterType"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="59" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display.ShaderPrecision" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderPrecision.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._ShaderPrecision.ShaderPrecision_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderPrecision.hx" private="1" module="openfl.display.ShaderPrecision">
	<FAST public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display.ShaderPrecision"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FAST>
	<FULL public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display.ShaderPrecision"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FULL>
	<fromString set="method" line="9" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.ShaderPrecision"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="21" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._ShaderPrecision.ShaderPrecision_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/ShaderPrecision.hx" private="1" module="openfl.display.ShaderPrecision">
		<FAST public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display.ShaderPrecision"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FAST>
		<FULL public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display.ShaderPrecision"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FULL>
		<fromString set="method" line="9" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.ShaderPrecision"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="21" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.Shape" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/Shape.hx" extern="1">
		<extends path="openfl.display.DisplayObject"/>
		<graphics public="1" get="null" set="null">
			<c path="openfl.display.Graphics"/>
			<haxe_doc>* Specifies the Graphics object belonging to this Shape object, where vector
	 * drawing commands can occur.</haxe_doc>
		</graphics>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Creates a new Shape object.</haxe_doc>
		</new>
		<haxe_doc>* This class is used to create lightweight shapes using the ActionScript
 * drawing application program interface(API). The Shape class includes a
 * `graphics` property, which lets you access methods from the
 * Graphics class.
 *
 * The Sprite class also includes a `graphics`property, and it
 * includes other features not available to the Shape class. For example, a
 * Sprite object is a display object container, whereas a Shape object is not
 * (and cannot contain child display objects). For this reason, Shape objects
 * consume less memory than Sprite objects that contain the same graphics.
 * However, a Sprite object supports user input events, while a Shape object
 * does not.</haxe_doc>
	</class>
	<class path="openfl.display.SimpleButton" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/SimpleButton.hx" extern="1">
		<extends path="openfl.display.InteractiveObject"/>
		<downState public="1" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc>* Specifies a display object that is used as the visual object for the
	 * button "Down" state  - the state that the button is in when the user
	 * selects the `hitTestState` object.</haxe_doc>
		</downState>
		<enabled public="1">
			<x path="Bool"/>
			<haxe_doc>* A Boolean value that specifies whether a button is enabled. When a button
	 * is disabled(the enabled property is set to `false`), the
	 * button is visible but cannot be clicked. The default value is
	 * `true`. This property is useful if you want to disable part of
	 * your navigation; for example, you might want to disable a button in the
	 * currently displayed page so that it can't be clicked and the page cannot
	 * be reloaded.
	 *
	 * **Note:** To prevent mouseClicks on a button, set both the
	 * `enabled` and `mouseEnabled` properties to
	 * `false`.</haxe_doc>
		</enabled>
		<hitTestState public="1" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc>* Specifies a display object that is used as the hit testing object for the
	 * button. For a basic button, set the `hitTestState` property to
	 * the same display object as the `overState` property. If you do
	 * not set the `hitTestState` property, the SimpleButton is
	 * inactive  -  it does not respond to user input events.</haxe_doc>
		</hitTestState>
		<overState public="1" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc>* Specifies a display object that is used as the visual object for the
	 * button over state  -  the state that the button is in when the pointer is
	 * positioned over the button.</haxe_doc>
		</overState>
		<soundTransform public="1" get="null" set="null">
			<c path="openfl.media.SoundTransform"/>
			<haxe_doc>* The SoundTransform object assigned to this button. A SoundTransform object
	 * includes properties for setting volume, panning, left speaker assignment,
	 * and right speaker assignment. This SoundTransform object applies to all
	 * states of the button. This SoundTransform object affects only embedded
	 * sounds.</haxe_doc>
		</soundTransform>
		<trackAsMenu public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether other display objects that are SimpleButton or MovieClip
	 * objects can receive user input release events. The
	 * `trackAsMenu` property lets you create menus. You can set the
	 * `trackAsMenu` property on any SimpleButton or MovieClip object.
	 * If the `trackAsMenu` property does not exist, the default
	 * behavior is `false`.
	 *
	 * You can change the `trackAsMenu` property at any time; the
	 * modified button immediately takes on the new behavior.</haxe_doc>
		</trackAsMenu>
		<upState public="1" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc>* Specifies a display object that is used as the visual object for the
	 * button up state  -  the state that the button is in when the pointer is
	 * not positioned over the button.</haxe_doc>
		</upState>
		<useHandCursor public="1">
			<x path="Bool"/>
			<haxe_doc>* A Boolean value that, when set to `true`, indicates whether the
	 * hand cursor is shown when the pointer rolls over a button. If this
	 * property is set to `false`, the arrow pointer cursor is
	 * displayed instead. The default is `true`.
	 *
	 * You can change the `useHandCursor` property at any time; the
	 * modified button immediately uses the new cursor behavior.</haxe_doc>
		</useHandCursor>
		<new public="1" set="method">
			<f a="?upState:?overState:?downState:?hitTestState" v="null:null:null:null">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ hitTestState : null, downState : null, overState : null, upState : null }</e></m></meta>
			<haxe_doc>* Creates a new SimpleButton instance. Any or all of the display objects
	 * that represent the various button states can be set as parameters in the
	 * constructor.
	 * 
	 * @param upState      The initial value for the SimpleButton up state.
	 * @param overState    The initial value for the SimpleButton over state.
	 * @param downState    The initial value for the SimpleButton down state.
	 * @param hitTestState The initial value for the SimpleButton hitTest state.</haxe_doc>
		</new>
		<haxe_doc>* The SimpleButton class lets you control all instances of button symbols in
 * a SWF file.
 *
 * In Flash Professional, you can give a button an instance name in the
 * Property inspector. SimpleButton instance names are displayed in the Movie
 * Explorer and in the Insert Target Path dialog box in the Actions panel.
 * After you create an instance of a button in Flash Professional, you can use
 * the methods and properties of the SimpleButton class to manipulate buttons
 * with ActionScript.
 *
 * In ActionScript 3.0, you use the `new SimpleButton()`
 * constructor to create a SimpleButton instance.
 *
 * The SimpleButton class inherits from the InteractiveObject class.</haxe_doc>
	</class>
	<abstract path="openfl.display.SpreadMethod" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/SpreadMethod.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The SpreadMethod class provides values for the `spreadMethod`
 * parameter in the `beginGradientFill()` and
 * `lineGradientStyle()` methods of the Graphics class.
 *
 * The following example shows the same gradient fill using various spread
 * methods:</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._SpreadMethod.SpreadMethod_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/SpreadMethod.hx" private="1" module="openfl.display.SpreadMethod">
	<PAD public="1" get="inline" set="null" expr="cast 0" line="17" static="1">
		<x path="openfl.display.SpreadMethod"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the gradient use the _pad_ spread method.</haxe_doc>
	</PAD>
	<REFLECT public="1" get="inline" set="null" expr="cast 1" line="22" static="1">
		<x path="openfl.display.SpreadMethod"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the gradient use the _reflect_ spread method.</haxe_doc>
	</REFLECT>
	<REPEAT public="1" get="inline" set="null" expr="cast 2" line="27" static="1">
		<x path="openfl.display.SpreadMethod"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the gradient use the _repeat_ spread method.</haxe_doc>
	</REPEAT>
	<fromString set="method" line="29" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.SpreadMethod"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="42" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._SpreadMethod.SpreadMethod_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/SpreadMethod.hx" private="1" module="openfl.display.SpreadMethod">
		<PAD public="1" get="inline" set="null" expr="cast 0" line="17" static="1">
			<x path="openfl.display.SpreadMethod"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the gradient use the _pad_ spread method.</haxe_doc>
		</PAD>
		<REFLECT public="1" get="inline" set="null" expr="cast 1" line="22" static="1">
			<x path="openfl.display.SpreadMethod"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the gradient use the _reflect_ spread method.</haxe_doc>
		</REFLECT>
		<REPEAT public="1" get="inline" set="null" expr="cast 2" line="27" static="1">
			<x path="openfl.display.SpreadMethod"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the gradient use the _repeat_ spread method.</haxe_doc>
		</REPEAT>
		<fromString set="method" line="29" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.SpreadMethod"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="42" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.Stage" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/Stage.hx" extern="1">
		<extends path="openfl.display.DisplayObjectContainer"/>
		<implements path="lime.app.IModule"/>
		<align public="1">
			<x path="openfl.display.StageAlign"/>
			<haxe_doc>* A value from the StageAlign class that specifies the alignment of the
	 * stage in Flash Player or the browser. The following are valid values:
	 *
	 * The `align` property is only available to an object that is
	 * in the same security sandbox as the Stage owner(the main SWF file). To
	 * avoid this, the Stage owner can grant permission to the domain of the
	 * calling object by calling the `Security.allowDomain()` method
	 * or the `Security.alowInsecureDomain()` method. For more
	 * information, see the "Security" chapter in the _ActionScript 3.0
	 * Developer's Guide_.</haxe_doc>
		</align>
		<allowsFullScreen public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether this stage allows the use of the full screen mode</haxe_doc>
		</allowsFullScreen>
		<allowsFullScreenInteractive public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether this stage allows the use of the full screen with text input mode</haxe_doc>
		</allowsFullScreenInteractive>
		<application public="1" set="null"><c path="openfl.display.Application"/></application>
		<browserZoomFactor public="1" set="null">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash15</e></m>
			</meta>
		</browserZoomFactor>
		<color public="1" get="null" set="null">
			<x path="UInt"/>
			<haxe_doc>* The window background color.</haxe_doc>
		</color>
		<colorCorrection public="1">
			<e path="flash.display.ColorCorrection"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</colorCorrection>
		<colorCorrectionSupport public="1" set="null">
			<e path="flash.display.ColorCorrectionSupport"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</colorCorrectionSupport>
		<contentsScaleFactor public="1" set="null"><x path="Float"/></contentsScaleFactor>
		<displayContextInfo public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</displayContextInfo>
		<displayState public="1" get="null" set="null">
			<x path="openfl.display.StageDisplayState"/>
			<haxe_doc>* A value from the StageDisplayState class that specifies which display
	 * state to use. The following are valid values:
	 * 
	 *  * `StageDisplayState.FULL_SCREEN` Sets AIR application or
	 * Flash runtime to expand the stage over the user's entire screen, with
	 * keyboard input disabled.
	 *  * `StageDisplayState.FULL_SCREEN_INTERACTIVE` Sets the AIR
	 * application to expand the stage over the user's entire screen, with
	 * keyboard input allowed.(Not available for content running in Flash
	 * Player.)
	 *  * `StageDisplayState.NORMAL` Sets the Flash runtime back to
	 * the standard stage display mode.
	 * 
	 *
	 * The scaling behavior of the movie in full-screen mode is determined by
	 * the `scaleMode` setting(set using the
	 * `Stage.scaleMode` property or the SWF file's `embed`
	 * tag settings in the HTML file). If the `scaleMode` property is
	 * set to `noScale` while the application transitions to
	 * full-screen mode, the Stage `width` and `height`
	 * properties are updated, and the Stage dispatches a `resize`
	 * event. If any other scale mode is set, the stage and its contents are
	 * scaled to fill the new screen dimensions. The Stage object retains its
	 * original `width` and `height` values and does not
	 * dispatch a `resize` event.
	 *
	 * The following restrictions apply to SWF files that play within an HTML
	 * page(not those using the stand-alone Flash Player or not running in the
	 * AIR runtime):
	 *
	 * 
	 *  * To enable full-screen mode, add the `allowFullScreen`
	 * parameter to the `object` and `embed` tags in the
	 * HTML page that includes the SWF file, with `allowFullScreen`
	 * set to `"true"`, as shown in the following example: 
	 *  * Full-screen mode is initiated in response to a mouse click or key
	 * press by the user; the movie cannot change `Stage.displayState`
	 * without user input. Flash runtimes restrict keyboard input in full-screen
	 * mode. Acceptable keys include keyboard shortcuts that terminate
	 * full-screen mode and non-printing keys such as arrows, space, Shift, and
	 * Tab keys. Keyboard shortcuts that terminate full-screen mode are: Escape
	 * (Windows, Linux, and Mac), Control+W(Windows), Command+W(Mac), and
	 * Alt+F4.
	 *
	 * A Flash runtime dialog box appears over the movie when users enter
	 * full-screen mode to inform the users they are in full-screen mode and that
	 * they can press the Escape key to end full-screen mode.
	 * 
	 *  * Starting with Flash Player 9.0.115.0, full-screen works the same in
	 * windowless mode as it does in window mode. If you set the Window Mode
	 * (`wmode` in the HTML) to Opaque Windowless
	 * (`opaque`) or Transparent Windowless
	 * (`transparent`), full-screen can be initiated, but the
	 * full-screen window will always be opaque.
	 * 
	 *
	 * These restrictions are _not_ present for SWF content running in
	 * the stand-alone Flash Player or in AIR. AIR supports an interactive
	 * full-screen mode which allows keyboard input.
	 *
	 * For AIR content running in full-screen mode, the system screen saver
	 * and power saving options are disabled while video content is playing and
	 * until either the video stops or full-screen mode is exited.
	 *
	 * On Linux, setting `displayState` to
	 * `StageDisplayState.FULL_SCREEN` or
	 * `StageDisplayState.FULL_SCREEN_INTERACTIVE` is an asynchronous
	 * operation.
	 * 
	 * @throws SecurityError Calling the `displayState` property of a
	 *                       Stage object throws an exception for any caller that
	 *                       is not in the same security sandbox as the Stage
	 *                       owner(the main SWF file). To avoid this, the Stage
	 *                       owner can grant permission to the domain of the
	 *                       caller by calling the
	 *                       `Security.allowDomain()` method or the
	 *                       `Security.allowInsecureDomain()` method.
	 *                       For more information, see the "Security" chapter in
	 *                       the _ActionScript 3.0 Developer's Guide_.
	 *                       Trying to set the `displayState` property
	 *                       while the settings dialog is displayed, without a
	 *                       user response, or if the `param` or
	 *                       `embed` HTML tag's
	 *                       `allowFullScreen` attribute is not set to
	 *                       `true` throws a security error.</haxe_doc>
		</displayState>
		<focus public="1" get="null" set="null">
			<c path="openfl.display.InteractiveObject"/>
			<haxe_doc>* The interactive object with keyboard focus; or `null` if focus
	 * is not set or if the focused object belongs to a security sandbox to which
	 * the calling object does not have access.
	 * 
	 * @throws Error Throws an error if focus cannot be set to the target.</haxe_doc>
		</focus>
		<frameRate public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* Gets and sets the frame rate of the stage. The frame rate is defined as
	 * frames per second. By default the rate is set to the frame rate of the
	 * first SWF file loaded. Valid range for the frame rate is from 0.01 to 1000
	 * frames per second.
	 *
	 * **Note:** An application might not be able to follow high frame rate
	 * settings, either because the target platform is not fast enough or the
	 * player is synchronized to the vertical blank timing of the display device
	 * (usually 60 Hz on LCD devices). In some cases, a target platform might
	 * also choose to lower the maximum frame rate if it anticipates high CPU
	 * usage.
	 *
	 * For content running in Adobe AIR, setting the `frameRate`
	 * property of one Stage object changes the frame rate for all Stage objects
	 * (used by different NativeWindow objects). 
	 * 
	 * @throws SecurityError Calling the `frameRate` property of a
	 *                       Stage object throws an exception for any caller that
	 *                       is not in the same security sandbox as the Stage
	 *                       owner(the main SWF file). To avoid this, the Stage
	 *                       owner can grant permission to the domain of the
	 *                       caller by calling the
	 *                       `Security.allowDomain()` method or the
	 *                       `Security.allowInsecureDomain()` method.
	 *                       For more information, see the "Security" chapter in
	 *                       the _ActionScript 3.0 Developer's Guide_.</haxe_doc>
		</frameRate>
		<fullScreenHeight public="1" get="null" set="null"><x path="UInt"/></fullScreenHeight>
		<fullScreenSourceRect public="1">
			<c path="openfl.geom.Rectangle"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</fullScreenSourceRect>
		<fullScreenWidth public="1" get="null" set="null"><x path="UInt"/></fullScreenWidth>
		<mouseLock public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_2</e></m>
			</meta>
		</mouseLock>
		<quality public="1">
			<x path="openfl.display.StageQuality"/>
			<haxe_doc>* A value from the StageQuality class that specifies which rendering quality
	 * is used. The following are valid values:
	 * 
	 *  * `StageQuality.LOW` - Low rendering quality. Graphics are
	 * not anti-aliased, and bitmaps are not smoothed, but runtimes still use
	 * mip-mapping.
	 *  * `StageQuality.MEDIUM` - Medium rendering quality.
	 * Graphics are anti-aliased using a 2 x 2 pixel grid, bitmap smoothing is
	 * dependent on the `Bitmap.smoothing` setting. Runtimes use
	 * mip-mapping. This setting is suitable for movies that do not contain
	 * text.
	 *  * `StageQuality.HIGH` - High rendering quality. Graphics
	 * are anti-aliased using a 4 x 4 pixel grid, and bitmap smoothing is
	 * dependent on the `Bitmap.smoothing` setting. Runtimes use
	 * mip-mapping. This is the default rendering quality setting that Flash
	 * Player uses.
	 *  * `StageQuality.BEST` - Very high rendering quality.
	 * Graphics are anti-aliased using a 4 x 4 pixel grid. If
	 * `Bitmap.smoothing` is `true` the runtime uses a high
	 * quality downscale algorithm that produces fewer artifacts(however, using
	 * `StageQuality.BEST` with `Bitmap.smoothing` set to
	 * `true` slows performance significantly and is not a recommended
	 * setting).
	 * 
	 *
	 * Higher quality settings produce better rendering of scaled bitmaps.
	 * However, higher quality settings are computationally more expensive. In
	 * particular, when rendering scaled video, using higher quality settings can
	 * reduce the frame rate. 
	 *
	 * In the desktop profile of Adobe AIR, `quality` can be set to
	 * `StageQuality.BEST` or `StageQuality.HIGH`(and the
	 * default value is `StageQuality.HIGH`). Attempting to set it to
	 * another value has no effect(and the property remains unchanged). In the
	 * moble profile of AIR, all four quality settings are available. The default
	 * value on mobile devices is `StageQuality.MEDIUM`.
	 *
	 * For content running in Adobe AIR, setting the `quality`
	 * property of one Stage object changes the rendering quality for all Stage
	 * objects(used by different NativeWindow objects). 
	 * **_Note:_** The operating system draws the device fonts, which are
	 * therefore unaffected by the `quality` property.
	 * 
	 * @throws SecurityError Calling the `quality` property of a Stage
	 *                       object throws an exception for any caller that is
	 *                       not in the same security sandbox as the Stage owner
	 *                      (the main SWF file). To avoid this, the Stage owner
	 *                       can grant permission to the domain of the caller by
	 *                       calling the `Security.allowDomain()`
	 *                       method or the
	 *                       `Security.allowInsecureDomain()` method.
	 *                       For more information, see the "Security" chapter in
	 *                       the _ActionScript 3.0 Developer's Guide_.</haxe_doc>
		</quality>
		<scaleMode public="1">
			<x path="openfl.display.StageScaleMode"/>
			<haxe_doc>* A value from the StageScaleMode class that specifies which scale mode to
	 * use. The following are valid values:
	 * 
	 *  * `StageScaleMode.EXACT_FIT` - The entire application is
	 * visible in the specified area without trying to preserve the original
	 * aspect ratio. Distortion can occur, and the application may appear
	 * stretched or compressed. 
	 *  * `StageScaleMode.SHOW_ALL` - The entire application is
	 * visible in the specified area without distortion while maintaining the
	 * original aspect ratio of the application. Borders can appear on two sides
	 * of the application. 
	 *  * `StageScaleMode.NO_BORDER` - The entire application fills
	 * the specified area, without distortion but possibly with some cropping,
	 * while maintaining the original aspect ratio of the application. 
	 *  * `StageScaleMode.NO_SCALE` - The entire application is
	 * fixed, so that it remains unchanged even as the size of the player window
	 * changes. Cropping might occur if the player window is smaller than the
	 * content. 
	 * 
	 * 
	 * @throws SecurityError Calling the `scaleMode` property of a
	 *                       Stage object throws an exception for any caller that
	 *                       is not in the same security sandbox as the Stage
	 *                       owner(the main SWF file). To avoid this, the Stage
	 *                       owner can grant permission to the domain of the
	 *                       caller by calling the
	 *                       `Security.allowDomain()` method or the
	 *                       `Security.allowInsecureDomain()` method.
	 *                       For more information, see the "Security" chapter in
	 *                       the _ActionScript 3.0 Developer's Guide_.</haxe_doc>
		</scaleMode>
		<showDefaultContextMenu public="1"><x path="Bool"/></showDefaultContextMenu>
		<softKeyboardRect public="1" set="null">
			<c path="openfl.geom.Rectangle"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</softKeyboardRect>
		<stage3Ds public="1" set="null"><x path="openfl.Vector"><c path="openfl.display.Stage3D"/></x></stage3Ds>
		<stageFocusRect public="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether or not objects display a glowing border when they have
	 * focus.
	 * 
	 * @throws SecurityError Calling the `stageFocusRect` property of
	 *                       a Stage object throws an exception for any caller
	 *                       that is not in the same security sandbox as the
	 *                       Stage owner(the main SWF file). To avoid this, the
	 *                       Stage owner can grant permission to the domain of
	 *                       the caller by calling the
	 *                       `Security.allowDomain()` method or the
	 *                       `Security.allowInsecureDomain()` method.
	 *                       For more information, see the "Security" chapter in
	 *                       the _ActionScript 3.0 Developer's Guide_.</haxe_doc>
		</stageFocusRect>
		<stageHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The current height, in pixels, of the Stage.
	 *
	 * If the value of the `Stage.scaleMode` property is set to
	 * `StageScaleMode.NO_SCALE` when the user resizes the window, the
	 * Stage content maintains its size while the `stageHeight`
	 * property changes to reflect the new height size of the screen area
	 * occupied by the SWF file.(In the other scale modes, the
	 * `stageHeight` property always reflects the original height of
	 * the SWF file.) You can add an event listener for the `resize`
	 * event and then use the `stageHeight` property of the Stage
	 * class to determine the actual pixel dimension of the resized Flash runtime
	 * window. The event listener allows you to control how the screen content
	 * adjusts when the user resizes the window.
	 *
	 * Air for TV devices have slightly different behavior than desktop
	 * devices when you set the `stageHeight` property. If the
	 * `Stage.scaleMode` property is set to
	 * `StageScaleMode.NO_SCALE` and you set the
	 * `stageHeight` property, the stage height does not change until
	 * the next frame of the SWF.
	 *
	 * **Note:** In an HTML page hosting the SWF file, both the
	 * `object` and `embed` tags' `height`
	 * attributes must be set to a percentage(such as `100%`), not
	 * pixels. If the settings are generated by JavaScript code, the
	 * `height` parameter of the `AC_FL_RunContent() `
	 * method must be set to a percentage, too. This percentage is applied to the
	 * `stageHeight` value.
	 * 
	 * @throws SecurityError Calling the `stageHeight` property of a
	 *                       Stage object throws an exception for any caller that
	 *                       is not in the same security sandbox as the Stage
	 *                       owner(the main SWF file). To avoid this, the Stage
	 *                       owner can grant permission to the domain of the
	 *                       caller by calling the
	 *                       `Security.allowDomain()` method or the
	 *                       `Security.allowInsecureDomain()` method.
	 *                       For more information, see the "Security" chapter in
	 *                       the _ActionScript 3.0 Developer's Guide_.</haxe_doc>
		</stageHeight>
		<stageVideos public="1" set="null">
			<x path="openfl.Vector"><c path="flash.media.StageVideo"/></x>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_2</e></m>
			</meta>
		</stageVideos>
		<stageWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* Specifies the current width, in pixels, of the Stage.
	 *
	 * If the value of the `Stage.scaleMode` property is set to
	 * `StageScaleMode.NO_SCALE` when the user resizes the window, the
	 * Stage content maintains its defined size while the `stageWidth`
	 * property changes to reflect the new width size of the screen area occupied
	 * by the SWF file.(In the other scale modes, the `stageWidth`
	 * property always reflects the original width of the SWF file.) You can add
	 * an event listener for the `resize` event and then use the
	 * `stageWidth` property of the Stage class to determine the
	 * actual pixel dimension of the resized Flash runtime window. The event
	 * listener allows you to control how the screen content adjusts when the
	 * user resizes the window.
	 *
	 * Air for TV devices have slightly different behavior than desktop
	 * devices when you set the `stageWidth` property. If the
	 * `Stage.scaleMode` property is set to
	 * `StageScaleMode.NO_SCALE` and you set the
	 * `stageWidth` property, the stage width does not change until
	 * the next frame of the SWF.
	 *
	 * **Note:** In an HTML page hosting the SWF file, both the
	 * `object` and `embed` tags' `width`
	 * attributes must be set to a percentage(such as `100%`), not
	 * pixels. If the settings are generated by JavaScript code, the
	 * `width` parameter of the `AC_FL_RunContent() `
	 * method must be set to a percentage, too. This percentage is applied to the
	 * `stageWidth` value.
	 * 
	 * @throws SecurityError Calling the `stageWidth` property of a
	 *                       Stage object throws an exception for any caller that
	 *                       is not in the same security sandbox as the Stage
	 *                       owner(the main SWF file). To avoid this, the Stage
	 *                       owner can grant permission to the domain of the
	 *                       caller by calling the
	 *                       `Security.allowDomain()` method or the
	 *                       `Security.allowInsecureDomain()` method.
	 *                       For more information, see the "Security" chapter in
	 *                       the _ActionScript 3.0 Developer's Guide_.</haxe_doc>
		</stageWidth>
		<window public="1" set="null"><c path="lime.ui.Window"/></window>
		<wmodeGPU public="1" set="null">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</wmodeGPU>
		<invalidate public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Calling the `invalidate()` method signals Flash runtimes to
	 * alert display objects on the next opportunity it has to render the display
	 * list(for example, when the playhead advances to a new frame). After you
	 * call the `invalidate()` method, when the display list is next
	 * rendered, the Flash runtime sends a `render` event to each
	 * display object that has registered to listen for the `render`
	 * event. You must call the `invalidate()` method each time you
	 * want the Flash runtime to send `render` events.
	 *
	 * The `render` event gives you an opportunity to make changes
	 * to the display list immediately before it is actually rendered. This lets
	 * you defer updates to the display list until the latest opportunity. This
	 * can increase performance by eliminating unnecessary screen updates.
	 *
	 * The `render` event is dispatched only to display objects
	 * that are in the same security domain as the code that calls the
	 * `stage.invalidate()` method, or to display objects from a
	 * security domain that has been granted permission via the
	 * `Security.allowDomain()` method.
	 *</haxe_doc>
		</invalidate>
		<isFocusInaccessible public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</isFocusInaccessible>
		<addRenderer public="1" set="method">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</addRenderer>
		<addWindow public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</addWindow>
		<registerModule public="1" set="method">
			<f a="application">
				<t path="lime.app._Application.LimeApplication"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</registerModule>
		<removeRenderer public="1" set="method">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</removeRenderer>
		<removeWindow public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</removeWindow>
		<setPreloader public="1" set="method">
			<f a="preloader">
				<c path="lime.app.Preloader"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</setPreloader>
		<unregisterModule public="1" set="method">
			<f a="application">
				<t path="lime.app._Application.LimeApplication"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</unregisterModule>
		<onGamepadAxisMove public="1" set="method">
			<f a="gamepad:axis:value">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadAxis"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onGamepadAxisMove>
		<onGamepadButtonDown public="1" set="method">
			<f a="gamepad:button">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadButton"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onGamepadButtonDown>
		<onGamepadButtonUp public="1" set="method">
			<f a="gamepad:button">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadButton"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onGamepadButtonUp>
		<onGamepadConnect public="1" set="method">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onGamepadConnect>
		<onGamepadDisconnect public="1" set="method">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onGamepadDisconnect>
		<onJoystickAxisMove public="1" set="method">
			<f a="joystick:axis:value">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onJoystickAxisMove>
		<onJoystickButtonDown public="1" set="method">
			<f a="joystick:button">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onJoystickButtonDown>
		<onJoystickButtonUp public="1" set="method">
			<f a="joystick:button">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onJoystickButtonUp>
		<onJoystickConnect public="1" set="method">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onJoystickConnect>
		<onJoystickDisconnect public="1" set="method">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onJoystickDisconnect>
		<onJoystickHatMove public="1" set="method">
			<f a="joystick:hat:position">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="lime.ui.JoystickHatPosition"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onJoystickHatMove>
		<onJoystickTrackballMove public="1" set="method">
			<f a="joystick:trackball:value">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onJoystickTrackballMove>
		<onKeyDown public="1" set="method">
			<f a="window:keyCode:modifier">
				<c path="lime.ui.Window"/>
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyModifier"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onKeyDown>
		<onKeyUp public="1" set="method">
			<f a="window:keyCode:modifier">
				<c path="lime.ui.Window"/>
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyModifier"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onKeyUp>
		<onModuleExit public="1" set="method">
			<f a="code">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onModuleExit>
		<onMouseDown public="1" set="method">
			<f a="window:x:y:button">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onMouseDown>
		<onMouseMove public="1" set="method">
			<f a="window:x:y">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onMouseMove>
		<onMouseMoveRelative public="1" set="method">
			<f a="window:x:y">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onMouseMoveRelative>
		<onMouseUp public="1" set="method">
			<f a="window:x:y:button">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onMouseUp>
		<onMouseWheel public="1" set="method">
			<f a="window:deltaX:deltaY">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onMouseWheel>
		<onPreloadComplete public="1" set="method">
			<f a=""><x path="Void"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onPreloadComplete>
		<onPreloadProgress public="1" set="method">
			<f a="loaded:total">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onPreloadProgress>
		<onRenderContextLost public="1" set="method">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onRenderContextLost>
		<onRenderContextRestored public="1" set="method">
			<f a="renderer:context">
				<c path="lime.graphics.Renderer"/>
				<e path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onRenderContextRestored>
		<onTextEdit public="1" set="method">
			<f a="window:text:start:length">
				<c path="lime.ui.Window"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onTextEdit>
		<onTextInput public="1" set="method">
			<f a="window:text">
				<c path="lime.ui.Window"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onTextInput>
		<onTouchMove public="1" set="method">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onTouchMove>
		<onTouchEnd public="1" set="method">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onTouchEnd>
		<onTouchStart public="1" set="method">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onTouchStart>
		<onWindowActivate public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowActivate>
		<onWindowClose public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowClose>
		<onWindowCreate public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowCreate>
		<onWindowDeactivate public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowDeactivate>
		<onWindowDropFile public="1" set="method">
			<f a="window:file">
				<c path="lime.ui.Window"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowDropFile>
		<onWindowEnter public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowEnter>
		<onWindowFocusIn public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowFocusIn>
		<onWindowFocusOut public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowFocusOut>
		<onWindowFullscreen public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowFullscreen>
		<onWindowLeave public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowLeave>
		<onWindowMinimize public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowMinimize>
		<onWindowMove public="1" set="method">
			<f a="window:x:y">
				<c path="lime.ui.Window"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowMove>
		<onWindowResize public="1" set="method">
			<f a="window:width:height">
				<c path="lime.ui.Window"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowResize>
		<onWindowRestore public="1" set="method">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</onWindowRestore>
		<render public="1" set="method">
			<f a="renderer">
				<c path="lime.graphics.Renderer"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</render>
		<update public="1" set="method">
			<f a="deltaTime">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</update>
		<haxe_doc><![CDATA[* The Stage class represents the main drawing area.
 *
 * For SWF content running in the browser(in Flash<sup>®</sup> Player),
 * the Stage represents the entire area where Flash content is shown. For
 * content running in AIR on desktop operating systems, each NativeWindow
 * object has a corresponding Stage object.
 *
 * The Stage object is not globally accessible. You need to access it
 * through the `stage` property of a DisplayObject instance.
 *
 * The Stage class has several ancestor classes  -  DisplayObjectContainer,
 * InteractiveObject, DisplayObject, and EventDispatcher  -  from which it
 * inherits properties and methods. Many of these properties and methods are
 * either inapplicable to Stage objects, or require security checks when
 * called on a Stage object. The properties and methods that require security
 * checks are documented as part of the Stage class.
 *
 * In addition, the following inherited properties are inapplicable to
 * Stage objects. If you try to set them, an IllegalOperationError is thrown.
 * These properties may always be read, but since they cannot be set, they
 * will always contain default values.
 *
 * 
 *  * `accessibilityProperties`
 *  * `alpha`
 *  * `blendMode`
 *  * `cacheAsBitmap`
 *  * `contextMenu`
 *  * `filters`
 *  * `focusRect`
 *  * `loaderInfo`
 *  * `mask`
 *  * `mouseEnabled`
 *  * `name`
 *  * `opaqueBackground`
 *  * `rotation`
 *  * `scale9Grid`
 *  * `scaleX`
 *  * `scaleY`
 *  * `scrollRect`
 *  * `tabEnabled`
 *  * `tabIndex`
 *  * `transform`
 *  * `visible`
 *  * `x`
 *  * `y`
 * 
 *
 * Some events that you might expect to be a part of the Stage class, such
 * as `enterFrame`, `exitFrame`,
 * `frameConstructed`, and `render`, cannot be Stage
 * events because a reference to the Stage object cannot be guaranteed to
 * exist in every situation where these events are used. Because these events
 * cannot be dispatched by the Stage object, they are instead dispatched by
 * every DisplayObject instance, which means that you can add an event
 * listener to any DisplayObject instance to listen for these events. These
 * events, which are part of the DisplayObject class, are called broadcast
 * events to differentiate them from events that target a specific
 * DisplayObject instance. Two other broadcast events, `activate`
 * and `deactivate`, belong to DisplayObject's superclass,
 * EventDispatcher. The `activate` and `deactivate`
 * events behave similarly to the DisplayObject broadcast events, except that
 * these two events are dispatched not only by all DisplayObject instances,
 * but also by all EventDispatcher instances and instances of other
 * EventDispatcher subclasses. For more information on broadcast events, see
 * the DisplayObject class.
 * 
 * @event fullScreen             Dispatched when the Stage object enters, or
 *                               leaves, full-screen mode. A change in
 *                               full-screen mode can be initiated through
 *                               ActionScript, or the user invoking a keyboard
 *                               shortcut, or if the current focus leaves the
 *                               full-screen window.
 * @event mouseLeave             Dispatched by the Stage object when the
 *                               pointer moves out of the stage area. If the
 *                               mouse button is pressed, the event is not
 *                               dispatched.
 * @event orientationChange      Dispatched by the Stage object when the stage
 *                               orientation changes.
 *
 *                               Orientation changes can occur when the
 *                               user rotates the device, opens a slide-out
 *                               keyboard, or when the
 *                               `setAspectRatio()` is called.
 *
 *                               **Note:** If the
 *                               `autoOrients` property is
 *                               `false`, then the stage
 *                               orientation does not change when a device is
 *                               rotated. Thus, StageOrientationEvents are
 *                               only dispatched for device rotation when
 *                               `autoOrients` is
 *                               `true`.
 * @event orientationChanging    Dispatched by the Stage object when the stage
 *                               orientation begins changing.
 *
 *                               **Important:** orientationChanging
 *                               events are not dispatched on Android
 *                               devices.
 *
 *                               **Note:** If the
 *                               `autoOrients` property is
 *                               `false`, then the stage
 *                               orientation does not change when a device is
 *                               rotated. Thus, StageOrientationEvents are
 *                               only dispatched for device rotation when
 *                               `autoOrients` is
 *                               `true`.
 * @event resize                 Dispatched when the `scaleMode`
 *                               property of the Stage object is set to
 *                               `StageScaleMode.NO_SCALE` and the
 *                               SWF file is resized.
 * @event stageVideoAvailability Dispatched by the Stage object when the state
 *                               of the stageVideos property changes.]]></haxe_doc>
	</class>
	<class path="openfl.display.Stage3D" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/Stage3D.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<context3D public="1" set="null"><c path="openfl.display3D.Context3D"/></context3D>
		<visible public="1"><x path="Bool"/></visible>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<requestContext3D public="1" set="method"><f a="?context3DRenderMode:?profile">
	<x path="openfl.display3D.Context3DRenderMode"/>
	<x path="openfl.display3D.Context3DProfile"/>
	<x path="Void"/>
</f></requestContext3D>
		<requestContext3DMatchingProfiles public="1" set="method"><f a="profiles">
	<x path="openfl.Vector"><c path="String"/></x>
	<x path="Void"/>
</f></requestContext3DMatchingProfiles>
	</class>
	<abstract path="openfl.display.StageAlign" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageAlign.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The StageAlign class provides constant values to use for the
 * `Stage.align` property.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._StageAlign.StageAlign_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageAlign.hx" private="1" module="openfl.display.StageAlign">
	<BOTTOM public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="openfl.display.StageAlign"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is aligned at the bottom.</haxe_doc>
	</BOTTOM>
	<BOTTOM_LEFT public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
		<x path="openfl.display.StageAlign"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is aligned on the left.</haxe_doc>
	</BOTTOM_LEFT>
	<BOTTOM_RIGHT public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
		<x path="openfl.display.StageAlign"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is aligned to the right.</haxe_doc>
	</BOTTOM_RIGHT>
	<LEFT public="1" get="inline" set="null" expr="cast 3" line="28" static="1">
		<x path="openfl.display.StageAlign"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is aligned on the left.</haxe_doc>
	</LEFT>
	<RIGHT public="1" get="inline" set="null" expr="cast 4" line="33" static="1">
		<x path="openfl.display.StageAlign"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is aligned to the right.</haxe_doc>
	</RIGHT>
	<TOP public="1" get="inline" set="null" expr="cast 5" line="38" static="1">
		<x path="openfl.display.StageAlign"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is aligned at the top.</haxe_doc>
	</TOP>
	<TOP_LEFT public="1" get="inline" set="null" expr="cast 6" line="43" static="1">
		<x path="openfl.display.StageAlign"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is aligned on the left.</haxe_doc>
	</TOP_LEFT>
	<TOP_RIGHT public="1" get="inline" set="null" expr="cast 7" line="48" static="1">
		<x path="openfl.display.StageAlign"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is aligned to the right.</haxe_doc>
	</TOP_RIGHT>
	<fromString set="method" line="50" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.StageAlign"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="68" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._StageAlign.StageAlign_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageAlign.hx" private="1" module="openfl.display.StageAlign">
		<BOTTOM public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="openfl.display.StageAlign"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is aligned at the bottom.</haxe_doc>
		</BOTTOM>
		<BOTTOM_LEFT public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
			<x path="openfl.display.StageAlign"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is aligned on the left.</haxe_doc>
		</BOTTOM_LEFT>
		<BOTTOM_RIGHT public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
			<x path="openfl.display.StageAlign"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is aligned to the right.</haxe_doc>
		</BOTTOM_RIGHT>
		<LEFT public="1" get="inline" set="null" expr="cast 3" line="28" static="1">
			<x path="openfl.display.StageAlign"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is aligned on the left.</haxe_doc>
		</LEFT>
		<RIGHT public="1" get="inline" set="null" expr="cast 4" line="33" static="1">
			<x path="openfl.display.StageAlign"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is aligned to the right.</haxe_doc>
		</RIGHT>
		<TOP public="1" get="inline" set="null" expr="cast 5" line="38" static="1">
			<x path="openfl.display.StageAlign"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is aligned at the top.</haxe_doc>
		</TOP>
		<TOP_LEFT public="1" get="inline" set="null" expr="cast 6" line="43" static="1">
			<x path="openfl.display.StageAlign"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is aligned on the left.</haxe_doc>
		</TOP_LEFT>
		<TOP_RIGHT public="1" get="inline" set="null" expr="cast 7" line="48" static="1">
			<x path="openfl.display.StageAlign"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is aligned to the right.</haxe_doc>
		</TOP_RIGHT>
		<fromString set="method" line="50" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.StageAlign"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="68" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display.StageDisplayState" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageDisplayState.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The StageDisplayState class provides values for the
 * `Stage.displayState` property.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._StageDisplayState.StageDisplayState_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageDisplayState.hx" private="1" module="openfl.display.StageDisplayState">
	<FULL_SCREEN public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="openfl.display.StageDisplayState"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is in full-screen mode.</haxe_doc>
	</FULL_SCREEN>
	<FULL_SCREEN_INTERACTIVE public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
		<x path="openfl.display.StageDisplayState"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is in full-screen mode with keyboard interactivity enabled.</haxe_doc>
	</FULL_SCREEN_INTERACTIVE>
	<NORMAL public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
		<x path="openfl.display.StageDisplayState"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the Stage is in normal mode.</haxe_doc>
	</NORMAL>
	<fromString set="method" line="25" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.StageDisplayState"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="38" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._StageDisplayState.StageDisplayState_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageDisplayState.hx" private="1" module="openfl.display.StageDisplayState">
		<FULL_SCREEN public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="openfl.display.StageDisplayState"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is in full-screen mode.</haxe_doc>
		</FULL_SCREEN>
		<FULL_SCREEN_INTERACTIVE public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
			<x path="openfl.display.StageDisplayState"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is in full-screen mode with keyboard interactivity enabled.</haxe_doc>
		</FULL_SCREEN_INTERACTIVE>
		<NORMAL public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
			<x path="openfl.display.StageDisplayState"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the Stage is in normal mode.</haxe_doc>
		</NORMAL>
		<fromString set="method" line="25" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.StageDisplayState"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="38" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display.StageQuality" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageQuality.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The StageQuality class provides values for the `Stage.quality`
 * property.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._StageQuality.StageQuality_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageQuality.hx" private="1" module="openfl.display.StageQuality">
	<BEST public="1" get="inline" set="null" expr="cast 0" line="14" static="1">
		<x path="openfl.display.StageQuality"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies very high rendering quality: graphics are anti-aliased using a 4
	 * x 4 pixel grid and bitmaps are always smoothed.</haxe_doc>
	</BEST>
	<HIGH public="1" get="inline" set="null" expr="cast 1" line="20" static="1">
		<x path="openfl.display.StageQuality"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies high rendering quality: graphics are anti-aliased using a 4 x 4
	 * pixel grid, and bitmaps are smoothed if the movie is static.</haxe_doc>
	</HIGH>
	<LOW public="1" get="inline" set="null" expr="cast 2" line="26" static="1">
		<x path="openfl.display.StageQuality"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies low rendering quality: graphics are not anti-aliased, and
	 * bitmaps are not smoothed.</haxe_doc>
	</LOW>
	<MEDIUM public="1" get="inline" set="null" expr="cast 3" line="33" static="1">
		<x path="openfl.display.StageQuality"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies medium rendering quality: graphics are anti-aliased using a 2 x
	 * 2 pixel grid, but bitmaps are not smoothed. This setting is suitable for
	 * movies that do not contain text.</haxe_doc>
	</MEDIUM>
	<fromString set="method" line="35" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.StageQuality"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="49" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._StageQuality.StageQuality_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageQuality.hx" private="1" module="openfl.display.StageQuality">
		<BEST public="1" get="inline" set="null" expr="cast 0" line="14" static="1">
			<x path="openfl.display.StageQuality"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies very high rendering quality: graphics are anti-aliased using a 4
	 * x 4 pixel grid and bitmaps are always smoothed.</haxe_doc>
		</BEST>
		<HIGH public="1" get="inline" set="null" expr="cast 1" line="20" static="1">
			<x path="openfl.display.StageQuality"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies high rendering quality: graphics are anti-aliased using a 4 x 4
	 * pixel grid, and bitmaps are smoothed if the movie is static.</haxe_doc>
		</HIGH>
		<LOW public="1" get="inline" set="null" expr="cast 2" line="26" static="1">
			<x path="openfl.display.StageQuality"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies low rendering quality: graphics are not anti-aliased, and
	 * bitmaps are not smoothed.</haxe_doc>
		</LOW>
		<MEDIUM public="1" get="inline" set="null" expr="cast 3" line="33" static="1">
			<x path="openfl.display.StageQuality"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies medium rendering quality: graphics are anti-aliased using a 2 x
	 * 2 pixel grid, but bitmaps are not smoothed. This setting is suitable for
	 * movies that do not contain text.</haxe_doc>
		</MEDIUM>
		<fromString set="method" line="35" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.StageQuality"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="49" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display.StageScaleMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageScaleMode.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The StageScaleMode class provides values for the
 * `Stage.scaleMode` property.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._StageScaleMode.StageScaleMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageScaleMode.hx" private="1" module="openfl.display.StageScaleMode">
	<EXACT_FIT public="1" get="inline" set="null" expr="cast 0" line="10" static="1">
		<x path="openfl.display.StageScaleMode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXACT_FIT>
	<NO_BORDER public="1" get="inline" set="null" expr="cast 1" line="11" static="1">
		<x path="openfl.display.StageScaleMode"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_BORDER>
	<NO_SCALE public="1" get="inline" set="null" expr="cast 2" line="12" static="1">
		<x path="openfl.display.StageScaleMode"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_SCALE>
	<SHOW_ALL public="1" get="inline" set="null" expr="cast 3" line="13" static="1">
		<x path="openfl.display.StageScaleMode"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHOW_ALL>
	<fromString set="method" line="15" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.StageScaleMode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="29" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._StageScaleMode.StageScaleMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/StageScaleMode.hx" private="1" module="openfl.display.StageScaleMode">
		<EXACT_FIT public="1" get="inline" set="null" expr="cast 0" line="10" static="1">
			<x path="openfl.display.StageScaleMode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXACT_FIT>
		<NO_BORDER public="1" get="inline" set="null" expr="cast 1" line="11" static="1">
			<x path="openfl.display.StageScaleMode"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_BORDER>
		<NO_SCALE public="1" get="inline" set="null" expr="cast 2" line="12" static="1">
			<x path="openfl.display.StageScaleMode"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_SCALE>
		<SHOW_ALL public="1" get="inline" set="null" expr="cast 3" line="13" static="1">
			<x path="openfl.display.StageScaleMode"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHOW_ALL>
		<fromString set="method" line="15" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.StageScaleMode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="29" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.Tile" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/Tile.hx" extern="1">
		<alpha public="1" set="null"><x path="Float"/></alpha>
		<colorTransform public="1" get="null" set="null">
			<c path="openfl.geom.ColorTransform"/>
			<meta><m n=":beta"/></meta>
		</colorTransform>
		<data public="1"><d/></data>
		<id public="1" set="null"><x path="Int"/></id>
		<matrix public="1" set="null"><c path="openfl.geom.Matrix"/></matrix>
		<originX public="1" set="null"><x path="Float"/></originX>
		<originY public="1" set="null"><x path="Float"/></originY>
		<parent public="1" set="null"><c path="openfl.display.Tilemap"/></parent>
		<rotation public="1" get="null" set="null"><x path="Float"/></rotation>
		<scaleX public="1" get="null" set="null"><x path="Float"/></scaleX>
		<scaleY public="1" get="null" set="null"><x path="Float"/></scaleY>
		<shader public="1" set="null">
			<c path="openfl.display.Shader"/>
			<meta><m n=":beta"/></meta>
		</shader>
		<tileset public="1" set="null"><c path="openfl.display.Tileset"/></tileset>
		<visible public="1" set="null"><x path="Bool"/></visible>
		<x public="1" get="null" set="null"><x path="Float"/></x>
		<y public="1" get="null" set="null"><x path="Float"/></y>
		<clone public="1" set="method"><f a=""><c path="openfl.display.Tile"/></f></clone>
		<new public="1" set="method">
			<f a="?id:?x:?y:?scaleX:?scaleY:?rotation" v="0:0:0:1:1:0">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ rotation : 0, scaleY : 1, scaleX : 1, y : 0, x : 0, id : 0 }</e></m></meta>
		</new>
	</class>
	<class path="openfl.display.TileArray" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/TileArray.hx" extern="1">
		<alpha public="1" get="null" set="null"><x path="Float"/></alpha>
		<id public="1" get="null" set="null"><x path="Int"/></id>
		<length public="1" get="null" set="null"><x path="Int"/></length>
		<position public="1"><x path="Int"/></position>
		<shader public="1" get="null" set="null"><c path="openfl.display.Shader"/></shader>
		<tileset public="1" get="null" set="null"><c path="openfl.display.Tileset"/></tileset>
		<visible public="1" get="null" set="null"><x path="Bool"/></visible>
		<getColorTransform public="1" set="method">
			<f a="?colorTransform" v="null">
				<c path="openfl.geom.ColorTransform"/>
				<c path="openfl.geom.ColorTransform"/>
			</f>
			<meta><m n=":value"><e>{ colorTransform : null }</e></m></meta>
		</getColorTransform>
		<getMatrix public="1" set="method">
			<f a="?matrix" v="null">
				<c path="openfl.geom.Matrix"/>
				<c path="openfl.geom.Matrix"/>
			</f>
			<meta><m n=":value"><e>{ matrix : null }</e></m></meta>
		</getMatrix>
		<getRect public="1" set="method">
			<f a="?rect" v="null">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ rect : null }</e></m></meta>
		</getRect>
		<setColorTransform public="1" set="method"><f a="redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier:redOffset:greenOffset:blueOffset:alphaOffset">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setColorTransform>
		<setMatrix public="1" set="method"><f a="a:b:c:d:tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setMatrix>
		<setRect public="1" set="method"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setRect>
		<new public="1" set="method">
			<f a="?length" v="0">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ length : 0 }</e></m></meta>
		</new>
		<meta><m n=":beta"/></meta>
	</class>
	<class path="openfl.display.Tilemap" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/Tilemap.hx" extern="1">
		<extends path="openfl.display.DisplayObject"/>
		<numTiles public="1" set="null"><x path="Int"/></numTiles>
		<shader public="1">
			<c path="openfl.display.Shader"/>
			<meta><m n=":beta"/></meta>
		</shader>
		<smoothing public="1"><x path="Bool"/></smoothing>
		<tileset public="1" set="null"><c path="openfl.display.Tileset"/></tileset>
		<addTile public="1" set="method"><f a="tile">
	<c path="openfl.display.Tile"/>
	<c path="openfl.display.Tile"/>
</f></addTile>
		<addTiles public="1" set="method"><f a="tiles">
	<c path="Array"><c path="openfl.display.Tile"/></c>
	<c path="Array"><c path="openfl.display.Tile"/></c>
</f></addTiles>
		<addTileAt public="1" set="method"><f a="tile:index">
	<c path="openfl.display.Tile"/>
	<x path="Int"/>
	<c path="openfl.display.Tile"/>
</f></addTileAt>
		<contains public="1" set="method"><f a="tile">
	<c path="openfl.display.Tile"/>
	<x path="Bool"/>
</f></contains>
		<getTileAt public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="openfl.display.Tile"/>
</f></getTileAt>
		<getTileIndex public="1" set="method"><f a="tile">
	<c path="openfl.display.Tile"/>
	<x path="Int"/>
</f></getTileIndex>
		<getTiles public="1" set="method">
			<f a=""><c path="openfl.display.TileArray"/></f>
			<meta><m n=":beta"/></meta>
		</getTiles>
		<removeTile public="1" set="method"><f a="tile">
	<c path="openfl.display.Tile"/>
	<c path="openfl.display.Tile"/>
</f></removeTile>
		<removeTileAt public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="openfl.display.Tile"/>
</f></removeTileAt>
		<removeTiles public="1" set="method">
			<f a="?beginIndex:?endIndex" v="0:0x7fffffff">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ endIndex : 0x7fffffff, beginIndex : 0 }</e></m></meta>
		</removeTiles>
		<setTiles public="1" set="method">
			<f a="tileArray">
				<c path="openfl.display.TileArray"/>
				<x path="Void"/>
			</f>
			<meta><m n=":beta"/></meta>
		</setTiles>
		<new public="1" set="method">
			<f a="width:height:?tileset:?smoothing" v="::null:true">
				<x path="Int"/>
				<x path="Int"/>
				<c path="openfl.display.Tileset"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ smoothing : true, tileset : null }</e></m></meta>
		</new>
	</class>
	<class path="openfl.display.Tileset" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/Tileset.hx" extern="1">
		<bitmapData public="1" set="null"><c path="openfl.display.BitmapData"/></bitmapData>
		<addRect public="1" set="method"><f a="rect">
	<c path="openfl.geom.Rectangle"/>
	<x path="Int"/>
</f></addRect>
		<getRect public="1" set="method"><f a="id">
	<x path="Int"/>
	<c path="openfl.geom.Rectangle"/>
</f></getRect>
		<new public="1" set="method">
			<f a="bitmapData:?rects" v=":null">
				<c path="openfl.display.BitmapData"/>
				<c path="Array"><c path="openfl.geom.Rectangle"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ rects : null }</e></m></meta>
		</new>
	</class>
	<abstract path="openfl.display.TriangleCulling" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/TriangleCulling.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* Defines codes for culling algorithms that determine which triangles not to
 * render when drawing triangle paths.
 *
 *  The terms `POSITIVE` and `NEGATIVE` refer to the
 * sign of a triangle's normal along the z-axis. The normal is a 3D vector
 * that is perpendicular to the surface of the triangle. 
 *
 *  A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order
 * has a positive normal value. That is, its normal points in a positive
 * z-axis direction, away from the current view point. When the
 * `TriangleCulling.POSITIVE` algorithm is used, triangles with
 * positive normals are not rendered. Another term for this is backface
 * culling. 
 *
 *  A triangle whose vertices are arranged in a counter-clockwise order has
 * a negative normal value. That is, its normal points in a negative z-axis
 * direction, toward the current view point. When the
 * `TriangleCulling.NEGATIVE` algorithm is used, triangles with
 * negative normals will not be rendered.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display._TriangleCulling.TriangleCulling_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/TriangleCulling.hx" private="1" module="openfl.display.TriangleCulling">
	<NEGATIVE public="1" get="inline" set="null" expr="cast 0" line="30" static="1">
		<x path="openfl.display.TriangleCulling"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies culling of all triangles facing toward the current view point.</haxe_doc>
	</NEGATIVE>
	<NONE public="1" get="inline" set="null" expr="cast 1" line="35" static="1">
		<x path="openfl.display.TriangleCulling"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies no culling. All triangles in the path are rendered.</haxe_doc>
	</NONE>
	<POSITIVE public="1" get="inline" set="null" expr="cast 2" line="41" static="1">
		<x path="openfl.display.TriangleCulling"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies culling of all triangles facing away from the current view
	 * point. This is also known as backface culling.</haxe_doc>
	</POSITIVE>
	<fromString set="method" line="43" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display.TriangleCulling"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="56" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display._TriangleCulling.TriangleCulling_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display/TriangleCulling.hx" private="1" module="openfl.display.TriangleCulling">
		<NEGATIVE public="1" get="inline" set="null" expr="cast 0" line="30" static="1">
			<x path="openfl.display.TriangleCulling"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies culling of all triangles facing toward the current view point.</haxe_doc>
		</NEGATIVE>
		<NONE public="1" get="inline" set="null" expr="cast 1" line="35" static="1">
			<x path="openfl.display.TriangleCulling"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies no culling. All triangles in the path are rendered.</haxe_doc>
		</NONE>
		<POSITIVE public="1" get="inline" set="null" expr="cast 2" line="41" static="1">
			<x path="openfl.display.TriangleCulling"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies culling of all triangles facing away from the current view
	 * point. This is also known as backface culling.</haxe_doc>
		</POSITIVE>
		<fromString set="method" line="43" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display.TriangleCulling"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="56" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display.Window" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/display/Window.hx" extern="1">
		<extends path="lime.ui.Window"/>
		<new public="1" set="method">
			<f a="?config" v="null">
				<t path="lime.app.WindowConfig"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ config : null }</e></m></meta>
		</new>
	</class>
	<class path="openfl.display3D.Context3D" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3D.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<supportsVideoTexture public="1" set="null" static="1"><x path="Bool"/></supportsVideoTexture>
		<backBufferHeight public="1" set="null"><x path="Int"/></backBufferHeight>
		<backBufferWidth public="1" set="null"><x path="Int"/></backBufferWidth>
		<driverInfo public="1" set="null"><c path="String"/></driverInfo>
		<enableErrorChecking public="1"><x path="Bool"/></enableErrorChecking>
		<maxBackBufferHeight public="1"><x path="Int"/></maxBackBufferHeight>
		<maxBackBufferWidth public="1"><x path="Int"/></maxBackBufferWidth>
		<profile public="1" set="null"><c path="String"/></profile>
		<clear public="1" set="method">
			<f a="?red:?green:?blue:?alpha:?depth:?stencil:?mask" v="0:0:0:1:1:0:0xFFFFFFFF">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mask : 0xFFFFFFFF, stencil : 0, depth : 1, alpha : 1, blue : 0, green : 0, red : 0 }</e></m></meta>
		</clear>
		<configureBackBuffer public="1" set="method">
			<f a="width:height:antiAlias:?enableDepthAndStencil:?wantsBestResolution:?wantsBestResolutionOnBrowserZoom" v=":::true:false:false">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ wantsBestResolutionOnBrowserZoom : false, wantsBestResolution : false, enableDepthAndStencil : true }</e></m></meta>
		</configureBackBuffer>
		<createCubeTexture public="1" set="method">
			<f a="size:format:optimizeForRenderToTexture:?streamingLevels" v=":::0">
				<x path="Int"/>
				<x path="openfl.display3D.Context3DTextureFormat"/>
				<x path="Bool"/>
				<x path="Int"/>
				<c path="openfl.display3D.textures.CubeTexture"/>
			</f>
			<meta><m n=":value"><e>{ streamingLevels : 0 }</e></m></meta>
		</createCubeTexture>
		<createIndexBuffer public="1" set="method"><f a="numIndices:?bufferUsage">
	<x path="Int"/>
	<x path="openfl.display3D.Context3DBufferUsage"/>
	<c path="openfl.display3D.IndexBuffer3D"/>
</f></createIndexBuffer>
		<createProgram public="1" set="method"><f a=""><c path="openfl.display3D.Program3D"/></f></createProgram>
		<createRectangleTexture public="1" set="method"><f a="width:height:format:optimizeForRenderToTexture">
	<x path="Int"/>
	<x path="Int"/>
	<x path="openfl.display3D.Context3DTextureFormat"/>
	<x path="Bool"/>
	<c path="openfl.display3D.textures.RectangleTexture"/>
</f></createRectangleTexture>
		<createTexture public="1" set="method">
			<f a="width:height:format:optimizeForRenderToTexture:?streamingLevels" v="::::0">
				<x path="Int"/>
				<x path="Int"/>
				<x path="openfl.display3D.Context3DTextureFormat"/>
				<x path="Bool"/>
				<x path="Int"/>
				<c path="openfl.display3D.textures.Texture"/>
			</f>
			<meta><m n=":value"><e>{ streamingLevels : 0 }</e></m></meta>
		</createTexture>
		<createVertexBuffer public="1" set="method"><f a="numVertices:data32PerVertex:?bufferUsage">
	<x path="Int"/>
	<x path="Int"/>
	<x path="openfl.display3D.Context3DBufferUsage"/>
	<c path="openfl.display3D.VertexBuffer3D"/>
</f></createVertexBuffer>
		<createVideoTexture public="1" set="method"><f a=""><c path="openfl.display3D.textures.VideoTexture"/></f></createVideoTexture>
		<dispose public="1" set="method">
			<f a="?recreate" v="true">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ recreate : true }</e></m></meta>
		</dispose>
		<drawToBitmapData public="1" set="method"><f a="destination">
	<c path="openfl.display.BitmapData"/>
	<x path="Void"/>
</f></drawToBitmapData>
		<drawTriangles public="1" set="method">
			<f a="indexBuffer:?firstIndex:?numTriangles" v=":0:-1">
				<c path="openfl.display3D.IndexBuffer3D"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ numTriangles : -1, firstIndex : 0 }</e></m></meta>
		</drawTriangles>
		<present public="1" set="method"><f a=""><x path="Void"/></f></present>
		<setBlendFactors public="1" set="method"><f a="sourceFactor:destinationFactor">
	<x path="openfl.display3D.Context3DBlendFactor"/>
	<x path="openfl.display3D.Context3DBlendFactor"/>
	<x path="Void"/>
</f></setBlendFactors>
		<setColorMask public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setColorMask>
		<setCulling public="1" set="method"><f a="triangleFaceToCull">
	<x path="openfl.display3D.Context3DTriangleFace"/>
	<x path="Void"/>
</f></setCulling>
		<setDepthTest public="1" set="method"><f a="depthMask:passCompareMode">
	<x path="Bool"/>
	<x path="openfl.display3D.Context3DCompareMode"/>
	<x path="Void"/>
</f></setDepthTest>
		<setFillMode public="1" set="method">
			<f a="fillMode">
				<e path="flash.display3D.Context3DFillMode"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash16</e></m>
			</meta>
		</setFillMode>
		<setProgram public="1" set="method"><f a="program">
	<c path="openfl.display3D.Program3D"/>
	<x path="Void"/>
</f></setProgram>
		<setProgramConstantsFromByteArray public="1" set="method"><f a="programType:firstRegister:numRegisters:data:byteArrayOffset">
	<x path="openfl.display3D.Context3DProgramType"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="openfl.utils.ByteArray"/>
	<x path="UInt"/>
	<x path="Void"/>
</f></setProgramConstantsFromByteArray>
		<setProgramConstantsFromMatrix public="1" set="method">
			<f a="programType:firstRegister:matrix:?transposedMatrix" v=":::false">
				<x path="openfl.display3D.Context3DProgramType"/>
				<x path="Int"/>
				<c path="openfl.geom.Matrix3D"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ transposedMatrix : false }</e></m></meta>
		</setProgramConstantsFromMatrix>
		<setProgramConstantsFromVector public="1" set="method">
			<f a="programType:firstRegister:data:?numRegisters" v=":::-1">
				<x path="openfl.display3D.Context3DProgramType"/>
				<x path="Int"/>
				<x path="openfl.Vector"><x path="Float"/></x>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ numRegisters : -1 }</e></m></meta>
		</setProgramConstantsFromVector>
		<setRenderToBackBuffer public="1" set="method"><f a=""><x path="Void"/></f></setRenderToBackBuffer>
		<setRenderToTexture public="1" set="method">
			<f a="texture:?enableDepthAndStencil:?antiAlias:?surfaceSelector:?colorOutputIndex" v=":false:0:0:0">
				<c path="openfl.display3D.textures.TextureBase"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ colorOutputIndex : 0, surfaceSelector : 0, antiAlias : 0, enableDepthAndStencil : false }</e></m></meta>
		</setRenderToTexture>
		<setSamplerStateAt public="1" set="method"><f a="sampler:wrap:filter:mipfilter">
	<x path="Int"/>
	<x path="openfl.display3D.Context3DWrapMode"/>
	<x path="openfl.display3D.Context3DTextureFilter"/>
	<x path="openfl.display3D.Context3DMipFilter"/>
	<x path="Void"/>
</f></setSamplerStateAt>
		<setScissorRectangle public="1" set="method"><f a="rectangle">
	<c path="openfl.geom.Rectangle"/>
	<x path="Void"/>
</f></setScissorRectangle>
		<setStencilActions public="1" set="method"><f a="?triangleFace:?compareMode:?actionOnBothPass:?actionOnDepthFail:?actionOnDepthPassStencilFail">
	<x path="openfl.display3D.Context3DTriangleFace"/>
	<x path="openfl.display3D.Context3DCompareMode"/>
	<x path="openfl.display3D.Context3DStencilAction"/>
	<x path="openfl.display3D.Context3DStencilAction"/>
	<x path="openfl.display3D.Context3DStencilAction"/>
	<x path="Void"/>
</f></setStencilActions>
		<setStencilReferenceValue public="1" set="method">
			<f a="referenceValue:?readMask:?writeMask" v=":255:255">
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ writeMask : 255, readMask : 255 }</e></m></meta>
		</setStencilReferenceValue>
		<setTextureAt public="1" set="method"><f a="sampler:texture">
	<x path="Int"/>
	<c path="openfl.display3D.textures.TextureBase"/>
	<x path="Void"/>
</f></setTextureAt>
		<setVertexBufferAt public="1" set="method">
			<f a="index:buffer:?bufferOffset:?format" v="::0:">
				<x path="Int"/>
				<c path="openfl.display3D.VertexBuffer3D"/>
				<x path="Int"/>
				<x path="openfl.display3D.Context3DVertexBufferFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ bufferOffset : 0 }</e></m></meta>
		</setVertexBufferAt>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="openfl.display3D.Context3DBlendFactor" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DBlendFactor.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DBlendFactor.hx" private="1" module="openfl.display3D.Context3DBlendFactor">
	<DESTINATION_ALPHA public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DESTINATION_ALPHA>
	<DESTINATION_COLOR public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DESTINATION_COLOR>
	<ONE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE>
	<ONE_MINUS_DESTINATION_ALPHA public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_DESTINATION_ALPHA>
	<ONE_MINUS_DESTINATION_COLOR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_DESTINATION_COLOR>
	<ONE_MINUS_SOURCE_ALPHA public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_SOURCE_ALPHA>
	<ONE_MINUS_SOURCE_COLOR public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_SOURCE_COLOR>
	<SOURCE_ALPHA public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOURCE_ALPHA>
	<SOURCE_COLOR public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOURCE_COLOR>
	<ZERO public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
		<x path="openfl.display3D.Context3DBlendFactor"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ZERO>
	<fromString set="method" line="17" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DBlendFactor"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="37" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DBlendFactor.hx" private="1" module="openfl.display3D.Context3DBlendFactor">
		<DESTINATION_ALPHA public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DESTINATION_ALPHA>
		<DESTINATION_COLOR public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DESTINATION_COLOR>
		<ONE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE>
		<ONE_MINUS_DESTINATION_ALPHA public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_DESTINATION_ALPHA>
		<ONE_MINUS_DESTINATION_COLOR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_DESTINATION_COLOR>
		<ONE_MINUS_SOURCE_ALPHA public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_SOURCE_ALPHA>
		<ONE_MINUS_SOURCE_COLOR public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_SOURCE_COLOR>
		<SOURCE_ALPHA public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOURCE_ALPHA>
		<SOURCE_COLOR public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOURCE_COLOR>
		<ZERO public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
			<x path="openfl.display3D.Context3DBlendFactor"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ZERO>
		<fromString set="method" line="17" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DBlendFactor"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="37" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DBufferUsage" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DBufferUsage.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DBufferUsage.Context3DBufferUsage_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DBufferUsage.hx" private="1" module="openfl.display3D.Context3DBufferUsage">
	<DYNAMIC_DRAW public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DBufferUsage"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DYNAMIC_DRAW>
	<STATIC_DRAW public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DBufferUsage"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STATIC_DRAW>
	<fromString set="method" line="9" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DBufferUsage"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="21" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DBufferUsage.Context3DBufferUsage_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DBufferUsage.hx" private="1" module="openfl.display3D.Context3DBufferUsage">
		<DYNAMIC_DRAW public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DBufferUsage"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DYNAMIC_DRAW>
		<STATIC_DRAW public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DBufferUsage"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STATIC_DRAW>
		<fromString set="method" line="9" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DBufferUsage"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="21" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DClearMask" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DClearMask.hx">
		<from>
			<icast><x path="Int"/></icast>
			<icast><x path="UInt"/></icast>
		</from>
		<this><x path="UInt"/></this>
		<to>
			<icast><x path="Int"/></icast>
			<icast><x path="UInt"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DClearMask.Context3DClearMask_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DClearMask.hx" private="1" module="openfl.display3D.Context3DClearMask" extern="1">
	<ALL public="1" get="inline" set="null" expr="cast 0x07" line="6" static="1">
		<x path="openfl.display3D.Context3DClearMask"/>
		<meta>
			<m n=":value"><e>cast 0x07</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALL>
	<COLOR public="1" get="inline" set="null" expr="cast 0x01" line="7" static="1">
		<x path="openfl.display3D.Context3DClearMask"/>
		<meta>
			<m n=":value"><e>cast 0x01</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR>
	<DEPTH public="1" get="inline" set="null" expr="cast 0x02" line="8" static="1">
		<x path="openfl.display3D.Context3DClearMask"/>
		<meta>
			<m n=":value"><e>cast 0x02</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH>
	<STENCIL public="1" get="inline" set="null" expr="cast 0x04" line="9" static="1">
		<x path="openfl.display3D.Context3DClearMask"/>
		<meta>
			<m n=":value"><e>cast 0x04</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DClearMask.Context3DClearMask_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DClearMask.hx" private="1" module="openfl.display3D.Context3DClearMask" extern="1">
		<ALL public="1" get="inline" set="null" expr="cast 0x07" line="6" static="1">
			<x path="openfl.display3D.Context3DClearMask"/>
			<meta>
				<m n=":value"><e>cast 0x07</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALL>
		<COLOR public="1" get="inline" set="null" expr="cast 0x01" line="7" static="1">
			<x path="openfl.display3D.Context3DClearMask"/>
			<meta>
				<m n=":value"><e>cast 0x01</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR>
		<DEPTH public="1" get="inline" set="null" expr="cast 0x02" line="8" static="1">
			<x path="openfl.display3D.Context3DClearMask"/>
			<meta>
				<m n=":value"><e>cast 0x02</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH>
		<STENCIL public="1" get="inline" set="null" expr="cast 0x04" line="9" static="1">
			<x path="openfl.display3D.Context3DClearMask"/>
			<meta>
				<m n=":value"><e>cast 0x04</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DCompareMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DCompareMode.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DCompareMode.hx" private="1" module="openfl.display3D.Context3DCompareMode">
	<ALWAYS public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DCompareMode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALWAYS>
	<EQUAL public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DCompareMode"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUAL>
	<GREATER public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DCompareMode"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER>
	<GREATER_EQUAL public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display3D.Context3DCompareMode"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_EQUAL>
	<LESS public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="openfl.display3D.Context3DCompareMode"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS>
	<LESS_EQUAL public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="openfl.display3D.Context3DCompareMode"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_EQUAL>
	<NEVER public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="openfl.display3D.Context3DCompareMode"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEVER>
	<NOT_EQUAL public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
		<x path="openfl.display3D.Context3DCompareMode"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOT_EQUAL>
	<fromString set="method" line="15" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DCompareMode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="33" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DCompareMode.hx" private="1" module="openfl.display3D.Context3DCompareMode">
		<ALWAYS public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DCompareMode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALWAYS>
		<EQUAL public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DCompareMode"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUAL>
		<GREATER public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DCompareMode"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER>
		<GREATER_EQUAL public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display3D.Context3DCompareMode"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_EQUAL>
		<LESS public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="openfl.display3D.Context3DCompareMode"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS>
		<LESS_EQUAL public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="openfl.display3D.Context3DCompareMode"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_EQUAL>
		<NEVER public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="openfl.display3D.Context3DCompareMode"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEVER>
		<NOT_EQUAL public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
			<x path="openfl.display3D.Context3DCompareMode"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOT_EQUAL>
		<fromString set="method" line="15" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DCompareMode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="33" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DMipFilter" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DMipFilter.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DMipFilter.Context3DMipFilter_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DMipFilter.hx" private="1" module="openfl.display3D.Context3DMipFilter">
	<MIPLINEAR public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DMipFilter"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MIPLINEAR>
	<MIPNEAREST public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DMipFilter"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MIPNEAREST>
	<MIPNONE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DMipFilter"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MIPNONE>
	<fromString set="method" line="10" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DMipFilter"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="23" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DMipFilter.Context3DMipFilter_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DMipFilter.hx" private="1" module="openfl.display3D.Context3DMipFilter">
		<MIPLINEAR public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DMipFilter"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MIPLINEAR>
		<MIPNEAREST public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DMipFilter"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MIPNEAREST>
		<MIPNONE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DMipFilter"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MIPNONE>
		<fromString set="method" line="10" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DMipFilter"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="23" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DProfile" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DProfile.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DProfile.Context3DProfile_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DProfile.hx" private="1" module="openfl.display3D.Context3DProfile">
	<BASELINE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DProfile"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BASELINE>
	<BASELINE_CONSTRAINED public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DProfile"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BASELINE_CONSTRAINED>
	<BASELINE_EXTENDED public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DProfile"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BASELINE_EXTENDED>
	<STANDARD public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display3D.Context3DProfile"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STANDARD>
	<STANDARD_CONSTRAINED public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="openfl.display3D.Context3DProfile"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STANDARD_CONSTRAINED>
	<STANDARD_EXTENDED public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="openfl.display3D.Context3DProfile"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STANDARD_EXTENDED>
	<fromString set="method" line="13" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DProfile"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="29" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DProfile.Context3DProfile_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DProfile.hx" private="1" module="openfl.display3D.Context3DProfile">
		<BASELINE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DProfile"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BASELINE>
		<BASELINE_CONSTRAINED public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DProfile"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BASELINE_CONSTRAINED>
		<BASELINE_EXTENDED public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DProfile"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BASELINE_EXTENDED>
		<STANDARD public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display3D.Context3DProfile"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STANDARD>
		<STANDARD_CONSTRAINED public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="openfl.display3D.Context3DProfile"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STANDARD_CONSTRAINED>
		<STANDARD_EXTENDED public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="openfl.display3D.Context3DProfile"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STANDARD_EXTENDED>
		<fromString set="method" line="13" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DProfile"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="29" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DProgramType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DProgramType.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DProgramType.Context3DProgramType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DProgramType.hx" private="1" module="openfl.display3D.Context3DProgramType">
	<FRAGMENT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DProgramType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAGMENT>
	<VERTEX public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DProgramType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX>
	<fromString set="method" line="9" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DProgramType"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="21" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DProgramType.Context3DProgramType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DProgramType.hx" private="1" module="openfl.display3D.Context3DProgramType">
		<FRAGMENT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DProgramType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAGMENT>
		<VERTEX public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DProgramType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX>
		<fromString set="method" line="9" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DProgramType"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="21" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DRenderMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DRenderMode.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DRenderMode.Context3DRenderMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DRenderMode.hx" private="1" module="openfl.display3D.Context3DRenderMode">
	<AUTO public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DRenderMode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUTO>
	<SOFTWARE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DRenderMode"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOFTWARE>
	<fromString set="method" line="9" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DRenderMode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="21" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DRenderMode.Context3DRenderMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DRenderMode.hx" private="1" module="openfl.display3D.Context3DRenderMode">
		<AUTO public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DRenderMode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUTO>
		<SOFTWARE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DRenderMode"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOFTWARE>
		<fromString set="method" line="9" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DRenderMode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="21" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DStencilAction" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DStencilAction.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DStencilAction.Context3DStencilAction_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DStencilAction.hx" private="1" module="openfl.display3D.Context3DStencilAction">
	<DECREMENT_SATURATE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DStencilAction"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECREMENT_SATURATE>
	<DECREMENT_WRAP public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DStencilAction"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECREMENT_WRAP>
	<INCREMENT_SATURATE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DStencilAction"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INCREMENT_SATURATE>
	<INCREMENT_WRAP public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display3D.Context3DStencilAction"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INCREMENT_WRAP>
	<INVERT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="openfl.display3D.Context3DStencilAction"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVERT>
	<KEEP public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="openfl.display3D.Context3DStencilAction"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KEEP>
	<SET public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="openfl.display3D.Context3DStencilAction"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SET>
	<ZERO public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
		<x path="openfl.display3D.Context3DStencilAction"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ZERO>
	<fromString set="method" line="15" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DStencilAction"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="33" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DStencilAction.Context3DStencilAction_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DStencilAction.hx" private="1" module="openfl.display3D.Context3DStencilAction">
		<DECREMENT_SATURATE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DStencilAction"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECREMENT_SATURATE>
		<DECREMENT_WRAP public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DStencilAction"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECREMENT_WRAP>
		<INCREMENT_SATURATE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DStencilAction"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INCREMENT_SATURATE>
		<INCREMENT_WRAP public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display3D.Context3DStencilAction"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INCREMENT_WRAP>
		<INVERT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="openfl.display3D.Context3DStencilAction"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVERT>
		<KEEP public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="openfl.display3D.Context3DStencilAction"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KEEP>
		<SET public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="openfl.display3D.Context3DStencilAction"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SET>
		<ZERO public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
			<x path="openfl.display3D.Context3DStencilAction"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ZERO>
		<fromString set="method" line="15" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DStencilAction"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="33" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DTextureFilter" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DTextureFilter.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DTextureFilter.Context3DTextureFilter_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DTextureFilter.hx" private="1" module="openfl.display3D.Context3DTextureFilter">
	<ANISOTROPIC16X public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DTextureFilter"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ANISOTROPIC16X>
	<ANISOTROPIC2X public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DTextureFilter"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ANISOTROPIC2X>
	<ANISOTROPIC4X public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DTextureFilter"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ANISOTROPIC4X>
	<ANISOTROPIC8X public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display3D.Context3DTextureFilter"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ANISOTROPIC8X>
	<LINEAR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="openfl.display3D.Context3DTextureFilter"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINEAR>
	<NEAREST public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="openfl.display3D.Context3DTextureFilter"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEAREST>
	<fromString set="method" line="13" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DTextureFilter"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="29" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DTextureFilter.Context3DTextureFilter_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DTextureFilter.hx" private="1" module="openfl.display3D.Context3DTextureFilter">
		<ANISOTROPIC16X public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DTextureFilter"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ANISOTROPIC16X>
		<ANISOTROPIC2X public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DTextureFilter"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ANISOTROPIC2X>
		<ANISOTROPIC4X public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DTextureFilter"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ANISOTROPIC4X>
		<ANISOTROPIC8X public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display3D.Context3DTextureFilter"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ANISOTROPIC8X>
		<LINEAR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="openfl.display3D.Context3DTextureFilter"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINEAR>
		<NEAREST public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="openfl.display3D.Context3DTextureFilter"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEAREST>
		<fromString set="method" line="13" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DTextureFilter"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="29" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DTextureFormat" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DTextureFormat.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DTextureFormat.Context3DTextureFormat_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DTextureFormat.hx" private="1" module="openfl.display3D.Context3DTextureFormat">
	<BGR_PACKED public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DTextureFormat"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BGR_PACKED>
	<BGRA public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DTextureFormat"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BGRA>
	<BGRA_PACKED public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DTextureFormat"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BGRA_PACKED>
	<COMPRESSED public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display3D.Context3DTextureFormat"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPRESSED>
	<COMPRESSED_ALPHA public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="openfl.display3D.Context3DTextureFormat"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPRESSED_ALPHA>
	<RGBA_HALF_FLOAT public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="openfl.display3D.Context3DTextureFormat"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGBA_HALF_FLOAT>
	<fromString set="method" line="13" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DTextureFormat"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="29" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DTextureFormat.Context3DTextureFormat_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DTextureFormat.hx" private="1" module="openfl.display3D.Context3DTextureFormat">
		<BGR_PACKED public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DTextureFormat"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BGR_PACKED>
		<BGRA public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DTextureFormat"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BGRA>
		<BGRA_PACKED public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DTextureFormat"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BGRA_PACKED>
		<COMPRESSED public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display3D.Context3DTextureFormat"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPRESSED>
		<COMPRESSED_ALPHA public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="openfl.display3D.Context3DTextureFormat"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPRESSED_ALPHA>
		<RGBA_HALF_FLOAT public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="openfl.display3D.Context3DTextureFormat"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGBA_HALF_FLOAT>
		<fromString set="method" line="13" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DTextureFormat"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="29" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DTriangleFace" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DTriangleFace.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DTriangleFace.hx" private="1" module="openfl.display3D.Context3DTriangleFace">
	<BACK public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DTriangleFace"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACK>
	<FRONT public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DTriangleFace"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRONT>
	<FRONT_AND_BACK public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DTriangleFace"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRONT_AND_BACK>
	<NONE public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display3D.Context3DTriangleFace"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<fromString set="method" line="11" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DTriangleFace"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="25" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DTriangleFace.hx" private="1" module="openfl.display3D.Context3DTriangleFace">
		<BACK public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DTriangleFace"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACK>
		<FRONT public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DTriangleFace"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRONT>
		<FRONT_AND_BACK public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DTriangleFace"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRONT_AND_BACK>
		<NONE public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display3D.Context3DTriangleFace"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<fromString set="method" line="11" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DTriangleFace"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="25" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DVertexBufferFormat" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DVertexBufferFormat.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DVertexBufferFormat.Context3DVertexBufferFormat_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DVertexBufferFormat.hx" private="1" module="openfl.display3D.Context3DVertexBufferFormat">
	<BYTES_4 public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DVertexBufferFormat"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BYTES_4>
	<FLOAT_1 public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DVertexBufferFormat"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_1>
	<FLOAT_2 public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DVertexBufferFormat"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_2>
	<FLOAT_3 public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display3D.Context3DVertexBufferFormat"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_3>
	<FLOAT_4 public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="openfl.display3D.Context3DVertexBufferFormat"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_4>
	<fromString set="method" line="12" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DVertexBufferFormat"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="27" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DVertexBufferFormat.Context3DVertexBufferFormat_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DVertexBufferFormat.hx" private="1" module="openfl.display3D.Context3DVertexBufferFormat">
		<BYTES_4 public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DVertexBufferFormat"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BYTES_4>
		<FLOAT_1 public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DVertexBufferFormat"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_1>
		<FLOAT_2 public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DVertexBufferFormat"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_2>
		<FLOAT_3 public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display3D.Context3DVertexBufferFormat"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_3>
		<FLOAT_4 public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="openfl.display3D.Context3DVertexBufferFormat"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_4>
		<fromString set="method" line="12" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DVertexBufferFormat"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="27" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.display3D.Context3DWrapMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DWrapMode.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.display3D._Context3DWrapMode.Context3DWrapMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DWrapMode.hx" private="1" module="openfl.display3D.Context3DWrapMode">
	<CLAMP public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.display3D.Context3DWrapMode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLAMP>
	<CLAMP_U_REPEAT_V public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.display3D.Context3DWrapMode"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLAMP_U_REPEAT_V>
	<REPEAT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.display3D.Context3DWrapMode"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REPEAT>
	<REPEAT_U_CLAMP_V public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="openfl.display3D.Context3DWrapMode"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REPEAT_U_CLAMP_V>
	<fromString set="method" line="11" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.display3D.Context3DWrapMode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="25" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.display3D._Context3DWrapMode.Context3DWrapMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Context3DWrapMode.hx" private="1" module="openfl.display3D.Context3DWrapMode">
		<CLAMP public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.display3D.Context3DWrapMode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLAMP>
		<CLAMP_U_REPEAT_V public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.display3D.Context3DWrapMode"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLAMP_U_REPEAT_V>
		<REPEAT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.display3D.Context3DWrapMode"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REPEAT>
		<REPEAT_U_CLAMP_V public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="openfl.display3D.Context3DWrapMode"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REPEAT_U_CLAMP_V>
		<fromString set="method" line="11" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.display3D.Context3DWrapMode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="25" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.display3D.IndexBuffer3D" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/IndexBuffer3D.hx" extern="1">
		<dispose public="1" set="method"><f a=""><x path="Void"/></f></dispose>
		<uploadFromByteArray public="1" set="method"><f a="data:byteArrayOffset:startOffset:count">
	<x path="openfl.utils.ByteArray"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uploadFromByteArray>
		<uploadFromTypedArray public="1" set="method"><f a="data">
	<c path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></uploadFromTypedArray>
		<uploadFromVector public="1" set="method"><f a="data:startOffset:count">
	<x path="openfl.Vector"><x path="UInt"/></x>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uploadFromVector>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display3D.Program3D" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/Program3D.hx" extern="1">
		<dispose public="1" set="method"><f a=""><x path="Void"/></f></dispose>
		<upload public="1" set="method"><f a="vertexProgram:fragmentProgram">
	<x path="openfl.utils.ByteArray"/>
	<x path="openfl.utils.ByteArray"/>
	<x path="Void"/>
</f></upload>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display3D.VertexBuffer3D" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/VertexBuffer3D.hx" extern="1">
		<dispose public="1" set="method"><f a=""><x path="Void"/></f></dispose>
		<uploadFromByteArray public="1" set="method"><f a="data:byteArrayOffset:startVertex:numVertices">
	<x path="openfl.utils.ByteArray"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uploadFromByteArray>
		<uploadFromTypedArray public="1" set="method"><f a="data">
	<c path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></uploadFromTypedArray>
		<uploadFromVector public="1" set="method"><f a="data:startVertex:numVertices">
	<x path="openfl.Vector"><x path="Float"/></x>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uploadFromVector>
	</class>
	<class path="openfl.display3D.textures.TextureBase" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/textures/TextureBase.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<dispose public="1" set="method"><f a=""><x path="Void"/></f></dispose>
	</class>
	<class path="openfl.display3D.textures.CubeTexture" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/textures/CubeTexture.hx" extern="1">
		<extends path="openfl.display3D.textures.TextureBase"/>
		<uploadCompressedTextureFromByteArray public="1" set="method">
			<f a="data:byteArrayOffset:?async" v="::false">
				<x path="openfl.utils.ByteArray"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ async : false }</e></m></meta>
		</uploadCompressedTextureFromByteArray>
		<uploadFromBitmapData public="1" set="method">
			<f a="source:side:?miplevel" v="::0">
				<c path="openfl.display.BitmapData"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ miplevel : 0 }</e></m></meta>
		</uploadFromBitmapData>
		<uploadFromByteArray public="1" set="method">
			<f a="data:byteArrayOffset:side:?miplevel" v=":::0">
				<x path="openfl.utils.ByteArray"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ miplevel : 0 }</e></m></meta>
		</uploadFromByteArray>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display3D.textures.RectangleTexture" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/textures/RectangleTexture.hx" extern="1">
		<extends path="openfl.display3D.textures.TextureBase"/>
		<uploadFromBitmapData public="1" set="method"><f a="source">
	<c path="openfl.display.BitmapData"/>
	<x path="Void"/>
</f></uploadFromBitmapData>
		<uploadFromByteArray public="1" set="method"><f a="data:byteArrayOffset">
	<x path="openfl.utils.ByteArray"/>
	<x path="UInt"/>
	<x path="Void"/>
</f></uploadFromByteArray>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display3D.textures.Texture" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/textures/Texture.hx" extern="1">
		<extends path="openfl.display3D.textures.TextureBase"/>
		<uploadCompressedTextureFromByteArray public="1" set="method">
			<f a="data:byteArrayOffset:?async" v="::false">
				<x path="openfl.utils.ByteArray"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ async : false }</e></m></meta>
		</uploadCompressedTextureFromByteArray>
		<uploadFromBitmapData public="1" set="method">
			<f a="source:?miplevel" v=":0">
				<c path="openfl.display.BitmapData"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ miplevel : 0 }</e></m></meta>
		</uploadFromBitmapData>
		<uploadFromByteArray public="1" set="method">
			<f a="data:byteArrayOffset:?miplevel" v="::0">
				<x path="openfl.utils.ByteArray"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ miplevel : 0 }</e></m></meta>
		</uploadFromByteArray>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.display3D.textures.VideoTexture" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/display3D/textures/VideoTexture.hx" extern="1">
		<extends path="openfl.display3D.textures.TextureBase"/>
		<videoHeight public="1" set="null"><x path="Int"/></videoHeight>
		<videoWidth public="1" set="null"><x path="Int"/></videoWidth>
		<attachNetStream public="1" set="method"><f a="netStream">
	<c path="openfl.net.NetStream"/>
	<x path="Void"/>
</f></attachNetStream>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.errors.Error" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/errors/Error.hx" extern="1">
		<length public="1" static="1">
			<x path="Int"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</length>
		<getErrorMessage public="1" set="method" static="1">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</getErrorMessage>
		<throwError public="1" set="method" static="1">
			<f a="type:index:?p1:?p2:?p3:?p4:?p5">
				<x path="Class"><d/></x>
				<x path="UInt"/>
				<d/>
				<d/>
				<d/>
				<d/>
				<d/>
				<d/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</throwError>
		<errorID public="1" set="null"><x path="Int"/></errorID>
		<message public="1"><c path="String"/></message>
		<name public="1"><c path="String"/></name>
		<getStackTrace public="1" set="method"><f a=""><c path="String"/></f></getStackTrace>
		<new public="1" set="method">
			<f a="?message:?id" v="&quot;&quot;:0">
				<c path="String"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ id : 0, message : "" }</e></m></meta>
		</new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.errors.ArgumentError" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/errors/ArgumentError.hx" extern="1"><extends path="openfl.errors.Error"/></class>
	<class path="openfl.errors.IOError" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/errors/IOError.hx" extern="1">
		<extends path="openfl.errors.Error"/>
		<new public="1" set="method">
			<f a="?message" v="&quot;&quot;">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : "" }</e></m></meta>
		</new>
	</class>
	<class path="openfl.errors.EOFError" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/errors/EOFError.hx" extern="1">
		<extends path="openfl.errors.IOError"/>
		<new public="1" set="method">
			<f a="?message:?id" v=":0">
				<c path="String"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ id : 0 }</e></m></meta>
			<haxe_doc>* Creates a new EOFError object.
	 * 
	 * @param message A string associated with the error object.</haxe_doc>
		</new>
		<haxe_doc>* An EOFError exception is thrown when you attempt to read past the end of
 * the available data. For example, an EOFError is thrown when one of the read
 * methods in the IDataInput interface is called and there is insufficient
 * data to satisfy the read request.</haxe_doc>
	</class>
	<class path="openfl.errors.IllegalOperationError" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/errors/IllegalOperationError.hx" extern="1">
		<extends path="openfl.errors.Error"/>
		<new public="1" set="method">
			<f a="?message" v="&quot;&quot;">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : "" }</e></m></meta>
			<haxe_doc>* Creates a new IllegalOperationError object.
	 * 
	 * @param message A string associated with the error object.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[* The IllegalOperationError exception is thrown when a method is not
 * implemented or the implementation doesn't cover the current usage.
 *
 * Examples of illegal operation error exceptions include:
 *
 * 
 *  * A base class, such as DisplayObjectContainer, provides more
 * functionality than a Stage can support(such as masks)
 *  * Certain accessibility methods are called when the player is compiled
 * without accessibility support
 *  * The mms.cfg setting prohibits a FileReference action
 *  * ActionScript tries to run a `FileReference.browse()` call
 * when a browse dialog box is already open
 *  * ActionScript tries to use an unsupported protocol for a FileReference
 * object(such as FTP)
 * <li product="flash">Authoring-only features are invoked from a run-time
 * player
 * <li product="flash">An attempt is made to set the name of a Timeline-placed
 * object
 *]]></haxe_doc>
	</class>
	<class path="openfl.errors.RangeError" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/errors/RangeError.hx" extern="1">
		<extends path="openfl.errors.Error"/>
		<new public="1" set="method">
			<f a="?message" v="&quot;&quot;">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : "" }</e></m></meta>
		</new>
	</class>
	<class path="openfl.errors.SecurityError" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/errors/SecurityError.hx" extern="1">
		<extends path="openfl.errors.Error"/>
		<new public="1" set="method">
			<f a="?message" v="&quot;&quot;">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : "" }</e></m></meta>
		</new>
	</class>
	<class path="openfl.errors.TypeError" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/errors/TypeError.hx" extern="1">
		<extends path="openfl.errors.Error"/>
		<new public="1" set="method">
			<f a="?message" v="&quot;&quot;">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : "" }</e></m></meta>
		</new>
	</class>
	<class path="openfl.events.AccelerometerEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/AccelerometerEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<UPDATE public="1" get="inline" set="null" expr="&quot;update&quot;" line="19" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"update"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `AccelerometerEvent` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</UPDATE>
		<accelerationX public="1">
			<x path="Float"/>
			<haxe_doc>* Acceleration along the x-axis, measured in Gs.(1 G is roughly 9.8
	 * m/sec/sec.) The x-axis runs from the left to the right of the device when
	 * it is in the upright position. The acceleration is positive if the device
	 * moves towards the right.</haxe_doc>
		</accelerationX>
		<accelerationY public="1">
			<x path="Float"/>
			<haxe_doc>* Acceleration along the y-axis, measured in Gs.(1 G is roughly 9.8
	 * m/sec/sec.). The y-axis runs from the bottom to the top of the device when
	 * it is in the upright position. The acceleration is positive if the device
	 * moves up relative to this axis.</haxe_doc>
		</accelerationY>
		<accelerationZ public="1">
			<x path="Float"/>
			<haxe_doc>* Acceleration along the z-axis, measured in Gs.(1 G is roughly 9.8
	 * m/sec/sec.). The z-axis runs perpendicular to the face of the device. The
	 * acceleration is positive if you move the device so that the face moves
	 * higher.</haxe_doc>
		</accelerationZ>
		<timestamp public="1">
			<x path="Float"/>
			<haxe_doc>* The number of milliseconds at the time of the event since the runtime was
	 * initialized. For example, if the device captures accelerometer data 4
	 * seconds after the application initializes, then the `timestamp`
	 * property of the event is set to 4000.</haxe_doc>
		</timestamp>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?timestamp:?accelerationX:?accelerationY:?accelerationZ" v=":false:false:0:0:0:0">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ accelerationZ : 0, accelerationY : 0, accelerationX : 0, timestamp : 0, cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an AccelerometerEvent object that contains information about
	 * acceleration along three dimensional axis. Event objects are passed as
	 * parameters to event listeners.
	 * 
	 * @param type          The type of the event. Event listeners can access
	 *                      this information through the inherited
	 *                      `type` property. There is only one type of
	 *                      update event: `AccelerometerEvent.UPDATE`.
	 * @param bubbles       Determines whether the Event object bubbles. Event
	 *                      listeners can access this information through the
	 *                      inherited `bubbles` property.
	 * @param cancelable    Determines whether the Event object can be canceled.
	 *                      Event listeners can access this information through
	 *                      the inherited `cancelable` property.
	 * @param timestamp     The timestamp of the Accelerometer update.
	 * @param accelerationX The acceleration value in Gs(9.8m/sec/sec) along the
	 *                      x-axis.
	 * @param accelerationY The acceleration value in Gs(9.8m/sec/sec) along the
	 *                      y-axis.
	 * @param accelerationZ The acceleration value in Gs(9.8m/sec/sec) along the
	 *                      z-axis.</haxe_doc>
		</new>
		<haxe_doc>* The Accelerometer class dispatches AccelerometerEvent objects when
 * acceleration updates are obtained from the Accelerometer sensor installed
 * on the device.
 *</haxe_doc>
	</class>
	<class path="openfl.events.ActivityEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/ActivityEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<ACTIVITY public="1" get="inline" set="null" expr="&quot;activity&quot;" line="7" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"activity"</e></m></meta>
		</ACTIVITY>
		<activating public="1"><x path="Bool"/></activating>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?activating" v=":false:false:false">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ activating : false, cancelable : false, bubbles : false }</e></m></meta>
		</new>
	</class>
	<class path="openfl.events.TextEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/TextEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<LINK public="1" get="inline" set="null" expr="&quot;link&quot;" line="20" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"link"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a `link`
	 * event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</LINK>
		<TEXT_INPUT public="1" get="inline" set="null" expr="&quot;textInput&quot;" line="31" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"textInput"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `textInput` event object.
	 *
	 * **Note:** This event is not dispatched for the Delete or Backspace
	 * keys.
	 *
	 * This event has the following properties:</haxe_doc>
		</TEXT_INPUT>
		<text public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[* For a `textInput` event, the character or sequence of
	 * characters entered by the user. For a `link` event, the text of
	 * the `event` attribute of the `href` attribute of the
	 * `<a>` tag.]]></haxe_doc>
		</text>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?text" v=":false:false:&quot;&quot;">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ text : "", cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an Event object that contains information about text events. Event
	 * objects are passed as parameters to event listeners.
	 * 
	 * @param type       The type of the event. Event listeners can access this
	 *                   information through the inherited `type`
	 *                   property. Possible values are:
	 *                   `TextEvent.LINK` and
	 *                   `TextEvent.TEXT_INPUT`.
	 * @param bubbles    Determines whether the Event object participates in the
	 *                   bubbling phase of the event flow. Event listeners can
	 *                   access this information through the inherited
	 *                   `bubbles` property.
	 * @param cancelable Determines whether the Event object can be canceled.
	 *                   Event listeners can access this information through the
	 *                   inherited `cancelable` property.
	 * @param text       One or more characters of text entered by the user.
	 *                   Event listeners can access this information through the
	 *                   `text` property.</haxe_doc>
		</new>
		<haxe_doc>* An object dispatches a TextEvent object when a user enters text in a text
 * field or clicks a hyperlink in an HTML-enabled text field. There are two
 * types of text events: `TextEvent.LINK` and
 * `TextEvent.TEXT_INPUT`.
 *</haxe_doc>
	</class>
	<class path="openfl.events.ErrorEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/ErrorEvent.hx" extern="1">
		<extends path="openfl.events.TextEvent"/>
		<ERROR public="1" get="inline" set="null" expr="&quot;error&quot;" line="32" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"error"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of an
	 * `error` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</ERROR>
		<errorID public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* Contains the reference number associated with the specific error. For a
	 * custom ErrorEvent object, this number is the value from the
	 * `id` parameter supplied in the constructor.</haxe_doc>
		</errorID>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?text:?id" v=":false:false:&quot;&quot;:0">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ id : 0, text : "", cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an Event object that contains information about error events.
	 * Event objects are passed as parameters to event listeners.
	 * 
	 * @param type       The type of the event. Event listeners can access this
	 *                   information through the inherited `type`
	 *                   property. There is only one type of error event:
	 *                   `ErrorEvent.ERROR`.
	 * @param bubbles    Determines whether the Event object bubbles. Event
	 *                   listeners can access this information through the
	 *                   inherited `bubbles` property.
	 * @param cancelable Determines whether the Event object can be canceled.
	 *                   Event listeners can access this information through the
	 *                   inherited `cancelable` property.
	 * @param text       Text to be displayed as an error message. Event
	 *                   listeners can access this information through the
	 *                   `text` property.
	 * @param id         A reference number to associate with the specific error
	 *                  (supported in Adobe AIR only).</haxe_doc>
		</new>
		<haxe_doc>* An object dispatches an ErrorEvent object when an error causes an
 * asynchronous operation to fail.
 *
 * The ErrorEvent class defines only one type of `error` event:
 * `ErrorEvent.ERROR`. The ErrorEvent class also serves as the base
 * class for several other error event classes, including the AsyncErrorEvent,
 * IOErrorEvent, SecurityErrorEvent, SQLErrorEvent, and UncaughtErrorEvent
 * classes.
 *
 * You can check for `error` events that do not have any
 * listeners by registering a listener for the `uncaughtError`
 * (UncaughtErrorEvent.UNCAUGHT_ERROR) event.
 *
 * An uncaught error also causes an error dialog box displaying the error
 * event to appear when content is running in the debugger version of Flash
 * Player or the AIR Debug Launcher(ADL) application.
 *</haxe_doc>
	</class>
	<class path="openfl.events.AsyncErrorEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/AsyncErrorEvent.hx" extern="1">
		<extends path="openfl.events.ErrorEvent"/>
		<ASYNC_ERROR public="1" get="inline" set="null" expr="&quot;asyncError&quot;" line="10" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"asyncError"</e></m></meta>
		</ASYNC_ERROR>
		<error public="1"><e path="haxe.io.Error"/></error>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?text:?error" v=":false:false:&quot;&quot;:null">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="String"/>
				<e path="haxe.io.Error"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ error : null, text : "", cancelable : false, bubbles : false }</e></m></meta>
		</new>
	</class>
	<class path="openfl.events.DataEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/DataEvent.hx" extern="1">
		<extends path="openfl.events.TextEvent"/>
		<DATA public="1" get="inline" set="null" expr="&quot;data&quot;" line="7" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"data"</e></m></meta>
		</DATA>
		<UPLOAD_COMPLETE_DATA public="1" get="inline" set="null" expr="&quot;uploadCompleteData&quot;" line="8" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"uploadCompleteData"</e></m></meta>
		</UPLOAD_COMPLETE_DATA>
		<data public="1"><c path="String"/></data>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?data" v=":false:false:&quot;&quot;">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ data : "", cancelable : false, bubbles : false }</e></m></meta>
		</new>
	</class>
	<abstract path="openfl.events.EventPhase" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/EventPhase.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>* The EventPhase class provides values for the `eventPhase`
 * property of the Event class.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.events._EventPhase.EventPhase_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/EventPhase.hx" private="1" module="openfl.events.EventPhase" extern="1">
	<AT_TARGET public="1" get="inline" set="null" expr="cast 2" line="10" static="1">
		<x path="openfl.events.EventPhase"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AT_TARGET>
	<BUBBLING_PHASE public="1" get="inline" set="null" expr="cast 3" line="11" static="1">
		<x path="openfl.events.EventPhase"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUBBLING_PHASE>
	<CAPTURING_PHASE public="1" get="inline" set="null" expr="cast 1" line="12" static="1">
		<x path="openfl.events.EventPhase"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPTURING_PHASE>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.events._EventPhase.EventPhase_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/EventPhase.hx" private="1" module="openfl.events.EventPhase" extern="1">
		<AT_TARGET public="1" get="inline" set="null" expr="cast 2" line="10" static="1">
			<x path="openfl.events.EventPhase"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AT_TARGET>
		<BUBBLING_PHASE public="1" get="inline" set="null" expr="cast 3" line="11" static="1">
			<x path="openfl.events.EventPhase"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUBBLING_PHASE>
		<CAPTURING_PHASE public="1" get="inline" set="null" expr="cast 1" line="12" static="1">
			<x path="openfl.events.EventPhase"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPTURING_PHASE>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.events.FocusEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/FocusEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<FOCUS_IN public="1" get="inline" set="null" expr="&quot;focusIn&quot;" line="28" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"focusIn"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `focusIn` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</FOCUS_IN>
		<FOCUS_OUT public="1" get="inline" set="null" expr="&quot;focusOut&quot;" line="36" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"focusOut"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `focusOut` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</FOCUS_OUT>
		<KEY_FOCUS_CHANGE public="1" get="inline" set="null" expr="&quot;keyFocusChange&quot;" line="44" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"keyFocusChange"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `keyFocusChange` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</KEY_FOCUS_CHANGE>
		<MOUSE_FOCUS_CHANGE public="1" get="inline" set="null" expr="&quot;mouseFocusChange&quot;" line="52" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"mouseFocusChange"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `mouseFocusChange` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MOUSE_FOCUS_CHANGE>
		<isRelatedObjectInaccessible public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</isRelatedObjectInaccessible>
		<keyCode public="1">
			<x path="Int"/>
			<haxe_doc>* The key code value of the key pressed to trigger a
	 * `keyFocusChange` event.</haxe_doc>
		</keyCode>
		<relatedObject public="1">
			<c path="openfl.display.InteractiveObject"/>
			<haxe_doc>* A reference to the complementary InteractiveObject instance that is
	 * affected by the change in focus. For example, when a `focusOut`
	 * event occurs, the `relatedObject` represents the
	 * InteractiveObject instance that has gained focus.
	 *
	 * The value of this property can be `null` in two
	 * circumstances: if there no related object, or there is a related object,
	 * but it is in a security sandbox to which you don't have access. Use the
	 * `isRelatedObjectInaccessible()` property to determine which of
	 * these reasons applies.</haxe_doc>
		</relatedObject>
		<shiftKey public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the Shift key modifier is activated, in which case the
	 * value is `true`. Otherwise, the value is `false`.
	 * This property is used only if the FocusEvent is of type
	 * `keyFocusChange`.</haxe_doc>
		</shiftKey>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?relatedObject:?shiftKey:?keyCode" v=":false:false:null:false:0">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="openfl.display.InteractiveObject"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ keyCode : 0, shiftKey : false, relatedObject : null, cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an Event object with specific information relevant to focus
	 * events. Event objects are passed as parameters to event listeners.
	 * 
	 * @param type          The type of the event. Possible values are:
	 *                      `FocusEvent.FOCUS_IN`,
	 *                      `FocusEvent.FOCUS_OUT`,
	 *                      `FocusEvent.KEY_FOCUS_CHANGE`, and
	 *                      `FocusEvent.MOUSE_FOCUS_CHANGE`.
	 * @param bubbles       Determines whether the Event object participates in
	 *                      the bubbling stage of the event flow.
	 * @param cancelable    Determines whether the Event object can be canceled.
	 * @param relatedObject Indicates the complementary InteractiveObject
	 *                      instance that is affected by the change in focus. For
	 *                      example, when a `focusIn` event occurs,
	 *                      `relatedObject` represents the
	 *                      InteractiveObject that has lost focus.
	 * @param shiftKey      Indicates whether the Shift key modifier is
	 *                      activated.
	 * @param keyCode       Indicates the code of the key pressed to trigger a
	 *                      `keyFocusChange` event.</haxe_doc>
		</new>
		<haxe_doc>* An object dispatches a FocusEvent object when the user changes the focus
 * from one object in the display list to another. There are four types of
 * focus events:
 * 
 *  * `FocusEvent.FOCUS_IN`
 *  * `FocusEvent.FOCUS_OUT`
 *  * `FocusEvent.KEY_FOCUS_CHANGE`
 *  * `FocusEvent.MOUSE_FOCUS_CHANGE`
 * 
 *</haxe_doc>
	</class>
	<class path="openfl.events.FullScreenEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/FullScreenEvent.hx" extern="1">
		<extends path="openfl.events.ActivityEvent"/>
		<FULL_SCREEN public="1" get="inline" set="null" expr="&quot;fullScreen&quot;" line="7" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"fullScreen"</e></m></meta>
		</FULL_SCREEN>
		<FULL_SCREEN_INTERACTIVE_ACCEPTED public="1" get="inline" set="null" expr="&quot;fullScreenInteractiveAccepted&quot;" line="8" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"fullScreenInteractiveAccepted"</e></m></meta>
		</FULL_SCREEN_INTERACTIVE_ACCEPTED>
		<fullScreen public="1"><x path="Bool"/></fullScreen>
		<interactive public="1"><x path="Bool"/></interactive>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?fullScreen:?interactive" v=":false:false:false:false">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ interactive : false, fullScreen : false, cancelable : false, bubbles : false }</e></m></meta>
		</new>
	</class>
	<class path="openfl.events.GameInputEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/GameInputEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<DEVICE_ADDED public="1" get="inline" set="null" expr="&quot;deviceAdded&quot;" line="16" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"deviceAdded"</e></m></meta>
			<haxe_doc>* Indicates that a compatible device has been connected or turned on.</haxe_doc>
		</DEVICE_ADDED>
		<DEVICE_REMOVED public="1" get="inline" set="null" expr="&quot;deviceRemoved&quot;" line="21" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"deviceRemoved"</e></m></meta>
			<haxe_doc>* Indicates that one of the enumerated devices has been disconnected or turned off.</haxe_doc>
		</DEVICE_REMOVED>
		<DEVICE_UNUSABLE public="1" get="inline" set="null" expr="&quot;deviceUnusable&quot;" line="26" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"deviceUnusable"</e></m></meta>
			<haxe_doc>* Dispatched when a game input device is connected but is not usable.</haxe_doc>
		</DEVICE_UNUSABLE>
		<device public="1" set="null">
			<c path="openfl.ui.GameInputDevice"/>
			<haxe_doc>* Returns a reference to the device that was added or removed. When a device is added, use this property to get a reference to the new device, instead of enumerating all of the devices to find the new one.</haxe_doc>
		</device>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?device" v=":true:false:null">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="openfl.ui.GameInputDevice"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ device : null, cancelable : false, bubbles : true }</e></m></meta>
		</new>
		<haxe_doc>* The GameInputEvent class represents an event that is dispatched when a game input device has either been added or removed from the application platform. A game input device also dispatches events when it is turned on or off.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.events.HTTPStatusEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/HTTPStatusEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<HTTP_RESPONSE_STATUS public="1" get="inline" set="null" expr="&quot;httpResponseStatus&quot;" line="44" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"httpResponseStatus"</e></m></meta>
			<haxe_doc>* Unlike the `httpStatus` event, the
	 * `httpResponseStatus` event is delivered before any response
	 * data. Also, the `httpResponseStatus` event includes values for
	 * the `responseHeaders` and `responseURL` properties
	 * (which are undefined for an `httpStatus` event. Note that the
	 * `httpResponseStatus` event(if any) will be sent before(and in
	 * addition to) any `complete` or `error` event.
	 *
	 * The `HTTPStatusEvent.HTTP_RESPONSE_STATUS` constant defines
	 * the value of the `type` property of a
	 * `httpResponseStatus` event object. 
	 *
	 * This event has the following properties:</haxe_doc>
		</HTTP_RESPONSE_STATUS>
		<HTTP_STATUS public="1" get="inline" set="null" expr="&quot;httpStatus&quot;" line="52" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"httpStatus"</e></m></meta>
			<haxe_doc>* The `HTTPStatusEvent.HTTP_STATUS` constant defines the value of
	 * the `type` property of a `httpStatus` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</HTTP_STATUS>
		<redirected public="1"><x path="Bool"/></redirected>
		<responseHeaders public="1">
			<c path="Array"><c path="openfl.net.URLRequestHeader"/></c>
			<haxe_doc>* The response headers that the response returned, as an array of
	 * URLRequestHeader objects.</haxe_doc>
		</responseHeaders>
		<responseURL public="1">
			<c path="String"/>
			<haxe_doc>* The URL that the response was returned from. In the case of redirects,
	 * this will be different from the request URL.</haxe_doc>
		</responseURL>
		<status public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The HTTP status code returned by the server. For example, a value of 404
	 * indicates that the server has not found a match for the requested URI.
	 * HTTP status codes can be found in sections 10.4 and 10.5 of the HTTP
	 * specification at [http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).
	 *
	 *
	 * If Flash Player or AIR cannot get a status code from the server, or if
	 * it cannot communicate with the server, the default value of 0 is passed to
	 * your code. A value of 0 can be generated in any player(for example, if a
	 * malformed URL is requested), and a value of 0 is always generated by the
	 * Flash Player plug-in when it is run in the following browsers, which do
	 * not pass HTTP status codes to the player: Netscape, Mozilla, Safari,
	 * Opera, and Internet Explorer for the Macintosh.</haxe_doc>
		</status>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?status:?redirected" v=":false:false:0:false">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ redirected : false, status : 0, cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an Event object that contains specific information about HTTP
	 * status events. Event objects are passed as parameters to event listeners.
	 * 
	 * @param type       The type of the event. Event listeners can access this
	 *                   information through the inherited `type`
	 *                   property. There is only one type of HTTPStatus event:
	 *                   `HTTPStatusEvent.HTTP_STATUS`.
	 * @param bubbles    Determines whether the Event object participates in the
	 *                   bubbling stage of the event flow. Event listeners can
	 *                   access this information through the inherited
	 *                   `bubbles` property.
	 * @param cancelable Determines whether the Event object can be canceled.
	 *                   Event listeners can access this information through the
	 *                   inherited `cancelable` property.
	 * @param status     Numeric status. Event listeners can access this
	 *                   information through the `status` property.</haxe_doc>
		</new>
		<haxe_doc>* The application dispatches HTTPStatusEvent objects when a network request
 * returns an HTTP status code.
 *
 * HTTPStatusEvent objects are always sent before error or completion
 * events. An HTTPStatusEvent object does not necessarily indicate an error
 * condition; it simply reflects the HTTP status code(if any) that is
 * provided by the networking stack. Some Flash Player environments may be
 * unable to detect HTTP status codes; a status code of 0 is always reported
 * in these cases. 
 *
 * In Flash Player, there is only one type of HTTPStatus event:
 * `httpStatus`. In the AIR runtime, a FileReference, URLLoader, or
 * URLStream can register to listen for an `httpResponseStatus`,
 * which includes `responseURL` and `responseHeaders`
 * properties. These properties are undefined in a `httpStatus`
 * event.
 *</haxe_doc>
	</class>
	<class path="openfl.events.IOErrorEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/IOErrorEvent.hx" extern="1">
		<extends path="openfl.events.ErrorEvent"/>
		<DISK_ERROR public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</DISK_ERROR>
		<IO_ERROR public="1" get="inline" set="null" expr="&quot;ioError&quot;" line="26" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ioError"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of an
	 * `ioError` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</IO_ERROR>
		<NETWORK_ERROR public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</NETWORK_ERROR>
		<VERIFY_ERROR public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</VERIFY_ERROR>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?text:?id" v=":true:false:&quot;&quot;:0">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ id : 0, text : "", cancelable : false, bubbles : true }</e></m></meta>
			<haxe_doc>* Creates an Event object that contains specific information about
	 * `ioError` events. Event objects are passed as parameters to
	 * Event listeners.
	 * 
	 * @param type       The type of the event. Event listeners can access this
	 *                   information through the inherited `type`
	 *                   property. There is only one type of input/output error
	 *                   event: `IOErrorEvent.IO_ERROR`.
	 * @param bubbles    Determines whether the Event object participates in the
	 *                   bubbling stage of the event flow. Event listeners can
	 *                   access this information through the inherited
	 *                   `bubbles` property.
	 * @param cancelable Determines whether the Event object can be canceled.
	 *                   Event listeners can access this information through the
	 *                   inherited `cancelable` property.
	 * @param text       Text to be displayed as an error message. Event
	 *                   listeners can access this information through the
	 *                   `text` property.
	 * @param id         A reference number to associate with the specific error
	 *                  (supported in Adobe AIR only).</haxe_doc>
		</new>
		<haxe_doc>* An IOErrorEvent object is dispatched when an error causes input or output
 * operations to fail.
 *
 * You can check for error events that do not have any listeners by using
 * the debugger version of Flash Player or the AIR Debug Launcher(ADL). The
 * string defined by the `text` parameter of the IOErrorEvent
 * constructor is displayed.
 *</haxe_doc>
	</class>
	<class path="openfl.events.KeyboardEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/KeyboardEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<KEY_DOWN public="1" get="inline" set="null" expr="&quot;keyDown&quot;" line="29" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"keyDown"</e></m></meta>
			<haxe_doc>* The `KeyboardEvent.KEY_DOWN` constant defines the value of the
	 * `type` property of a `keyDown` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</KEY_DOWN>
		<KEY_UP public="1" get="inline" set="null" expr="&quot;keyUp&quot;" line="37" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"keyUp"</e></m></meta>
			<haxe_doc>* The `KeyboardEvent.KEY_UP` constant defines the value of the
	 * `type` property of a `keyUp` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</KEY_UP>
		<altKey public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the Alt key is active(`true`) or inactive
	 * (`false`) on Windows; indicates whether the Option key is
	 * active on Mac OS.</haxe_doc>
		</altKey>
		<charCode public="1">
			<x path="Int"/>
			<haxe_doc>* Contains the character code value of the key pressed or released. The
	 * character code values are English keyboard values. For example, if you
	 * press Shift+3, `charCode` is # on a Japanese keyboard, just as
	 * it is on an English keyboard.
	 *
	 * **Note: **When an input method editor(IME) is running,
	 * `charCode` does not report accurate character codes.</haxe_doc>
		</charCode>
		<ctrlKey public="1">
			<x path="Bool"/>
			<haxe_doc>* On Windows and Linux, indicates whether the Ctrl key is active
	 * (`true`) or inactive(`false`); On Mac OS, indicates
	 * whether either the Ctrl key or the Command key is active.</haxe_doc>
		</ctrlKey>
		<commandKey public="1"><x path="Bool"/></commandKey>
		<controlKey public="1"><x path="Bool"/></controlKey>
		<keyCode public="1">
			<x path="Int"/>
			<haxe_doc>* The key code value of the key pressed or released.
	 *
	 * **Note: **When an input method editor(IME) is running,
	 * `keyCode` does not report accurate key codes.</haxe_doc>
		</keyCode>
		<keyLocation public="1">
			<x path="openfl.ui.KeyLocation"/>
			<haxe_doc>* Indicates the location of the key on the keyboard. This is useful for
	 * differentiating keys that appear more than once on a keyboard. For
	 * example, you can differentiate between the left and right Shift keys by
	 * the value of this property: `KeyLocation.LEFT` for the left and
	 * `KeyLocation.RIGHT` for the right. Another example is
	 * differentiating between number keys pressed on the standard keyboard
	 * (`KeyLocation.STANDARD`) versus the numeric keypad
	 * (`KeyLocation.NUM_PAD`).</haxe_doc>
		</keyLocation>
		<shiftKey public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the Shift key modifier is active(`true`) or
	 * inactive(`false`).</haxe_doc>
		</shiftKey>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?charCodeValue:?keyCodeValue:?keyLocationValue:?ctrlKeyValue:?altKeyValue:?shiftKeyValue:?controlKeyValue:?commandKeyValue" v=":false:false:0:0:null:false:false:false:false:false">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="openfl.ui.KeyLocation"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ commandKeyValue : false, controlKeyValue : false, shiftKeyValue : false, altKeyValue : false, ctrlKeyValue : false, keyLocationValue : null, keyCodeValue : 0, charCodeValue : 0, cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an Event object that contains specific information about keyboard
	 * events. Event objects are passed as parameters to event listeners.
	 * 
	 * @param type             The type of the event. Possible values are:
	 *                         `KeyboardEvent.KEY_DOWN` and
	 *                         `KeyboardEvent.KEY_UP`
	 * @param bubbles          Determines whether the Event object participates
	 *                         in the bubbling stage of the event flow.
	 * @param cancelable       Determines whether the Event object can be
	 *                         canceled.
	 * @param charCodeValue    The character code value of the key pressed or
	 *                         released. The character code values returned are
	 *                         English keyboard values. For example, if you press
	 *                         Shift+3, the `Keyboard.charCode()`
	 *                         property returns # on a Japanese keyboard, just as
	 *                         it does on an English keyboard.
	 * @param keyCodeValue     The key code value of the key pressed or released.
	 * @param keyLocationValue The location of the key on the keyboard.
	 * @param ctrlKeyValue     On Windows, indicates whether the Ctrl key is
	 *                         activated. On Mac, indicates whether either the
	 *                         Ctrl key or the Command key is activated.
	 * @param altKeyValue      Indicates whether the Alt key modifier is
	 *                         activated(Windows only).
	 * @param shiftKeyValue    Indicates whether the Shift key modifier is
	 *                         activated.
	 * @param commandKeyValue  Indicates whether the Command key modifier is
	 *                         activated.</haxe_doc>
		</new>
		<haxe_doc>* A KeyboardEvent object id dispatched in response to user input through a
 * keyboard. There are two types of keyboard events:
 * `KeyboardEvent.KEY_DOWN` and `KeyboardEvent.KEY_UP`
 *
 * Because mappings between keys and specific characters vary by device and
 * operating system, use the TextEvent event type for processing character
 * input.
 *
 * To listen globally for key events, listen on the Stage for the capture
 * and target or bubble phase.
 *</haxe_doc>
	</class>
	<class path="openfl.events.MouseEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/MouseEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<CLICK public="1" get="inline" set="null" expr="&quot;click&quot;" line="29" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"click"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `click` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</CLICK>
		<CONTEXT_MENU public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_2</e></m>
			</meta>
		</CONTEXT_MENU>
		<DOUBLE_CLICK public="1" get="inline" set="null" expr="&quot;doubleClick&quot;" line="43" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"doubleClick"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `doubleClick` event object. The `doubleClickEnabled`
	 * property must be `true` for an object to generate the
	 * `doubleClick` event.
	 *
	 * This event has the following properties:</haxe_doc>
		</DOUBLE_CLICK>
		<MIDDLE_CLICK public="1" get="inline" set="null" expr="&quot;middleClick&quot;" line="51" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"middleClick"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `middleClick` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MIDDLE_CLICK>
		<MIDDLE_MOUSE_DOWN public="1" get="inline" set="null" expr="&quot;middleMouseDown&quot;" line="59" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"middleMouseDown"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `middleMouseDown` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MIDDLE_MOUSE_DOWN>
		<MIDDLE_MOUSE_UP public="1" get="inline" set="null" expr="&quot;middleMouseUp&quot;" line="67" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"middleMouseUp"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `middleMouseUp` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MIDDLE_MOUSE_UP>
		<MOUSE_DOWN public="1" get="inline" set="null" expr="&quot;mouseDown&quot;" line="75" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"mouseDown"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `mouseDown` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MOUSE_DOWN>
		<MOUSE_MOVE public="1" get="inline" set="null" expr="&quot;mouseMove&quot;" line="83" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"mouseMove"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `mouseMove` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MOUSE_MOVE>
		<MOUSE_OUT public="1" get="inline" set="null" expr="&quot;mouseOut&quot;" line="91" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"mouseOut"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `mouseOut` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MOUSE_OUT>
		<MOUSE_OVER public="1" get="inline" set="null" expr="&quot;mouseOver&quot;" line="99" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"mouseOver"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `mouseOver` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MOUSE_OVER>
		<MOUSE_UP public="1" get="inline" set="null" expr="&quot;mouseUp&quot;" line="107" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"mouseUp"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `mouseUp` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MOUSE_UP>
		<MOUSE_WHEEL public="1" get="inline" set="null" expr="&quot;mouseWheel&quot;" line="115" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"mouseWheel"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `mouseWheel` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</MOUSE_WHEEL>
		<RELEASE_OUTSIDE public="1" get="inline" set="null" expr="&quot;releaseOutside&quot;" line="123" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"releaseOutside"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `releaseOutside` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</RELEASE_OUTSIDE>
		<RIGHT_CLICK public="1" get="inline" set="null" expr="&quot;rightClick&quot;" line="131" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"rightClick"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `rightClick` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</RIGHT_CLICK>
		<RIGHT_MOUSE_DOWN public="1" get="inline" set="null" expr="&quot;rightMouseDown&quot;" line="139" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"rightMouseDown"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `rightMouseDown` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</RIGHT_MOUSE_DOWN>
		<RIGHT_MOUSE_UP public="1" get="inline" set="null" expr="&quot;rightMouseUp&quot;" line="147" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"rightMouseUp"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `rightMouseUp` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</RIGHT_MOUSE_UP>
		<ROLL_OUT public="1" get="inline" set="null" expr="&quot;rollOut&quot;" line="155" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"rollOut"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `rollOut` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</ROLL_OUT>
		<ROLL_OVER public="1" get="inline" set="null" expr="&quot;rollOver&quot;" line="163" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"rollOver"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `rollOver` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</ROLL_OVER>
		<altKey public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the Alt key is active(`true`) or inactive
	 * (`false`). Supported for Windows only. On other operating
	 * systems, this property is always set to `false`.</haxe_doc>
		</altKey>
		<buttonDown public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the primary mouse button is pressed(`true`)
	 * or not(`false`).</haxe_doc>
		</buttonDown>
		<clickCount public="1"><x path="Int"/></clickCount>
		<commandKey public="1"><x path="Bool"/></commandKey>
		<ctrlKey public="1">
			<x path="Bool"/>
			<haxe_doc>* On Windows or Linux, indicates whether the Ctrl key is active
	 * (`true`) or inactive(`false`). On Macintosh,
	 * indicates whether either the Control key or the Command key is activated.</haxe_doc>
		</ctrlKey>
		<delta public="1">
			<x path="Int"/>
			<haxe_doc>* Indicates how many lines should be scrolled for each unit the user rotates
	 * the mouse wheel. A positive delta value indicates an upward scroll; a
	 * negative value indicates a downward scroll. Typical values are 1 to 3, but
	 * faster rotation may produce larger values. This setting depends on the
	 * device and operating system and is usually configurable by the user. This
	 * property applies only to the `MouseEvent.mouseWheel` event.</haxe_doc>
		</delta>
		<isRelatedObjectInaccessible public="1"><x path="Bool"/></isRelatedObjectInaccessible>
		<localX public="1">
			<x path="Float"/>
			<haxe_doc>* The horizontal coordinate at which the event occurred relative to the
	 * containing sprite.</haxe_doc>
		</localX>
		<localY public="1">
			<x path="Float"/>
			<haxe_doc>* The vertical coordinate at which the event occurred relative to the
	 * containing sprite.</haxe_doc>
		</localY>
		<movementX public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_2</e></m>
			</meta>
		</movementX>
		<movementY public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_2</e></m>
			</meta>
		</movementY>
		<relatedObject public="1">
			<c path="openfl.display.InteractiveObject"/>
			<haxe_doc>* A reference to a display list object that is related to the event. For
	 * example, when a `mouseOut` event occurs,
	 * `relatedObject` represents the display list object to which the
	 * pointing device now points. This property applies to the
	 * `mouseOut`, `mouseOver`, `rollOut`, and
	 * `rollOver` events.
	 *
	 * The value of this property can be `null` in two
	 * circumstances: if there no related object, or there is a related object,
	 * but it is in a security sandbox to which you don't have access. Use the
	 * `isRelatedObjectInaccessible()` property to determine which of
	 * these reasons applies.</haxe_doc>
		</relatedObject>
		<shiftKey public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the Shift key is active(`true`) or inactive
	 * (`false`).</haxe_doc>
		</shiftKey>
		<stageX public="1">
			<x path="Float"/>
			<haxe_doc>* The horizontal coordinate at which the event occurred in global Stage
	 * coordinates. This property is calculated when the `localX`
	 * property is set.</haxe_doc>
		</stageX>
		<stageY public="1">
			<x path="Float"/>
			<haxe_doc>* The vertical coordinate at which the event occurred in global Stage
	 * coordinates. This property is calculated when the `localY`
	 * property is set.</haxe_doc>
		</stageY>
		<updateAfterEvent public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Instructs Flash Player or Adobe AIR to render after processing of this
	 * event completes, if the display list has been modified.
	 *</haxe_doc>
		</updateAfterEvent>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?localX:?localY:?relatedObject:?ctrlKey:?altKey:?shiftKey:?buttonDown:?delta:?commandKey:?clickCount" v=":true:false:0:0:null:false:false:false:false:0:false:0">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Float"/>
				<x path="Float"/>
				<c path="openfl.display.InteractiveObject"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ clickCount : 0, commandKey : false, delta : 0, buttonDown : false, shiftKey : false, altKey : false, ctrlKey : false, relatedObject : null, localY : 0, localX : 0, cancelable : false, bubbles : true }</e></m></meta>
			<haxe_doc>* Creates an Event object that contains information about mouse events.
	 * Event objects are passed as parameters to event listeners.
	 * 
	 * @param type          The type of the event. Possible values are:
	 *                      `MouseEvent.CLICK`,
	 *                      `MouseEvent.DOUBLE_CLICK`,
	 *                      `MouseEvent.MOUSE_DOWN`,
	 *                      `MouseEvent.MOUSE_MOVE`,
	 *                      `MouseEvent.MOUSE_OUT`,
	 *                      `MouseEvent.MOUSE_OVER`,
	 *                      `MouseEvent.MOUSE_UP`,
	 *                      `MouseEvent.MIDDLE_CLICK`,
	 *                      `MouseEvent.MIDDLE_MOUSE_DOWN`,
	 *                      `MouseEvent.MIDDLE_MOUSE_UP`,
	 *                      `MouseEvent.RIGHT_CLICK`,
	 *                      `MouseEvent.RIGHT_MOUSE_DOWN`,
	 *                      `MouseEvent.RIGHT_MOUSE_UP`,
	 *                      `MouseEvent.MOUSE_WHEEL`,
	 *                      `MouseEvent.ROLL_OUT`, and
	 *                      `MouseEvent.ROLL_OVER`.
	 * @param bubbles       Determines whether the Event object participates in
	 *                      the bubbling phase of the event flow.
	 * @param cancelable    Determines whether the Event object can be canceled.
	 * @param localX        The horizontal coordinate at which the event occurred
	 *                      relative to the containing sprite.
	 * @param localY        The vertical coordinate at which the event occurred
	 *                      relative to the containing sprite.
	 * @param relatedObject The complementary InteractiveObject instance that is
	 *                      affected by the event. For example, when a
	 *                      `mouseOut` event occurs,
	 *                      `relatedObject` represents the display
	 *                      list object to which the pointing device now points.
	 * @param ctrlKey       On Windows or Linux, indicates whether the Ctrl key
	 *                      is activated. On Mac, indicates whether either the
	 *                      Ctrl key or the Command key is activated.
	 * @param altKey        Indicates whether the Alt key is activated(Windows
	 *                      or Linux only).
	 * @param shiftKey      Indicates whether the Shift key is activated.
	 * @param buttonDown    Indicates whether the primary mouse button is
	 *                      pressed.
	 * @param delta         Indicates how many lines should be scrolled for each
	 *                      unit the user rotates the mouse wheel. A positive
	 *                      delta value indicates an upward scroll; a negative
	 *                      value indicates a downward scroll. Typical values are
	 *                      1 to 3, but faster rotation may produce larger
	 *                      values. This parameter is used only for the
	 *                      `MouseEvent.mouseWheel` event.</haxe_doc>
		</new>
		<haxe_doc>* A MouseEvent object is dispatched into the event flow whenever mouse events
 * occur. A mouse event is usually generated by a user input device, such as a
 * mouse or a trackball, that uses a pointer.
 *
 * When nested nodes are involved, mouse events target the deepest possible
 * nested node that is visible in the display list. This node is called the
 * _target node_. To have a target node's ancestor receive notification
 * of a mouse event, use `EventDispatcher.addEventListener()` on
 * the ancestor node with the `type` parameter set to the specific
 * mouse event you want to detect.
 *</haxe_doc>
	</class>
	<class path="openfl.events.NetStatusEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/NetStatusEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<NET_STATUS public="1" get="inline" set="null" expr="&quot;netStatus&quot;" line="7" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"netStatus"</e></m></meta>
		</NET_STATUS>
		<info public="1"><d/></info>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?info" v=":false:false:null">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ info : null, cancelable : false, bubbles : false }</e></m></meta>
		</new>
	</class>
	<class path="openfl.events.ProgressEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/ProgressEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<PROGRESS public="1" get="inline" set="null" expr="&quot;progress&quot;" line="23" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"progress"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `progress` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</PROGRESS>
		<SOCKET_DATA public="1" get="inline" set="null" expr="&quot;socketData&quot;" line="31" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"socketData"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `socketData` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</SOCKET_DATA>
		<bytesLoaded public="1">
			<x path="Float"/>
			<haxe_doc>* The number of items or bytes loaded when the listener processes the event.</haxe_doc>
		</bytesLoaded>
		<bytesTotal public="1">
			<x path="Float"/>
			<haxe_doc>* The total number of items or bytes that will be loaded if the loading
	 * process succeeds. If the progress event is dispatched/attached to a Socket
	 * object, the bytesTotal will always be 0 unless a value is specified in the
	 * bytesTotal parameter of the constructor. The actual number of bytes sent
	 * back or forth is not set and is up to the application developer.</haxe_doc>
		</bytesTotal>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?bytesLoaded:?bytesTotal" v=":false:false:0:0">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ bytesTotal : 0, bytesLoaded : 0, cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an Event object that contains information about progress events.
	 * Event objects are passed as parameters to event listeners.
	 * 
	 * @param type        The type of the event. Possible values
	 *                    are:`ProgressEvent.PROGRESS`,
	 *                    `ProgressEvent.SOCKET_DATA`,
	 *                    `ProgressEvent.STANDARD_ERROR_DATA`,
	 *                    `ProgressEvent.STANDARD_INPUT_PROGRESS`, and
	 *                    `ProgressEvent.STANDARD_OUTPUT_DATA`.
	 * @param bubbles     Determines whether the Event object participates in the
	 *                    bubbling stage of the event flow.
	 * @param cancelable  Determines whether the Event object can be canceled.
	 * @param bytesLoaded The number of items or bytes loaded at the time the
	 *                    listener processes the event.
	 * @param bytesTotal  The total number of items or bytes that will be loaded
	 *                    if the loading process succeeds.</haxe_doc>
		</new>
		<haxe_doc>* A ProgressEvent object is dispatched when a load operation has begun or a
 * socket has received data. These events are usually generated when SWF
 * files, images or data are loaded into an application. There are two types
 * of progress events: `ProgressEvent.PROGRESS` and
 * `ProgressEvent.SOCKET_DATA`. Additionally, in AIR ProgressEvent
 * objects are dispatched when a data is sent to or from a child process using
 * the NativeProcess class.
 *</haxe_doc>
	</class>
	<class path="openfl.events.SampleDataEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/SampleDataEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<SAMPLE_DATA public="1" get="inline" set="null" expr="&quot;sampleData&quot;" line="10" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"sampleData"</e></m></meta>
		</SAMPLE_DATA>
		<data public="1"><x path="openfl.utils.ByteArray"/></data>
		<position public="1"><x path="Float"/></position>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable" v=":false:false">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ cancelable : false, bubbles : false }</e></m></meta>
		</new>
	</class>
	<class path="openfl.events.SecurityErrorEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/SecurityErrorEvent.hx" extern="1">
		<extends path="openfl.events.ErrorEvent"/>
		<SECURITY_ERROR public="1" get="inline" set="null" expr="&quot;securityError&quot;" line="32" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"securityError"</e></m></meta>
			<haxe_doc>* The `SecurityErrorEvent.SECURITY_ERROR` constant defines the
	 * value of the `type` property of a `securityError`
	 * event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</SECURITY_ERROR>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?text:?id" v=":false:false:&quot;&quot;:0">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ id : 0, text : "", cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an Event object that contains information about security error
	 * events. Event objects are passed as parameters to event listeners.
	 * 
	 * @param type       The type of the event. Event listeners can access this
	 *                   information through the inherited `type`
	 *                   property. There is only one type of error event:
	 *                   `SecurityErrorEvent.SECURITY_ERROR`.
	 * @param bubbles    Determines whether the Event object participates in the
	 *                   bubbling stage of the event flow. Event listeners can
	 *                   access this information through the inherited
	 *                   `bubbles` property.
	 * @param cancelable Determines whether the Event object can be canceled.
	 *                   Event listeners can access this information through the
	 *                   inherited `cancelable` property.
	 * @param text       Text to be displayed as an error message. Event
	 *                   listeners can access this information through the
	 *                   `text` property.
	 * @param id         A reference number to associate with the specific error.</haxe_doc>
		</new>
		<haxe_doc>* An object dispatches a SecurityErrorEvent object to report the occurrence
 * of a security error. Security errors reported through this class are
 * generally from asynchronous operations, such as loading data, in which
 * security violations may not manifest immediately. Your event listener can
 * access the object's `text` property to determine what operation
 * was attempted and any URLs that were involved. If there are no event
 * listeners, the debugger version of Flash Player or the AIR Debug Launcher
 * (ADL) application automatically displays an error message that contains the
 * contents of the `text` property. There is one type of security
 * error event: `SecurityErrorEvent.SECURITY_ERROR`.
 *
 * Security error events are the final events dispatched for any target
 * object. This means that any other events, including generic error events,
 * are not dispatched for a target object that experiences a security
 * error.
 *</haxe_doc>
	</class>
	<class path="openfl.events.TimerEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/TimerEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<TIMER public="1" get="inline" set="null" expr="&quot;timer&quot;" line="18" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"timer"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `timer` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</TIMER>
		<TIMER_COMPLETE public="1" get="inline" set="null" expr="&quot;timerComplete&quot;" line="26" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"timerComplete"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `timerComplete` event object.
	 *
	 * This event has the following properties:</haxe_doc>
		</TIMER_COMPLETE>
		<updateAfterEvent public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Instructs Flash Player or the AIR runtime to render after processing of
	 * this event completes, if the display list has been modified.
	 *</haxe_doc>
		</updateAfterEvent>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable" v=":false:false">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ cancelable : false, bubbles : false }</e></m></meta>
			<haxe_doc>* Creates an Event object with specific information relevant to
	 * `timer` events. Event objects are passed as parameters to event
	 * listeners.
	 * 
	 * @param type       The type of the event. Event listeners can access this
	 *                   information through the inherited `type`
	 *                   property.
	 * @param bubbles    Determines whether the Event object bubbles. Event
	 *                   listeners can access this information through the
	 *                   inherited `bubbles` property.
	 * @param cancelable Determines whether the Event object can be canceled.
	 *                   Event listeners can access this information through the
	 *                   inherited `cancelable` property.</haxe_doc>
		</new>
		<haxe_doc>* A Timer object dispatches a TimerEvent objects whenever the Timer object
 * reaches the interval specified by the `Timer.delay` property.
 *</haxe_doc>
	</class>
	<class path="openfl.events.TouchEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/TouchEvent.hx" extern="1">
		<extends path="openfl.events.Event"/>
		<PROXIMITY_BEGIN public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</PROXIMITY_BEGIN>
		<PROXIMITY_END public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</PROXIMITY_END>
		<PROXIMITY_MOVE public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</PROXIMITY_MOVE>
		<PROXIMITY_OUT public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</PROXIMITY_OUT>
		<PROXIMITY_OVER public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</PROXIMITY_OVER>
		<PROXIMITY_ROLL_OUT public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</PROXIMITY_ROLL_OUT>
		<PROXIMITY_ROLL_OVER public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</PROXIMITY_ROLL_OVER>
		<TOUCH_BEGIN public="1" get="inline" set="null" expr="&quot;touchBegin&quot;" line="72" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"touchBegin"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `TOUCH_BEGIN` touch event object.
	 *
	 * The dispatched TouchEvent object has the following properties:</haxe_doc>
		</TOUCH_BEGIN>
		<TOUCH_END public="1" get="inline" set="null" expr="&quot;touchEnd&quot;" line="80" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"touchEnd"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `TOUCH_END` touch event object.
	 *
	 * The dispatched TouchEvent object has the following properties:</haxe_doc>
		</TOUCH_END>
		<TOUCH_MOVE public="1" get="inline" set="null" expr="&quot;touchMove&quot;" line="88" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"touchMove"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `TOUCH_MOVE` touch event object.
	 *
	 * The dispatched TouchEvent object has the following properties:</haxe_doc>
		</TOUCH_MOVE>
		<TOUCH_OUT public="1" get="inline" set="null" expr="&quot;touchOut&quot;" line="96" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"touchOut"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `TOUCH_OUT` touch event object.
	 *
	 * The dispatched TouchEvent object has the following properties:</haxe_doc>
		</TOUCH_OUT>
		<TOUCH_OVER public="1" get="inline" set="null" expr="&quot;touchOver&quot;" line="104" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"touchOver"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `TOUCH_OVER` touch event object.
	 *
	 * The dispatched TouchEvent object has the following properties:</haxe_doc>
		</TOUCH_OVER>
		<TOUCH_ROLL_OUT public="1" get="inline" set="null" expr="&quot;touchRollOut&quot;" line="112" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"touchRollOut"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `TOUCH_ROLL_OUT` touch event object.
	 *
	 * The dispatched TouchEvent object has the following properties:</haxe_doc>
		</TOUCH_ROLL_OUT>
		<TOUCH_ROLL_OVER public="1" get="inline" set="null" expr="&quot;touchRollOver&quot;" line="120" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"touchRollOver"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `TOUCH_ROLL_OVER` touch event object.
	 *
	 * The dispatched TouchEvent object has the following properties:</haxe_doc>
		</TOUCH_ROLL_OVER>
		<TOUCH_TAP public="1" get="inline" set="null" expr="&quot;touchTap&quot;" line="128" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"touchTap"</e></m></meta>
			<haxe_doc>* Defines the value of the `type` property of a
	 * `TOUCH_TAP` touch event object.
	 *
	 * The dispatched TouchEvent object has the following properties:</haxe_doc>
		</TOUCH_TAP>
		<altKey public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the Alt key is active(`true`) or inactive
	 * (`false`). Supported for Windows and Linux operating systems
	 * only.</haxe_doc>
		</altKey>
		<commandKey public="1"><x path="Bool"/></commandKey>
		<controlKey public="1"><x path="Bool"/></controlKey>
		<ctrlKey public="1">
			<x path="Bool"/>
			<haxe_doc>* On Windows or Linux, indicates whether the Ctrl key is active
	 * (`true`) or inactive(`false`). On Macintosh,
	 * indicates whether either the Control key or the Command key is activated.</haxe_doc>
		</ctrlKey>
		<delta public="1"><x path="Int"/></delta>
		<isPrimaryTouchPoint public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the first point of contact is mapped to mouse events.</haxe_doc>
		</isPrimaryTouchPoint>
		<isRelatedObjectInaccessible public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</isRelatedObjectInaccessible>
		<localX public="1">
			<x path="Float"/>
			<haxe_doc>* The horizontal coordinate at which the event occurred relative to the
	 * containing sprite.</haxe_doc>
		</localX>
		<localY public="1">
			<x path="Float"/>
			<haxe_doc>* The vertical coordinate at which the event occurred relative to the
	 * containing sprite.</haxe_doc>
		</localY>
		<pressure public="1">
			<x path="Float"/>
			<haxe_doc>* A value between `0.0` and `1.0` indicating force of
	 * the contact with the device. If the device does not support detecting the
	 * pressure, the value is `1.0`.</haxe_doc>
		</pressure>
		<relatedObject public="1">
			<c path="openfl.display.InteractiveObject"/>
			<haxe_doc>* A reference to a display list object that is related to the event. For
	 * example, when a `touchOut` event occurs,
	 * `relatedObject` represents the display list object to which the
	 * pointing device now points. This property applies to the
	 * `touchOut`, `touchOver`, `touchRollOut`,
	 * and `touchRollOver` events.
	 *
	 * The value of this property can be `null` in two
	 * circumstances: if there is no related object, or there is a related
	 * object, but it is in a security sandbox to which you don't have access.
	 * Use the `isRelatedObjectInaccessible()` property to determine
	 * which of these reasons applies.</haxe_doc>
		</relatedObject>
		<shiftKey public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the Shift key is active(`true`) or inactive
	 * (`false`).</haxe_doc>
		</shiftKey>
		<sizeX public="1">
			<x path="Float"/>
			<haxe_doc>* Width of the contact area.
	 * Only supported on Android(C++ target), in the range of 0-1.</haxe_doc>
		</sizeX>
		<sizeY public="1">
			<x path="Float"/>
			<haxe_doc>* Height of the contact area.
	 * Only supported on Android(C++ target), in the range of 0-1.</haxe_doc>
		</sizeY>
		<stageX public="1">
			<x path="Float"/>
			<haxe_doc>* The horizontal coordinate at which the event occurred in global Stage
	 * coordinates. This property is calculated when the `localX`
	 * property is set.</haxe_doc>
		</stageX>
		<stageY public="1">
			<x path="Float"/>
			<haxe_doc>* The vertical coordinate at which the event occurred in global Stage
	 * coordinates. This property is calculated when the `localY`
	 * property is set.</haxe_doc>
		</stageY>
		<touchPointID public="1">
			<x path="Int"/>
			<haxe_doc>* A unique identification number(as an int) assigned to the touch point.</haxe_doc>
		</touchPointID>
		<updateAfterEvent public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Instructs Flash Player or Adobe AIR to render after processing of this
	 * event completes, if the display list has been modified.
	 *</haxe_doc>
		</updateAfterEvent>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?touchPointID:?isPrimaryTouchPoint:?localX:?localY:?sizeX:?sizeY:?pressure:?relatedObject:?ctrlKey:?altKey:?shiftKey:?commandKey:?controlKey:?timestamp:?touchIntent:?samples:?isTouchPointCanceled" v=":true:false:0:false:0:0:0:0:0:null:false:false:false:false:false:0:null:null:false">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<c path="openfl.display.InteractiveObject"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Float"/>
				<c path="String"/>
				<x path="openfl.utils.ByteArray"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ isTouchPointCanceled : false, samples : null, touchIntent : null, timestamp : 0, controlKey : false, commandKey : false, shiftKey : false, altKey : false, ctrlKey : false, relatedObject : null, pressure : 0, sizeY : 0, sizeX : 0, localY : 0, localX : 0, isPrimaryTouchPoint : false, touchPointID : 0, cancelable : false, bubbles : true }</e></m></meta>
			<haxe_doc>* Creates an Event object that contains information about touch events.
	 * Event objects are passed as parameters to event listeners.
	 * 
	 * @param type                The type of the event. Possible values are:
	 *                            `TouchEvent.TOUCH_BEGIN`,
	 *                            `TouchEvent.TOUCH_END`,
	 *                            `TouchEvent.TOUCH_MOVE`,
	 *                            `TouchEvent.TOUCH_OUT`,
	 *                            `TouchEvent.TOUCH_OVER`,
	 *                            `TouchEvent.TOUCH_ROLL_OUT`,
	 *                            `TouchEvent.TOUCH_ROLL_OVER`, and
	 *                            `TouchEvent.TOUCH_TAP`.
	 * @param bubbles             Determines whether the Event object
	 *                            participates in the bubbling phase of the event
	 *                            flow.
	 * @param cancelable          Determines whether the Event object can be
	 *                            canceled.
	 * @param touchPointID        A unique identification number(as an int)
	 *                            assigned to the touch point.
	 * @param isPrimaryTouchPoint Indicates whether the first point of contact is
	 *                            mapped to mouse events.
	 * @param relatedObject       The complementary InteractiveObject instance
	 *                            that is affected by the event. For example,
	 *                            when a `touchOut` event occurs,
	 *                            `relatedObject` represents the
	 *                            display list object to which the pointing
	 *                            device now points.
	 * @param ctrlKey             On Windows or Linux, indicates whether the Ctrl
	 *                            key is activated. On Mac, indicates whether
	 *                            either the Ctrl key or the Command key is
	 *                            activated.
	 * @param altKey              Indicates whether the Alt key is activated
	 *                           (Windows or Linux only).
	 * @param shiftKey            Indicates whether the Shift key is activated.</haxe_doc>
		</new>
		<haxe_doc>* The TouchEvent class lets you handle events on devices that detect user
 * contact with the device(such as a finger on a touch screen). When a user
 * interacts with a device such as a mobile phone or tablet with a touch
 * screen, the user typically touches the screen with his or her fingers or a
 * pointing device. You can develop applications that respond to basic touch
 * events(such as a single finger tap) with the TouchEvent class. Create
 * event listeners using the event types defined in this class. For user
 * interaction with multiple points of contact(such as several fingers moving
 * across a touch screen at the same time) use the related GestureEvent,
 * PressAndTapGestureEvent, and TransformGestureEvent classes. And, use the
 * properties and methods of these classes to construct event handlers that
 * respond to the user touching the device.
 *
 * Use the Multitouch class to determine the current environment's support
 * for touch interaction, and to manage the support of touch interaction if
 * the current environment supports it.
 *
 * **Note:** When objects are nested on the display list, touch events
 * target the deepest possible nested object that is visible in the display
 * list. This object is called the target node. To have a target node's
 * ancestor(an object containing the target node in the display list) receive
 * notification of a touch event, use
 * `EventDispatcher.addEventListener()` on the ancestor node with
 * the type parameter set to the specific touch event you want to detect.
 *</haxe_doc>
	</class>
	<class path="openfl.events.UncaughtErrorEvent" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/UncaughtErrorEvent.hx" extern="1">
		<extends path="openfl.events.ErrorEvent"/>
		<UNCAUGHT_ERROR public="1" get="inline" set="null" expr="&quot;uncaughtError&quot;" line="7" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"uncaughtError"</e></m></meta>
		</UNCAUGHT_ERROR>
		<error public="1" set="null"><d/></error>
		<new public="1" set="method">
			<f a="type:?bubbles:?cancelable:?error" v=":true:true:null">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ error : null, cancelable : true, bubbles : true }</e></m></meta>
		</new>
	</class>
	<class path="openfl.events.UncaughtErrorEvents" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/events/UncaughtErrorEvents.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.external.ExternalInterface" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/external/ExternalInterface.hx" extern="1">
		<available public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether this player is in a container that offers an external
	 * interface. If the external interface is available, this property is
	 * `true`; otherwise, it is `false`.
	 *
	 * **Note:** When using the External API with HTML, always check that
	 * the HTML has finished loading before you attempt to call any JavaScript
	 * methods.</haxe_doc>
		</available>
		<marshallExceptions public="1" static="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the external interface should attempt to pass
	 * ActionScript exceptions to the current browser and JavaScript exceptions
	 * to the player. You must explicitly set this property to `true`
	 * to catch JavaScript exceptions in ActionScript and to catch ActionScript
	 * exceptions in JavaScript.</haxe_doc>
		</marshallExceptions>
		<objectID public="1" set="null" static="1">
			<c path="String"/>
			<haxe_doc>* Returns the `id` attribute of the `object` tag in
	 * Internet Explorer, or the `name` attribute of the
	 * `embed` tag in Netscape.</haxe_doc>
		</objectID>
		<addCallback public="1" set="method" static="1">
			<f a="functionName:closure">
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Registers an ActionScript method as callable from the container. After a
	 * successful invocation of `addCallBack()`, the registered
	 * function in the player can be called by JavaScript or ActiveX code in the
	 * container.
	 *
	 * **Note:** For _local_ content running in a browser, calls to
	 * the `ExternalInterface.addCallback()` method work only if the
	 * SWF file and the containing web page are in the local-trusted security
	 * sandbox. For more information, see the Flash Player Developer Center
	 * Topic: [Security](http://www.adobe.com/go/devnet_security_en).
	 * 
	 * @param functionName The name by which the container can invoke the
	 *                     function.
	 * @param closure      The function closure to invoke. This could be a
	 *                     free-standing function, or it could be a method
	 *                     closure referencing a method of an object instance. By
	 *                     passing a method closure, you can direct the callback
	 *                     at a method of a particular object instance.
	 *
	 *                     **Note:** Repeating `addCallback()`
	 *                     on an existing callback function with a
	 *                     `null` closure value removes the
	 *                     callback.
	 * @throws Error         The container does not support incoming calls.
	 *                       Incoming calls are supported only in Internet
	 *                       Explorer for Windows and browsers that use the
	 *                       NPRuntime API such as Mozilla 1.7.5 and later or
	 *                       Firefox 1.0 and later.
	 * @throws SecurityError A callback with the specified name has already been
	 *                       added by ActionScript in a sandbox to which you do
	 *                       not have access; you cannot overwrite that callback.
	 *                       To work around this problem, rewrite the
	 *                       ActionScript that originally called the
	 *                       `addCallback()` method so that it also
	 *                       calls the `Security.allowDomain()`
	 *                       method.
	 * @throws SecurityError The containing environment belongs to a security
	 *                       sandbox to which the calling code does not have
	 *                       access. To fix this problem, follow these steps:
	 *                       
	 *                        1. In the `object` tag for the SWF
	 *                       file in the containing HTML page, set the following
	 *                       parameter:
	 *
	 *                       `<param name="allowScriptAccess"
	 *                       value="always" />`
	 *                       
	 *                        2. In the SWF file, add the following
	 *                       ActionScript:
	 *
	 *
	 *                       `flash.system.Security.allowDomain(_sourceDomain_)`]]></haxe_doc>
		</addCallback>
		<call public="1" set="method" static="1">
			<f a="functionName:?p1:?p2:?p3:?p4:?p5">
				<c path="String"/>
				<d/>
				<d/>
				<d/>
				<d/>
				<d/>
				<d/>
			</f>
			<haxe_doc><![CDATA[* Calls a function exposed by the SWF container, passing zero or more
	 * arguments. If the function is not available, the call returns
	 * `null`; otherwise it returns the value provided by the
	 * function. Recursion is _not_ permitted on Opera or Netscape browsers;
	 * on these browsers a recursive call produces a `null` response.
	 * (Recursion is supported on Internet Explorer and Firefox browsers.)
	 *
	 * If the container is an HTML page, this method invokes a JavaScript
	 * function in a `script` element.
	 *
	 * If the container is another ActiveX container, this method dispatches
	 * the FlashCall ActiveX event with the specified name, and the container
	 * processes the event.
	 *
	 * If the container is hosting the Netscape plug-in, you can either write
	 * custom support for the new NPRuntime interface or embed an HTML control
	 * and embed the player within the HTML control. If you embed an HTML
	 * control, you can communicate with the player through a JavaScript
	 * interface to the native container application.
	 *
	 * **Note:** For _local_ content running in a browser, calls to
	 * the `ExternalInterface.call()` method are permitted only if the
	 * SWF file and the containing web page(if there is one) are in the
	 * local-trusted security sandbox. Also, you can prevent a SWF file from
	 * using this method by setting the `allowNetworking` parameter of
	 * the `object` and `embed` tags in the HTML page that
	 * contains the SWF content. For more information, see the Flash Player
	 * Developer Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
	 *
	 * **Note for Flash Player applications:** In Flash Player 10 and Flash
	 * Player 9 Update 5, some web browsers restrict this method if a pop-up
	 * blocker is enabled. In this scenario, you can only call this method
	 * successfully in response to a user event(for example, in an event handler
	 * for a mouse click or keypress event).
	 * 
	 * @param functionName The alphanumeric name of the function to call in the
	 *                     container. Using a non-alphanumeric function name
	 *                     causes a runtime error(error 2155). You can use a
	 *                     `try..catch` block to handle the error.
	 * @return The response received from the container. If the call failed–
	 *         for example, if there is no such function in the container, the
	 *         interface is not available, a recursion occurred(with a Netscape
	 *         or Opera browser), or there is a security issue–
	 *         `null` is returned and an error is thrown.
	 * @throws Error         The container does not support outgoing calls.
	 *                       Outgoing calls are supported only in Internet
	 *                       Explorer for Windows and browsers that use the
	 *                       NPRuntime API such as Mozilla 1.7.5 and later or
	 *                       Firefox 1.0 and later.
	 * @throws SecurityError The containing environment belongs to a security
	 *                       sandbox to which the calling code does not have
	 *                       access. To fix this problem, follow these steps:
	 *                       
	 *                        1. In the `object` tag for the SWF
	 *                       file in the containing HTML page, set the following
	 *                       parameter:
	 *
	 *                       `<param name="allowScriptAccess"
	 *                       value="always" />`
	 *                       
	 *                        2. In the SWF file, add the following
	 *                       ActionScript:
	 *
	 *
	 *                       `flash.system.Security.allowDomain(_sourceDomain_)`]]></haxe_doc>
		</call>
		<haxe_doc><![CDATA[* The ExternalInterface class is an application programming interface that
 * enables straightforward communication between ActionScript and the SWF
 * container– for example, an HTML page with JavaScript or a desktop
 * application that uses Flash Player to display a SWF file.
 *
 * Using the ExternalInterface class, you can call an ActionScript function
 * in the Flash runtime, using JavaScript in the HTML page. The ActionScript
 * function can return a value, and JavaScript receives it immediately as the
 * return value of the call.
 *
 * This functionality replaces the `fscommand()` method.
 *
 * Use the ExternalInterface class in the following combinations of browser
 * and operating system:
 *
 * The ExternalInterface class requires the user's web browser to support
 * either ActiveX<sup>®</sup> or the NPRuntime API that is exposed by some
 * browsers for plug-in scripting. Even if a browser and operating system
 * combination are not listed above, they should support the ExternalInterface
 * class if they support the NPRuntime API. See 
 * [http://www.mozilla.org/projects/plugins/npruntime.html](http://www.mozilla.org/projects/plugins/npruntime.html)..
 *
 * **Note:** When embedding SWF files within an HTML page, make sure
 * that the `id` attribute is set and the `id` and
 * `name` attributes of the `object` and
 * `embed` tags do not include the following characters:
 * `. - + ~~ / \`
 *
 * **Note for Flash Player applications:** Flash Player version
 * 9.0.115.0 and later allows the `.`(period) character within the
 * `id` and `name` attributes.
 *
 * **Note for Flash Player applications:** In Flash Player 10 and later
 * running in a browser, using this class programmatically to open a pop-up
 * window may not be successful. Various browsers(and browser configurations)
 * may block pop-up windows at any time; it is not possible to guarantee any
 * pop-up window will appear. However, for the best chance of success, use
 * this class to open a pop-up window only in code that executes as a direct
 * result of a user action(for example, in an event handler for a mouse click
 * or key-press event.)
 *
 * From ActionScript, you can do the following on the HTML page:
 * 
 *  * Call any JavaScript function.
 *  * Pass any number of arguments, with any names.
 *  * Pass various data types(Boolean, Number, String, and so on).
 *  * Receive a return value from the JavaScript function.
 * 
 * 
 *
 * From JavaScript on the HTML page, you can:
 * 
 *  * Call an ActionScript function.
 *  * Pass arguments using standard function call notation.
 *  * Return a value to the JavaScript function.
 * 
 * 
 *
 * **Note for Flash Player applications:** Flash Player does not
 * currently support SWF files embedded within HTML forms.
 *
 * **Note for AIR applications:** In Adobe AIR, the ExternalInterface
 * class can be used to communicate between JavaScript in an HTML page loaded
 * in the HTMLLoader control and ActionScript in SWF content embedded in that
 * HTML page.]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="openfl.filters.BitmapFilter" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/BitmapFilter.hx" extern="1">
		<clone public="1" set="method">
			<f a=""><c path="openfl.filters.BitmapFilter"/></f>
			<haxe_doc>* Returns a BitmapFilter object that is an exact copy of the original
	 * BitmapFilter object.
	 * 
	 * @return A BitmapFilter object.</haxe_doc>
		</clone>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* The BitmapFilter class is the base class for all image filter effects.
 *
 * The BevelFilter, BlurFilter, ColorMatrixFilter, ConvolutionFilter,
 * DisplacementMapFilter, DropShadowFilter, GlowFilter, GradientBevelFilter,
 * and GradientGlowFilter classes all extend the BitmapFilter class. You can
 * apply these filter effects to any display object.
 *
 * You can neither directly instantiate nor extend BitmapFilter.</haxe_doc>
	</class>
	<abstract path="openfl.filters.BitmapFilterQuality" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/BitmapFilterQuality.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>* The BitmapFilterQuality class contains values to set the rendering quality
 * of a BitmapFilter object.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.filters._BitmapFilterQuality.BitmapFilterQuality_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/BitmapFilterQuality.hx" private="1" module="openfl.filters.BitmapFilterQuality" extern="1">
	<HIGH public="1" get="inline" set="null" expr="cast 3" line="13" static="1">
		<x path="openfl.filters.BitmapFilterQuality"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the high quality filter setting.</haxe_doc>
	</HIGH>
	<MEDIUM public="1" get="inline" set="null" expr="cast 2" line="18" static="1">
		<x path="openfl.filters.BitmapFilterQuality"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the medium quality filter setting.</haxe_doc>
	</MEDIUM>
	<LOW public="1" get="inline" set="null" expr="cast 1" line="23" static="1">
		<x path="openfl.filters.BitmapFilterQuality"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the low quality filter setting.</haxe_doc>
	</LOW>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.filters._BitmapFilterQuality.BitmapFilterQuality_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/BitmapFilterQuality.hx" private="1" module="openfl.filters.BitmapFilterQuality" extern="1">
		<HIGH public="1" get="inline" set="null" expr="cast 3" line="13" static="1">
			<x path="openfl.filters.BitmapFilterQuality"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the high quality filter setting.</haxe_doc>
		</HIGH>
		<MEDIUM public="1" get="inline" set="null" expr="cast 2" line="18" static="1">
			<x path="openfl.filters.BitmapFilterQuality"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the medium quality filter setting.</haxe_doc>
		</MEDIUM>
		<LOW public="1" get="inline" set="null" expr="cast 1" line="23" static="1">
			<x path="openfl.filters.BitmapFilterQuality"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the low quality filter setting.</haxe_doc>
		</LOW>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.filters.BitmapFilterType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/BitmapFilterType.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The BitmapFilterType class contains values to set the type of a
 * BitmapFilter.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.filters._BitmapFilterType.BitmapFilterType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/BitmapFilterType.hx" private="1" module="openfl.filters.BitmapFilterType">
	<FULL public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="openfl.filters.BitmapFilterType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the setting that applies a filter to the entire area of an object.</haxe_doc>
	</FULL>
	<INNER public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
		<x path="openfl.filters.BitmapFilterType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the setting that applies a filter to the inner area of an object.</haxe_doc>
	</INNER>
	<OUTER public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
		<x path="openfl.filters.BitmapFilterType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the setting that applies a filter to the outer area of an object.</haxe_doc>
	</OUTER>
	<fromString set="method" line="25" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.filters.BitmapFilterType"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="38" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.filters._BitmapFilterType.BitmapFilterType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/BitmapFilterType.hx" private="1" module="openfl.filters.BitmapFilterType">
		<FULL public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="openfl.filters.BitmapFilterType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the setting that applies a filter to the entire area of an object.</haxe_doc>
		</FULL>
		<INNER public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
			<x path="openfl.filters.BitmapFilterType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the setting that applies a filter to the inner area of an object.</haxe_doc>
		</INNER>
		<OUTER public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
			<x path="openfl.filters.BitmapFilterType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the setting that applies a filter to the outer area of an object.</haxe_doc>
		</OUTER>
		<fromString set="method" line="25" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.filters.BitmapFilterType"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="38" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.filters.BlurFilter" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/BlurFilter.hx" extern="1">
		<extends path="openfl.filters.BitmapFilter"/>
		<blurX public="1">
			<x path="Float"/>
			<haxe_doc>* The amount of horizontal blur. Valid values are from 0 to 255(floating
	 * point). The default value is 4. Values that are a power of 2(such as 2,
	 * 4, 8, 16 and 32) are optimized to render more quickly than other values.</haxe_doc>
		</blurX>
		<blurY public="1">
			<x path="Float"/>
			<haxe_doc>* The amount of vertical blur. Valid values are from 0 to 255(floating
	 * point). The default value is 4. Values that are a power of 2(such as 2,
	 * 4, 8, 16 and 32) are optimized to render more quickly than other values.</haxe_doc>
		</blurY>
		<quality public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The number of times to perform the blur. The default value is
	 * `BitmapFilterQuality.LOW`, which is equivalent to applying the
	 * filter once. The value `BitmapFilterQuality.MEDIUM` applies the
	 * filter twice; the value `BitmapFilterQuality.HIGH` applies it
	 * three times and approximates a Gaussian blur. Filters with lower values
	 * are rendered more quickly.
	 *
	 * For most applications, a `quality` value of low, medium, or
	 * high is sufficient. Although you can use additional numeric values up to
	 * 15 to increase the number of times the blur is applied, higher values are
	 * rendered more slowly. Instead of increasing the value of
	 * `quality`, you can often get a similar effect, and with faster
	 * rendering, by simply increasing the values of the `blurX` and
	 * `blurY` properties.
	 *
	 * You can use the following BitmapFilterQuality constants to specify
	 * values of the `quality` property:
	 *
	 * 
	 *  * `BitmapFilterQuality.LOW`
	 *  * `BitmapFilterQuality.MEDIUM`
	 *  * `BitmapFilterQuality.HIGH`
	 *</haxe_doc>
		</quality>
		<new public="1" set="method">
			<f a="?blurX:?blurY:?quality" v="4:4:1">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ quality : 1, blurY : 4, blurX : 4 }</e></m></meta>
			<haxe_doc>* Initializes the filter with the specified parameters. The default values
	 * create a soft, unfocused image.
	 * 
	 * @param blurX   The amount to blur horizontally. Valid values are from 0 to
	 *                255.0(floating-point value).
	 * @param blurY   The amount to blur vertically. Valid values are from 0 to
	 *                255.0(floating-point value).
	 * @param quality The number of times to apply the filter. You can specify
	 *                the quality using the BitmapFilterQuality constants:
	 *                
	 *
	 *               * `flash.filters.BitmapFilterQuality.LOW`
	 *
	 *               * `flash.filters.BitmapFilterQuality.MEDIUM`
	 *
	 *               * `flash.filters.BitmapFilterQuality.HIGH`
	 *                
	 *
	 *                High quality approximates a Gaussian blur. For most
	 *                applications, these three values are sufficient. Although
	 *                you can use additional numeric values up to 15 to achieve
	 *                different effects, be aware that higher values are rendered
	 *                more slowly.</haxe_doc>
		</new>
		<haxe_doc>* The BlurFilter class lets you apply a blur visual effect to display
 * objects. A blur effect softens the details of an image. You can produce
 * blurs that range from a softly unfocused look to a Gaussian blur, a hazy
 * appearance like viewing an image through semi-opaque glass. When the
 * `quality` property of this filter is set to low, the result is a
 * softly unfocused look. When the `quality` property is set to
 * high, it approximates a Gaussian blur filter. You can apply the filter to
 * any display object(that is, objects that inherit from the DisplayObject
 * class), such as MovieClip, SimpleButton, TextField, and Video objects, as
 * well as to BitmapData objects.
 *
 * To create a new filter, use the constructor `new
 * BlurFilter()`. The use of filters depends on the object to which you
 * apply the filter:
 *
 * 
 *  * To apply filters to movie clips, text fields, buttons, and video, use
 * the `filters` property(inherited from DisplayObject). Setting
 * the `filters` property of an object does not modify the object,
 * and you can remove the filter by clearing the `filters`
 * property. 
 *  * To apply filters to BitmapData objects, use the
 * `BitmapData.applyFilter()` method. Calling
 * `applyFilter()` on a BitmapData object takes the source
 * BitmapData object and the filter object and generates a filtered image as a
 * result.
 * 
 *
 * If you apply a filter to a display object, the
 * `cacheAsBitmap` property of the display object is set to
 * `true`. If you remove all filters, the original value of
 * `cacheAsBitmap` is restored.
 *
 * This filter supports Stage scaling. However, it does not support general
 * scaling, rotation, and skewing. If the object itself is scaled
 * (`scaleX` and `scaleY` are not set to 100%), the
 * filter effect is not scaled. It is scaled only when the user zooms in on
 * the Stage.
 *
 * A filter is not applied if the resulting image exceeds the maximum
 * dimensions. In AIR 1.5 and Flash Player 10, the maximum is 8,191 pixels in
 * width or height, and the total number of pixels cannot exceed 16,777,215
 * pixels.(So, if an image is 8,191 pixels wide, it can only be 2,048 pixels
 * high.) In Flash Player 9 and earlier and AIR 1.1 and earlier, the
 * limitation is 2,880 pixels in height and 2,880 pixels in width. If, for
 * example, you zoom in on a large movie clip with a filter applied, the
 * filter is turned off if the resulting image exceeds the maximum
 * dimensions.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.filters.ColorMatrixFilter" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/ColorMatrixFilter.hx" extern="1">
		<extends path="openfl.filters.BitmapFilter"/>
		<matrix public="1" set="null"><c path="Array"><x path="Float"/></c></matrix>
		<new public="1" set="method">
			<f a="?matrix" v="null">
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ matrix : null }</e></m></meta>
		</new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.filters.DropShadowFilter" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/DropShadowFilter.hx" extern="1">
		<extends path="openfl.filters.BitmapFilter"/>
		<alpha public="1">
			<x path="Float"/>
			<haxe_doc>* The alpha transparency value for the shadow color. Valid values are 0.0 to
	 * 1.0. For example, .25 sets a transparency value of 25%. The default value
	 * is 1.0.</haxe_doc>
		</alpha>
		<angle public="1">
			<x path="Float"/>
			<haxe_doc>* The angle of the shadow. Valid values are 0 to 360 degrees(floating
	 * point). The default value is 45.</haxe_doc>
		</angle>
		<blurX public="1">
			<x path="Float"/>
			<haxe_doc>* The amount of horizontal blur. Valid values are 0 to 255.0(floating
	 * point). The default value is 4.0.</haxe_doc>
		</blurX>
		<blurY public="1">
			<x path="Float"/>
			<haxe_doc>* The amount of vertical blur. Valid values are 0 to 255.0(floating point).
	 * The default value is 4.0.</haxe_doc>
		</blurY>
		<color public="1">
			<x path="Int"/>
			<haxe_doc>* The color of the shadow. Valid values are in hexadecimal format
	 * _0xRRGGBB_. The default value is 0x000000.</haxe_doc>
		</color>
		<distance public="1">
			<x path="Float"/>
			<haxe_doc>* The offset distance for the shadow, in pixels. The default value is 4.0
	 * (floating point).</haxe_doc>
		</distance>
		<hideObject public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether or not the object is hidden. The value `true`
	 * indicates that the object itself is not drawn; only the shadow is visible.
	 * The default is `false`(the object is shown).</haxe_doc>
		</hideObject>
		<inner public="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether or not the shadow is an inner shadow. The value
	 * `true` indicates an inner shadow. The default is
	 * `false`, an outer shadow(a shadow around the outer edges of
	 * the object).</haxe_doc>
		</inner>
		<knockout public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Applies a knockout effect(`true`), which effectively makes the
	 * object's fill transparent and reveals the background color of the
	 * document. The default is `false`(no knockout).</haxe_doc>
		</knockout>
		<quality public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The number of times to apply the filter. The default value is
	 * `BitmapFilterQuality.LOW`, which is equivalent to applying the
	 * filter once. The value `BitmapFilterQuality.MEDIUM` applies the
	 * filter twice; the value `BitmapFilterQuality.HIGH` applies it
	 * three times. Filters with lower values are rendered more quickly.
	 *
	 * For most applications, a quality value of low, medium, or high is
	 * sufficient. Although you can use additional numeric values up to 15 to
	 * achieve different effects, higher values are rendered more slowly. Instead
	 * of increasing the value of `quality`, you can often get a
	 * similar effect, and with faster rendering, by simply increasing the values
	 * of the `blurX` and `blurY` properties.</haxe_doc>
		</quality>
		<strength public="1">
			<x path="Float"/>
			<haxe_doc>* The strength of the imprint or spread. The higher the value, the more
	 * color is imprinted and the stronger the contrast between the shadow and
	 * the background. Valid values are from 0 to 255.0. The default is 1.0.</haxe_doc>
		</strength>
		<new public="1" set="method">
			<f a="?distance:?angle:?color:?alpha:?blurX:?blurY:?strength:?quality:?inner:?knockout:?hideObject" v="4:45:0:1:4:4:1:1:false:false:false">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ hideObject : false, knockout : false, inner : false, quality : 1, strength : 1, blurY : 4, blurX : 4, alpha : 1, color : 0, angle : 45, distance : 4 }</e></m></meta>
			<haxe_doc>* Creates a new DropShadowFilter instance with the specified parameters.
	 * 
	 * @param distance   Offset distance for the shadow, in pixels.
	 * @param angle      Angle of the shadow, 0 to 360 degrees(floating point).
	 * @param color      Color of the shadow, in hexadecimal format
	 *                   _0xRRGGBB_. The default value is 0x000000.
	 * @param alpha      Alpha transparency value for the shadow color. Valid
	 *                   values are 0.0 to 1.0. For example, .25 sets a
	 *                   transparency value of 25%.
	 * @param blurX      Amount of horizontal blur. Valid values are 0 to 255.0
	 *                  (floating point).
	 * @param blurY      Amount of vertical blur. Valid values are 0 to 255.0
	 *                  (floating point).
	 * @param strength   The strength of the imprint or spread. The higher the
	 *                   value, the more color is imprinted and the stronger the
	 *                   contrast between the shadow and the background. Valid
	 *                   values are 0 to 255.0.
	 * @param quality    The number of times to apply the filter. Use the
	 *                   BitmapFilterQuality constants:
	 *                   
	 *                    * `BitmapFilterQuality.LOW`
	 *                    * `BitmapFilterQuality.MEDIUM`
	 *                    * `BitmapFilterQuality.HIGH`
	 *                   
	 *
	 *                   For more information about these values, see the
	 *                   `quality` property description.
	 * @param inner      Indicates whether or not the shadow is an inner shadow.
	 *                   A value of `true` specifies an inner shadow.
	 *                   A value of `false` specifies an outer shadow
	 *                  (a shadow around the outer edges of the object).
	 * @param knockout   Applies a knockout effect(`true`), which
	 *                   effectively makes the object's fill transparent and
	 *                   reveals the background color of the document.
	 * @param hideObject Indicates whether or not the object is hidden. A value
	 *                   of `true` indicates that the object itself is
	 *                   not drawn; only the shadow is visible.</haxe_doc>
		</new>
		<haxe_doc>* The DropShadowFilter class lets you add a drop shadow to display objects.
 * The shadow algorithm is based on the same box filter that the blur filter
 * uses. You have several options for the style of the drop shadow, including
 * inner or outer shadow and knockout mode. You can apply the filter to any
 * display object(that is, objects that inherit from the DisplayObject
 * class), such as MovieClip, SimpleButton, TextField, and Video objects, as
 * well as to BitmapData objects.
 *
 * The use of filters depends on the object to which you apply the
 * filter:
 *
 * 
 *  * To apply filters to display objects use the `filters`
 * property(inherited from DisplayObject). Setting the `filters`
 * property of an object does not modify the object, and you can remove the
 * filter by clearing the `filters` property. 
 *  * To apply filters to BitmapData objects, use the
 * `BitmapData.applyFilter()` method. Calling
 * `applyFilter()` on a BitmapData object takes the source
 * BitmapData object and the filter object and generates a filtered image as a
 * result.
 * 
 *
 * If you apply a filter to a display object, the value of the
 * `cacheAsBitmap` property of the display object is set to
 * `true`. If you clear all filters, the original value of
 * `cacheAsBitmap` is restored.
 *
 * This filter supports Stage scaling. However, it does not support general
 * scaling, rotation, and skewing. If the object itself is scaled(if
 * `scaleX` and `scaleY` are set to a value other than
 * 1.0), the filter is not scaled. It is scaled only when the user zooms in on
 * the Stage.
 *
 * A filter is not applied if the resulting image exceeds the maximum
 * dimensions. In AIR 1.5 and Flash Player 10, the maximum is 8,191 pixels in
 * width or height, and the total number of pixels cannot exceed 16,777,215
 * pixels.(So, if an image is 8,191 pixels wide, it can only be 2,048 pixels
 * high.) In Flash Player 9 and earlier and AIR 1.1 and earlier, the
 * limitation is 2,880 pixels in height and 2,880 pixels in width. If, for
 * example, you zoom in on a large movie clip with a filter applied, the
 * filter is turned off if the resulting image exceeds the maximum
 * dimensions.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.filters.GlowFilter" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/filters/GlowFilter.hx" extern="1">
		<extends path="openfl.filters.BitmapFilter"/>
		<alpha public="1">
			<x path="Float"/>
			<haxe_doc>* The alpha transparency value for the color. Valid values are 0 to 1. For
	 * example, .25 sets a transparency value of 25%. The default value is 1.</haxe_doc>
		</alpha>
		<blurX public="1">
			<x path="Float"/>
			<haxe_doc>* The amount of horizontal blur. Valid values are 0 to 255(floating point).
	 * The default value is 6. Values that are a power of 2(such as 2, 4, 8, 16,
	 * and 32) are optimized to render more quickly than other values.</haxe_doc>
		</blurX>
		<blurY public="1">
			<x path="Float"/>
			<haxe_doc>* The amount of vertical blur. Valid values are 0 to 255(floating point).
	 * The default value is 6. Values that are a power of 2(such as 2, 4, 8, 16,
	 * and 32) are optimized to render more quickly than other values.</haxe_doc>
		</blurY>
		<color public="1">
			<x path="Int"/>
			<haxe_doc>* The color of the glow. Valid values are in the hexadecimal format
	 * 0x_RRGGBB_. The default value is 0xFF0000.</haxe_doc>
		</color>
		<inner public="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the glow is an inner glow. The value `true`
	 * indicates an inner glow. The default is `false`, an outer glow
	 * (a glow around the outer edges of the object).</haxe_doc>
		</inner>
		<knockout public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the object has a knockout effect. A value of
	 * `true` makes the object's fill transparent and reveals the
	 * background color of the document. The default value is `false`
	 * (no knockout effect).</haxe_doc>
		</knockout>
		<quality public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The number of times to apply the filter. The default value is
	 * `BitmapFilterQuality.LOW`, which is equivalent to applying the
	 * filter once. The value `BitmapFilterQuality.MEDIUM` applies the
	 * filter twice; the value `BitmapFilterQuality.HIGH` applies it
	 * three times. Filters with lower values are rendered more quickly.
	 *
	 * For most applications, a `quality` value of low, medium, or
	 * high is sufficient. Although you can use additional numeric values up to
	 * 15 to achieve different effects, higher values are rendered more slowly.
	 * Instead of increasing the value of `quality`, you can often get
	 * a similar effect, and with faster rendering, by simply increasing the
	 * values of the `blurX` and `blurY` properties.</haxe_doc>
		</quality>
		<strength public="1">
			<x path="Float"/>
			<haxe_doc>* The strength of the imprint or spread. The higher the value, the more
	 * color is imprinted and the stronger the contrast between the glow and the
	 * background. Valid values are 0 to 255. The default is 2.</haxe_doc>
		</strength>
		<new public="1" set="method">
			<f a="?color:?alpha:?blurX:?blurY:?strength:?quality:?inner:?knockout" v="0xFF0000:1:6:6:2:1:false:false">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ knockout : false, inner : false, quality : 1, strength : 2, blurY : 6, blurX : 6, alpha : 1, color : 0xFF0000 }</e></m></meta>
			<haxe_doc>* Initializes a new GlowFilter instance with the specified parameters.
	 * 
	 * @param color    The color of the glow, in the hexadecimal format
	 *                 0x_RRGGBB_. The default value is 0xFF0000.
	 * @param alpha    The alpha transparency value for the color. Valid values
	 *                 are 0 to 1. For example, .25 sets a transparency value of
	 *                 25%.
	 * @param blurX    The amount of horizontal blur. Valid values are 0 to 255
	 *                (floating point). Values that are a power of 2(such as 2,
	 *                 4, 8, 16 and 32) are optimized to render more quickly than
	 *                 other values.
	 * @param blurY    The amount of vertical blur. Valid values are 0 to 255
	 *                (floating point). Values that are a power of 2(such as 2,
	 *                 4, 8, 16 and 32) are optimized to render more quickly than
	 *                 other values.
	 * @param strength The strength of the imprint or spread. The higher the
	 *                 value, the more color is imprinted and the stronger the
	 *                 contrast between the glow and the background. Valid values
	 *                 are 0 to 255.
	 * @param quality  The number of times to apply the filter. Use the
	 *                 BitmapFilterQuality constants:
	 *                 
	 *                  * `BitmapFilterQuality.LOW`
	 *                  * `BitmapFilterQuality.MEDIUM`
	 *                  * `BitmapFilterQuality.HIGH`
	 *                 
	 *
	 *                 For more information, see the description of the
	 *                 `quality` property.
	 * @param inner    Specifies whether the glow is an inner glow. The value
	 *                 ` true` specifies an inner glow. The value
	 *                 `false` specifies an outer glow(a glow around
	 *                 the outer edges of the object).
	 * @param knockout Specifies whether the object has a knockout effect. The
	 *                 value `true` makes the object's fill
	 *                 transparent and reveals the background color of the
	 *                 document.</haxe_doc>
		</new>
		<haxe_doc>* The GlowFilter class lets you apply a glow effect to display objects. You
 * have several options for the style of the glow, including inner or outer
 * glow and knockout mode. The glow filter is similar to the drop shadow
 * filter with the `distance` and `angle` properties of
 * the drop shadow filter set to 0. You can apply the filter to any display
 * object(that is, objects that inherit from the DisplayObject class), such
 * as MovieClip, SimpleButton, TextField, and Video objects, as well as to
 * BitmapData objects.
 *
 * The use of filters depends on the object to which you apply the
 * filter:
 *
 * 
 *  * To apply filters to display objects, use the `filters`
 * property(inherited from DisplayObject). Setting the `filters`
 * property of an object does not modify the object, and you can remove the
 * filter by clearing the `filters` property. 
 *  * To apply filters to BitmapData objects, use the
 * `BitmapData.applyFilter()` method. Calling
 * `applyFilter()` on a BitmapData object takes the source
 * BitmapData object and the filter object and generates a filtered image as a
 * result.
 * 
 *
 * If you apply a filter to a display object, the
 * `cacheAsBitmap` property of the display object is set to
 * `true`. If you clear all filters, the original value of
 * `cacheAsBitmap` is restored.
 *
 * This filter supports Stage scaling. However, it does not support general
 * scaling, rotation, and skewing. If the object itself is scaled(if
 * `scaleX` and `scaleY` are set to a value other than
 * 1.0), the filter is not scaled. It is scaled only when the user zooms in on
 * the Stage.
 *
 * A filter is not applied if the resulting image exceeds the maximum
 * dimensions. In AIR 1.5 and Flash Player 10, the maximum is 8,191 pixels in
 * width or height, and the total number of pixels cannot exceed 16,777,215
 * pixels.(So, if an image is 8,191 pixels wide, it can only be 2,048 pixels
 * high.) In Flash Player 9 and earlier and AIR 1.1 and earlier, the
 * limitation is 2,880 pixels in height and 2,880 pixels in width. For
 * example, if you zoom in on a large movie clip with a filter applied, the
 * filter is turned off if the resulting image exceeds the maximum
 * dimensions.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="openfl.geom.ColorTransform" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/ColorTransform.hx" extern="1">
		<alphaMultiplier public="1">
			<x path="Float"/>
			<haxe_doc>* A decimal value that is multiplied with the alpha transparency channel
	 * value.
	 *
	 * If you set the alpha transparency value of a display object directly by
	 * using the `alpha` property of the DisplayObject instance, it
	 * affects the value of the `alphaMultiplier` property of that
	 * display object's `transform.colorTransform` property.</haxe_doc>
		</alphaMultiplier>
		<alphaOffset public="1">
			<x path="Float"/>
			<haxe_doc>* A number from -255 to 255 that is added to the alpha transparency channel
	 * value after it has been multiplied by the `alphaMultiplier`
	 * value.</haxe_doc>
		</alphaOffset>
		<blueMultiplier public="1">
			<x path="Float"/>
			<haxe_doc>* A decimal value that is multiplied with the blue channel value.</haxe_doc>
		</blueMultiplier>
		<blueOffset public="1">
			<x path="Float"/>
			<haxe_doc>* A number from -255 to 255 that is added to the blue channel value after it
	 * has been multiplied by the `blueMultiplier` value.</haxe_doc>
		</blueOffset>
		<color public="1" get="null" set="null">
			<x path="UInt"/>
			<haxe_doc>* The RGB color value for a ColorTransform object.
	 *
	 * When you set this property, it changes the three color offset values
	 * (`redOffset`, `greenOffset`, and
	 * `blueOffset`) accordingly, and it sets the three color
	 * multiplier values(`redMultiplier`,
	 * `greenMultiplier`, and `blueMultiplier`) to 0. The
	 * alpha transparency multiplier and offset values do not change.
	 *
	 * When you pass a value for this property, use the format
	 * 0x_RRGGBB_. _RR_, _GG_, and _BB_ each consist of two
	 * hexadecimal digits that specify the offset of each color component. The 0x
	 * tells the ActionScript compiler that the number is a hexadecimal
	 * value.</haxe_doc>
		</color>
		<greenMultiplier public="1">
			<x path="Float"/>
			<haxe_doc>* A decimal value that is multiplied with the green channel value.</haxe_doc>
		</greenMultiplier>
		<greenOffset public="1">
			<x path="Float"/>
			<haxe_doc>* A number from -255 to 255 that is added to the green channel value after
	 * it has been multiplied by the `greenMultiplier` value.</haxe_doc>
		</greenOffset>
		<redMultiplier public="1">
			<x path="Float"/>
			<haxe_doc>* A decimal value that is multiplied with the red channel value.</haxe_doc>
		</redMultiplier>
		<redOffset public="1">
			<x path="Float"/>
			<haxe_doc>* A number from -255 to 255 that is added to the red channel value after it
	 * has been multiplied by the `redMultiplier` value.</haxe_doc>
		</redOffset>
		<concat public="1" set="method">
			<f a="second">
				<c path="openfl.geom.ColorTransform"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Concatenates the ColorTranform object specified by the `second`
	 * parameter with the current ColorTransform object and sets the current
	 * object as the result, which is an additive combination of the two color
	 * transformations. When you apply the concatenated ColorTransform object,
	 * the effect is the same as applying the `second` color
	 * transformation after the _original_ color transformation.
	 * 
	 * @param second The ColorTransform object to be combined with the current
	 *               ColorTransform object.</haxe_doc>
		</concat>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method">
			<f a="?redMultiplier:?greenMultiplier:?blueMultiplier:?alphaMultiplier:?redOffset:?greenOffset:?blueOffset:?alphaOffset" v="1:1:1:1:0:0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ alphaOffset : 0, blueOffset : 0, greenOffset : 0, redOffset : 0, alphaMultiplier : 1, blueMultiplier : 1, greenMultiplier : 1, redMultiplier : 1 }</e></m></meta>
			<haxe_doc>* Creates a ColorTransform object for a display object with the specified
	 * color channel values and alpha values.
	 * 
	 * @param redMultiplier   The value for the red multiplier, in the range from
	 *                        0 to 1.
	 * @param greenMultiplier The value for the green multiplier, in the range
	 *                        from 0 to 1.
	 * @param blueMultiplier  The value for the blue multiplier, in the range
	 *                        from 0 to 1.
	 * @param alphaMultiplier The value for the alpha transparency multiplier, in
	 *                        the range from 0 to 1.
	 * @param redOffset       The offset value for the red color channel, in the
	 *                        range from -255 to 255.
	 * @param greenOffset     The offset value for the green color channel, in
	 *                        the range from -255 to 255.
	 * @param blueOffset      The offset for the blue color channel value, in the
	 *                        range from -255 to 255.
	 * @param alphaOffset     The offset for alpha transparency channel value, in
	 *                        the range from -255 to 255.</haxe_doc>
		</new>
		<haxe_doc>* The ColorTransform class lets you adjust the color values in a display
 * object. The color adjustment or _color transformation_ can be applied
 * to all four channels: red, green, blue, and alpha transparency.
 *
 * When a ColorTransform object is applied to a display object, a new value
 * for each color channel is calculated like this:
 *
 * 
 *  * New red value = (old red value * `redMultiplier`) +
 * `redOffset`
 *  * New green value = (old green value * `greenMultiplier`) +
 * `greenOffset`
 *  * New blue value = (old blue value * `blueMultiplier`) +
 * `blueOffset`
 *  * New alpha value = (old alpha value * `alphaMultiplier`) +
 * `alphaOffset`
 * 
 *
 * If any of the color channel values is greater than 255 after the
 * calculation, it is set to 255. If it is less than 0, it is set to 0.
 *
 * You can use ColorTransform objects in the following ways:
 *
 * 
 *  * In the `colorTransform` parameter of the
 * `colorTransform()` method of the BitmapData class
 *  * As the `colorTransform` property of a Transform object
 * (which can be used as the `transform` property of a display
 * object)
 * 
 *
 * You must use the `new ColorTransform()` constructor to create
 * a ColorTransform object before you can call the methods of the
 * ColorTransform object.
 *
 * Color transformations do not apply to the background color of a movie
 * clip(such as a loaded SWF object). They apply only to graphics and symbols
 * that are attached to the movie clip.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.geom.Matrix" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Matrix.hx" extern="1">
		<a public="1">
			<x path="Float"/>
			<haxe_doc>* The value that affects the positioning of pixels along the _x_ axis
	 * when scaling or rotating an image.</haxe_doc>
		</a>
		<b public="1">
			<x path="Float"/>
			<haxe_doc>* The value that affects the positioning of pixels along the _y_ axis
	 * when rotating or skewing an image.</haxe_doc>
		</b>
		<c public="1">
			<x path="Float"/>
			<haxe_doc>* The value that affects the positioning of pixels along the _x_ axis
	 * when rotating or skewing an image.</haxe_doc>
		</c>
		<d public="1">
			<x path="Float"/>
			<haxe_doc>* The value that affects the positioning of pixels along the _y_ axis
	 * when scaling or rotating an image.</haxe_doc>
		</d>
		<tx public="1">
			<x path="Float"/>
			<haxe_doc>* The distance by which to translate each point along the _x_ axis.</haxe_doc>
		</tx>
		<ty public="1">
			<x path="Float"/>
			<haxe_doc>* The distance by which to translate each point along the _y_ axis.</haxe_doc>
		</ty>
		<clone public="1" set="method">
			<f a=""><c path="openfl.geom.Matrix"/></f>
			<haxe_doc>* Returns a new Matrix object that is a clone of this matrix, with an exact
	 * copy of the contained object.
	 * 
	 * @return A Matrix object.</haxe_doc>
		</clone>
		<concat public="1" set="method">
			<f a="m">
				<c path="openfl.geom.Matrix"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Concatenates a matrix with the current matrix, effectively combining the
	 * geometric effects of the two. In mathematical terms, concatenating two
	 * matrixes is the same as combining them using matrix multiplication.
	 *
	 * For example, if matrix `m1` scales an object by a factor of
	 * four, and matrix `m2` rotates an object by 1.5707963267949
	 * radians(`Math.PI/2`), then `m1.concat(m2)`
	 * transforms `m1` into a matrix that scales an object by a factor
	 * of four and rotates the object by `Math.PI/2` radians. 
	 *
	 * This method replaces the source matrix with the concatenated matrix. If
	 * you want to concatenate two matrixes without altering either of the two
	 * source matrixes, first copy the source matrix by using the
	 * `clone()` method, as shown in the Class Examples section.
	 * 
	 * @param m The matrix to be concatenated to the source matrix.</haxe_doc>
		</concat>
		<copyColumnFrom public="1" set="method"><f a="column:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyColumnFrom>
		<copyColumnTo public="1" set="method"><f a="column:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyColumnTo>
		<copyFrom public="1" set="method"><f a="sourceMatrix">
	<c path="openfl.geom.Matrix"/>
	<x path="Void"/>
</f></copyFrom>
		<copyRowFrom public="1" set="method"><f a="row:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyRowFrom>
		<copyRowTo public="1" set="method"><f a="row:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyRowTo>
		<createBox public="1" set="method">
			<f a="scaleX:scaleY:?rotation:?tx:?ty" v="::0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, rotation : 0 }</e></m></meta>
			<haxe_doc>* Includes parameters for scaling, rotation, and translation. When applied
	 * to a matrix it sets the matrix's values based on those parameters.
	 *
	 * Using the `createBox()` method lets you obtain the same
	 * matrix as you would if you applied the `identity()`,
	 * `rotate()`, `scale()`, and `translate()`
	 * methods in succession. For example, `mat1.createBox(2,2,Math.PI/4,
	 * 100, 100)` has the same effect as the following:
	 * 
	 * @param scaleX   The factor by which to scale horizontally.
	 * @param scaleY   The factor by which scale vertically.
	 * @param rotation The amount to rotate, in radians.
	 * @param tx       The number of pixels to translate(move) to the right
	 *                 along the _x_ axis.
	 * @param ty       The number of pixels to translate(move) down along the
	 *                 _y_ axis.</haxe_doc>
		</createBox>
		<createGradientBox public="1" set="method">
			<f a="width:height:?rotation:?tx:?ty" v="::0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, rotation : 0 }</e></m></meta>
			<haxe_doc>* Creates the specific style of matrix expected by the
	 * `beginGradientFill()` and `lineGradientStyle()`
	 * methods of the Graphics class. Width and height are scaled to a
	 * `scaleX`/`scaleY` pair and the
	 * `tx`/`ty` values are offset by half the width and
	 * height.
	 *
	 * For example, consider a gradient with the following
	 * characteristics:
	 *
	 * 
	 *  * `GradientType.LINEAR`
	 *  * Two colors, green and blue, with the ratios array set to `[0,
	 * 255]`
	 *  * `SpreadMethod.PAD`
	 *  * `InterpolationMethod.LINEAR_RGB`
	 * 
	 *
	 * The following illustrations show gradients in which the matrix was
	 * defined using the `createGradientBox()` method with different
	 * parameter settings:
	 * 
	 * @param width    The width of the gradient box.
	 * @param height   The height of the gradient box.
	 * @param rotation The amount to rotate, in radians.
	 * @param tx       The distance, in pixels, to translate to the right along
	 *                 the _x_ axis. This value is offset by half of the
	 *                 `width` parameter.
	 * @param ty       The distance, in pixels, to translate down along the
	 *                 _y_ axis. This value is offset by half of the
	 *                 `height` parameter.</haxe_doc>
		</createGradientBox>
		<deltaTransformPoint public="1" set="method">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc>* Given a point in the pretransform coordinate space, returns the
	 * coordinates of that point after the transformation occurs. Unlike the
	 * standard transformation applied using the `transformPoint()`
	 * method, the `deltaTransformPoint()` method's transformation
	 * does not consider the translation parameters `tx` and
	 * `ty`.
	 * 
	 * @param point The point for which you want to get the result of the matrix
	 *              transformation.
	 * @return The point resulting from applying the matrix transformation.</haxe_doc>
		</deltaTransformPoint>
		<identity public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Sets each matrix property to a value that causes a null transformation. An
	 * object transformed by applying an identity matrix will be identical to the
	 * original.
	 *
	 * After calling the `identity()` method, the resulting matrix
	 * has the following properties: `a`=1, `b`=0,
	 * `c`=0, `d`=1, `tx`=0,
	 * `ty`=0.
	 *
	 * In matrix notation, the identity matrix looks like this:
	 *</haxe_doc>
		</identity>
		<invert public="1" set="method">
			<f a=""><c path="openfl.geom.Matrix"/></f>
			<haxe_doc>* Performs the opposite transformation of the original matrix. You can apply
	 * an inverted matrix to an object to undo the transformation performed when
	 * applying the original matrix.
	 *</haxe_doc>
		</invert>
		<rotate public="1" set="method">
			<f a="theta">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Applies a rotation transformation to the Matrix object.
	 *
	 * The `rotate()` method alters the `a`,
	 * `b`, `c`, and `d` properties of the
	 * Matrix object. In matrix notation, this is the same as concatenating the
	 * current matrix with the following:
	 * 
	 * @param angle The rotation angle in radians.</haxe_doc>
		</rotate>
		<scale public="1" set="method">
			<f a="sx:sy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Applies a scaling transformation to the matrix. The _x_ axis is
	 * multiplied by `sx`, and the _y_ axis it is multiplied by
	 * `sy`.
	 *
	 * The `scale()` method alters the `a` and
	 * `d` properties of the Matrix object. In matrix notation, this
	 * is the same as concatenating the current matrix with the following
	 * matrix:
	 * 
	 * @param sx A multiplier used to scale the object along the _x_ axis.
	 * @param sy A multiplier used to scale the object along the _y_ axis.</haxe_doc>
		</scale>
		<setTo public="1" set="method"><f a="a:b:c:d:tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>* Returns a text value listing the properties of the Matrix object.
	 * 
	 * @return A string containing the values of the properties of the Matrix
	 *         object: `a`, `b`, `c`,
	 *         `d`, `tx`, and `ty`.</haxe_doc>
		</toString>
		<transformPoint public="1" set="method">
			<f a="pos">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc>* Returns the result of applying the geometric transformation represented by
	 * the Matrix object to the specified point.
	 * 
	 * @param point The point for which you want to get the result of the Matrix
	 *              transformation.
	 * @return The point resulting from applying the Matrix transformation.</haxe_doc>
		</transformPoint>
		<translate public="1" set="method">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Translates the matrix along the _x_ and _y_ axes, as specified
	 * by the `dx` and `dy` parameters.
	 * 
	 * @param dx The amount of movement along the _x_ axis to the right, in
	 *           pixels.
	 * @param dy The amount of movement down along the _y_ axis, in pixels.</haxe_doc>
		</translate>
		<new public="1" set="method">
			<f a="?a:?b:?c:?d:?tx:?ty" v="1:0:0:1:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, d : 1, c : 0, b : 0, a : 1 }</e></m></meta>
			<haxe_doc>* Creates a new Matrix object with the specified parameters. In matrix
	 * notation, the properties are organized like this:
	 *
	 * If you do not provide any parameters to the `new Matrix()`
	 * constructor, it creates an _identity matrix_ with the following
	 * values:
	 *
	 * In matrix notation, the identity matrix looks like this:
	 * 
	 * @param a  The value that affects the positioning of pixels along the
	 *           _x_ axis when scaling or rotating an image.
	 * @param b  The value that affects the positioning of pixels along the
	 *           _y_ axis when rotating or skewing an image.
	 * @param c  The value that affects the positioning of pixels along the
	 *           _x_ axis when rotating or skewing an image.
	 * @param d  The value that affects the positioning of pixels along the
	 *           _y_ axis when scaling or rotating an image..
	 * @param tx The distance by which to translate each point along the _x_
	 *           axis.
	 * @param ty The distance by which to translate each point along the _y_
	 *           axis.</haxe_doc>
		</new>
		<haxe_doc>* The Matrix class represents a transformation matrix that determines how to
 * map points from one coordinate space to another. You can perform various
 * graphical transformations on a display object by setting the properties of
 * a Matrix object, applying that Matrix object to the `matrix`
 * property of a Transform object, and then applying that Transform object as
 * the `transform` property of the display object. These
 * transformation functions include translation(_x_ and _y_
 * repositioning), rotation, scaling, and skewing.
 *
 * Together these types of transformations are known as _affine
 * transformations_. Affine transformations preserve the straightness of
 * lines while transforming, so that parallel lines stay parallel.
 *
 * To apply a transformation matrix to a display object, you create a
 * Transform object, set its `matrix` property to the
 * transformation matrix, and then set the `transform` property of
 * the display object to the Transform object. Matrix objects are also used as
 * parameters of some methods, such as the following:
 *
 * 
 *  * The `draw()` method of a BitmapData object
 *  * The `beginBitmapFill()` method,
 * `beginGradientFill()` method, or
 * `lineGradientStyle()` method of a Graphics object
 * 
 *
 * A transformation matrix object is a 3 x 3 matrix with the following
 * contents:
 *
 * In traditional transformation matrixes, the `u`,
 * `v`, and `w` properties provide extra capabilities.
 * The Matrix class can only operate in two-dimensional space, so it always
 * assumes that the property values `u` and `v` are 0.0,
 * and that the property value `w` is 1.0. The effective values of
 * the matrix are as follows:
 *
 * You can get and set the values of all six of the other properties in a
 * Matrix object: `a`, `b`, `c`,
 * `d`, `tx`, and `ty`.
 *
 * The Matrix class supports the four major types of transformations:
 * translation, scaling, rotation, and skewing. You can set three of these
 * transformations by using specialized methods, as described in the following
 * table: 
 *
 * Each transformation function alters the current matrix properties so
 * that you can effectively combine multiple transformations. To do this, you
 * call more than one transformation function before applying the matrix to
 * its display object target(by using the `transform` property of
 * that display object).
 *
 * Use the `new Matrix()` constructor to create a Matrix object
 * before you can call the methods of the Matrix object.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.geom.Matrix3D" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Matrix3D.hx" extern="1">
		<interpolate public="1" set="method" static="1"><f a="thisMat:toMat:percent">
	<c path="openfl.geom.Matrix3D"/>
	<c path="openfl.geom.Matrix3D"/>
	<x path="Float"/>
	<c path="openfl.geom.Matrix3D"/>
</f></interpolate>
		<determinant public="1" get="null" set="null"><x path="Float"/></determinant>
		<position public="1" get="null" set="null"><c path="openfl.geom.Vector3D"/></position>
		<rawData public="1"><x path="openfl.Vector"><x path="Float"/></x></rawData>
		<append public="1" set="method"><f a="lhs">
	<c path="openfl.geom.Matrix3D"/>
	<x path="Void"/>
</f></append>
		<appendRotation public="1" set="method">
			<f a="degrees:axis:?pivotPoint" v="::null">
				<x path="Float"/>
				<c path="openfl.geom.Vector3D"/>
				<c path="openfl.geom.Vector3D"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ pivotPoint : null }</e></m></meta>
		</appendRotation>
		<appendScale public="1" set="method"><f a="xScale:yScale:zScale">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></appendScale>
		<appendTranslation public="1" set="method"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></appendTranslation>
		<clone public="1" set="method"><f a=""><c path="openfl.geom.Matrix3D"/></f></clone>
		<copyColumnFrom public="1" set="method"><f a="column:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyColumnFrom>
		<copyColumnTo public="1" set="method"><f a="column:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyColumnTo>
		<copyFrom public="1" set="method"><f a="other">
	<c path="openfl.geom.Matrix3D"/>
	<x path="Void"/>
</f></copyFrom>
		<copyRawDataFrom public="1" set="method">
			<f a="vector:?index:?transpose" v=":0:false">
				<x path="openfl.Vector"><x path="Float"/></x>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ transpose : false, index : 0 }</e></m></meta>
		</copyRawDataFrom>
		<copyRawDataTo public="1" set="method">
			<f a="vector:?index:?transpose" v=":0:false">
				<x path="openfl.Vector"><x path="Float"/></x>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ transpose : false, index : 0 }</e></m></meta>
		</copyRawDataTo>
		<copyRowFrom public="1" set="method"><f a="row:vector3D">
	<x path="UInt"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyRowFrom>
		<copyRowTo public="1" set="method"><f a="row:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyRowTo>
		<copyToMatrix3D public="1" set="method"><f a="other">
	<c path="openfl.geom.Matrix3D"/>
	<x path="Void"/>
</f></copyToMatrix3D>
		<decompose public="1" set="method"><f a="?orientationStyle">
	<x path="openfl.geom.Orientation3D"/>
	<x path="openfl.Vector"><c path="openfl.geom.Vector3D"/></x>
</f></decompose>
		<deltaTransformVector public="1" set="method"><f a="v">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
</f></deltaTransformVector>
		<identity public="1" set="method"><f a=""><x path="Void"/></f></identity>
		<interpolateTo public="1" set="method"><f a="toMat:percent">
	<c path="openfl.geom.Matrix3D"/>
	<x path="Float"/>
	<x path="Void"/>
</f></interpolateTo>
		<invert public="1" set="method"><f a=""><x path="Bool"/></f></invert>
		<pointAt public="1" set="method">
			<f a="pos:?at:?up" v=":null:null">
				<c path="openfl.geom.Vector3D"/>
				<c path="openfl.geom.Vector3D"/>
				<c path="openfl.geom.Vector3D"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ up : null, at : null }</e></m></meta>
		</pointAt>
		<prepend public="1" set="method"><f a="rhs">
	<c path="openfl.geom.Matrix3D"/>
	<x path="Void"/>
</f></prepend>
		<prependRotation public="1" set="method">
			<f a="degrees:axis:?pivotPoint" v="::null">
				<x path="Float"/>
				<c path="openfl.geom.Vector3D"/>
				<c path="openfl.geom.Vector3D"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ pivotPoint : null }</e></m></meta>
		</prependRotation>
		<prependScale public="1" set="method"><f a="xScale:yScale:zScale">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></prependScale>
		<prependTranslation public="1" set="method"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></prependTranslation>
		<recompose public="1" set="method"><f a="components:?orientationStyle">
	<x path="openfl.Vector"><c path="openfl.geom.Vector3D"/></x>
	<x path="openfl.geom.Orientation3D"/>
	<x path="Bool"/>
</f></recompose>
		<transformVector public="1" set="method"><f a="v">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
</f></transformVector>
		<transformVectors public="1" set="method"><f a="vin:vout">
	<x path="openfl.Vector"><x path="Float"/></x>
	<x path="openfl.Vector"><x path="Float"/></x>
	<x path="Void"/>
</f></transformVectors>
		<transpose public="1" set="method"><f a=""><x path="Void"/></f></transpose>
		<new public="1" set="method">
			<f a="?v" v="null">
				<x path="openfl.Vector"><x path="Float"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ v : null }</e></m></meta>
		</new>
	</class>
	<abstract path="openfl.geom.Orientation3D" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Orientation3D.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.geom._Orientation3D.Orientation3D_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Orientation3D.hx" private="1" module="openfl.geom.Orientation3D">
	<AXIS_ANGLE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.geom.Orientation3D"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AXIS_ANGLE>
	<EULER_ANGLES public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.geom.Orientation3D"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EULER_ANGLES>
	<QUATERNION public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.geom.Orientation3D"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUATERNION>
	<fromString set="method" line="10" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.geom.Orientation3D"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="23" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.geom._Orientation3D.Orientation3D_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Orientation3D.hx" private="1" module="openfl.geom.Orientation3D">
		<AXIS_ANGLE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.geom.Orientation3D"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AXIS_ANGLE>
		<EULER_ANGLES public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.geom.Orientation3D"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EULER_ANGLES>
		<QUATERNION public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.geom.Orientation3D"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUATERNION>
		<fromString set="method" line="10" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.geom.Orientation3D"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="23" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.geom.PerspectiveProjection" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/PerspectiveProjection.hx" extern="1">
		<fieldOfView public="1" set="null"><x path="Float"/></fieldOfView>
		<focalLength public="1"><x path="Float"/></focalLength>
		<projectionCenter public="1"><c path="openfl.geom.Point"/></projectionCenter>
		<toMatrix3D public="1" set="method"><f a=""><c path="openfl.geom.Matrix3D"/></f></toMatrix3D>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.geom.Point" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Point.hx" extern="1">
		<distance public="1" set="method" static="1">
			<f a="pt1:pt2">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
				<x path="Float"/>
			</f>
			<haxe_doc>* Returns the distance between `pt1` and `pt2`.
	 * 
	 * @param pt1 The first point.
	 * @param pt2 The second point.
	 * @return The distance between the first and second points.</haxe_doc>
		</distance>
		<interpolate public="1" set="method" static="1">
			<f a="pt1:pt2:f">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
				<x path="Float"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc>* Determines a point between two specified points. The parameter
	 * `f` determines where the new interpolated point is located
	 * relative to the two end points specified by parameters `pt1`
	 * and `pt2`. The closer the value of the parameter `f`
	 * is to `1.0`, the closer the interpolated point is to the first
	 * point(parameter `pt1`). The closer the value of the parameter
	 * `f` is to 0, the closer the interpolated point is to the second
	 * point(parameter `pt2`).
	 * 
	 * @param pt1 The first point.
	 * @param pt2 The second point.
	 * @param f   The level of interpolation between the two points. Indicates
	 *            where the new point will be, along the line between
	 *            `pt1` and `pt2`. If `f`=1,
	 *            `pt1` is returned; if `f`=0,
	 *            `pt2` is returned.
	 * @return The new, interpolated point.</haxe_doc>
		</interpolate>
		<polar public="1" set="method" static="1">
			<f a="len:angle">
				<x path="Float"/>
				<x path="Float"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc>* Converts a pair of polar coordinates to a Cartesian point coordinate.
	 * 
	 * @param len   The length coordinate of the polar pair.
	 * @param angle The angle, in radians, of the polar pair.
	 * @return The Cartesian point.</haxe_doc>
		</polar>
		<length public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The length of the line segment from(0,0) to this point.</haxe_doc>
		</length>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>* The horizontal coordinate of the point. The default value is 0.</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>* The vertical coordinate of the point. The default value is 0.</haxe_doc>
		</y>
		<add public="1" set="method">
			<f a="v">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc>* Adds the coordinates of another point to the coordinates of this point to
	 * create a new point.
	 * 
	 * @param v The point to be added.
	 * @return The new point.</haxe_doc>
		</add>
		<clone public="1" set="method">
			<f a=""><c path="openfl.geom.Point"/></f>
			<haxe_doc>* Creates a copy of this Point object.
	 * 
	 * @return The new Point object.</haxe_doc>
		</clone>
		<copyFrom public="1" set="method"><f a="sourcePoint">
	<c path="openfl.geom.Point"/>
	<x path="Void"/>
</f></copyFrom>
		<equals public="1" set="method">
			<f a="toCompare">
				<c path="openfl.geom.Point"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Determines whether two points are equal. Two points are equal if they have
	 * the same _x_ and _y_ values.
	 * 
	 * @param toCompare The point to be compared.
	 * @return A value of `true` if the object is equal to this Point
	 *         object; `false` if it is not equal.</haxe_doc>
		</equals>
		<normalize public="1" set="method">
			<f a="thickness">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Scales the line segment between(0,0) and the current point to a set
	 * length.
	 * 
	 * @param thickness The scaling value. For example, if the current point is
	 *                 (0,5), and you normalize it to 1, the point returned is
	 *                  at(0,1).
	 * @return The normalized point.</haxe_doc>
		</normalize>
		<offset public="1" set="method">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Offsets the Point object by the specified amount. The value of
	 * `dx` is added to the original value of _x_ to create the
	 * new _x_ value. The value of `dy` is added to the original
	 * value of _y_ to create the new _y_ value.
	 * 
	 * @param dx The amount by which to offset the horizontal coordinate,
	 *           _x_.
	 * @param dy The amount by which to offset the vertical coordinate, _y_.</haxe_doc>
		</offset>
		<setTo public="1" set="method"><f a="xa:ya">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<subtract public="1" set="method">
			<f a="v">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc>* Subtracts the coordinates of another point from the coordinates of this
	 * point to create a new point.
	 * 
	 * @param v The point to be subtracted.
	 * @return The new point.</haxe_doc>
		</subtract>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>* Returns a string that contains the values of the _x_ and _y_
	 * coordinates. The string has the form `"(x=_x_,
	 * y=_y_)"`, so calling the `toString()` method for a
	 * point at 23,17 would return `"(x=23, y=17)"`.
	 * 
	 * @return The string representation of the coordinates.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="?x:?y" v="0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ y : 0, x : 0 }</e></m></meta>
			<haxe_doc>* Creates a new point. If you pass no parameters to this method, a point is
	 * created at(0,0).
	 * 
	 * @param x The horizontal coordinate.
	 * @param y The vertical coordinate.</haxe_doc>
		</new>
		<haxe_doc>* The Point object represents a location in a two-dimensional coordinate
 * system, where _x_ represents the horizontal axis and _y_
 * represents the vertical axis.
 *
 * The following code creates a point at(0,0):
 *
 * Methods and properties of the following classes use Point objects:
 *
 * 
 *  * BitmapData
 *  * DisplayObject
 *  * DisplayObjectContainer
 *  * DisplacementMapFilter
 *  * NativeWindow
 *  * Matrix
 *  * Rectangle
 * 
 *
 * You can use the `new Point()` constructor to create a Point
 * object.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.geom.Rectangle" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Rectangle.hx" extern="1">
		<bottom public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The sum of the `y` and `height` properties.</haxe_doc>
		</bottom>
		<bottomRight public="1" get="null" set="null">
			<c path="openfl.geom.Point"/>
			<haxe_doc>* The location of the Rectangle object's bottom-right corner, determined by
	 * the values of the `right` and `bottom` properties.</haxe_doc>
		</bottomRight>
		<height public="1">
			<x path="Float"/>
			<haxe_doc>* The height of the rectangle, in pixels. Changing the `height`
	 * value of a Rectangle object has no effect on the `x`,
	 * `y`, and `width` properties.</haxe_doc>
		</height>
		<left public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The _x_ coordinate of the top-left corner of the rectangle. Changing
	 * the `left` property of a Rectangle object has no effect on the
	 * `y` and `height` properties. However it does affect
	 * the `width` property, whereas changing the `x` value
	 * does _not_ affect the `width` property.
	 *
	 * The value of the `left` property is equal to the value of
	 * the `x` property.</haxe_doc>
		</left>
		<right public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The sum of the `x` and `width` properties.</haxe_doc>
		</right>
		<size public="1" get="null" set="null">
			<c path="openfl.geom.Point"/>
			<haxe_doc>* The size of the Rectangle object, expressed as a Point object with the
	 * values of the `width` and `height` properties.</haxe_doc>
		</size>
		<top public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The _y_ coordinate of the top-left corner of the rectangle. Changing
	 * the `top` property of a Rectangle object has no effect on the
	 * `x` and `width` properties. However it does affect
	 * the `height` property, whereas changing the `y`
	 * value does _not_ affect the `height` property.
	 *
	 * The value of the `top` property is equal to the value of the
	 * `y` property.</haxe_doc>
		</top>
		<topLeft public="1" get="null" set="null">
			<c path="openfl.geom.Point"/>
			<haxe_doc>* The location of the Rectangle object's top-left corner, determined by the
	 * _x_ and _y_ coordinates of the point.</haxe_doc>
		</topLeft>
		<width public="1">
			<x path="Float"/>
			<haxe_doc>* The width of the rectangle, in pixels. Changing the `width`
	 * value of a Rectangle object has no effect on the `x`,
	 * `y`, and `height` properties.</haxe_doc>
		</width>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>* The _x_ coordinate of the top-left corner of the rectangle. Changing
	 * the value of the `x` property of a Rectangle object has no
	 * effect on the `y`, `width`, and `height`
	 * properties.
	 *
	 * The value of the `x` property is equal to the value of the
	 * `left` property.</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>* The _y_ coordinate of the top-left corner of the rectangle. Changing
	 * the value of the `y` property of a Rectangle object has no
	 * effect on the `x`, `width`, and `height`
	 * properties.
	 *
	 * The value of the `y` property is equal to the value of the
	 * `top` property.</haxe_doc>
		</y>
		<clone public="1" set="method">
			<f a=""><c path="openfl.geom.Rectangle"/></f>
			<haxe_doc>* Returns a new Rectangle object with the same values for the
	 * `x`, `y`, `width`, and
	 * `height` properties as the original Rectangle object.
	 * 
	 * @return A new Rectangle object with the same values for the
	 *         `x`, `y`, `width`, and
	 *         `height` properties as the original Rectangle object.</haxe_doc>
		</clone>
		<contains public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Determines whether the specified point is contained within the rectangular
	 * region defined by this Rectangle object.
	 * 
	 * @param x The _x_ coordinate(horizontal position) of the point.
	 * @param y The _y_ coordinate(vertical position) of the point.
	 * @return A value of `true` if the Rectangle object contains the
	 *         specified point; otherwise `false`.</haxe_doc>
		</contains>
		<containsPoint public="1" set="method">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Determines whether the specified point is contained within the rectangular
	 * region defined by this Rectangle object. This method is similar to the
	 * `Rectangle.contains()` method, except that it takes a Point
	 * object as a parameter.
	 * 
	 * @param point The point, as represented by its _x_ and _y_
	 *              coordinates.
	 * @return A value of `true` if the Rectangle object contains the
	 *         specified point; otherwise `false`.</haxe_doc>
		</containsPoint>
		<containsRect public="1" set="method">
			<f a="rect">
				<c path="openfl.geom.Rectangle"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Determines whether the Rectangle object specified by the `rect`
	 * parameter is contained within this Rectangle object. A Rectangle object is
	 * said to contain another if the second Rectangle object falls entirely
	 * within the boundaries of the first.
	 * 
	 * @param rect The Rectangle object being checked.
	 * @return A value of `true` if the Rectangle object that you
	 *         specify is contained by this Rectangle object; otherwise
	 *         `false`.</haxe_doc>
		</containsRect>
		<copyFrom public="1" set="method"><f a="sourceRect">
	<c path="openfl.geom.Rectangle"/>
	<x path="Void"/>
</f></copyFrom>
		<equals public="1" set="method">
			<f a="toCompare">
				<c path="openfl.geom.Rectangle"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Determines whether the object specified in the `toCompare`
	 * parameter is equal to this Rectangle object. This method compares the
	 * `x`, `y`, `width`, and
	 * `height` properties of an object against the same properties of
	 * this Rectangle object.
	 * 
	 * @param toCompare The rectangle to compare to this Rectangle object.
	 * @return A value of `true` if the object has exactly the same
	 *         values for the `x`, `y`, `width`,
	 *         and `height` properties as this Rectangle object;
	 *         otherwise `false`.</haxe_doc>
		</equals>
		<inflate public="1" set="method">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Increases the size of the Rectangle object by the specified amounts, in
	 * pixels. The center point of the Rectangle object stays the same, and its
	 * size increases to the left and right by the `dx` value, and to
	 * the top and the bottom by the `dy` value.
	 * 
	 * @param dx The value to be added to the left and the right of the Rectangle
	 *           object. The following equation is used to calculate the new
	 *           width and position of the rectangle:
	 * @param dy The value to be added to the top and the bottom of the
	 *           Rectangle. The following equation is used to calculate the new
	 *           height and position of the rectangle:</haxe_doc>
		</inflate>
		<inflatePoint public="1" set="method">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Increases the size of the Rectangle object. This method is similar to the
	 * `Rectangle.inflate()` method except it takes a Point object as
	 * a parameter.
	 *
	 * The following two code examples give the same result:
	 * 
	 * @param point The `x` property of this Point object is used to
	 *              increase the horizontal dimension of the Rectangle object.
	 *              The `y` property is used to increase the vertical
	 *              dimension of the Rectangle object.</haxe_doc>
		</inflatePoint>
		<intersection public="1" set="method">
			<f a="toIntersect">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc>* If the Rectangle object specified in the `toIntersect`
	 * parameter intersects with this Rectangle object, returns the area of
	 * intersection as a Rectangle object. If the rectangles do not intersect,
	 * this method returns an empty Rectangle object with its properties set to
	 * 0.
	 * 
	 * @param toIntersect The Rectangle object to compare against to see if it
	 *                    intersects with this Rectangle object.
	 * @return A Rectangle object that equals the area of intersection. If the
	 *         rectangles do not intersect, this method returns an empty
	 *         Rectangle object; that is, a rectangle with its `x`,
	 *         `y`, `width`, and `height`
	 *         properties set to 0.</haxe_doc>
		</intersection>
		<intersects public="1" set="method">
			<f a="toIntersect">
				<c path="openfl.geom.Rectangle"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Determines whether the object specified in the `toIntersect`
	 * parameter intersects with this Rectangle object. This method checks the
	 * `x`, `y`, `width`, and
	 * `height` properties of the specified Rectangle object to see if
	 * it intersects with this Rectangle object.
	 * 
	 * @param toIntersect The Rectangle object to compare against this Rectangle
	 *                    object.
	 * @return A value of `true` if the specified object intersects
	 *         with this Rectangle object; otherwise `false`.</haxe_doc>
		</intersects>
		<isEmpty public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>* Determines whether or not this Rectangle object is empty.
	 * 
	 * @return A value of `true` if the Rectangle object's width or
	 *         height is less than or equal to 0; otherwise `false`.</haxe_doc>
		</isEmpty>
		<offset public="1" set="method">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adjusts the location of the Rectangle object, as determined by its
	 * top-left corner, by the specified amounts.
	 * 
	 * @param dx Moves the _x_ value of the Rectangle object by this amount.
	 * @param dy Moves the _y_ value of the Rectangle object by this amount.</haxe_doc>
		</offset>
		<offsetPoint public="1" set="method">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adjusts the location of the Rectangle object using a Point object as a
	 * parameter. This method is similar to the `Rectangle.offset()`
	 * method, except that it takes a Point object as a parameter.
	 * 
	 * @param point A Point object to use to offset this Rectangle object.</haxe_doc>
		</offsetPoint>
		<setEmpty public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Sets all of the Rectangle object's properties to 0. A Rectangle object is
	 * empty if its width or height is less than or equal to 0.
	 *
	 *  This method sets the values of the `x`, `y`,
	 * `width`, and `height` properties to 0.
	 *</haxe_doc>
		</setEmpty>
		<setTo public="1" set="method"><f a="xa:ya:widtha:heighta">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<union public="1" set="method">
			<f a="toUnion">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc>* Adds two rectangles together to create a new Rectangle object, by filling
	 * in the horizontal and vertical space between the two rectangles.
	 *
	 * **Note:** The `union()` method ignores rectangles with
	 * `0` as the height or width value, such as: `var
	 * rect2:Rectangle = new Rectangle(300,300,50,0);`
	 * 
	 * @param toUnion A Rectangle object to add to this Rectangle object.
	 * @return A new Rectangle object that is the union of the two rectangles.</haxe_doc>
		</union>
		<new public="1" set="method">
			<f a="?x:?y:?width:?height" v="0:0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ height : 0, width : 0, y : 0, x : 0 }</e></m></meta>
			<haxe_doc>* Creates a new Rectangle object with the top-left corner specified by the
	 * `x` and `y` parameters and with the specified
	 * `width` and `height` parameters. If you call this
	 * function without parameters, a rectangle with `x`,
	 * `y`, `width`, and `height` properties set
	 * to 0 is created.
	 * 
	 * @param x      The _x_ coordinate of the top-left corner of the
	 *               rectangle.
	 * @param y      The _y_ coordinate of the top-left corner of the
	 *               rectangle.
	 * @param width  The width of the rectangle, in pixels.
	 * @param height The height of the rectangle, in pixels.</haxe_doc>
		</new>
		<haxe_doc>* A Rectangle object is an area defined by its position, as indicated by its
 * top-left corner point(_x_, _y_) and by its width and its height.
 *
 *
 * The `x`, `y`, `width`, and
 * `height` properties of the Rectangle class are independent of
 * each other; changing the value of one property has no effect on the others.
 * However, the `right` and `bottom` properties are
 * integrally related to those four properties. For example, if you change the
 * value of the `right` property, the value of the
 * `width` property changes; if you change the `bottom`
 * property, the value of the `height` property changes. 
 *
 * The following methods and properties use Rectangle objects:
 *
 * 
 *  * The `applyFilter()`, `colorTransform()`,
 * `copyChannel()`, `copyPixels()`, `draw()`,
 * `fillRect()`, `generateFilterRect()`,
 * `getColorBoundsRect()`, `getPixels()`,
 * `merge()`, `paletteMap()`,
 * `pixelDisolve()`, `setPixels()`, and
 * `threshold()` methods, and the `rect` property of the
 * BitmapData class
 *  * The `getBounds()` and `getRect()` methods, and
 * the `scrollRect` and `scale9Grid` properties of the
 * DisplayObject class
 *  * The `getCharBoundaries()` method of the TextField
 * class
 *  * The `pixelBounds` property of the Transform class
 *  * The `bounds` parameter for the `startDrag()`
 * method of the Sprite class
 *  * The `printArea` parameter of the `addPage()`
 * method of the PrintJob class
 * 
 *
 * You can use the `new Rectangle()` constructor to create a
 * Rectangle object.
 *
 * **Note:** The Rectangle class does not define a rectangular Shape
 * display object. To draw a rectangular Shape object onscreen, use the
 * `drawRect()` method of the Graphics class.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.geom.Transform" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Transform.hx" extern="1">
		<colorTransform public="1" get="null" set="null">
			<c path="openfl.geom.ColorTransform"/>
			<haxe_doc>* A ColorTransform object containing values that universally adjust the
	 * colors in the display object.
	 * 
	 * @throws TypeError The colorTransform is null when being set</haxe_doc>
		</colorTransform>
		<concatenatedColorTransform public="1" set="null">
			<c path="openfl.geom.ColorTransform"/>
			<haxe_doc>* A ColorTransform object representing the combined color transformations
	 * applied to the display object and all of its parent objects, back to the
	 * root level. If different color transformations have been applied at
	 * different levels, all of those transformations are concatenated into one
	 * ColorTransform object for this property.</haxe_doc>
		</concatenatedColorTransform>
		<concatenatedMatrix public="1" get="null" set="null">
			<c path="openfl.geom.Matrix"/>
			<haxe_doc>* A Matrix object representing the combined transformation matrixes of the
	 * display object and all of its parent objects, back to the root level. If
	 * different transformation matrixes have been applied at different levels,
	 * all of those matrixes are concatenated into one matrix for this property.
	 * Also, for resizeable SWF content running in the browser, this property
	 * factors in the difference between stage coordinates and window coordinates
	 * due to window resizing. Thus, the property converts local coordinates to
	 * window coordinates, which may not be the same coordinate space as that of
	 * the Stage.</haxe_doc>
		</concatenatedMatrix>
		<matrix public="1" get="null" set="null">
			<c path="openfl.geom.Matrix"/>
			<haxe_doc>* A Matrix object containing values that alter the scaling, rotation, and
	 * translation of the display object.
	 *
	 * If the `matrix` property is set to a value(not
	 * `null`), the `matrix3D` property is
	 * `null`. And if the `matrix3D` property is set to a
	 * value(not `null`), the `matrix` property is
	 * `null`.
	 * 
	 * @throws TypeError The matrix is null when being set</haxe_doc>
		</matrix>
		<matrix3D public="1" get="null" set="null">
			<c path="openfl.geom.Matrix3D"/>
			<haxe_doc>* Provides access to the Matrix3D object of a three-dimensional display
	 * object. The Matrix3D object represents a transformation matrix that
	 * determines the display object's position and orientation. A Matrix3D
	 * object can also perform perspective projection.
	 *
	 * If the `matrix` property is set to a value(not
	 * `null`), the `matrix3D` property is
	 * `null`. And if the `matrix3D` property is set to a
	 * value(not `null`), the `matrix` property is
	 * `null`.</haxe_doc>
		</matrix3D>
		<perspectiveProjection public="1">
			<c path="openfl.geom.PerspectiveProjection"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</perspectiveProjection>
		<pixelBounds public="1" set="null">
			<c path="openfl.geom.Rectangle"/>
			<haxe_doc>* A Rectangle object that defines the bounding rectangle of the display
	 * object on the stage.</haxe_doc>
		</pixelBounds>
		<getRelativeMatrix3D public="1" set="method">
			<f a="relativeTo">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.geom.Matrix3D"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</getRelativeMatrix3D>
		<new public="1" set="method"><f a="displayObject">
	<c path="openfl.display.DisplayObject"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* The Transform class provides access to color adjustment properties and two-
 * or three-dimensional transformation objects that can be applied to a
 * display object. During the transformation, the color or the orientation and
 * position of a display object is adjusted(offset) from the current values
 * or coordinates to new values or coordinates. The Transform class also
 * collects data about color and two-dimensional matrix transformations that
 * are applied to a display object and all of its parent objects. You can
 * access these combined transformations through the
 * `concatenatedColorTransform` and `concatenatedMatrix`
 * properties.
 *
 * To apply color transformations: create a ColorTransform object, set the
 * color adjustments using the object's methods and properties, and then
 * assign the `colorTransformation` property of the
 * `transform` property of the display object to the new
 * ColorTransformation object.
 *
 * To apply two-dimensional transformations: create a Matrix object, set
 * the matrix's two-dimensional transformation, and then assign the
 * `transform.matrix` property of the display object to the new
 * Matrix object.
 *
 * To apply three-dimensional transformations: start with a
 * three-dimensional display object. A three-dimensional display object has a
 * `z` property value other than zero. You do not need to create
 * the Matrix3D object. For all three-dimensional objects, a Matrix3D object
 * is created automatically when you assign a `z` value to a
 * display object. You can access the display object's Matrix3D object through
 * the display object's `transform` property. Using the methods of
 * the Matrix3D class, you can add to or modify the existing transformation
 * settings. Also, you can create a custom Matrix3D object, set the custom
 * Matrix3D object's transformation elements, and then assign the new Matrix3D
 * object to the display object using the `transform.matrix`
 * property.
 *
 * To modify a perspective projection of the stage or root object: use the
 * `transform.matrix` property of the root display object to gain
 * access to the PerspectiveProjection object. Or, apply different perspective
 * projection properties to a display object by setting the perspective
 * projection properties of the display object's parent. The child display
 * object inherits the new properties. Specifically, create a
 * PerspectiveProjection object and set its properties, then assign the
 * PerspectiveProjection object to the `perspectiveProjection`
 * property of the parent display object's `transform` property.
 * The specified projection transformation then applies to all the display
 * object's three-dimensional children.
 *
 * Since both PerspectiveProjection and Matrix3D objects perform
 * perspective transformations, do not assign both to a display object at the
 * same time. Use the PerspectiveProjection object for focal length and
 * projection center changes. For more control over the perspective
 * transformation, create a perspective projection Matrix3D object.</haxe_doc>
	</class>
	<class path="openfl.geom.Utils3D" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Utils3D.hx" extern="1">
		<pointTowards public="1" set="method" static="1">
			<f a="percent:mat:pos:?at:?up">
				<x path="Float"/>
				<c path="openfl.geom.Matrix3D"/>
				<c path="openfl.geom.Vector3D"/>
				<c path="openfl.geom.Vector3D"/>
				<c path="openfl.geom.Vector3D"/>
				<c path="openfl.geom.Matrix3D"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</pointTowards>
		<projectVector public="1" set="method" static="1"><f a="m:v">
	<c path="openfl.geom.Matrix3D"/>
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
</f></projectVector>
		<projectVectors public="1" set="method" static="1"><f a="m:verts:projectedVerts:uvts">
	<c path="openfl.geom.Matrix3D"/>
	<x path="openfl.Vector"><x path="Float"/></x>
	<x path="openfl.Vector"><x path="Float"/></x>
	<x path="openfl.Vector"><x path="Float"/></x>
	<x path="Void"/>
</f></projectVectors>
	</class>
	<class path="openfl.geom.Vector3D" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/geom/Vector3D.hx" extern="1">
		<X_AXIS public="1" get="null" set="null" static="1"><c path="openfl.geom.Vector3D"/></X_AXIS>
		<Y_AXIS public="1" get="null" set="null" static="1"><c path="openfl.geom.Vector3D"/></Y_AXIS>
		<Z_AXIS public="1" get="null" set="null" static="1"><c path="openfl.geom.Vector3D"/></Z_AXIS>
		<angleBetween public="1" set="method" static="1"><f a="a:b">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Float"/>
</f></angleBetween>
		<distance public="1" set="method" static="1"><f a="pt1:pt2">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Float"/>
</f></distance>
		<length public="1" get="null" set="null"><x path="Float"/></length>
		<lengthSquared public="1" get="null" set="null"><x path="Float"/></lengthSquared>
		<w public="1"><x path="Float"/></w>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<z public="1"><x path="Float"/></z>
		<add public="1" set="method"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
</f></add>
		<clone public="1" set="method"><f a=""><c path="openfl.geom.Vector3D"/></f></clone>
		<copyFrom public="1" set="method"><f a="sourceVector3D">
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyFrom>
		<crossProduct public="1" set="method"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
</f></crossProduct>
		<decrementBy public="1" set="method"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></decrementBy>
		<dotProduct public="1" set="method"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<x path="Float"/>
</f></dotProduct>
		<equals public="1" set="method">
			<f a="toCompare:?allFour" v=":false">
				<c path="openfl.geom.Vector3D"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ allFour : false }</e></m></meta>
		</equals>
		<incrementBy public="1" set="method"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></incrementBy>
		<nearEquals public="1" set="method">
			<f a="toCompare:tolerance:?allFour" v="::false">
				<c path="openfl.geom.Vector3D"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ allFour : false }</e></m></meta>
		</nearEquals>
		<negate public="1" set="method"><f a=""><x path="Void"/></f></negate>
		<normalize public="1" set="method"><f a=""><x path="Float"/></f></normalize>
		<project public="1" set="method"><f a=""><x path="Void"/></f></project>
		<scaleBy public="1" set="method"><f a="s">
	<x path="Float"/>
	<x path="Void"/>
</f></scaleBy>
		<setTo public="1" set="method"><f a="xa:ya:za">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<subtract public="1" set="method"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
</f></subtract>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method">
			<f a="?x:?y:?z:?w" v="0:0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ w : 0, z : 0, y : 0, x : 0 }</e></m></meta>
		</new>
	</class>
	<class path="openfl.media.ID3Info" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/media/ID3Info.hx" extern="1">
		<album public="1"><c path="String"/></album>
		<artist public="1"><c path="String"/></artist>
		<comment public="1"><c path="String"/></comment>
		<genre public="1"><c path="String"/></genre>
		<songName public="1"><c path="String"/></songName>
		<track public="1"><c path="String"/></track>
		<year public="1"><c path="String"/></year>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":final"/></meta>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="openfl.media.Sound" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/media/Sound.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<fromAudioBuffer public="1" set="method" static="1"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<c path="openfl.media.Sound"/>
</f></fromAudioBuffer>
		<fromFile public="1" set="method" static="1"><f a="path">
	<c path="String"/>
	<c path="openfl.media.Sound"/>
</f></fromFile>
		<loadFromFile public="1" set="method" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="openfl.media.Sound"/></c>
</f></loadFromFile>
		<bytesLoaded public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* Returns the currently available number of bytes in this sound object. This
	 * property is usually useful only for externally loaded files.</haxe_doc>
		</bytesLoaded>
		<bytesTotal public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* Returns the total number of bytes in this sound object.</haxe_doc>
		</bytesTotal>
		<id3 public="1" get="null" set="null">
			<c path="openfl.media.ID3Info"/>
			<haxe_doc>* Provides access to the metadata that is part of an MP3 file.
	 *
	 * MP3 sound files can contain ID3 tags, which provide metadata about the
	 * file. If an MP3 sound that you load using the `Sound.load()`
	 * method contains ID3 tags, you can query these properties. Only ID3 tags
	 * that use the UTF-8 character set are supported.
	 *
	 * Flash Player 9 and later and AIR support ID3 2.0 tags, specifically 2.3
	 * and 2.4. The following tables list the standard ID3 2.0 tags and the type
	 * of content the tags represent. The `Sound.id3` property
	 * provides access to these tags through the format
	 * `my_sound.id3.COMM`, `my_sound.id3.TIME`, and so on.
	 * The first table describes tags that can be accessed either through the ID3
	 * 2.0 property name or the ActionScript property name. The second table
	 * describes ID3 tags that are supported but do not have predefined
	 * properties in ActionScript. 
	 *
	 * When using this property, consider the Flash Player security model:
	 *
	 * 
	 *  * The `id3` property of a Sound object is always permitted
	 * for SWF files that are in the same security sandbox as the sound file. For
	 * files in other sandboxes, there are security checks.
	 *  * When you load the sound, using the `load()` method of the
	 * Sound class, you can specify a `context` parameter, which is a
	 * SoundLoaderContext object. If you set the `checkPolicyFile`
	 * property of the SoundLoaderContext object to `true`, Flash
	 * Player checks for a URL policy file on the server from which the sound is
	 * loaded. If a policy file exists and permits access from the domain of the
	 * loading SWF file, then the file is allowed to access the `id3`
	 * property of the Sound object; otherwise it is not.
	 * 
	 *
	 * However, in Adobe AIR, content in the `application` security
	 * sandbox(content installed with the AIR application) are not restricted by
	 * these security limitations.
	 *
	 * For more information related to security, see the Flash Player
	 * Developer Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).</haxe_doc>
		</id3>
		<isBuffering public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Returns the buffering state of external MP3 files. If the value is
	 * `true`, any playback is currently suspended while the object
	 * waits for more data.</haxe_doc>
		</isBuffering>
		<isURLInaccessible public="1" set="null">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</isURLInaccessible>
		<length public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The length of the current sound in milliseconds.</haxe_doc>
		</length>
		<url public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The URL from which this sound was loaded. This property is applicable only
	 * to Sound objects that were loaded using the `Sound.load()`
	 * method. For Sound objects that are associated with a sound asset from a
	 * SWF file's library, the value of the `url` property is
	 * `null`.
	 *
	 * When you first call `Sound.load()`, the `url`
	 * property initially has a value of `null`, because the final URL
	 * is not yet known. The `url` property will have a non-null value
	 * as soon as an `open` event is dispatched from the Sound
	 * object.
	 *
	 * The `url` property contains the final, absolute URL from
	 * which a sound was loaded. The value of `url` is usually the
	 * same as the value passed to the `stream` parameter of
	 * `Sound.load()`. However, if you passed a relative URL to
	 * `Sound.load()` the value of the `url` property
	 * represents the absolute URL. Additionally, if the original URL request is
	 * redirected by an HTTP server, the value of the `url` property
	 * reflects the final URL from which the sound file was actually downloaded.
	 * This reporting of an absolute, final URL is equivalent to the behavior of
	 * `LoaderInfo.url`.
	 *
	 * In some cases, the value of the `url` property is truncated;
	 * see the `isURLInaccessible` property for details.</haxe_doc>
		</url>
		<close public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Closes the stream, causing any download of data to cease. No data may be
	 * read from the stream after the `close()` method is called.
	 * 
	 * @throws IOError The stream could not be closed, or the stream was not
	 *                 open.</haxe_doc>
		</close>
		<extract public="1" set="method">
			<f a="target:length:?startPosition" v="::-1">
				<x path="openfl.utils.ByteArray"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":value"><e>{ startPosition : -1 }</e></m>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</extract>
		<load public="1" set="method">
			<f a="stream:?context" v=":null">
				<c path="openfl.net.URLRequest"/>
				<c path="openfl.media.SoundLoaderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ context : null }</e></m></meta>
			<haxe_doc>* Initiates loading of an external MP3 file from the specified URL. If you
	 * provide a valid URLRequest object to the Sound constructor, the
	 * constructor calls `Sound.load()` for you. You only need to call
	 * `Sound.load()` yourself if you don't pass a valid URLRequest
	 * object to the Sound constructor or you pass a `null` value.
	 *
	 * Once `load()` is called on a Sound object, you can't later
	 * load a different sound file into that Sound object. To load a different
	 * sound file, create a new Sound object.
	 *
	 * When using this method, consider the following security model:
	 *
	 * 
	 *  * Calling `Sound.load()` is not allowed if the calling file
	 * is in the local-with-file-system sandbox and the sound is in a network
	 * sandbox.
	 *  * Access from the local-trusted or local-with-networking sandbox
	 * requires permission from a website through a URL policy file.
	 *  * You cannot connect to commonly reserved ports. For a complete list
	 * of blocked ports, see "Restricting Networking APIs" in the _ActionScript
	 * 3.0 Developer's Guide_.
	 *  * You can prevent a SWF file from using this method by setting the
	 * `allowNetworking` parameter of the `object` and
	 * `embed` tags in the HTML page that contains the SWF
	 * content.
	 * 
	 *
	 *  In Flash Player 10 and later, if you use a multipart Content-Type(for
	 * example "multipart/form-data") that contains an upload(indicated by a
	 * "filename" parameter in a "content-disposition" header within the POST
	 * body), the POST operation is subject to the security rules applied to
	 * uploads:
	 *
	 * 
	 *  * The POST operation must be performed in response to a user-initiated
	 * action, such as a mouse click or key press.
	 *  * If the POST operation is cross-domain(the POST target is not on the
	 * same server as the SWF file that is sending the POST request), the target
	 * server must provide a URL policy file that permits cross-domain
	 * access.
	 * 
	 *
	 * Also, for any multipart Content-Type, the syntax must be valid
	 * (according to the RFC2046 standards). If the syntax appears to be invalid,
	 * the POST operation is subject to the security rules applied to
	 * uploads.
	 *
	 * In Adobe AIR, content in the `application` security sandbox
	 * (content installed with the AIR application) are not restricted by these
	 * security limitations.
	 *
	 * For more information related to security, see the Flash Player
	 * Developer Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
	 * 
	 * @param stream  A URL that points to an external MP3 file.
	 * @param context An optional SoundLoader context object, which can define
	 *                the buffer time(the minimum number of milliseconds of MP3
	 *                data to hold in the Sound object's buffer) and can specify
	 *                whether the application should check for a cross-domain
	 *                policy file prior to loading the sound.
	 * @throws IOError       A network error caused the load to fail.
	 * @throws IOError       The `digest` property of the
	 *                       `stream` object is not `null`.
	 *                       You should only set the `digest` property
	 *                       of a URLRequest object when calling the
	 *                       `URLLoader.load()` method when loading a
	 *                       SWZ file(an Adobe platform component).
	 * @throws SecurityError Local untrusted files may not communicate with the
	 *                       Internet. You can work around this by reclassifying
	 *                       this file as local-with-networking or trusted.
	 * @throws SecurityError You cannot connect to commonly reserved ports. For a
	 *                       complete list of blocked ports, see "Restricting
	 *                       Networking APIs" in the _ActionScript 3.0
	 *                       Developer's Guide_.</haxe_doc>
		</load>
		<loadCompressedDataFromByteArray public="1" set="method">
			<f a="bytes:bytesLength:?forcePlayAsMusic" v="::false">
				<x path="openfl.utils.ByteArray"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ forcePlayAsMusic : false }</e></m></meta>
		</loadCompressedDataFromByteArray>
		<loadPCMFromByteArray public="1" set="method">
			<f a="bytes:samples:?format:?stereo:?sampleRate" v="::null:true:44100">
				<x path="openfl.utils.ByteArray"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Bool"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ sampleRate : 44100, stereo : true, format : null }</e></m></meta>
		</loadPCMFromByteArray>
		<play public="1" set="method">
			<f a="?startTime:?loops:?sndTransform" v="0.0:0:null">
				<x path="Float"/>
				<x path="Int"/>
				<c path="openfl.media.SoundTransform"/>
				<c path="openfl.media.SoundChannel"/>
			</f>
			<meta><m n=":value"><e>{ sndTransform : null, loops : 0, startTime : 0.0 }</e></m></meta>
			<haxe_doc>* Generates a new SoundChannel object to play back the sound. This method
	 * returns a SoundChannel object, which you access to stop the sound and to
	 * monitor volume.(To control the volume, panning, and balance, access the
	 * SoundTransform object assigned to the sound channel.)
	 * 
	 * @param startTime    The initial position in milliseconds at which playback
	 *                     should start.
	 * @param loops        Defines the number of times a sound loops back to the
	 *                     `startTime` value before the sound channel
	 *                     stops playback.
	 * @param sndTransform The initial SoundTransform object assigned to the
	 *                     sound channel.
	 * @return A SoundChannel object, which you use to control the sound. This
	 *         method returns `null` if you have no sound card or if
	 *         you run out of available sound channels. The maximum number of
	 *         sound channels available at once is 32.</haxe_doc>
		</play>
		<new public="1" set="method">
			<f a="?stream:?context" v="null:null">
				<c path="openfl.net.URLRequest"/>
				<c path="openfl.media.SoundLoaderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ context : null, stream : null }</e></m></meta>
			<haxe_doc>* Creates a new Sound object. If you pass a valid URLRequest object to the
	 * Sound constructor, the constructor automatically calls the
	 * `load()` function for the Sound object. If you do not pass a
	 * valid URLRequest object to the Sound constructor, you must call the
	 * `load()` function for the Sound object yourself, or the stream
	 * will not load.
	 *
	 * Once `load()` is called on a Sound object, you can't later
	 * load a different sound file into that Sound object. To load a different
	 * sound file, create a new Sound object.
	 * In Flash Player 10 and later and AIR 1.5 and later, instead of using
	 * `load()`, you can use the `sampleData` event handler
	 * to load sound dynamically into the Sound object.
	 * 
	 * @param stream  The URL that points to an external MP3 file.
	 * @param context An optional SoundLoader context object, which can define
	 *                the buffer time(the minimum number of milliseconds of MP3
	 *                data to hold in the Sound object's buffer) and can specify
	 *                whether the application should check for a cross-domain
	 *                policy file prior to loading the sound.</haxe_doc>
		</new>
		<haxe_doc>* The Sound class lets you work with sound in an application. The Sound class
 * lets you create a Sound object, load and play an external MP3 file into
 * that object, close the sound stream, and access data about the sound, such
 * as information about the number of bytes in the stream and ID3 metadata.
 * More detailed control of the sound is performed through the sound source
 *  -  the SoundChannel or Microphone object for the sound  -  and through the
 * properties in the SoundTransform class that control the output of the sound
 * to the computer's speakers.
 *
 * In Flash Player 10 and later and AIR 1.5 and later, you can also use
 * this class to work with sound that is generated dynamically. In this case,
 * the Sound object uses the function you assign to a `sampleData`
 * event handler to poll for sound data. The sound is played as it is
 * retrieved from a ByteArray object that you populate with sound data. You
 * can use `Sound.extract()` to extract sound data from a Sound
 * object, after which you can manipulate it before writing it back to the
 * stream for playback.
 *
 * To control sounds that are embedded in a SWF file, use the properties in
 * the SoundMixer class.
 *
 * **Note**: The ActionScript 3.0 Sound API differs from ActionScript
 * 2.0. In ActionScript 3.0, you cannot take sound objects and arrange them in
 * a hierarchy to control their properties.
 *
 * When you use this class, consider the following security model: 
 *
 * 
 *  * Loading and playing a sound is not allowed if the calling file is in
 * a network sandbox and the sound file to be loaded is local.
 *  * By default, loading and playing a sound is not allowed if the calling
 * file is local and tries to load and play a remote sound. A user must grant
 * explicit permission to allow this type of access.
 *  * Certain operations dealing with sound are restricted. The data in a
 * loaded sound cannot be accessed by a file in a different domain unless you
 * implement a cross-domain policy file. Sound-related APIs that fall under
 * this restriction are `Sound.id3`,
 * `SoundMixer.computeSpectrum()`,
 * `SoundMixer.bufferTime`, and the `SoundTransform`
 * class.
 * 
 *
 * However, in Adobe AIR, content in the `application` security
 * sandbox(content installed with the AIR application) are not restricted by
 * these security limitations.
 *
 * For more information related to security, see the Flash Player Developer
 * Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
 * 
 * @event complete   Dispatched when data has loaded successfully.
 * @event id3        Dispatched by a Sound object when ID3 data is available
 *                   for an MP3 sound.
 * @event ioError    Dispatched when an input/output error occurs that causes
 *                   a load operation to fail.
 * @event open       Dispatched when a load operation starts.
 * @event progress   Dispatched when data is received as a load operation
 *                   progresses.
 * @event sampleData Dispatched when the runtime requests new audio data.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.media.SoundChannel" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/media/SoundChannel.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<leftPeak public="1" set="null">
			<x path="Float"/>
			<haxe_doc>* The current amplitude(volume) of the left channel, from 0(silent) to 1
	 * (full amplitude).</haxe_doc>
		</leftPeak>
		<position public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* When the sound is playing, the `position` property indicates in
	 * milliseconds the current point that is being played in the sound file.
	 * When the sound is stopped or paused, the `position` property
	 * indicates the last point that was played in the sound file.
	 *
	 * A common use case is to save the value of the `position`
	 * property when the sound is stopped. You can resume the sound later by
	 * restarting it from that saved position. 
	 *
	 * If the sound is looped, `position` is reset to 0 at the
	 * beginning of each loop.</haxe_doc>
		</position>
		<rightPeak public="1" set="null">
			<x path="Float"/>
			<haxe_doc>* The current amplitude(volume) of the right channel, from 0(silent) to 1
	 * (full amplitude).</haxe_doc>
		</rightPeak>
		<soundTransform public="1" get="null" set="null">
			<c path="openfl.media.SoundTransform"/>
			<haxe_doc>* The SoundTransform object assigned to the sound channel. A SoundTransform
	 * object includes properties for setting volume, panning, left speaker
	 * assignment, and right speaker assignment.</haxe_doc>
		</soundTransform>
		<stop public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Stops the sound playing in the channel.
	 *</haxe_doc>
		</stop>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</new>
		<haxe_doc>* The SoundChannel class controls a sound in an application. Every sound is
 * assigned to a sound channel, and the application can have multiple sound
 * channels that are mixed together. The SoundChannel class contains a
 * `stop()` method, properties for monitoring the amplitude
 * (volume) of the channel, and a property for assigning a SoundTransform
 * object to the channel.
 * 
 * @event soundComplete Dispatched when a sound has finished playing.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.media.SoundLoaderContext" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/media/SoundLoaderContext.hx" extern="1">
		<bufferTime public="1">
			<x path="Float"/>
			<haxe_doc>* The number of milliseconds to preload a streaming sound into a buffer
	 * before the sound starts to stream.
	 *
	 * Note that you cannot override the value of
	 * `SoundLoaderContext.bufferTime` by setting the global
	 * `SoundMixer.bufferTime` property. The
	 * `SoundMixer.bufferTime` property affects the buffer time for
	 * embedded streaming sounds in a SWF file and is independent of dynamically
	 * created Sound objects(that is, Sound objects created in
	 * ActionScript).</haxe_doc>
		</bufferTime>
		<checkPolicyFile public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* Specifies whether the application should try to download a URL policy file
	 * from the loaded sound's server before beginning to load the sound. This
	 * property applies to sound that is loaded from outside the calling file's
	 * own domain using the `Sound.load()` method.
	 *
	 * Set this property to `true` when you load a sound from
	 * outside the calling file's own domain and code in the calling file needs
	 * low-level access to the sound's data. Examples of low-level access to a
	 * sound's data include referencing the `Sound.id3` property to
	 * get an ID3Info object or calling the
	 * `SoundMixer.computeSpectrum()` method to get sound samples from
	 * the loaded sound. If you try to access sound data without setting the
	 * `checkPolicyFile` property to `true` at loading
	 * time, you may get a SecurityError exception because the required policy
	 * file has not been downloaded.
	 *
	 * If you don't need low-level access to the sound data that you are
	 * loading, avoid setting `checkPolicyFile` to `true`.
	 * Checking for a policy file consumes network bandwidth and might delay the
	 * start of your download, so it should only be done when necessary.
	 *
	 * When you call `Sound.load()` with
	 * `SoundLoaderContext.checkPolicyFile` set to `true`,
	 * Flash Player or AIR must either successfully download a relevant URL
	 * policy file or determine that no such policy file exists before it begins
	 * downloading the specified sound. Flash Player or AIR performs the
	 * following actions, in this order, to verify the existence of a policy
	 * file:
	 *
	 * 
	 *  * Flash Player or AIR considers policy files that have already been
	 * downloaded.
	 *  * Flash Player or AIR tries to download any pending policy files
	 * specified in calls to `Security.loadPolicyFile()`.
	 *  * Flash Player or AIR tries to download a policy file from the default
	 * location that corresponds to the sound's URL, which is
	 * `/crossdomain.xml` on the same server as
	 * `URLRequest.url`.(The sound's URL is specified in the
	 * `url` property of the URLRequest object passed to
	 * `Sound.load()` or the Sound() constructor function.)
	 * 
	 *
	 * In all cases, Flash Player or AIR requires that an appropriate policy
	 * file exist on the sound's server, that it provide access to the sound file
	 * at `URLRequest.url` by virtue of the policy file's location,
	 * and that it allow the domain of the calling file to access the sound,
	 * through one or more `<allow-access-from>` tags. 
	 *
	 * If you set `checkPolicyFile` to `true`, Flash
	 * Player or AIR waits until the policy file is verified before loading the
	 * sound. You should wait to perform any low-level operations on the sound
	 * data, such as calling `Sound.id3` or
	 * `SoundMixer.computeSpectrum()`, until `progress` and
	 * `complete` events are dispatched from the Sound object. 
	 *
	 * If you set `checkPolicyFile` to `true` but no
	 * appropriate policy file is found, you will not receive an error until you
	 * perform an operation that requires a policy file, and then Flash Player or
	 * AIR throws a `SecurityError` exception. After you receive a
	 * `complete` event, you can test whether a relevant policy file
	 * was found by getting the value of `Sound.id3` within a
	 * `try` block and seeing if a `SecurityError` is
	 * thrown.
	 *
	 * Be careful with `checkPolicyFile` if you are downloading
	 * sound from a URL that uses server-side HTTP redirects. Flash Player or AIR
	 * tries to retrieve policy files that correspond to the `url`
	 * property of the URLRequest object passed to `Sound.load()`. If
	 * the final sound file comes from a different URL because of HTTP redirects,
	 * then the initially downloaded policy files might not be applicable to the
	 * sound's final URL, which is the URL that matters in security
	 * decisions.
	 *
	 * If you find yourself in this situation, here is one possible solution.
	 * After you receive a `progress` or `complete` event,
	 * you can examine the value of the `Sound.url` property, which
	 * contains the sound's final URL. Then call the
	 * `Security.loadPolicyFile()` method with a policy file URL that
	 * you calculate based on the sound's final URL. Finally, poll the value of
	 * `Sound.id3` until no exception is thrown.
	 *
	 * This does not apply to content in the AIR application sandbox. Content
	 * in the application sandbox always has programatic access to sound content,
	 * regardless of its origin.
	 *
	 * For more information related to security, see the Flash Player
	 * Developer Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).]]></haxe_doc>
		</checkPolicyFile>
		<new public="1" set="method">
			<f a="?bufferTime:?checkPolicyFile" v="1000:false">
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ checkPolicyFile : false, bufferTime : 1000 }</e></m></meta>
			<haxe_doc>* Creates a new sound loader context object.
	 * 
	 * @param bufferTime      The number of seconds to preload a streaming sound
	 *                        into a buffer before the sound starts to stream.
	 * @param checkPolicyFile Specifies whether the existence of a URL policy
	 *                        file should be checked upon loading the object
	 *                       (`true`) or not.</haxe_doc>
		</new>
		<haxe_doc>* The SoundLoaderContext class provides security checks for files that load
 * sound. SoundLoaderContext objects are passed as an argument to the
 * constructor and the `load()` method of the Sound class.
 *
 * When you use this class, consider the following security model: 
 *
 * 
 *  * Loading and playing a sound is not allowed if the calling file is in
 * a network sandbox and the sound file to be loaded is local.
 *  * By default, loading and playing a sound is not allowed if the calling
 * is local and tries to load and play a remote sound. A user must grant
 * explicit permission to allow this.
 *  * Certain operations dealing with sound are restricted. The data in a
 * loaded sound cannot be accessed by a file in a different domain unless you
 * implement a URL policy file. Sound-related APIs that fall under this
 * restriction are the `Sound.id3` property and the
 * `SoundMixer.computeSpectrum()`,
 * `SoundMixer.bufferTime`, and `SoundTransform()`
 * methods.
 * 
 *
 * However, in Adobe AIR, content in the `application` security
 * sandbox(content installed with the AIR application) are not restricted by
 * these security limitations.
 *
 * For more information related to security, see the Flash Player Developer
 * Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).</haxe_doc>
	</class>
	<class path="openfl.media.SoundTransform" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/media/SoundTransform.hx" extern="1">
		<leftToLeft public="1">
			<x path="Float"/>
			<haxe_doc>* A value, from 0(none) to 1(all), specifying how much of the left input
	 * is played in the left speaker.</haxe_doc>
		</leftToLeft>
		<leftToRight public="1">
			<x path="Float"/>
			<haxe_doc>* A value, from 0(none) to 1(all), specifying how much of the left input
	 * is played in the right speaker.</haxe_doc>
		</leftToRight>
		<pan public="1">
			<x path="Float"/>
			<haxe_doc>* The left-to-right panning of the sound, ranging from -1(full pan left) to
	 * 1(full pan right). A value of 0 represents no panning(balanced center
	 * between right and left).</haxe_doc>
		</pan>
		<rightToLeft public="1">
			<x path="Float"/>
			<haxe_doc>* A value, from 0(none) to 1(all), specifying how much of the right input
	 * is played in the left speaker.</haxe_doc>
		</rightToLeft>
		<rightToRight public="1">
			<x path="Float"/>
			<haxe_doc>* A value, from 0(none) to 1(all), specifying how much of the right input
	 * is played in the right speaker.</haxe_doc>
		</rightToRight>
		<volume public="1">
			<x path="Float"/>
			<haxe_doc>* The volume, ranging from 0(silent) to 1(full volume).</haxe_doc>
		</volume>
		<clone public="1" set="method"><f a=""><c path="openfl.media.SoundTransform"/></f></clone>
		<new public="1" set="method">
			<f a="?vol:?panning" v="1:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ panning : 0, vol : 1 }</e></m></meta>
			<haxe_doc>* Creates a SoundTransform object.
	 * 
	 * @param vol     The volume, ranging from 0(silent) to 1(full volume).
	 * @param panning The left-to-right panning of the sound, ranging from -1
	 *               (full pan left) to 1(full pan right). A value of 0
	 *                represents no panning(center).</haxe_doc>
		</new>
		<haxe_doc>* The SoundTransform class contains properties for volume and panning.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.media.Video" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/media/Video.hx" extern="1">
		<extends path="openfl.display.DisplayObject"/>
		<deblocking public="1"><x path="Int"/></deblocking>
		<smoothing public="1"><x path="Bool"/></smoothing>
		<videoHeight public="1" get="null" set="null"><x path="Int"/></videoHeight>
		<videoWidth public="1" get="null" set="null"><x path="Int"/></videoWidth>
		<attachCamera public="1" set="method">
			<f a="camera">
				<c path="flash.media.Camera"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</attachCamera>
		<attachNetStream public="1" set="method"><f a="netStream">
	<c path="openfl.net.NetStream"/>
	<x path="Void"/>
</f></attachNetStream>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<new public="1" set="method">
			<f a="?width:?height" v="320:240">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ height : 240, width : 320 }</e></m></meta>
		</new>
	</class>
	<class path="openfl.net.FileFilter" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/FileFilter.hx" extern="1">
		<description public="1">
			<c path="String"/>
			<haxe_doc>* The description string for the filter.</haxe_doc>
		</description>
		<extension public="1">
			<c path="String"/>
			<haxe_doc>* A list of file extensions.</haxe_doc>
		</extension>
		<macType public="1">
			<c path="String"/>
			<haxe_doc>* A list of Macintosh file types.</haxe_doc>
		</macType>
		<new public="1" set="method">
			<f a="description:extension:?macType" v="::null">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ macType : null }</e></m></meta>
		</new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.net.FileReference" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/FileReference.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<creationDate public="1" set="null">
			<c path="Date"/>
			<haxe_doc>* The creation date of the file on the local disk.</haxe_doc>
		</creationDate>
		<creator public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The Macintosh creator type of the file, which is only used in Mac OS versions prior to Mac OS X.</haxe_doc>
		</creator>
		<data public="1" set="null">
			<x path="openfl.utils.ByteArray"/>
			<haxe_doc>* The ByteArray object representing the data from the loaded file after a successful call to the load() method.</haxe_doc>
		</data>
		<modificationDate public="1" set="null">
			<c path="Date"/>
			<haxe_doc>* The date that the file on the local disk was last modified.</haxe_doc>
		</modificationDate>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The name of the file on the local disk.</haxe_doc>
		</name>
		<size public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The size of the file on the local disk in bytes.</haxe_doc>
		</size>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The file type.</haxe_doc>
		</type>
		<browse public="1" set="method">
			<f a="?typeFilter" v="null">
				<c path="Array"><c path="openfl.net.FileFilter"/></c>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ typeFilter : null }</e></m></meta>
		</browse>
		<cancel public="1" set="method"><f a=""><x path="Void"/></f></cancel>
		<download public="1" set="method">
			<f a="request:?defaultFileName" v=":null">
				<c path="openfl.net.URLRequest"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ defaultFileName : null }</e></m></meta>
		</download>
		<load public="1" set="method"><f a=""><x path="Void"/></f></load>
		<save public="1" set="method">
			<f a="data:?defaultFileName" v=":null">
				<d/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ defaultFileName : null }</e></m></meta>
		</save>
		<upload public="1" set="method">
			<f a="request:?uploadDataFieldName:?testUpload" v=":&quot;Filedata&quot;:false">
				<c path="openfl.net.URLRequest"/>
				<c path="String"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ testUpload : false, uploadDataFieldName : "Filedata" }</e></m></meta>
		</upload>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.net.FileReferenceList" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/FileReferenceList.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<fileList public="1" set="null">
			<c path="Array"><c path="openfl.net.FileReference"/></c>
			<haxe_doc>* An array of FileReference objects.</haxe_doc>
		</fileList>
		<browse public="1" set="method">
			<f a="?typeFilter" v="null">
				<c path="Array"><c path="openfl.net.FileFilter"/></c>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ typeFilter : null }</e></m></meta>
		</browse>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.net.NetConnection" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/NetConnection.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<defaultObjectEncoding public="1" static="1">
			<x path="UInt"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</defaultObjectEncoding>
		<client public="1">
			<d/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</client>
		<connected public="1" set="null">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</connected>
		<connectedProxyType public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</connectedProxyType>
		<farID public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</farID>
		<farNonce public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</farNonce>
		<maxPeerConnections public="1">
			<x path="UInt"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</maxPeerConnections>
		<nearID public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</nearID>
		<nearNonce public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</nearNonce>
		<objectEncoding public="1">
			<x path="UInt"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</objectEncoding>
		<protocol public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</protocol>
		<proxyType public="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</proxyType>
		<unconnectedPeerStreams public="1" set="null">
			<c path="Array"><d/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</unconnectedPeerStreams>
		<uri public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</uri>
		<usingTLS public="1" set="null">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</usingTLS>
		<addHeader public="1" set="method">
			<f a="operation:?mustUnderstand:?param" v=":false:">
				<c path="String"/>
				<x path="Bool"/>
				<x path="openfl.utils.Object"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ mustUnderstand : false }</e></m>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</addHeader>
		<call public="1" set="method">
			<f a="command:responder:?p1:?p2:?p3:?p4:?p5">
				<c path="String"/>
				<c path="flash.net.Responder"/>
				<d/>
				<d/>
				<d/>
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</call>
		<close public="1" set="method">
			<f a=""><x path="Void"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</close>
		<connect public="1" set="method"><f a="command:?p1:?p2:?p3:?p4:?p5">
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></connect>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.net.NetStream" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/NetStream.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<CONNECT_TO_FMS public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</CONNECT_TO_FMS>
		<DIRECT_CONNECTIONS public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</DIRECT_CONNECTIONS>
		<resetDRMVouchers public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</resetDRMVouchers>
		<audioCodec public="1" set="null"><x path="Int"/></audioCodec>
		<audioReliable public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</audioReliable>
		<audioSampleAccess public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</audioSampleAccess>
		<backBufferLength public="1" set="null">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</backBufferLength>
		<backBufferTime public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</backBufferTime>
		<bufferLength public="1" set="null"><x path="Float"/></bufferLength>
		<bufferTime public="1"><x path="Float"/></bufferTime>
		<bufferTimeMax public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</bufferTimeMax>
		<bytesLoaded public="1" set="null"><x path="UInt"/></bytesLoaded>
		<bytesTotal public="1" set="null"><x path="UInt"/></bytesTotal>
		<checkPolicyFile public="1"><x path="Bool"/></checkPolicyFile>
		<client public="1"><d/></client>
		<currentFPS public="1" set="null"><x path="Float"/></currentFPS>
		<dataReliable public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</dataReliable>
		<decodedFrames public="1" set="null"><x path="UInt"/></decodedFrames>
		<farID public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</farID>
		<farNonce public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</farNonce>
		<inBufferSeek public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</inBufferSeek>
		<info public="1" set="null">
			<c path="flash.net.NetStreamInfo"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</info>
		<liveDelay public="1" set="null"><x path="Float"/></liveDelay>
		<maxPauseBufferTime public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</maxPauseBufferTime>
		<multicastAvailabilitySendToAll public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</multicastAvailabilitySendToAll>
		<multicastAvailabilityUpdatePeriod public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</multicastAvailabilityUpdatePeriod>
		<multicastFetchPeriod public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</multicastFetchPeriod>
		<multicastInfo public="1" set="null">
			<c path="flash.net.NetStreamMulticastInfo"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</multicastInfo>
		<multicastPushNeighborLimit public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</multicastPushNeighborLimit>
		<multicastRelayMarginDuration public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</multicastRelayMarginDuration>
		<multicastWindowDuration public="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</multicastWindowDuration>
		<nearNonce public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</nearNonce>
		<objectEncoding public="1" set="null"><x path="UInt"/></objectEncoding>
		<peerStreams public="1" set="null">
			<c path="Array"><d/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</peerStreams>
		<soundTransform public="1"><c path="openfl.media.SoundTransform"/></soundTransform>
		<time public="1" set="null"><x path="Float"/></time>
		<useHardwareDecoder public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</useHardwareDecoder>
		<useJitterBuffer public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_3</e></m>
			</meta>
		</useJitterBuffer>
		<videoCodec public="1" set="null"><x path="UInt"/></videoCodec>
		<videoReliable public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</videoReliable>
		<videoSampleAccess public="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</videoSampleAccess>
		<videoStreamSettings public="1">
			<c path="flash.media.VideoStreamSettings"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</videoStreamSettings>
		<appendBytes public="1" set="method">
			<f a="bytes">
				<x path="openfl.utils.ByteArray"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</appendBytes>
		<appendBytesAction public="1" set="method">
			<f a="netStreamAppendBytesAction">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</appendBytesAction>
		<attach public="1" set="method">
			<f a="connection">
				<c path="openfl.net.NetConnection"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</attach>
		<attachAudio public="1" set="method">
			<f a="microphone">
				<c path="flash.media.Microphone"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</attachAudio>
		<attachCamera public="1" set="method">
			<f a="theCamera:?snapshotMilliseconds" v=":-1">
				<c path="flash.media.Camera"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ snapshotMilliseconds : -1 }</e></m>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</attachCamera>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<dispose public="1" set="method">
			<f a=""><x path="Void"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_2</e></m>
			</meta>
		</dispose>
		<onPeerConnect public="1" set="method">
			<f a="subscriber">
				<c path="openfl.net.NetStream"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</onPeerConnect>
		<pause public="1" set="method"><f a=""><x path="Void"/></f></pause>
		<play public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></play>
		<play2 public="1" set="method">
			<f a="param">
				<c path="flash.net.NetStreamPlayOptions"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</play2>
		<publish public="1" set="method">
			<f a="?name:?type">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</publish>
		<receiveAudio public="1" set="method">
			<f a="flag">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</receiveAudio>
		<receiveVideo public="1" set="method">
			<f a="flag">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</receiveVideo>
		<receiveVideoFPS public="1" set="method">
			<f a="FPS">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</receiveVideoFPS>
		<resume public="1" set="method"><f a=""><x path="Void"/></f></resume>
		<seek public="1" set="method"><f a="offset">
	<x path="Float"/>
	<x path="Void"/>
</f></seek>
		<send public="1" set="method">
			<f a="handlerName:?p1:?p2:?p3:?p4:?p5">
				<c path="String"/>
				<d/>
				<d/>
				<d/>
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</send>
		<step public="1" set="method">
			<f a="frames">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</step>
		<togglePause public="1" set="method"><f a=""><x path="Void"/></f></togglePause>
		<new public="1" set="method"><f a="connection:?peerID">
	<c path="openfl.net.NetConnection"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.net.SharedObject" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/SharedObject.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<defaultObjectEncoding public="1" static="1"><x path="Int"/></defaultObjectEncoding>
		<preventBackup public="1" static="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_7</e></m>
			</meta>
		</preventBackup>
		<deleteAll public="1" set="method" static="1">
			<f a="url">
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</deleteAll>
		<getDiskUsage public="1" set="method" static="1">
			<f a="url">
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</getDiskUsage>
		<getLocal public="1" set="method" static="1">
			<f a="name:?localPath:?secure" v=":null:false">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<c path="openfl.net.SharedObject"/>
			</f>
			<meta><m n=":value"><e>{ secure : false, localPath : null }</e></m></meta>
			<haxe_doc><![CDATA[* Returns a reference to a locally persistent shared object that is only
	 * available to the current client. If the shared object does not already
	 * exist, this method creates one. If any values passed to
	 * `getLocal()` are invalid or if the call fails, Flash Player
	 * throws an exception.
	 *
	 * The following code shows how you assign the returned shared object
	 * reference to a variable:
	 *
	 * `var so:SharedObject =
	 * SharedObject.getLocal("savedData");`
	 *
	 * **Note:** If the user has chosen to never allow local storage for
	 * this domain, the object is not saved locally, even if a value for
	 * `localPath` is specified. The exception to this rule is local
	 * content. Local content can always write shared objects from third-party
	 * domains(domains other than the domain in the current browser address bar)
	 * to disk, even if writing of third-party shared objects to disk is
	 * disallowed. 
	 *
	 * To avoid name conflicts, Flash looks at the location of the SWF file
	 * creating the shared object. For example, if a SWF file at
	 * www.myCompany.com/apps/stockwatcher.swf creates a shared object named
	 * `portfolio`, that shared object does not conflict with another
	 * object named `portfolio` that was created by a SWF file at
	 * www.yourCompany.com/photoshoot.swf because the SWF files originate from
	 * different directories. 
	 *
	 * Although the `localPath` parameter is optional, you should
	 * give some thought to its use, especially if other SWF files need to access
	 * the shared object. If the data in the shared object is specific to one SWF
	 * file that will not be moved to another location, then use of the default
	 * value makes sense. If other SWF files need access to the shared object, or
	 * if the SWF file that creates the shared object will later be moved, then
	 * the value of this parameter affects how accessible the shared object will
	 * be. For example, if you create a shared object with `localPath`
	 * set to the default value of the full path to the SWF file, no other SWF
	 * file can access that shared object. If you later move the original SWF
	 * file to another location, not even that SWF file can access the data
	 * already stored in the shared object.
	 *
	 * To avoid inadvertently restricting access to a shared object, use the
	 * `localpath` parameter. The most permissive approach is to set
	 * `localPath` to `/`(slash), which makes the shared
	 * object available to all SWF files in the domain, but increases the
	 * likelihood of name conflicts with other shared objects in the domain. A
	 * more restrictive approach is to append `localPath` with folder
	 * names that are in the full path to the SWF file. For example, for a
	 * `portfolio` shared object created by the SWF file at
	 * www.myCompany.com/apps/stockwatcher.swf, you could set the
	 * `localPath` parameter to `/`, `/apps`, or
	 * `/apps/stockwatcher.swf`. You must determine which approach
	 * provides optimal flexibility for your application.
	 *
	 * When using this method, consider the following security model:
	 * 
	 *  * You cannot access shared objects across sandbox boundaries.
	 *  * Users can restrict shared object access by using the Flash Player
	 * Settings dialog box or the Settings Manager. By default, an application
	 * can create shared objects of up 100 KB of data per domain. Administrators
	 * and users can also place restrictions on the ability to write to the file
	 * system.
	 * 
	 * 
	 *
	 * Suppose you publish SWF file content to be played back as local files
	 * (either locally installed SWF files or EXE files), and you need to access
	 * a specific shared object from more than one local SWF file. In this
	 * situation, be aware that for local files, two different locations might be
	 * used to store shared objects. The domain that is used depends on the
	 * security permissions granted to the local file that created the shared
	 * object. Local files can have three different levels of permissions:
	 *
	 *  1. Access to the local filesystem only.
	 *  2. Access to the network only.
	 *  3. Access to both the network and the local filesystem.
	 *
	 * Local files with access to the local filesystem(level 1 or 3) store
	 * their shared objects in one location. Local files without access to the
	 * local filesystem(level 2) store their shared objects in another
	 * location.
	 *
	 * You can prevent a SWF file from using this method by setting the
	 * `allowNetworking` parameter of the the `object` and
	 * `embed` tags in the HTML page that contains the SWF
	 * content.
	 *
	 * For more information, see the Flash Player Developer Center Topic:
	 * [Security](http://www.adobe.com/go/devnet_security_en).
	 * 
	 * @param name      The name of the object. The name can include forward
	 *                  slashes(`/`); for example,
	 *                  `work/addresses` is a legal name. Spaces are
	 *                  not allowed in a shared object name, nor are the
	 *                  following characters: `~ % & \
	 *                  ; : " ' , < > ? #`
	 * @param localPath The full or partial path to the SWF file that created the
	 *                  shared object, and that determines where the shared
	 *                  object will be stored locally. If you do not specify this
	 *                  parameter, the full path is used.
	 * @param secure    Determines whether access to this shared object is
	 *                  restricted to SWF files that are delivered over an HTTPS
	 *                  connection. If your SWF file is delivered over HTTPS,
	 *                  this parameter's value has the following effects:
	 *                  
	 *                   * If this parameter is set to `true`,
	 *                  Flash Player creates a new secure shared object or gets a
	 *                  reference to an existing secure shared object. This
	 *                  secure shared object can be read from or written to only
	 *                  by SWF files delivered over HTTPS that call
	 *                  `SharedObject.getLocal()` with the
	 *                  `secure` parameter set to
	 *                  `true`.
	 *                   * If this parameter is set to `false`,
	 *                  Flash Player creates a new shared object or gets a
	 *                  reference to an existing shared object that can be read
	 *                  from or written to by SWF files delivered over non-HTTPS
	 *                  connections.
	 *                  
	 *
	 *                  If your SWF file is delivered over a non-HTTPS
	 *                  connection and you try to set this parameter to
	 *                  `true`, the creation of a new shared object
	 *                 (or the access of a previously created secure shared
	 *                  object) fails and `null` is returned.
	 *                  Regardless of the value of this parameter, the created
	 *                  shared objects count toward the total amount of disk
	 *                  space allowed for a domain.
	 *
	 *                  The following diagram shows the use of the
	 *                  `secure` parameter:
	 * @return A reference to a shared object that is persistent locally and is
	 *         available only to the current client. If Flash Player can't create
	 *         or find the shared object(for example, if `localPath`
	 *         was specified but no such directory exists), this method throws an
	 *         exception.
	 * @throws Error Flash Player cannot create the shared object for whatever
	 *               reason. This error might occur is if persistent shared
	 *               object creation and storage by third-party Flash content is
	 *               prohibited(does not apply to local content). Users can
	 *               prohibit third-party persistent shared objects on the Global
	 *               Storage Settings panel of the Settings Manager, located at
	 *               [http://www.adobe.com/support/documentation/en/flashplayer/help/settings_manager03.html](http://www.adobe.com/support/documentation/en/flashplayer/help/settings_manager03.html).]]></haxe_doc>
		</getLocal>
		<getRemote public="1" set="method" static="1">
			<f a="name:?remotePath:?persistence:?secure" v=":null:false:false">
				<c path="String"/>
				<c path="String"/>
				<d/>
				<x path="Bool"/>
				<c path="openfl.net.SharedObject"/>
			</f>
			<meta><m n=":value"><e>{ secure : false, persistence : false, remotePath : null }</e></m></meta>
		</getRemote>
		<client public="1"><d/></client>
		<data public="1" set="null">
			<d/>
			<haxe_doc>* The collection of attributes assigned to the `data` property of
	 * the object; these attributes can be shared and stored. Each attribute can
	 * be an object of any ActionScript or JavaScript type  -  Array, Number,
	 * Boolean, ByteArray, XML, and so on. For example, the following lines
	 * assign values to various aspects of a shared object:
	 *
	 *  For remote shared objects used with a server, all attributes of the
	 * `data` property are available to all clients connected to the
	 * shared object, and all attributes are saved if the object is persistent.
	 * If one client changes the value of an attribute, all clients now see the
	 * new value.</haxe_doc>
		</data>
		<fps public="1" get="null"><x path="Float"/></fps>
		<objectEncoding public="1"><x path="UInt"/></objectEncoding>
		<size public="1" get="null" set="null">
			<x path="UInt"/>
			<haxe_doc>* The current size of the shared object, in bytes.
	 *
	 * Flash calculates the size of a shared object by stepping through all of
	 * its data properties; the more data properties the object has, the longer
	 * it takes to estimate its size. Estimating object size can take significant
	 * processing time, so you may want to avoid using this method unless you
	 * have a specific need for it.</haxe_doc>
		</size>
		<clear public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* For local shared objects, purges all of the data and deletes the shared
	 * object from the disk. The reference to the shared object is still active,
	 * but its data properties are deleted.
	 *
	 *  For remote shared objects used with Flash Media Server,
	 * `clear()` disconnects the object and purges all of the data. If
	 * the shared object is locally persistent, this method also deletes the
	 * shared object from the disk. The reference to the shared object is still
	 * active, but its data properties are deleted. 
	 *</haxe_doc>
		</clear>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<connect public="1" set="method">
			<f a="myConnection:?params" v=":null">
				<c path="openfl.net.NetConnection"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ params : null }</e></m></meta>
		</connect>
		<flush public="1" set="method">
			<f a="?minDiskSpace" v="0">
				<x path="Int"/>
				<x path="openfl.net.SharedObjectFlushStatus"/>
			</f>
			<meta><m n=":value"><e>{ minDiskSpace : 0 }</e></m></meta>
			<haxe_doc>* Immediately writes a locally persistent shared object to a local file. If
	 * you don't use this method, Flash Player writes the shared object to a file
	 * when the shared object session ends  -  that is, when the SWF file is
	 * closed, when the shared object is garbage-collected because it no longer
	 * has any references to it, or when you call
	 * `SharedObject.clear()` or `SharedObject.close()`.
	 *
	 * If this method returns `SharedObjectFlushStatus.PENDING`,
	 * Flash Player displays a dialog box asking the user to increase the amount
	 * of disk space available to objects from this domain. To allow space for
	 * the shared object to grow when it is saved in the future, which avoids
	 * return values of `PENDING`, pass a value for
	 * `minDiskSpace`. When Flash Player tries to write the file, it
	 * looks for the number of bytes passed to `minDiskSpace`, instead
	 * of looking for enough space to save the shared object at its current size.
	 * 
	 *
	 * For example, if you expect a shared object to grow to a maximum size of
	 * 500 bytes, even though it might start out much smaller, pass 500 for
	 * `minDiskSpace`. If Flash asks the user to allot disk space for
	 * the shared object, it asks for 500 bytes. After the user allots the
	 * requested amount of space, Flash won't have to ask for more space on
	 * future attempts to flush the object(as long as its size doesn't exceed
	 * 500 bytes). 
	 *
	 * After the user responds to the dialog box, this method is called again.
	 * A `netStatus` event is dispatched with a `code`
	 * property of `SharedObject.Flush.Success` or
	 * `SharedObject.Flush.Failed`. 
	 * 
	 * @param minDiskSpace The minimum disk space, in bytes, that must be
	 *                     allotted for this object.
	 * @return Either of the following values:
	 *         
	 *          * `SharedObjectFlushStatus.PENDING`: The user has
	 *         permitted local information storage for objects from this domain,
	 *         but the amount of space allotted is not sufficient to store the
	 *         object. Flash Player prompts the user to allow more space. To
	 *         allow space for the shared object to grow when it is saved, thus
	 *         avoiding a `SharedObjectFlushStatus.PENDING` return
	 *         value, pass a value for `minDiskSpace`. 
	 *          * `SharedObjectFlushStatus.FLUSHED`: The shared
	 *         object has been successfully written to a file on the local
	 *         disk.
	 *         
	 * @throws Error Flash Player cannot write the shared object to disk. This
	 *               error might occur if the user has permanently disallowed
	 *               local information storage for objects from this domain.
	 *
	 *               **Note:** Local content can always write shared
	 *               objects from third-party domains(domains other than the
	 *               domain in the current browser address bar) to disk, even if
	 *               writing of third-party shared objects to disk is
	 *               disallowed.</haxe_doc>
		</flush>
		<send public="1" set="method"><f a="arguments">
	<c path="Array"><d/></c>
	<x path="Void"/>
</f></send>
		<setDirty public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<x path="Void"/>
</f></setDirty>
		<setProperty public="1" set="method">
			<f a="propertyName:?value" v=":null">
				<c path="String"/>
				<x path="openfl.utils.Object"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ value : null }</e></m></meta>
		</setProperty>
		<new set="method"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* The SharedObject class is used to read and store limited amounts of data on
 * a user's computer or on a server. Shared objects offer real-time data
 * sharing between multiple client SWF files and objects that are persistent
 * on the local computer or remote server. Local shared objects are similar to
 * browser cookies and remote shared objects are similar to real-time data
 * transfer devices. To use remote shared objects, you need Adobe Flash Media
 * Server.
 *
 * Use shared objects to do the following:
 *
 * 
 *  * **Maintain local persistence**. This is the simplest way to use a
 * shared object, and does not require Flash Media Server. For example, you
 * can call `SharedObject.getLocal()` to create a shared object in
 * an application, such as a calculator with memory. When the user closes the
 * calculator, Flash Player saves the last value in a shared object on the
 * user's computer. The next time the calculator is run, it contains the
 * values it had previously. Alternatively, if you set the shared object's
 * properties to `null` before the calculator application is
 * closed, the next time the application runs, it opens without any values.
 * Another example of maintaining local persistence is tracking user
 * preferences or other data for a complex website, such as a record of which
 * articles a user read on a news site. Tracking this information allows you
 * to display articles that have already been read differently from new,
 * unread articles. Storing this information on the user's computer reduces
 * server load.
 *  * **Store and share data on Flash Media Server**. A shared object
 * can store data on the server for other clients to retrieve. For example,
 * call `SharedObject.getRemote()` to create a remote shared
 * object, such as a phone list, that is persistent on the server. Whenever a
 * client makes changes to the shared object, the revised data is available to
 * all clients currently connected to the object or who later connect to it.
 * If the object is also persistent locally, and a client changes data while
 * not connected to the server, the data is copied to the remote shared object
 * the next time the client connects to the object.
 *  * **Share data in real time**. A shared object can share data among
 * multiple clients in real time. For example, you can open a remote shared
 * object that stores a list of users connected to a chat room that is visible
 * to all clients connected to the object. When a user enters or leaves the
 * chat room, the object is updated and all clients that are connected to the
 * object see the revised list of chat room users.
 * 
 *
 *  To create a local shared object, call
 * `SharedObject.getLocal()`. To create a remote shared object,
 * call `SharedObject.getRemote()`.
 *
 *  When an application closes, shared objects are _flushed_, or
 * written to a disk. You can also call the `flush()` method to
 * explicitly write data to a disk.
 *
 * **Local disk space considerations.** Local shared objects have some
 * limitations that are important to consider as you design your application.
 * Sometimes SWF files may not be allowed to write local shared objects, and
 * sometimes the data stored in local shared objects can be deleted without
 * your knowledge. Flash Player users can manage the disk space that is
 * available to individual domains or to all domains. When users decrease the
 * amount of disk space available, some local shared objects may be deleted.
 * Flash Player users also have privacy controls that can prevent third-party
 * domains(domains other than the domain in the current browser address bar)
 * from reading or writing local shared objects.
 *
 * **Note**: SWF files that are stored and run on a local computer, not
 * from a remote server, can always write third-party shared objects to disk.
 * For more information about third-party shared objects, see the 
 * [Global Storage Settings panel](http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager03.html)
 * in Flash Player Help.
 *
 * It's a good idea to check for failures related to the amount of disk
 * space and to user privacy controls. Perform these checks when you call
 * `getLocal()` and `flush()`:
 * 
 *  * `SharedObject.getLocal()`  -  Flash Player throws an
 * exception when a call to this method fails, such as when the user has
 * disabled third-party shared objects and the domain of your SWF file does
 * not match the domain in the browser address bar.
 *  * `SharedObject.flush()`  -  Flash Player throws an
 * exception when a call to this method fails. It returns
 * `SharedObjectFlushStatus.FLUSHED` when it succeeds. It returns
 * `SharedObjectFlushStatus.PENDING` when additional storage space
 * is needed. Flash Player prompts the user to allow an increase in storage
 * space for locally saved information. Thereafter, the `netStatus`
 * event is dispatched with an information object indicating whether the flush
 * failed or succeeded.
 * 
 * 
 *
 * If your SWF file attempts to create or modify local shared objects, make
 * sure that your SWF file is at least 215 pixels wide and at least 138 pixels
 * high(the minimum dimensions for displaying the dialog box that prompts
 * users to increase their local shared object storage limit). If your SWF
 * file is smaller than these dimensions and an increase in the storage limit
 * is required, `SharedObject.flush()` fails, returning
 * `SharedObjectFlushedStatus.PENDING` and dispatching the
 * `netStatus` event.
 *
 *  **Remote shared objects.** With Flash Media Server, you can create
 * and use remote shared objects, that are shared in real-time by all clients
 * connected to your application. When one client changes a property of a
 * remote shared object, the property is changed for all connected clients.
 * You can use remote shared objects to synchronize clients, for example,
 * users in a multi-player game. 
 *
 *  Each remote shared object has a `data` property which is an
 * Object with properties that store data. Call `setProperty()` to
 * change an property of the data object. The server updates the properties,
 * dispatches a `sync` event, and sends the properties back to the
 * connected clients. 
 *
 *  You can choose to make remote shared objects persistent on the client,
 * the server, or both. By default, Flash Player saves locally persistent
 * remote shared objects up to 100K in size. When you try to save a larger
 * object, Flash Player displays the Local Storage dialog box, which lets the
 * user allow or deny local storage for the shared object. Make sure your
 * Stage size is at least 215 by 138 pixels; this is the minimum size Flash
 * requires to display the dialog box. 
 *
 *  If the user selects Allow, the server saves the shared object and
 * dispatches a `netStatus` event with a `code` property
 * of `SharedObject.Flush.Success`. If the user select Deny, the
 * server does not save the shared object and dispatches a
 * `netStatus` event with a `code` property of
 * `SharedObject.Flush.Failed`. 
 * 
 * @event asyncError Dispatched when an exception is thrown asynchronously  - 
 *                   that is, from native asynchronous code.
 * @event netStatus  Dispatched when a SharedObject instance is reporting its
 *                   status or error condition. The `netStatus`
 *                   event contains an `info` property, which is an
 *                   information object that contains specific information
 *                   about the event, such as whether a connection attempt
 *                   succeeded or whether the shared object was successfully
 *                   written to the local disk.
 * @event sync       Dispatched when a remote shared object has been updated
 *                   by the server.</haxe_doc>
	</class>
	<abstract path="openfl.net.SharedObjectFlushStatus" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/SharedObjectFlushStatus.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The SharedObjectFlushStatus class provides values for the code returned
 * from a call to the `SharedObject.flush()` method.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.net._SharedObjectFlushStatus.SharedObjectFlushStatus_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/SharedObjectFlushStatus.hx" private="1" module="openfl.net.SharedObjectFlushStatus">
	<FLUSHED public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="openfl.net.SharedObjectFlushStatus"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Indicates that the flush completed successfully.</haxe_doc>
	</FLUSHED>
	<PENDING public="1" get="inline" set="null" expr="cast 1" line="19" static="1">
		<x path="openfl.net.SharedObjectFlushStatus"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Indicates that the user is being prompted to increase disk space for the
	 * shared object before the flush can occur.</haxe_doc>
	</PENDING>
	<fromString set="method" line="21" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.net.SharedObjectFlushStatus"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="33" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.net._SharedObjectFlushStatus.SharedObjectFlushStatus_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/SharedObjectFlushStatus.hx" private="1" module="openfl.net.SharedObjectFlushStatus">
		<FLUSHED public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="openfl.net.SharedObjectFlushStatus"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Indicates that the flush completed successfully.</haxe_doc>
		</FLUSHED>
		<PENDING public="1" get="inline" set="null" expr="cast 1" line="19" static="1">
			<x path="openfl.net.SharedObjectFlushStatus"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Indicates that the user is being prompted to increase disk space for the
	 * shared object before the flush can occur.</haxe_doc>
		</PENDING>
		<fromString set="method" line="21" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.net.SharedObjectFlushStatus"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="33" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.net.Socket" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/Socket.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<implements path="openfl.utils.IDataOutput"/>
		<implements path="openfl.utils.IDataInput"/>
		<bytesAvailable public="1" get="accessor" set="null"><x path="UInt"/></bytesAvailable>
		<bytesPending public="1" get="null" set="null"><x path="UInt"/></bytesPending>
		<connected public="1" get="null" set="null"><x path="Bool"/></connected>
		<endian public="1" get="accessor" set="accessor"><x path="openfl.utils.Endian"/></endian>
		<objectEncoding public="1"><x path="UInt"/></objectEncoding>
		<timeout public="1"><x path="UInt"/></timeout>
		<get_bytesAvailable set="method">
			<f a=""><x path="UInt"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_bytesAvailable>
		<get_endian set="method">
			<f a=""><x path="openfl.utils.Endian"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_endian>
		<set_endian set="method">
			<f a="value">
				<x path="openfl.utils.Endian"/>
				<x path="openfl.utils.Endian"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_endian>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<connect public="1" set="method">
			<f a="?host:?port" v="null:0">
				<c path="String"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ port : 0, host : null }</e></m></meta>
		</connect>
		<flush public="1" set="method"><f a=""><x path="Void"/></f></flush>
		<readBoolean public="1" set="method"><f a=""><x path="Bool"/></f></readBoolean>
		<readByte public="1" set="method"><f a=""><x path="Int"/></f></readByte>
		<readBytes public="1" set="method">
			<f a="bytes:?offset:?length" v=":0:0">
				<x path="openfl.utils.ByteArray"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ length : 0, offset : 0 }</e></m></meta>
		</readBytes>
		<readDouble public="1" set="method"><f a=""><x path="Float"/></f></readDouble>
		<readFloat public="1" set="method"><f a=""><x path="Float"/></f></readFloat>
		<readInt public="1" set="method"><f a=""><x path="Int"/></f></readInt>
		<readMultiByte public="1" set="method"><f a="length:charSet">
	<x path="Int"/>
	<c path="String"/>
	<c path="String"/>
</f></readMultiByte>
		<readObject public="1" set="method">
			<f a=""><d/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</readObject>
		<readShort public="1" set="method"><f a=""><x path="Int"/></f></readShort>
		<readUnsignedByte public="1" set="method"><f a=""><x path="Int"/></f></readUnsignedByte>
		<readUnsignedInt public="1" set="method"><f a=""><x path="Int"/></f></readUnsignedInt>
		<readUnsignedShort public="1" set="method"><f a=""><x path="Int"/></f></readUnsignedShort>
		<readUTF public="1" set="method"><f a=""><c path="String"/></f></readUTF>
		<readUTFBytes public="1" set="method"><f a="length">
	<x path="Int"/>
	<c path="String"/>
</f></readUTFBytes>
		<writeBoolean public="1" set="method"><f a="value">
	<x path="Bool"/>
	<x path="Void"/>
</f></writeBoolean>
		<writeByte public="1" set="method"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeByte>
		<writeBytes public="1" set="method">
			<f a="bytes:?offset:?length" v=":0:0">
				<x path="openfl.utils.ByteArray"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ length : 0, offset : 0 }</e></m></meta>
		</writeBytes>
		<writeDouble public="1" set="method"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></writeDouble>
		<writeFloat public="1" set="method"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></writeFloat>
		<writeInt public="1" set="method"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeInt>
		<writeMultiByte public="1" set="method"><f a="value:charSet">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></writeMultiByte>
		<writeObject public="1" set="method">
			<f a="object">
				<d/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</writeObject>
		<writeShort public="1" set="method"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeShort>
		<writeUnsignedInt public="1" set="method"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeUnsignedInt>
		<writeUTF public="1" set="method"><f a="value">
	<c path="String"/>
	<x path="Void"/>
</f></writeUTF>
		<writeUTFBytes public="1" set="method"><f a="value">
	<c path="String"/>
	<x path="Void"/>
</f></writeUTFBytes>
		<new public="1" set="method">
			<f a="?host:?port" v="null:0">
				<c path="String"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ port : 0, host : null }</e></m></meta>
		</new>
	</class>
	<class path="openfl.net.URLLoader" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLLoader.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<bytesLoaded public="1">
			<x path="Int"/>
			<haxe_doc>* Indicates the number of bytes that have been loaded thus far during the
	 * load operation.</haxe_doc>
		</bytesLoaded>
		<bytesTotal public="1">
			<x path="Int"/>
			<haxe_doc>* Indicates the total number of bytes in the downloaded data. This property
	 * contains 0 while the load operation is in progress and is populated when
	 * the operation is complete. Also, a missing Content-Length header will
	 * result in bytesTotal being indeterminate.</haxe_doc>
		</bytesTotal>
		<data public="1">
			<d/>
			<haxe_doc>* The data received from the load operation. This property is populated only
	 * when the load operation is complete. The format of the data depends on the
	 * setting of the `dataFormat` property:
	 *
	 * If the `dataFormat` property is
	 * `URLLoaderDataFormat.TEXT`, the received data is a string
	 * containing the text of the loaded file.
	 *
	 * If the `dataFormat` property is
	 * `URLLoaderDataFormat.BINARY`, the received data is a ByteArray
	 * object containing the raw binary data.
	 *
	 * If the `dataFormat` property is
	 * `URLLoaderDataFormat.VARIABLES`, the received data is a
	 * URLVariables object containing the URL-encoded variables.</haxe_doc>
		</data>
		<dataFormat public="1" set="null">
			<x path="openfl.net.URLLoaderDataFormat"/>
			<haxe_doc>* Controls whether the downloaded data is received as text
	 * (`URLLoaderDataFormat.TEXT`), raw binary data
	 * (`URLLoaderDataFormat.BINARY`), or URL-encoded variables
	 * (`URLLoaderDataFormat.VARIABLES`).
	 *
	 * If the value of the `dataFormat` property is
	 * `URLLoaderDataFormat.TEXT`, the received data is a string
	 * containing the text of the loaded file.
	 *
	 * If the value of the `dataFormat` property is
	 * `URLLoaderDataFormat.BINARY`, the received data is a ByteArray
	 * object containing the raw binary data.
	 *
	 * If the value of the `dataFormat` property is
	 * `URLLoaderDataFormat.VARIABLES`, the received data is a
	 * URLVariables object containing the URL-encoded variables.
	 * 
	 * @default URLLoaderDataFormat.TEXT</haxe_doc>
		</dataFormat>
		<close public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Closes the load operation in progress. Any load operation in progress is
	 * immediately terminated. If no URL is currently being streamed, an invalid
	 * stream error is thrown.
	 *</haxe_doc>
		</close>
		<load public="1" set="method">
			<f a="request">
				<c path="openfl.net.URLRequest"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Sends and loads data from the specified URL. The data can be received as
	 * text, raw binary data, or URL-encoded variables, depending on the value
	 * you set for the `dataFormat` property. Note that the default
	 * value of the `dataFormat` property is text. If you want to send
	 * data to the specified URL, you can set the `data` property in
	 * the URLRequest object.
	 *
	 * **Note:** If a file being loaded contains non-ASCII characters(as
	 * found in many non-English languages), it is recommended that you save the
	 * file with UTF-8 or UTF-16 encoding as opposed to a non-Unicode format like
	 * ASCII.
	 *
	 *  A SWF file in the local-with-filesystem sandbox may not load data
	 * from, or provide data to, a resource that is in the network sandbox.
	 *
	 *  By default, the calling SWF file and the URL you load must be in
	 * exactly the same domain. For example, a SWF file at www.adobe.com can load
	 * data only from sources that are also at www.adobe.com. To load data from a
	 * different domain, place a URL policy file on the server hosting the
	 * data.
	 *
	 * You cannot connect to commonly reserved ports. For a complete list of
	 * blocked ports, see "Restricting Networking APIs" in the _ActionScript
	 * 3.0 Developer's Guide_.
	 *
	 *  In Flash Player 10 and later, if you use a multipart Content-Type(for
	 * example "multipart/form-data") that contains an upload(indicated by a
	 * "filename" parameter in a "content-disposition" header within the POST
	 * body), the POST operation is subject to the security rules applied to
	 * uploads:
	 *
	 * 
	 *  * The POST operation must be performed in response to a user-initiated
	 * action, such as a mouse click or key press.
	 *  * If the POST operation is cross-domain(the POST target is not on the
	 * same server as the SWF file that is sending the POST request), the target
	 * server must provide a URL policy file that permits cross-domain
	 * access.
	 * 
	 *
	 * Also, for any multipart Content-Type, the syntax must be valid
	 * (according to the RFC2046 standards). If the syntax appears to be invalid,
	 * the POST operation is subject to the security rules applied to
	 * uploads.
	 *
	 * For more information related to security, see the Flash Player
	 * Developer Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
	 * 
	 * @param request A URLRequest object specifying the URL to download.
	 * @throws ArgumentError `URLRequest.requestHeader` objects may
	 *                       not contain certain prohibited HTTP request headers.
	 *                       For more information, see the URLRequestHeader class
	 *                       description.
	 * @throws MemoryError   This error can occur for the following reasons: 1)
	 *                       Flash Player or AIR cannot convert the
	 *                       `URLRequest.data` parameter from UTF8 to
	 *                       MBCS. This error is applicable if the URLRequest
	 *                       object passed to `load()` is set to
	 *                       perform a `GET` operation and if
	 *                       `System.useCodePage` is set to
	 *                       `true`. 2) Flash Player or AIR cannot
	 *                       allocate memory for the `POST` data. This
	 *                       error is applicable if the URLRequest object passed
	 *                       to `load` is set to perform a
	 *                       `POST` operation.
	 * @throws SecurityError Local untrusted files may not communicate with the
	 *                       Internet. This may be worked around by reclassifying
	 *                       this file as local-with-networking or trusted.
	 * @throws SecurityError You are trying to connect to a commonly reserved
	 *                       port. For a complete list of blocked ports, see
	 *                       "Restricting Networking APIs" in the _ActionScript
	 *                       3.0 Developer's Guide_.
	 * @throws TypeError     The value of the request parameter or the
	 *                       `URLRequest.url` property of the
	 *                       URLRequest object passed are `null`.
	 * @event complete           Dispatched after data has loaded successfully.
	 * @event httpResponseStatus Dispatched if a call to the `load()`
	 *                           method attempts to access data over HTTP and
	 *                           Adobe AIR is able to detect and return the
	 *                           status code for the request.
	 * @event httpStatus         If access is over HTTP, and the current Flash
	 *                           Player environment supports obtaining status
	 *                           codes, you may receive these events in addition
	 *                           to any `complete` or
	 *                           `error` event.
	 * @event ioError            The load operation could not be completed.
	 * @event open               Dispatched when a load operation commences.
	 * @event progress           Dispatched when data is received as the download
	 *                           operation progresses.
	 * @event securityError      A load operation attempted to retrieve data from
	 *                           a server outside the caller's security sandbox.
	 *                           This may be worked around using a policy file on
	 *                           the server.
	 * @event securityError      A load operation attempted to load a SWZ file(a
	 *                           Adobe platform component), but the certificate
	 *                           is invalid or the digest does not match the
	 *                           component.</haxe_doc>
		</load>
		<new public="1" set="method">
			<f a="?request" v="null">
				<c path="openfl.net.URLRequest"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ request : null }</e></m></meta>
			<haxe_doc>* Creates a URLLoader object.
	 * 
	 * @param request A URLRequest object specifying the URL to download. If this
	 *                parameter is omitted, no load operation begins. If
	 *                specified, the load operation begins immediately(see the
	 *                `load` entry for more information).</haxe_doc>
		</new>
		<haxe_doc>* The URLLoader class downloads data from a URL as text, binary data, or
 * URL-encoded variables. It is useful for downloading text files, XML, or
 * other information to be used in a dynamic, data-driven application.
 *
 * A URLLoader object downloads all of the data from a URL before making it
 * available to code in the applications. It sends out notifications about the
 * progress of the download, which you can monitor through the
 * `bytesLoaded` and `bytesTotal` properties, as well as
 * through dispatched events.
 *
 * When loading very large video files, such as FLV's, out-of-memory errors
 * may occur. 
 *
 * When you use this class in Flash Player and in AIR application content
 * in security sandboxes other than then application security sandbox,
 * consider the following security model:
 *
 * 
 *  * A SWF file in the local-with-filesystem sandbox may not load data
 * from, or provide data to, a resource that is in the network sandbox. 
 *  *  By default, the calling SWF file and the URL you load must be in
 * exactly the same domain. For example, a SWF file at www.adobe.com can load
 * data only from sources that are also at www.adobe.com. To load data from a
 * different domain, place a URL policy file on the server hosting the
 * data.
 * 
 *
 * For more information related to security, see the Flash Player Developer
 * Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).
 * 
 * @event complete           Dispatched after all the received data is decoded
 *                           and placed in the data property of the URLLoader
 *                           object. The received data may be accessed once
 *                           this event has been dispatched.
 * @event httpResponseStatus Dispatched if a call to the load() method
 *                           attempts to access data over HTTP, and Adobe AIR
 *                           is able to detect and return the status code for
 *                           the request.
 * @event httpStatus         Dispatched if a call to URLLoader.load() attempts
 *                           to access data over HTTP. For content running in
 *                           Flash Player, this event is only dispatched if
 *                           the current Flash Player environment is able to
 *                           detect and return the status code for the
 *                           request.(Some browser environments may not be
 *                           able to provide this information.) Note that the
 *                           `httpStatus` event(if any) is sent
 *                           before(and in addition to) any
 *                           `complete` or `error`
 *                           event.
 * @event ioError            Dispatched if a call to URLLoader.load() results
 *                           in a fatal error that terminates the download.
 * @event open               Dispatched when the download operation commences
 *                           following a call to the
 *                           `URLLoader.load()` method.
 * @event progress           Dispatched when data is received as the download
 *                           operation progresses.
 *
 *                           Note that with a URLLoader object, it is not
 *                           possible to access the data until it has been
 *                           received completely. So, the progress event only
 *                           serves as a notification of how far the download
 *                           has progressed. To access the data before it's
 *                           entirely downloaded, use a URLStream object. 
 * @event securityError      Dispatched if a call to URLLoader.load() attempts
 *                           to load data from a server outside the security
 *                           sandbox. Also dispatched if a call to
 *                           `URLLoader.load()` attempts to load a
 *                           SWZ file and the certificate is invalid or the
 *                           digest string does not match the component.</haxe_doc>
	</class>
	<abstract path="openfl.net.URLLoaderDataFormat" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLLoaderDataFormat.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The URLLoaderDataFormat class provides values that specify how downloaded
 * data is received.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.net._URLLoaderDataFormat.URLLoaderDataFormat_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLLoaderDataFormat.hx" private="1" module="openfl.net.URLLoaderDataFormat">
	<BINARY public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="openfl.net.URLLoaderDataFormat"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that downloaded data is received as raw binary data.</haxe_doc>
	</BINARY>
	<TEXT public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
		<x path="openfl.net.URLLoaderDataFormat"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that downloaded data is received as text.</haxe_doc>
	</TEXT>
	<VARIABLES public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
		<x path="openfl.net.URLLoaderDataFormat"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that downloaded data is received as URL-encoded variables.</haxe_doc>
	</VARIABLES>
	<fromString set="method" line="25" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.net.URLLoaderDataFormat"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="38" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.net._URLLoaderDataFormat.URLLoaderDataFormat_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLLoaderDataFormat.hx" private="1" module="openfl.net.URLLoaderDataFormat">
		<BINARY public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="openfl.net.URLLoaderDataFormat"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that downloaded data is received as raw binary data.</haxe_doc>
		</BINARY>
		<TEXT public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
			<x path="openfl.net.URLLoaderDataFormat"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that downloaded data is received as text.</haxe_doc>
		</TEXT>
		<VARIABLES public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
			<x path="openfl.net.URLLoaderDataFormat"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that downloaded data is received as URL-encoded variables.</haxe_doc>
		</VARIABLES>
		<fromString set="method" line="25" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.net.URLLoaderDataFormat"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="38" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.net.URLRequest" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLRequest.hx" extern="1">
		<contentType public="1">
			<c path="String"/>
			<haxe_doc>* The MIME content type of the content in the the `data`
	 * property.
	 *
	 * The default value is
	 * `application/x-www-form-urlencoded`.
	 *
	 * **Note**:The `FileReference.upload()`,
	 * `FileReference.download()`, and `HTMLLoader.load()`
	 * methods do not support the `URLRequest.contentType`
	 * property.
	 *
	 * When sending a POST request, the values of the `contentType`
	 * and `data` properties must correspond properly. The value of
	 * the `contentType` property instructs servers on how to
	 * interpret the value of the `data` property. 
	 *
	 * 
	 *  * If the value of the `data` property is a URLVariables
	 * object, the value of `contentType` must be
	 * `application/x-www-form-urlencoded`. 
	 *  *  If the value of the `data` property is any other type,
	 * the value of `contentType` should indicate the type of the POST
	 * data that will be sent(which is the binary or string data contained in
	 * the value of the `data` property). 
	 *  * For `FileReference.upload()`, the Content-Type of the
	 * request is set automatically to `multipart/form-data`, and the
	 * value of the `contentType` property is ignored.
	 * 
	 *
	 *  In Flash Player 10 and later, if you use a multipart Content-Type(for
	 * example "multipart/form-data") that contains an upload(indicated by a
	 * "filename" parameter in a "content-disposition" header within the POST
	 * body), the POST operation is subject to the security rules applied to
	 * uploads:
	 *
	 * 
	 *  * The POST operation must be performed in response to a user-initiated
	 * action, such as a mouse click or key press.
	 *  * If the POST operation is cross-domain(the POST target is not on the
	 * same server as the SWF file that is sending the POST request), the target
	 * server must provide a URL policy file that permits cross-domain
	 * access.
	 * 
	 *
	 * Also, for any multipart Content-Type, the syntax must be valid
	 * (according to the RFC2046 standards). If the syntax appears to be invalid,
	 * the POST operation is subject to the security rules applied to
	 * uploads.</haxe_doc>
		</contentType>
		<data public="1">
			<d/>
			<haxe_doc>* An object containing data to be transmitted with the URL request.
	 *
	 * This property is used in conjunction with the `method`
	 * property. When the value of `method` is `GET`, the
	 * value of `data` is appended to the value of
	 * `URLRequest.url`, using HTTP query-string syntax. When the
	 * `method` value is `POST`(or any value other than
	 * `GET`), the value of `data` is transmitted in the
	 * body of the HTTP request.
	 *
	 * The URLRequest API offers binary `POST` support and support
	 * for URL-encoded variables, as well as support for strings. The data object
	 * can be a ByteArray, URLVariables, or String object.
	 *
	 * The way in which the data is used depends on the type of object
	 * used:
	 *
	 * 
	 *  * If the object is a ByteArray object, the binary data of the
	 * ByteArray object is used as `POST` data. For `GET`,
	 * data of ByteArray type is not supported. Also, data of ByteArray type is
	 * not supported for `FileReference.upload()` and
	 * `FileReference.download()`.
	 *  * If the object is a URLVariables object and the method is
	 * `POST`, the variables are encoded using
	 * _x-www-form-urlencoded_ format and the resulting string is used as
	 * `POST` data. An exception is a call to
	 * `FileReference.upload()`, in which the variables are sent as
	 * separate fields in a `multipart/form-data` post.
	 *  * If the object is a URLVariables object and the method is
	 * `GET`, the URLVariables object defines variables to be sent
	 * with the URLRequest object.
	 *  * Otherwise, the object is converted to a string, and the string is
	 * used as the `POST` or `GET` data.
	 * 
	 *
	 * This data is not sent until a method, such as
	 * `navigateToURL()` or `FileReference.upload()`, uses
	 * the URLRequest object.
	 *
	 * **Note**: The value of `contentType` must correspond to
	 * the type of data in the `data` property. See the note in the
	 * description of the `contentType` property.</haxe_doc>
		</data>
		<digest public="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</digest>
		<followRedirects public="1"><x path="Bool"/></followRedirects>
		<idleTimeout public="1"><x path="Float"/></idleTimeout>
		<manageCookies public="1"><x path="Bool"/></manageCookies>
		<method public="1">
			<c path="String"/>
			<haxe_doc>* Controls the HTTP form submission method.
	 *
	 * For SWF content running in Flash Player(in the browser), this property
	 * is limited to GET or POST operations, and valid values are
	 * `URLRequestMethod.GET` or
	 * `URLRequestMethod.POST`.
	 *
	 * For content running in Adobe AIR, you can use any string value if the
	 * content is in the application security sandbox. Otherwise, as with content
	 * running in Flash Player, you are restricted to using GET or POST
	 * operations.
	 *
	 * For content running in Adobe AIR, when using the
	 * `navigateToURL()` function, the runtime treats a URLRequest
	 * that uses the POST method(one that has its `method` property
	 * set to `URLRequestMethod.POST`) as using the GET method.
	 *
	 * **Note:** If running in Flash Player and the referenced form has no
	 * body, Flash Player automatically uses a GET operation, even if the method
	 * is set to `URLRequestMethod.POST`. For this reason, it is
	 * recommended to always include a "dummy" body to ensure that the correct
	 * method is used.
	 * 
	 * @default URLRequestMethod.GET
	 * @throws ArgumentError If the `value` parameter is not
	 *                       `URLRequestMethod.GET` or
	 *                       `URLRequestMethod.POST`.</haxe_doc>
		</method>
		<requestHeaders public="1">
			<c path="Array"><c path="openfl.net.URLRequestHeader"/></c>
			<haxe_doc>* The array of HTTP request headers to be appended to the HTTP request. The
	 * array is composed of URLRequestHeader objects. Each object in the array
	 * must be a URLRequestHeader object that contains a name string and a value
	 * string, as follows:
	 *
	 * Flash Player and the AIR runtime impose certain restrictions on request
	 * headers; for more information, see the URLRequestHeader class
	 * description.
	 *
	 * Not all methods that accept URLRequest parameters support the
	 * `requestHeaders` property, consult the documentation for the
	 * method you are calling. For example, the
	 * `FileReference.upload()` and
	 * `FileReference.download()` methods do not support the
	 * `URLRequest.requestHeaders` property.
	 *
	 * Due to browser limitations, custom HTTP request headers are only
	 * supported for `POST` requests, not for `GET`
	 * requests.</haxe_doc>
		</requestHeaders>
		<url public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[* The URL to be requested.
	 *
	 * Be sure to encode any characters that are either described as unsafe in
	 * the Uniform Resource Locator specification(see
	 * http://www.faqs.org/rfcs/rfc1738.html) or that are reserved in the URL
	 * scheme of the URLRequest object(when not used for their reserved
	 * purpose). For example, use `"%25"` for the percent(%) symbol
	 * and `"%23"` for the number sign(#), as in
	 * `"http://www.example.com/orderForm.cfm?item=%23B-3&discount=50%25"`.
	 *
	 * By default, the URL must be in the same domain as the calling file,
	 * unless the content is running in the Adobe AIR application security
	 * sandbox. If you need to load data from a different domain, put a URL
	 * policy file on the server that is hosting the data. For more information,
	 * see the description of the URLRequest class.
	 *
	 * For content running in Adobe AIR, files in the application security
	 * sandobx  -  files installed with the AIR application  -  can access URLs
	 * using any of the following URL schemes:
	 *
	 * 
	 *  * `http` and `https` 
	 *  * `file` 
	 *  * `app-storage` 
	 *  * `app` 
	 * 
	 *
	 * **Note:** IPv6(Internet Protocol version 6) is supported in AIR and
	 * in Flash Player 9.0.115.0 and later. IPv6 is a version of Internet
	 * Protocol that supports 128-bit addresses(an improvement on the earlier
	 * IPv4 protocol that supports 32-bit addresses). You might need to activate
	 * IPv6 on your networking interfaces. For more information, see the Help for
	 * the operating system hosting the data. If IPv6 is supported on the hosting
	 * system, you can specify numeric IPv6 literal addresses in URLs enclosed in
	 * brackets([]), as in the following. 
	 * `rtmp://[2001:db8:ccc3:ffff:0:444d:555e:666f]:1935/test`]]></haxe_doc>
		</url>
		<userAgent public="1"><c path="String"/></userAgent>
		<useRedirectedURL public="1" set="method">
			<f a="sourceRequest:?wholeURL:?pattern:?replace" v=":false:null:null">
				<c path="openfl.net.URLRequest"/>
				<x path="Bool"/>
				<d/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ replace : null, pattern : null, wholeURL : false }</e></m>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</useRedirectedURL>
		<new public="1" set="method">
			<f a="?url" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ url : null }</e></m></meta>
			<haxe_doc>* Creates a URLRequest object. If `System.useCodePage` is
	 * `true`, the request is encoded using the system code page,
	 * rather than Unicode. If `System.useCodePage` is
	 * `false`, the request is encoded using Unicode, rather than the
	 * system code page.
	 * 
	 * @param url The URL to be requested. You can set the URL later by using the
	 *            `url` property.</haxe_doc>
		</new>
		<haxe_doc>* The URLRequest class captures all of the information in a single HTTP
 * request. URLRequest objects are passed to the `load()` methods
 * of the Loader, URLStream, and URLLoader classes, and to other loading
 * operations, to initiate URL downloads. They are also passed to the
 * `upload()` and `download()` methods of the
 * FileReference class.
 *
 * A SWF file in the local-with-filesystem sandbox may not load data from,
 * or provide data to, a resource that is in the network sandbox. 
 *
 * By default, the calling SWF file and the URL you load must be in the
 * same domain. For example, a SWF file at www.adobe.com can load data only
 * from sources that are also at www.adobe.com. To load data from a different
 * domain, place a URL policy file on the server hosting the data.
 *
 *  However, in Adobe AIR, content in the application security sandbox
 * (content installed with the AIR application) is not restricted by these
 * security limitations. For content running in Adobe AIR, files in the
 * application security sandbox can access URLs using any of the following URL
 * schemes:
 *
 * 
 *  * `http` and `https` 
 *  * `file` 
 *  * `app-storage` 
 *  * `app` 
 * 
 *
 * Content running in Adobe AIR that is not in the application security
 * sandbox observes the same restrictions as content running in the browser
 * (in Flash Player), and loading is governed by the content's domain and any
 * permissions granted in URL policy files.
 *
 * For more information related to security, see the Flash Player Developer
 * Center Topic: [Security](http://www.adobe.com/go/devnet_security_en).</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="openfl.net.URLRequestDefaults" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLRequestDefaults.hx" extern="1">
		<followRedirects public="1" static="1"><x path="Bool"/></followRedirects>
		<idleTimeout public="1" static="1"><x path="Float"/></idleTimeout>
		<manageCookies public="1" static="1"><x path="Bool"/></manageCookies>
		<userAgent public="1" static="1"><c path="String"/></userAgent>
	</class>
	<class path="openfl.net.URLRequestHeader" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLRequestHeader.hx" extern="1">
		<name public="1">
			<c path="String"/>
			<haxe_doc>* An HTTP request header name(such as `Content-Type` or
	 * `SOAPAction`).</haxe_doc>
		</name>
		<value public="1">
			<c path="String"/>
			<haxe_doc>* The value associated with the `name` property(such as
	 * `text/plain`).</haxe_doc>
		</value>
		<new public="1" set="method">
			<f a="?name:?value" v="&quot;&quot;:&quot;&quot;">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ value : "", name : "" }</e></m></meta>
			<haxe_doc>* Creates a new URLRequestHeader object that encapsulates a single HTTP
	 * request header. URLRequestHeader objects are used in the
	 * `requestHeaders` property of the URLRequest class.
	 * 
	 * @param name  An HTTP request header name(such as
	 *              `Content-Type` or `SOAPAction`).
	 * @param value The value associated with the `name` property
	 *             (such as `text/plain`).</haxe_doc>
		</new>
		<haxe_doc><![CDATA[* A URLRequestHeader object encapsulates a single HTTP request header and
 * consists of a name/value pair. URLRequestHeader objects are used in the
 * `requestHeaders` property of the URLRequest class.
 *
 * In Adobe<sup>®</sup> AIR<sup>®</sup>, content in the application
 * security sandbox(such as content installed with the AIR application) can
 * use any request headers, without error. However, for content running in
 * Adobe AIR that is in a different security sandbox, or for content running
 * in Flash<sup>®</sup> Player, using following request headers cause a
 * runtime error to be thrown, and the restricted terms are not case-sensitive
 * (for example, `Get`, `get`, and `GET` are
 * each not allowed): 
 *
 * In Flash Player and in Adobe AIR content outside of the application
 * security sandbox, the following request headers cannot be used, and the
 * restricted terms are not case-sensitive(for example, `Get`,
 * `get`, and `GET` are all not allowed). Also,
 * hyphenated terms apply if an underscore character is used(for example,
 * both `Content-Length` and `Content_Length` are not
 * allowed): 
 *
 * `Accept-Charset`, `Accept-Encoding`,
 * `Accept-Ranges`, `Age`, `Allow`,
 * `Allowed`, `Authorization`, `Charge-To`,
 * `Connect`, `Connection`, `Content-Length`,
 * `Content-Location`, `Content-Range`,
 * `Cookie`, `Date`, `Delete`,
 * `ETag`, `Expect`, `Get`,
 * `Head`, `Host`, `If-Modified-Since`,
 * `Keep-Alive`, `Last-Modified`, `Location`,
 * `Max-Forwards`, `Options`, `Origin`,
 * `Post`, `Proxy-Authenticate`,
 * `Proxy-Authorization`, `Proxy-Connection`,
 * `Public`, `Put`, `Range`,
 * `Referer`, `Request-Range`, `Retry-After`,
 * `Server`, `TE`, `Trace`,
 * `Trailer`, `Transfer-Encoding`, `Upgrade`,
 * `URI`, `User-Agent`, `Vary`,
 * `Via`, `Warning`, `WWW-Authenticate`,
 * `x-flash-version`.
 *
 * URLRequestHeader objects are restricted in length. If the cumulative
 * length of a URLRequestHeader object(the length of the `name`
 * property plus the `value` property) or an array of
 * URLRequestHeader objects used in the `URLRequest.requestHeaders`
 * property exceeds the acceptable length, an exception is thrown.
 *
 * Content running in Adobe AIR sets the `ACCEPT` header to the
 * following, unless you specify a setting for the `ACCEPT` header
 * in the `requestHeaders` property of the URLRequest class:
 * `text/xml, application/xml, application/xhtml+xml, text/html;q=0.9,
 * text/plain;q=0.8, image/png, application/x-shockwave-flash,
 * video/mp4;q=0.9, flv-application/octet-stream;q=0.8, video/x-flv;q=0.7,
 * audio/mp4, ~~/~~;q=0.5`
 *
 * Not all methods that accept URLRequest parameters support the
 * `requestHeaders` property, consult the documentation for the
 * method you are calling. For example, the
 * `FileReference.upload()` and
 * `FileReference.download()` methods do not support the
 * `URLRequest.requestHeaders` property.
 *
 * Due to browser limitations, custom HTTP request headers are only
 * supported for `POST` requests, not for `GET`
 * requests.]]></haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="openfl.net.URLRequestMethod" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLRequestMethod.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<haxe_doc>* The URLRequestMethod class provides values that specify whether the
 * URLRequest object should use the `POST` method or the
 * `GET` method when sending data to a server.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.net._URLRequestMethod.URLRequestMethod_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLRequestMethod.hx" private="1" module="openfl.net.URLRequestMethod" extern="1">
	<DELETE public="1" get="inline" set="null" expr="cast &quot;DELETE&quot;" line="17" static="1">
		<x path="openfl.net.URLRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "DELETE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
			<m n=":require"><e>flash10_1</e></m>
		</meta>
		<haxe_doc>* Specifies that the URLRequest object is a `DELETE`.</haxe_doc>
	</DELETE>
	<GET public="1" get="inline" set="null" expr="cast &quot;GET&quot;" line="22" static="1">
		<x path="openfl.net.URLRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "GET"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the URLRequest object is a `GET`.</haxe_doc>
	</GET>
	<HEAD public="1" get="inline" set="null" expr="cast &quot;HEAD&quot;" line="30" static="1">
		<x path="openfl.net.URLRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "HEAD"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
			<m n=":require"><e>flash10_1</e></m>
		</meta>
		<haxe_doc>* Specifies that the URLRequest object is a `HEAD`.</haxe_doc>
	</HEAD>
	<OPTIONS public="1" get="inline" set="null" expr="cast &quot;OPTIONS&quot;" line="38" static="1">
		<x path="openfl.net.URLRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "OPTIONS"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
			<m n=":require"><e>flash10_1</e></m>
		</meta>
		<haxe_doc>* Specifies that the URLRequest object is `OPTIONS`.</haxe_doc>
	</OPTIONS>
	<POST public="1" get="inline" set="null" expr="cast &quot;POST&quot;" line="48" static="1">
		<x path="openfl.net.URLRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "POST"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the URLRequest object is a `POST`.
	 *
	 * _Note:_ For content running in Adobe AIR, when using the
	 * `navigateToURL()` function, the runtime treats a URLRequest
	 * that uses the POST method(one that has its `method` property
	 * set to `URLRequestMethod.POST`) as using the GET method.</haxe_doc>
	</POST>
	<PUT public="1" get="inline" set="null" expr="cast &quot;PUT&quot;" line="56" static="1">
		<x path="openfl.net.URLRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "PUT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
			<m n=":require"><e>flash10_1</e></m>
		</meta>
		<haxe_doc>* Specifies that the URLRequest object is a `PUT`.</haxe_doc>
	</PUT>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.net._URLRequestMethod.URLRequestMethod_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLRequestMethod.hx" private="1" module="openfl.net.URLRequestMethod" extern="1">
		<DELETE public="1" get="inline" set="null" expr="cast &quot;DELETE&quot;" line="17" static="1">
			<x path="openfl.net.URLRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "DELETE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
			<haxe_doc>* Specifies that the URLRequest object is a `DELETE`.</haxe_doc>
		</DELETE>
		<GET public="1" get="inline" set="null" expr="cast &quot;GET&quot;" line="22" static="1">
			<x path="openfl.net.URLRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "GET"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the URLRequest object is a `GET`.</haxe_doc>
		</GET>
		<HEAD public="1" get="inline" set="null" expr="cast &quot;HEAD&quot;" line="30" static="1">
			<x path="openfl.net.URLRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "HEAD"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
			<haxe_doc>* Specifies that the URLRequest object is a `HEAD`.</haxe_doc>
		</HEAD>
		<OPTIONS public="1" get="inline" set="null" expr="cast &quot;OPTIONS&quot;" line="38" static="1">
			<x path="openfl.net.URLRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "OPTIONS"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
			<haxe_doc>* Specifies that the URLRequest object is `OPTIONS`.</haxe_doc>
		</OPTIONS>
		<POST public="1" get="inline" set="null" expr="cast &quot;POST&quot;" line="48" static="1">
			<x path="openfl.net.URLRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "POST"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the URLRequest object is a `POST`.
	 *
	 * _Note:_ For content running in Adobe AIR, when using the
	 * `navigateToURL()` function, the runtime treats a URLRequest
	 * that uses the POST method(one that has its `method` property
	 * set to `URLRequestMethod.POST`) as using the GET method.</haxe_doc>
		</POST>
		<PUT public="1" get="inline" set="null" expr="cast &quot;PUT&quot;" line="56" static="1">
			<x path="openfl.net.URLRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "PUT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
			<haxe_doc>* Specifies that the URLRequest object is a `PUT`.</haxe_doc>
		</PUT>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.net.URLStream" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLStream.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<implements path="openfl.utils.IDataInput"/>
		<bytesAvailable public="1" get="accessor" set="null"><x path="UInt"/></bytesAvailable>
		<connected public="1" set="null"><x path="Bool"/></connected>
		<endian public="1" get="accessor" set="accessor"><x path="openfl.utils.Endian"/></endian>
		<objectEncoding public="1"><x path="UInt"/></objectEncoding>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<load public="1" set="method"><f a="request">
	<c path="openfl.net.URLRequest"/>
	<x path="Void"/>
</f></load>
		<readBoolean public="1" set="method"><f a=""><x path="Bool"/></f></readBoolean>
		<readByte public="1" set="method"><f a=""><x path="Int"/></f></readByte>
		<readBytes public="1" set="method">
			<f a="bytes:?offset:?length" v=":0:0">
				<x path="openfl.utils.ByteArray"/>
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ length : 0, offset : 0 }</e></m></meta>
		</readBytes>
		<readDouble public="1" set="method"><f a=""><x path="Float"/></f></readDouble>
		<readFloat public="1" set="method"><f a=""><x path="Float"/></f></readFloat>
		<readInt public="1" set="method"><f a=""><x path="Int"/></f></readInt>
		<readMultiByte public="1" set="method"><f a="length:charSet">
	<x path="UInt"/>
	<c path="String"/>
	<c path="String"/>
</f></readMultiByte>
		<readObject public="1" set="method"><f a=""><d/></f></readObject>
		<readShort public="1" set="method"><f a=""><x path="Int"/></f></readShort>
		<readUTF public="1" set="method"><f a=""><c path="String"/></f></readUTF>
		<readUTFBytes public="1" set="method"><f a="length">
	<x path="UInt"/>
	<c path="String"/>
</f></readUTFBytes>
		<readUnsignedByte public="1" set="method"><f a=""><x path="UInt"/></f></readUnsignedByte>
		<readUnsignedInt public="1" set="method"><f a=""><x path="UInt"/></f></readUnsignedInt>
		<readUnsignedShort public="1" set="method"><f a=""><x path="UInt"/></f></readUnsignedShort>
		<get_bytesAvailable set="method">
			<f a=""><x path="UInt"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</get_bytesAvailable>
		<get_endian set="method">
			<f a=""><x path="openfl.utils.Endian"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</get_endian>
		<set_endian set="method">
			<f a="value">
				<x path="openfl.utils.Endian"/>
				<x path="openfl.utils.Endian"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</set_endian>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.net.URLVariables" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/URLVariables.hx" extern="1">
		<decode public="1" set="method">
			<f a="source">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Converts the variable string to properties of the specified URLVariables
	 * object.
	 *
	 * This method is used internally by the URLVariables events. Most users
	 * do not need to call this method directly.
	 * 
	 * @param source A URL-encoded query string containing name/value pairs.
	 * @throws Error The source parameter must be a URL-encoded query string
	 *               containing name/value pairs.</haxe_doc>
		</decode>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>* Returns a string containing all enumerable variables, in the MIME content
	 * encoding _application/x-www-form-urlencoded_.
	 * 
	 * @return A URL-encoded string containing name/value pairs.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="?source" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ source : null }</e></m></meta>
			<haxe_doc>* Creates a new URLVariables object. You pass URLVariables objects to the
	 * `data` property of URLRequest objects.
	 *
	 * If you call the URLVariables constructor with a string, the
	 * `decode()` method is automatically called to convert the string
	 * to properties of the URLVariables object.
	 * 
	 * @param source A URL-encoded string containing name/value pairs.</haxe_doc>
		</new>
		<haxe_doc>* The URLVariables class allows you to transfer variables between an
 * application and a server. Use URLVariables objects with methods of the
 * URLLoader class, with the `data` property of the URLRequest
 * class, and with flash.net package functions.</haxe_doc>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="openfl.net.XMLSocket" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/net/XMLSocket.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<connected public="1" set="null"><x path="Bool"/></connected>
		<timeout public="1"><x path="Int"/></timeout>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<connect public="1" set="method"><f a="host:port">
	<c path="String"/>
	<x path="Int"/>
	<x path="Void"/>
</f></connect>
		<send public="1" set="method"><f a="object">
	<d/>
	<x path="Void"/>
</f></send>
		<new public="1" set="method">
			<f a="?host:?port" v="null:80">
				<c path="String"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ port : 80, host : null }</e></m></meta>
		</new>
	</class>
	<class path="openfl.profiler.Telemetry" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/profiler/Telemetry.hx" extern="1">
		<connected public="1" set="null" static="1"><x path="Bool"/></connected>
		<spanMarker public="1" set="null" static="1"><x path="Float"/></spanMarker>
		<registerCommandHandler public="1" set="method" static="1"><f a="commandName:handler">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
</f></registerCommandHandler>
		<sendMetric public="1" set="method" static="1"><f a="metric:value">
	<c path="String"/>
	<d/>
	<x path="Void"/>
</f></sendMetric>
		<sendSpanMetric public="1" set="method" static="1"><f a="metric:startSpanMarker:value">
	<c path="String"/>
	<x path="Float"/>
	<d/>
	<x path="Void"/>
</f></sendSpanMetric>
		<unregisterCommandHandler public="1" set="method" static="1"><f a="commandName">
	<c path="String"/>
	<x path="Bool"/>
</f></unregisterCommandHandler>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.sensors.Accelerometer" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/sensors/Accelerometer.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<isSupported public="1" get="null" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* The `isSupported` property is set to `true` if the
	 * accelerometer sensor is available on the device, otherwise it is set to
	 * `false`.</haxe_doc>
		</isSupported>
		<muted public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the user has denied access to the accelerometer
	 * (`true`) or allowed access(`false`). When this
	 * value changes, a `status` event is dispatched.</haxe_doc>
		</muted>
		<setRequestedUpdateInterval public="1" set="method">
			<f a="interval">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* The `setRequestedUpdateInterval` method is used to set the
	 * desired time interval for updates. The time interval is measured in
	 * milliseconds. The update interval is only used as a hint to conserve the
	 * battery power. The actual time between acceleration updates may be greater
	 * or lesser than this value. Any change in the update interval affects all
	 * registered listeners. You can use the Accelerometer class without calling
	 * the `setRequestedUpdateInterval()` method. In this case, the
	 * application receives updates based on the device's default interval.
	 * 
	 * @param interval The requested update interval. If `interval` is
	 *                 set to 0, then the minimum supported update interval is
	 *                 used.
	 * @throws ArgumentError The specified `interval` is less than
	 *                       zero.</haxe_doc>
		</setRequestedUpdateInterval>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Creates a new Accelerometer instance.</haxe_doc>
		</new>
		<haxe_doc>* The Accelerometer class dispatches events based on activity detected by the
 * device's motion sensor. This data represents the device's location or
 * movement along a 3-dimensional axis. When the device moves, the sensor
 * detects this movement and returns acceleration data. The Accelerometer
 * class provides methods to query whether or not accelerometer is supported,
 * and also to set the rate at which acceleration events are dispatched.
 *
 * **Note:** Use the `Accelerometer.isSupported` property to
 * test the runtime environment for the ability to use this feature. While the
 * Accelerometer class and its members are accessible to the Runtime Versions
 * listed for each API entry, the current environment for the runtime
 * determines the availability of this feature. For example, you can compile
 * code using the Accelerometer class properties for Flash Player 10.1, but
 * you need to use the `Accelerometer.isSupported` property to test
 * for the availability of the Accelerometer feature in the current deployment
 * environment for the Flash Player runtime. If
 * `Accelerometer.isSupported` is `true` at runtime,
 * then Accelerometer support currently exists.
 *
 * _AIR profile support:_ This feature is supported only on mobile
 * devices. It is not supported on desktop or AIR for TV devices. See
 * [AIR Profile Support](http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html)
 * for more information regarding API support across
 * multiple profiles. 
 * 
 * @event status Dispatched when an accelerometer changes its status.
 *
 *               **Note:** On some devices, the accelerometer is always
 *               available. On such devices, an Accelerometer object never
 *               dispatches a `status` event.
 * @event update The `update` event is dispatched in response to
 *               updates from the accelerometer sensor. The event is
 *               dispatched in the following circumstances:
 *
 *               
 *               
 *                * When a new listener function is attached through
 *               `addEventListener()`, this event is delivered once
 *               to all the registered listeners for providing the current
 *               value of the accelerometer.
 *                * Whenever accelerometer updates are obtained from the
 *               platform at device determined intervals.
 *                * Whenever the application misses a change in the
 *               accelerometer(for example, the runtime is resuming after
 *               being idle).
 *               
 *</haxe_doc>
	</class>
	<class path="openfl.system.ApplicationDomain" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/system/ApplicationDomain.hx" extern="1">
		<MIN_DOMAIN_MEMORY_LENGTH public="1" set="null" static="1">
			<x path="UInt"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</MIN_DOMAIN_MEMORY_LENGTH>
		<currentDomain public="1" set="null" static="1"><c path="openfl.system.ApplicationDomain"/></currentDomain>
		<domainMemory public="1">
			<x path="openfl.utils.ByteArray"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10</e></m>
			</meta>
		</domainMemory>
		<parentDomain public="1" set="null"><c path="openfl.system.ApplicationDomain"/></parentDomain>
		<getDefinition public="1" set="method"><f a="name">
	<c path="String"/>
	<d/>
</f></getDefinition>
		<getQualifiedDefinitionNames public="1" set="method">
			<f a=""><c path="flash.Vector"><c path="String"/></c></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_3</e></m>
			</meta>
		</getQualifiedDefinitionNames>
		<hasDefinition public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasDefinition>
		<new public="1" set="method">
			<f a="?parentDomain" v="null">
				<c path="openfl.system.ApplicationDomain"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ parentDomain : null }</e></m></meta>
		</new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.system.Capabilities" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/system/Capabilities.hx" extern="1">
		<avHardwareDisable public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether access to the user's camera and microphone has been
	 * administratively prohibited(`true`) or allowed
	 * (`false`). The server string is `AVD`.
	 *
	 * For content in Adobe AIR™, this property applies only to content in
	 * security sandboxes other than the application security sandbox. Content in
	 * the application security sandbox can always access the user's camera and
	 * microphone.</haxe_doc>
		</avHardwareDisable>
		<cpuArchitecture public="1" set="null" static="1">
			<c path="String"/>
			<haxe_doc>* Specifies the current CPU architecture. The `cpuArchitecture`
	 * property can return the following strings: "`PowerPC`",
	 * "`x86`", "`SPARC`", and "`ARM`". The
	 * server string is `ARCH`.</haxe_doc>
		</cpuArchitecture>
		<hasAccessibility public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system supports(`true`) or does not
	 * support(`false`) communication with accessibility aids. The
	 * server string is `ACC`.</haxe_doc>
		</hasAccessibility>
		<hasAudio public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system has audio capabilities. This property is
	 * always `true`. The server string is `A`.</haxe_doc>
		</hasAudio>
		<hasAudioEncoder public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system can(`true`) or cannot
	 * (`false`) encode an audio stream, such as that coming from a
	 * microphone. The server string is `AE`.</haxe_doc>
		</hasAudioEncoder>
		<hasEmbeddedVideo public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system supports(`true`) or does not
	 * support(`false`) embedded video. The server string is
	 * `EV`.</haxe_doc>
		</hasEmbeddedVideo>
		<hasIME public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system does(`true`) or does not
	 * (`false`) have an input method editor(IME) installed. The
	 * server string is `IME`.</haxe_doc>
		</hasIME>
		<hasMP3 public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system does(`true`) or does not
	 * (`false`) have an MP3 decoder. The server string is
	 * `MP3`.</haxe_doc>
		</hasMP3>
		<hasPrinting public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system does(`true`) or does not
	 * (`false`) support printing. The server string is
	 * `PR`.</haxe_doc>
		</hasPrinting>
		<hasScreenBroadcast public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system does(`true`) or does not
	 * (`false`) support the development of screen broadcast
	 * applications to be run through Flash Media Server. The server string is
	 * `SB`.</haxe_doc>
		</hasScreenBroadcast>
		<hasScreenPlayback public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system does(`true`) or does not
	 * (`false`) support the playback of screen broadcast applications
	 * that are being run through Flash Media Server. The server string is
	 * `SP`.</haxe_doc>
		</hasScreenPlayback>
		<hasStreamingAudio public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system can(`true`) or cannot
	 * (`false`) play streaming audio. The server string is
	 * `SA`.</haxe_doc>
		</hasStreamingAudio>
		<hasStreamingVideo public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system can(`true`) or cannot
	 * (`false`) play streaming video. The server string is
	 * `SV`.</haxe_doc>
		</hasStreamingVideo>
		<hasTLS public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system supports native SSL sockets through
	 * NetConnection(`true`) or does not(`false`). The
	 * server string is `TLS`.</haxe_doc>
		</hasTLS>
		<hasVideoEncoder public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system can(`true`) or cannot
	 * (`false`) encode a video stream, such as that coming from a web
	 * camera. The server string is `VE`.</haxe_doc>
		</hasVideoEncoder>
		<isDebugger public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system is a special debugging version
	 * (`true`) or an officially released version
	 * (`false`). The server string is `DEB`. This property
	 * is set to `true` when running in the debug version of Flash
	 * Player or the AIR Debug Launcher(ADL).</haxe_doc>
		</isDebugger>
		<isEmbeddedInAcrobat public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the Flash runtime is embedded in a PDF file that is open
	 * in Acrobat 9.0 or higher(`true`) or not(`false`).</haxe_doc>
		</isEmbeddedInAcrobat>
		<language public="1" get="null" set="null" static="1">
			<c path="String"/>
			<haxe_doc>* Specifies the language code of the system on which the content is running.
	 * The language is specified as a lowercase two-letter language code from ISO
	 * 639-1. For Chinese, an additional uppercase two-letter country code from
	 * ISO 3166 distinguishes between Simplified and Traditional Chinese. The
	 * languages codes are based on the English names of the language: for
	 * example, `hu` specifies Hungarian.
	 *
	 * On English systems, this property returns only the language code
	 * (`en`), not the country code. On Microsoft Windows systems,
	 * this property returns the user interface(UI) language, which refers to
	 * the language used for all menus, dialog boxes, error messages, and help
	 * files. The following table lists the possible values: 
	 *
	 * _Note:_ The value of `Capabilities.language` property
	 * is limited to the possible values on this list. Because of this
	 * limitation, Adobe AIR applications should use the first element in the
	 * `Capabilities.languages` array to determine the primary user
	 * interface language for the system. 
	 *
	 * The server string is `L`.</haxe_doc>
		</language>
		<localFileReadDisable public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether read access to the user's hard disk has been
	 * administratively prohibited(`true`) or allowed
	 * (`false`). For content in Adobe AIR, this property applies only
	 * to content in security sandboxes other than the application security
	 * sandbox.(Content in the application security sandbox can always read from
	 * the file system.) If this property is `true`, Flash Player
	 * cannot read files(including the first file that Flash Player launches
	 * with) from the user's hard disk. If this property is `true`,
	 * AIR content outside of the application security sandbox cannot read files
	 * from the user's hard disk. For example, attempts to read a file on the
	 * user's hard disk using load methods will fail if this property is set to
	 * `true`.
	 *
	 * Reading runtime shared libraries is also blocked if this property is
	 * set to `true`, but reading local shared objects is allowed
	 * without regard to the value of this property.
	 *
	 * The server string is `LFD`.</haxe_doc>
		</localFileReadDisable>
		<manufacturer public="1" set="null" static="1">
			<c path="String"/>
			<haxe_doc>* Specifies the manufacturer of the running version of Flash Player or the
	 * AIR runtime, in the format `"Adobe`
	 * `_OSName_"`. The value for `_OSName_`
	 * could be `"Windows"`, `"Macintosh"`,
	 * `"Linux"`, or another operating system name. The server string
	 * is `M`.
	 *
	 * Do _not_ use `Capabilities.manufacturer` to determine a
	 * capability based on the operating system if a more specific capability
	 * property exists. Basing a capability on the operating system is a bad
	 * idea, since it can lead to problems if an application does not consider
	 * all potential target operating systems. Instead, use the property
	 * corresponding to the capability for which you are testing. For more
	 * information, see the Capabilities class description.</haxe_doc>
		</manufacturer>
		<maxLevelIDC public="1" set="null" static="1">
			<x path="Int"/>
			<haxe_doc>* Retrieves the highest H.264 Level IDC that the client hardware supports.
	 * Media run at this level are guaranteed to run; however, media run at the
	 * highest level might not run with the highest quality. This property is
	 * useful for servers trying to target a client's capabilities. Using this
	 * property, a server can determine the level of video to send to the client.
	 *
	 *
	 * The server string is `ML`.</haxe_doc>
		</maxLevelIDC>
		<os public="1" get="null" set="null" static="1">
			<c path="String"/>
			<haxe_doc>* Specifies the current operating system. The `os` property can
	 * return the following strings:
	 *
	 * The server string is `OS`.
	 *
	 * Do _not_ use `Capabilities.os` to determine a
	 * capability based on the operating system if a more specific capability
	 * property exists. Basing a capability on the operating system is a bad
	 * idea, since it can lead to problems if an application does not consider
	 * all potential target operating systems. Instead, use the property
	 * corresponding to the capability for which you are testing. For more
	 * information, see the Capabilities class description.</haxe_doc>
		</os>
		<pixelAspectRatio public="1" get="null" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>* Specifies the pixel aspect ratio of the screen. The server string is
	 * `AR`.</haxe_doc>
		</pixelAspectRatio>
		<playerType public="1" set="null" static="1">
			<c path="String"/>
			<haxe_doc><![CDATA[* Specifies the type of runtime environment. This property can have one of
	 * the following values:
	 * 
	 *  * `"ActiveX"` for the Flash Player ActiveX control used by
	 * Microsoft Internet Explorer
	 *  * `"Desktop"` for the Adobe AIR runtime(except for SWF
	 * content loaded by an HTML page, which has
	 * `Capabilities.playerType` set to `"PlugIn"`)
	 *  * `"External"` for the external Flash Player<ph
	 * outputclass="flashonly"> or in test mode
	 *  * `"PlugIn"` for the Flash Player browser plug-in(and for
	 * SWF content loaded by an HTML page in an AIR application)
	 *  * `"StandAlone"` for the stand-alone Flash Player
	 * 
	 *
	 * The server string is `PT`.]]></haxe_doc>
		</playerType>
		<screenColor public="1" set="null" static="1">
			<c path="String"/>
			<haxe_doc>* Specifies the screen color. This property can have the value
	 * `"color"`, `"gray"`(for grayscale), or
	 * `"bw"`(for black and white). The server string is
	 * `COL`.</haxe_doc>
		</screenColor>
		<screenDPI public="1" get="null" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>* Specifies the dots-per-inch(dpi) resolution of the screen, in pixels. The
	 * server string is `DP`.</haxe_doc>
		</screenDPI>
		<screenResolutionX public="1" get="null" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>* Specifies the maximum horizontal resolution of the screen. The server
	 * string is `R`(which returns both the width and height of the
	 * screen). This property does not update with a user's screen resolution and
	 * instead only indicates the resolution at the time Flash Player or an Adobe
	 * AIR application started. Also, the value only specifies the primary
	 * screen.</haxe_doc>
		</screenResolutionX>
		<screenResolutionY public="1" get="null" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>* Specifies the maximum vertical resolution of the screen. The server string
	 * is `R`(which returns both the width and height of the screen).
	 * This property does not update with a user's screen resolution and instead
	 * only indicates the resolution at the time Flash Player or an Adobe AIR
	 * application started. Also, the value only specifies the primary screen.</haxe_doc>
		</screenResolutionY>
		<serverString public="1" set="null" static="1">
			<c path="String"/>
			<haxe_doc><![CDATA[* A URL-encoded string that specifies values for each Capabilities property.
	 *
	 *
	 * The following example shows a URL-encoded string:
	 * `A=t&SA=t&SV=t&EV=t&MP3=t&AE=t&VE=t&ACC=f&PR=t&SP=t&
	 * SB=f&DEB=t&V=WIN%208%2C5%2C0%2C208&M=Adobe%20Windows&
	 * R=1600x1200&DP=72&COL=color&AR=1.0&OS=Windows%20XP&
	 * L=en&PT=External&AVD=f&LFD=f&WD=f`]]></haxe_doc>
		</serverString>
		<supports32BitProcesses public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system supports running 32-bit processes. The server
	 * string is `PR32`.</haxe_doc>
		</supports32BitProcesses>
		<supports64BitProcesses public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the system supports running 64-bit processes. The server
	 * string is `PR64`.</haxe_doc>
		</supports64BitProcesses>
		<touchscreenType public="1" set="null" static="1">
			<x path="openfl.system.TouchscreenType"/>
			<haxe_doc>* Specifies the type of touchscreen supported, if any. Values are defined in
	 * the flash.system.TouchscreenType class.</haxe_doc>
		</touchscreenType>
		<version public="1" get="null" set="null" static="1">
			<c path="String"/>
			<haxe_doc><![CDATA[* Specifies the Flash Player or Adobe<sup>®</sup> AIR<sup>®</sup> platform
	 * and version information. The format of the version number is: _platform
	 * majorVersion,minorVersion,buildNumber,internalBuildNumber_. Possible
	 * values for _platform_ are `"WIN"`, ` `"MAC"`,
	 * `"LNX"`, and `"AND"`. Here are some examples of
	 * version information: `WIN 9,0,0,0 // Flash
	 * Player 9 for Windows MAC 7,0,25,0 // Flash Player 7 for Macintosh LNX
	 * 9,0,115,0 // Flash Player 9 for Linux AND 10,2,150,0 // Flash Player 10
	 * for Android`
	 *
	 * Do _not_ use `Capabilities.version` to determine a
	 * capability based on the operating system if a more specific capability
	 * property exists. Basing a capability on the operating system is a bad
	 * idea, since it can lead to problems if an application does not consider
	 * all potential target operating systems. Instead, use the property
	 * corresponding to the capability for which you are testing. For more
	 * information, see the Capabilities class description.
	 *
	 * The server string is `V`.]]></haxe_doc>
		</version>
		<hasMultiChannelAudio public="1" set="method" static="1"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasMultiChannelAudio>
		<haxe_doc>* The Capabilities class provides properties that describe the system and
 * runtime that are hosting the application. For example, a mobile phone's
 * screen might be 100 square pixels, black and white, whereas a PC screen
 * might be 1000 square pixels, color. By using the Capabilities class to
 * determine what capabilities the client has, you can provide appropriate
 * content to as many users as possible. When you know the device's
 * capabilities, you can tell the server to send the appropriate SWF files or
 * tell the SWF file to alter its presentation.
 *
 * However, some capabilities of Adobe AIR are not listed as properties in
 * the Capabilities class. They are properties of other classes:
 * 
 *
 * There is also a `WD` server string that specifies whether
 * windowless mode is disabled. Windowless mode can be disabled in Flash
 * Player due to incompatibility with the web browser or to a user setting in
 * the mms.cfg file. There is no corresponding Capabilities property.
 *
 * All properties of the Capabilities class are read-only.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="openfl.system.LoaderContext" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/system/LoaderContext.hx" extern="1">
		<allowCodeImport public="1"><x path="Bool"/></allowCodeImport>
		<allowLoadBytesCodeExecution public="1"><x path="Bool"/></allowLoadBytesCodeExecution>
		<applicationDomain public="1"><c path="openfl.system.ApplicationDomain"/></applicationDomain>
		<checkPolicyFile public="1"><x path="Bool"/></checkPolicyFile>
		<imageDecodingPolicy public="1">
			<e path="flash.system.ImageDecodingPolicy"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</imageDecodingPolicy>
		<parameters public="1">
			<d/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</parameters>
		<requestedContentParent public="1">
			<c path="openfl.display.DisplayObjectContainer"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</requestedContentParent>
		<securityDomain public="1"><c path="openfl.system.SecurityDomain"/></securityDomain>
		<new public="1" set="method">
			<f a="?checkPolicyFile:?applicationDomain:?securityDomain" v="false:null:null">
				<x path="Bool"/>
				<c path="openfl.system.ApplicationDomain"/>
				<c path="openfl.system.SecurityDomain"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ securityDomain : null, applicationDomain : null, checkPolicyFile : false }</e></m></meta>
		</new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="openfl.system.Security" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/system/Security.hx" extern="1">
		<APPLICATION public="1" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</APPLICATION>
		<LOCAL_TRUSTED public="1" get="inline" set="null" expr="&quot;localTrusted&quot;" line="11" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"localTrusted"</e></m></meta>
		</LOCAL_TRUSTED>
		<LOCAL_WITH_FILE public="1" get="inline" set="null" expr="&quot;localWithFile&quot;" line="12" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"localWithFile"</e></m></meta>
		</LOCAL_WITH_FILE>
		<LOCAL_WITH_NETWORK public="1" get="inline" set="null" expr="&quot;localWithNetwork&quot;" line="13" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"localWithNetwork"</e></m></meta>
		</LOCAL_WITH_NETWORK>
		<REMOTE public="1" get="inline" set="null" expr="&quot;remote&quot;" line="14" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"remote"</e></m></meta>
		</REMOTE>
		<disableAVM1Loading public="1" static="1"><x path="Bool"/></disableAVM1Loading>
		<exactSettings public="1" static="1"><x path="Bool"/></exactSettings>
		<pageDomain public="1" set="null" static="1">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</pageDomain>
		<sandboxType public="1" set="null" static="1"><c path="String"/></sandboxType>
		<allowDomain public="1" set="method" static="1"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></allowDomain>
		<allowInsecureDomain public="1" set="method" static="1"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></allowInsecureDomain>
		<duplicateSandboxBridgeInputArguments public="1" set="method" static="1">
			<f a="toplevel:args">
				<d/>
				<c path="Array"><d/></c>
				<c path="Array"><d/></c>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</duplicateSandboxBridgeInputArguments>
		<duplicateSandboxBridgeOutputArgument public="1" set="method" static="1">
			<f a="toplevel:arg">
				<d/>
				<d/>
				<d/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</duplicateSandboxBridgeOutputArgument>
		<loadPolicyFile public="1" set="method" static="1"><f a="url">
	<c path="String"/>
	<x path="Void"/>
</f></loadPolicyFile>
		<showSettings public="1" set="method" static="1">
			<f a="?panel" v="null">
				<e path="flash.system.SecurityPanel"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ panel : null }</e></m>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</showSettings>
	</class>
	<class path="openfl.system.SecurityDomain" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/system/SecurityDomain.hx" extern="1">
		<currentDomain public="1" set="null" static="1"><c path="openfl.system.SecurityDomain"/></currentDomain>
		<domainID public="1" set="null">
			<c path="String"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11_3</e></m>
			</meta>
		</domainID>
		<new set="method"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.system.System" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/system/System.hx" extern="1">
		<freeMemory public="1" set="null" static="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</freeMemory>
		<ime public="1" set="null" static="1">
			<c path="flash.system.IME"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</ime>
		<privateMemory public="1" set="null" static="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</privateMemory>
		<processCPUUsage public="1" set="null" static="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</processCPUUsage>
		<totalMemory public="1" get="null" set="null" static="1">
			<x path="Int"/>
			<haxe_doc>* The amount of memory(in bytes) currently in use that has been directly
	 * allocated by Flash Player or AIR.
	 *
	 * This property does not return _all_ memory used by an Adobe AIR
	 * application or by the application(such as a browser) containing Flash
	 * Player content. The browser or operating system may consume other memory.
	 * The `System.privateMemory` property reflects _all_ memory
	 * used by an application.
	 *
	 * If the amount of memory allocated is greater than the maximum value for
	 * a uint object(`uint.MAX_VALUE`, or 4,294,967,295), then this
	 * property is set to 0. The `System.totalMemoryNumber` property
	 * allows larger values.</haxe_doc>
		</totalMemory>
		<totalMemoryNumber public="1" set="null" static="1">
			<x path="Float"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</totalMemoryNumber>
		<useCodePage public="1" static="1">
			<x path="Bool"/>
			<haxe_doc>* A Boolean value that determines which code page to use to interpret
	 * external text files. When the property is set to `false`,
	 * external text files are interpretted as Unicode.(These files must be
	 * encoded as Unicode when you save them.) When the property is set to
	 * `true`, external text files are interpretted using the
	 * traditional code page of the operating system running the application. The
	 * default value of `useCodePage` is `false`.
	 *
	 * Text that you load as an external file(using
	 * `Loader.load()`, the URLLoader class or URLStream) must have
	 * been saved as Unicode in order for the application to recognize it as
	 * Unicode. To encode external files as Unicode, save the files in an
	 * application that supports Unicode, such as Notepad on Windows.
	 *
	 * If you load external text files that are not Unicode-encoded, set
	 * `useCodePage` to `true`. Add the following as the
	 * first line of code of the file that is loading the data(for Flash
	 * Professional, add it to the first frame):
	 * `System.useCodePage = true;`
	 *
	 * When this code is present, the application interprets external text
	 * using the traditional code page of the operating system. For example, this
	 * is generally CP1252 for an English Windows operating system and Shift-JIS
	 * for a Japanese operating system.
	 *
	 * If you set `useCodePage` to `true`, Flash Player
	 * 6 and later treat text as Flash Player 5 does.(Flash Player 5 treated all
	 * text as if it were in the traditional code page of the operating system
	 * running the player.)
	 *
	 * If you set `useCodePage` to `true`, remember that
	 * the traditional code page of the operating system running the application
	 * must include the characters used in your external text file in order to
	 * display your text. For example, if you load an external text file that
	 * contains Chinese characters, those characters cannot display on a system
	 * that uses the CP1252 code page because that code page does not include
	 * Chinese characters.
	 *
	 * To ensure that users on all platforms can view external text files used
	 * in your application, you should encode all external text files as Unicode
	 * and leave `useCodePage` set to `false`. This way,
	 * the application(Flash Player 6 and later, or AIR) interprets the text as
	 * Unicode.</haxe_doc>
		</useCodePage>
		<vmVersion public="1" get="null" set="null" static="1"><c path="String"/></vmVersion>
		<disposeXML public="1" set="method" static="1">
			<f a="node">
				<c path="flash.xml.XML"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_1</e></m>
			</meta>
		</disposeXML>
		<exit public="1" set="method" static="1">
			<f a="code">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Closes Flash Player.
	 *
	 * _For the standalone Flash Player debugger version only._
	 *
	 * AIR applications should call the `NativeApplication.exit()`
	 * method to exit the application.
	 * 
	 * @param code A value to pass to the operating system. Typically, if the
	 *             process exits normally, the value is 0.</haxe_doc>
		</exit>
		<gc public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Forces the garbage collection process.
	 *
	 * _For the Flash Player debugger version and AIR applications only._
	 * In an AIR application, the `System.gc()` method is only enabled
	 * in content running in the AIR Debug Launcher(ADL) or, in an installed
	 * applcation, in content in the application security sandbox.
	 *</haxe_doc>
		</gc>
		<pause public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Pauses Flash Player or the AIR Debug Launcher(ADL). After calling this
	 * method, nothing in the application continues except the delivery of Socket
	 * events.
	 *
	 * _For the Flash Player debugger version or the AIR Debug Launcher
	 * (ADL) only._
	 *</haxe_doc>
		</pause>
		<pauseForGCIfCollectionImminent public="1" set="method" static="1">
			<f a="?imminence" v="0.75">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ imminence : 0.75 }</e></m>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</pauseForGCIfCollectionImminent>
		<resume public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Resumes the application after calling `System.pause()`.
	 *
	 * _For the Flash Player debugger version or the AIR Debug Launcher
	 * (ADL) only._
	 *</haxe_doc>
		</resume>
		<setClipboard public="1" set="method" static="1">
			<f a="string">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Replaces the contents of the Clipboard with a specified text string. This
	 * method works from any security context when called as a result of a user
	 * event(such as a keyboard or input device event handler).
	 *
	 * This method is provided for SWF content running in Flash Player 9. It
	 * allows only adding String content to the Clipboard.
	 *
	 * Flash Player 10 content and content in the application security sandbox
	 * in an AIR application can call the `Clipboard.setData()`
	 * method.
	 * 
	 * @param string A plain-text string of characters to put on the system
	 *               Clipboard, replacing its current contents(if any).</haxe_doc>
		</setClipboard>
		<haxe_doc>* The System class contains properties related to local settings and
 * operations. Among these are settings for camers and microphones, operations
 * with shared objects and the use of the Clipboard.
 *
 * Additional properties and methods are in other classes within the
 * flash.system package: the Capabilities class, the IME class, and the
 * Security class.
 *
 * This class contains only static methods and properties. You cannot
 * create new instances of the System class.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="openfl.system.TouchscreenType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/system/TouchscreenType.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.system._TouchscreenType.TouchscreenType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/system/TouchscreenType.hx" private="1" module="openfl.system.TouchscreenType">
	<FINGER public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.system.TouchscreenType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FINGER>
	<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.system.TouchscreenType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<STYLUS public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.system.TouchscreenType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STYLUS>
	<fromString set="method" line="10" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.system.TouchscreenType"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="23" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.system._TouchscreenType.TouchscreenType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/system/TouchscreenType.hx" private="1" module="openfl.system.TouchscreenType">
		<FINGER public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.system.TouchscreenType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FINGER>
		<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.system.TouchscreenType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<STYLUS public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.system.TouchscreenType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STYLUS>
		<fromString set="method" line="10" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.system.TouchscreenType"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="23" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.text.AntiAliasType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/AntiAliasType.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The AntiAliasType class provides values for anti-aliasing in the
 * flash.text.TextField class.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.text._AntiAliasType.AntiAliasType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/AntiAliasType.hx" private="1" module="openfl.text.AntiAliasType">
	<ADVANCED public="1" get="inline" set="null" expr="cast 0" line="19" static="1">
		<x path="openfl.text.AntiAliasType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing
	 * allows font faces to be rendered at very high quality at small sizes. It
	 * is best used with applications that have a lot of small text. Advanced
	 * anti-aliasing is not recommended for very large fonts(larger than 48
	 * points). This constant is used for the `antiAliasType` property
	 * in the TextField class. Use the syntax
	 * `AntiAliasType.ADVANCED`.</haxe_doc>
	</ADVANCED>
	<NORMAL public="1" get="inline" set="null" expr="cast 1" line="28" static="1">
		<x path="openfl.text.AntiAliasType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and
	 * earlier. This setting is recommended for applications that do not have a
	 * lot of text. This constant is used for the `antiAliasType`
	 * property in the TextField class. Use the syntax
	 * `AntiAliasType.NORMAL`.</haxe_doc>
	</NORMAL>
	<fromString set="method" line="30" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.text.AntiAliasType"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="42" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.text._AntiAliasType.AntiAliasType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/AntiAliasType.hx" private="1" module="openfl.text.AntiAliasType">
		<ADVANCED public="1" get="inline" set="null" expr="cast 0" line="19" static="1">
			<x path="openfl.text.AntiAliasType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing
	 * allows font faces to be rendered at very high quality at small sizes. It
	 * is best used with applications that have a lot of small text. Advanced
	 * anti-aliasing is not recommended for very large fonts(larger than 48
	 * points). This constant is used for the `antiAliasType` property
	 * in the TextField class. Use the syntax
	 * `AntiAliasType.ADVANCED`.</haxe_doc>
		</ADVANCED>
		<NORMAL public="1" get="inline" set="null" expr="cast 1" line="28" static="1">
			<x path="openfl.text.AntiAliasType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and
	 * earlier. This setting is recommended for applications that do not have a
	 * lot of text. This constant is used for the `antiAliasType`
	 * property in the TextField class. Use the syntax
	 * `AntiAliasType.NORMAL`.</haxe_doc>
		</NORMAL>
		<fromString set="method" line="30" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.text.AntiAliasType"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="42" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.text.Font" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/Font.hx" extern="1">
		<extends path="lime.text.Font"/>
		<enumerateFonts public="1" set="method" static="1">
			<f a="?enumerateDeviceFonts" v="false">
				<x path="Bool"/>
				<c path="Array"><c path="openfl.text.Font"/></c>
			</f>
			<meta><m n=":value"><e>{ enumerateDeviceFonts : false }</e></m></meta>
			<haxe_doc>* Specifies whether to provide a list of the currently available embedded
	 * fonts.
	 * 
	 * @param enumerateDeviceFonts Indicates whether you want to limit the list
	 *                             to only the currently available embedded
	 *                             fonts. If this is set to `true`
	 *                             then a list of all fonts, both device fonts
	 *                             and embedded fonts, is returned. If this is
	 *                             set to `false` then only a list of
	 *                             embedded fonts is returned.
	 * @return A list of available fonts as an array of Font objects.</haxe_doc>
		</enumerateFonts>
		<fromBytes public="1" set="method" static="1"><f a="bytes">
	<x path="openfl.utils.ByteArray"/>
	<c path="openfl.text.Font"/>
</f></fromBytes>
		<fromFile public="1" set="method" static="1"><f a="path">
	<c path="String"/>
	<c path="openfl.text.Font"/>
</f></fromFile>
		<registerFont public="1" set="method" static="1">
			<f a="font">
				<x path="Class"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>* Registers a font class in the global font list.
	 *</haxe_doc>
		</registerFont>
		<fontName public="1" get="null" set="null">
			<c path="String"/>
			<haxe_doc>* The name of an embedded font.</haxe_doc>
		</fontName>
		<fontStyle public="1">
			<x path="openfl.text.FontStyle"/>
			<haxe_doc>* The style of the font. This value can be any of the values defined in the
	 * FontStyle class.</haxe_doc>
		</fontStyle>
		<fontType public="1">
			<x path="openfl.text.FontType"/>
			<haxe_doc>* The type of the font. This value can be any of the constants defined in
	 * the FontType class.</haxe_doc>
		</fontType>
		<hasGlyphs public="1" set="method">
			<f a="str">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</hasGlyphs>
		<new public="1" set="method">
			<f a="?name" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ name : null }</e></m></meta>
		</new>
		<haxe_doc>* The Font class is used to manage embedded fonts in SWF files. Embedded
 * fonts are represented as a subclass of the Font class. The Font class is
 * currently useful only to find out information about embedded fonts; you
 * cannot alter a font by using this class. You cannot use the Font class to
 * load external fonts, or to create an instance of a Font object by itself.
 * Use the Font class as an abstract base class.</haxe_doc>
	</class>
	<abstract path="openfl.text.FontStyle" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/FontStyle.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The FontStyle class provides values for the TextRenderer class.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.text._FontStyle.FontStyle_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/FontStyle.hx" private="1" module="openfl.text.FontStyle">
	<BOLD public="1" get="inline" set="null" expr="cast 0" line="14" static="1">
		<x path="openfl.text.FontStyle"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the bold style of a font for the `fontStyle` parameter
	 * in the `setAdvancedAntiAliasingTable()` method. Use the syntax
	 * `FontStyle.BOLD`.</haxe_doc>
	</BOLD>
	<BOLD_ITALIC public="1" get="inline" set="null" expr="cast 1" line="21" static="1">
		<x path="openfl.text.FontStyle"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the italic style of a font for the `fontStyle`
	 * parameter in the `setAdvancedAntiAliasingTable()` method. Use
	 * the syntax `FontStyle.ITALIC`.</haxe_doc>
	</BOLD_ITALIC>
	<ITALIC public="1" get="inline" set="null" expr="cast 2" line="28" static="1">
		<x path="openfl.text.FontStyle"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the italic style of a font for the `fontStyle`
	 * parameter in the `setAdvancedAntiAliasingTable()` method. Use
	 * the syntax `FontStyle.ITALIC`.</haxe_doc>
	</ITALIC>
	<REGULAR public="1" get="inline" set="null" expr="cast 3" line="35" static="1">
		<x path="openfl.text.FontStyle"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Defines the plain style of a font for the `fontStyle` parameter
	 * in the `setAdvancedAntiAliasingTable()` method. Use the syntax
	 * `FontStyle.REGULAR`.</haxe_doc>
	</REGULAR>
	<fromString set="method" line="37" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.text.FontStyle"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="51" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.text._FontStyle.FontStyle_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/FontStyle.hx" private="1" module="openfl.text.FontStyle">
		<BOLD public="1" get="inline" set="null" expr="cast 0" line="14" static="1">
			<x path="openfl.text.FontStyle"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the bold style of a font for the `fontStyle` parameter
	 * in the `setAdvancedAntiAliasingTable()` method. Use the syntax
	 * `FontStyle.BOLD`.</haxe_doc>
		</BOLD>
		<BOLD_ITALIC public="1" get="inline" set="null" expr="cast 1" line="21" static="1">
			<x path="openfl.text.FontStyle"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the italic style of a font for the `fontStyle`
	 * parameter in the `setAdvancedAntiAliasingTable()` method. Use
	 * the syntax `FontStyle.ITALIC`.</haxe_doc>
		</BOLD_ITALIC>
		<ITALIC public="1" get="inline" set="null" expr="cast 2" line="28" static="1">
			<x path="openfl.text.FontStyle"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the italic style of a font for the `fontStyle`
	 * parameter in the `setAdvancedAntiAliasingTable()` method. Use
	 * the syntax `FontStyle.ITALIC`.</haxe_doc>
		</ITALIC>
		<REGULAR public="1" get="inline" set="null" expr="cast 3" line="35" static="1">
			<x path="openfl.text.FontStyle"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Defines the plain style of a font for the `fontStyle` parameter
	 * in the `setAdvancedAntiAliasingTable()` method. Use the syntax
	 * `FontStyle.REGULAR`.</haxe_doc>
		</REGULAR>
		<fromString set="method" line="37" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.text.FontStyle"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="51" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.text.FontType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/FontType.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The FontType class contains the enumerated constants
 * `"embedded"` and `"device"` for the
 * `fontType` property of the Font class.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.text._FontType.FontType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/FontType.hx" private="1" module="openfl.text.FontType">
	<DEVICE public="1" get="inline" set="null" expr="cast 0" line="26" static="1">
		<x path="openfl.text.FontType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Indicates that this is a device font. The SWF file renders fonts with
	 * those installed on the system.
	 *
	 * Using device fonts results in a smaller movie size, because font data
	 * is not included in the file. Device fonts are often a good choice for
	 * displaying text at small point sizes, because anti-aliased text can be
	 * blurry at small sizes. Device fonts are also a good choice for large
	 * blocks of text, such as scrolling text.
	 *
	 * Text fields that use device fonts may not be displayed the same across
	 * different systems and platforms, because they are rendered with fonts
	 * installed on the system. For the same reason, device fonts are not
	 * anti-aliased and may appear jagged at large point sizes.</haxe_doc>
	</DEVICE>
	<EMBEDDED public="1" get="inline" set="null" expr="cast 1" line="45" static="1">
		<x path="openfl.text.FontType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Indicates that this is an embedded font. Font outlines are embedded in the
	 * published SWF file.
	 *
	 * Text fields that use embedded fonts are always displayed in the chosen
	 * font, whether or not that font is installed on the playback system. Also,
	 * text fields that use embedded fonts are always anti-aliased(smoothed).
	 * You can select the amount of anti-aliasing you want by using the
	 * `TextField.antiAliasType property`.
	 *
	 * One drawback to embedded fonts is that they increase the size of the
	 * SWF file.
	 *
	 * Fonts of type `EMBEDDED` can only be used by TextField. If
	 * flash.text.engine classes are directed to use such a font they will fall
	 * back to device fonts.</haxe_doc>
	</EMBEDDED>
	<EMBEDDED_CFF public="1" get="inline" set="null" expr="cast 2" line="47" static="1">
		<x path="openfl.text.FontType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EMBEDDED_CFF>
	<fromString set="method" line="49" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.text.FontType"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="62" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.text._FontType.FontType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/FontType.hx" private="1" module="openfl.text.FontType">
		<DEVICE public="1" get="inline" set="null" expr="cast 0" line="26" static="1">
			<x path="openfl.text.FontType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Indicates that this is a device font. The SWF file renders fonts with
	 * those installed on the system.
	 *
	 * Using device fonts results in a smaller movie size, because font data
	 * is not included in the file. Device fonts are often a good choice for
	 * displaying text at small point sizes, because anti-aliased text can be
	 * blurry at small sizes. Device fonts are also a good choice for large
	 * blocks of text, such as scrolling text.
	 *
	 * Text fields that use device fonts may not be displayed the same across
	 * different systems and platforms, because they are rendered with fonts
	 * installed on the system. For the same reason, device fonts are not
	 * anti-aliased and may appear jagged at large point sizes.</haxe_doc>
		</DEVICE>
		<EMBEDDED public="1" get="inline" set="null" expr="cast 1" line="45" static="1">
			<x path="openfl.text.FontType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Indicates that this is an embedded font. Font outlines are embedded in the
	 * published SWF file.
	 *
	 * Text fields that use embedded fonts are always displayed in the chosen
	 * font, whether or not that font is installed on the playback system. Also,
	 * text fields that use embedded fonts are always anti-aliased(smoothed).
	 * You can select the amount of anti-aliasing you want by using the
	 * `TextField.antiAliasType property`.
	 *
	 * One drawback to embedded fonts is that they increase the size of the
	 * SWF file.
	 *
	 * Fonts of type `EMBEDDED` can only be used by TextField. If
	 * flash.text.engine classes are directed to use such a font they will fall
	 * back to device fonts.</haxe_doc>
		</EMBEDDED>
		<EMBEDDED_CFF public="1" get="inline" set="null" expr="cast 2" line="47" static="1">
			<x path="openfl.text.FontType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EMBEDDED_CFF>
		<fromString set="method" line="49" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.text.FontType"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="62" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.text.GridFitType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/GridFitType.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.text._GridFitType.GridFitType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/GridFitType.hx" private="1" module="openfl.text.GridFitType">
	<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.text.GridFitType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<PIXEL public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="openfl.text.GridFitType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PIXEL>
	<SUBPIXEL public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="openfl.text.GridFitType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SUBPIXEL>
	<fromString set="method" line="10" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.text.GridFitType"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="23" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.text._GridFitType.GridFitType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/GridFitType.hx" private="1" module="openfl.text.GridFitType">
		<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.text.GridFitType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<PIXEL public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="openfl.text.GridFitType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PIXEL>
		<SUBPIXEL public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="openfl.text.GridFitType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SUBPIXEL>
		<fromString set="method" line="10" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.text.GridFitType"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="23" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.text.TextFieldAutoSize" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFieldAutoSize.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The TextFieldAutoSize class is an enumeration of constant values used in
 * setting the `autoSize` property of the TextField class.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.text._TextFieldAutoSize.TextFieldAutoSize_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFieldAutoSize.hx" private="1" module="openfl.text.TextFieldAutoSize">
	<CENTER public="1" get="inline" set="null" expr="cast 0" line="15" static="1">
		<x path="openfl.text.TextFieldAutoSize"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the text is to be treated as center-justified text. Any
	 * resizing of a single line of a text field is equally distributed to both
	 * the right and left sides.</haxe_doc>
	</CENTER>
	<LEFT public="1" get="inline" set="null" expr="cast 1" line="22" static="1">
		<x path="openfl.text.TextFieldAutoSize"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the text is to be treated as left-justified text, meaning
	 * that the left side of the text field remains fixed and any resizing of a
	 * single line is on the right side.</haxe_doc>
	</LEFT>
	<NONE public="1" get="inline" set="null" expr="cast 2" line="27" static="1">
		<x path="openfl.text.TextFieldAutoSize"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that no resizing is to occur.</haxe_doc>
	</NONE>
	<RIGHT public="1" get="inline" set="null" expr="cast 3" line="34" static="1">
		<x path="openfl.text.TextFieldAutoSize"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that the text is to be treated as right-justified text, meaning
	 * that the right side of the text field remains fixed and any resizing of a
	 * single line is on the left side.</haxe_doc>
	</RIGHT>
	<fromString set="method" line="36" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.text.TextFieldAutoSize"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="50" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.text._TextFieldAutoSize.TextFieldAutoSize_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFieldAutoSize.hx" private="1" module="openfl.text.TextFieldAutoSize">
		<CENTER public="1" get="inline" set="null" expr="cast 0" line="15" static="1">
			<x path="openfl.text.TextFieldAutoSize"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the text is to be treated as center-justified text. Any
	 * resizing of a single line of a text field is equally distributed to both
	 * the right and left sides.</haxe_doc>
		</CENTER>
		<LEFT public="1" get="inline" set="null" expr="cast 1" line="22" static="1">
			<x path="openfl.text.TextFieldAutoSize"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the text is to be treated as left-justified text, meaning
	 * that the left side of the text field remains fixed and any resizing of a
	 * single line is on the right side.</haxe_doc>
		</LEFT>
		<NONE public="1" get="inline" set="null" expr="cast 2" line="27" static="1">
			<x path="openfl.text.TextFieldAutoSize"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that no resizing is to occur.</haxe_doc>
		</NONE>
		<RIGHT public="1" get="inline" set="null" expr="cast 3" line="34" static="1">
			<x path="openfl.text.TextFieldAutoSize"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that the text is to be treated as right-justified text, meaning
	 * that the right side of the text field remains fixed and any resizing of a
	 * single line is on the left side.</haxe_doc>
		</RIGHT>
		<fromString set="method" line="36" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.text.TextFieldAutoSize"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="50" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.text.TextFieldType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFieldType.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The TextFieldType class is an enumeration of constant values used in
 * setting the `type` property of the TextField class.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.text._TextFieldType.TextFieldType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFieldType.hx" private="1" module="openfl.text.TextFieldType">
	<DYNAMIC public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="openfl.text.TextFieldType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Used to specify a `dynamic` TextField.</haxe_doc>
	</DYNAMIC>
	<INPUT public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
		<x path="openfl.text.TextFieldType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Used to specify an `input` TextField.</haxe_doc>
	</INPUT>
	<fromString set="method" line="20" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.text.TextFieldType"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="32" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.text._TextFieldType.TextFieldType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFieldType.hx" private="1" module="openfl.text.TextFieldType">
		<DYNAMIC public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="openfl.text.TextFieldType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Used to specify a `dynamic` TextField.</haxe_doc>
		</DYNAMIC>
		<INPUT public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
			<x path="openfl.text.TextFieldType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Used to specify an `input` TextField.</haxe_doc>
		</INPUT>
		<fromString set="method" line="20" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.text.TextFieldType"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="32" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.text.TextFormat" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFormat.hx" extern="1">
		<align public="1">
			<x path="openfl.text.TextFormatAlign"/>
			<haxe_doc>* Indicates the alignment of the paragraph. Valid values are TextFormatAlign
	 * constants.
	 * 
	 * @default TextFormatAlign.LEFT
	 * @throws ArgumentError The `align` specified is not a member of
	 *                       flash.text.TextFormatAlign.</haxe_doc>
		</align>
		<blockIndent public="1">
			<t path="Null"><x path="Int"/></t>
			<haxe_doc>* Indicates the block indentation in pixels. Block indentation is applied to
	 * an entire block of text; that is, to all lines of the text. In contrast,
	 * normal indentation(`TextFormat.indent`) affects only the first
	 * line of each paragraph. If this property is `null`, the
	 * TextFormat object does not specify block indentation(block indentation is
	 * 0).</haxe_doc>
		</blockIndent>
		<bold public="1">
			<t path="Null"><x path="Bool"/></t>
			<haxe_doc>* Specifies whether the text is boldface. The default value is
	 * `null`, which means no boldface is used. If the value is
	 * `true`, then the text is boldface.</haxe_doc>
		</bold>
		<bullet public="1">
			<t path="Null"><x path="Bool"/></t>
			<haxe_doc>* Indicates that the text is part of a bulleted list. In a bulleted list,
	 * each paragraph of text is indented. To the left of the first line of each
	 * paragraph, a bullet symbol is displayed. The default value is
	 * `null`, which means no bulleted list is used.</haxe_doc>
		</bullet>
		<color public="1">
			<t path="Null"><x path="Int"/></t>
			<haxe_doc>* Indicates the color of the text. A number containing three 8-bit RGB
	 * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The
	 * default value is `null`, which means that Flash Player uses the
	 * color black(0x000000).</haxe_doc>
		</color>
		<display public="1">
			<e path="flash.text.TextFormatDisplay"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</display>
		<font public="1">
			<c path="String"/>
			<haxe_doc>* The name of the font for text in this text format, as a string. The
	 * default value is `null`, which means that Flash Player uses
	 * Times New Roman font for the text.</haxe_doc>
		</font>
		<indent public="1">
			<t path="Null"><x path="Int"/></t>
			<haxe_doc>* Indicates the indentation from the left margin to the first character in
	 * the paragraph. The default value is `null`, which indicates
	 * that no indentation is used.</haxe_doc>
		</indent>
		<italic public="1">
			<t path="Null"><x path="Bool"/></t>
			<haxe_doc>* Indicates whether text in this text format is italicized. The default
	 * value is `null`, which means no italics are used.</haxe_doc>
		</italic>
		<kerning public="1">
			<t path="Null"><x path="Bool"/></t>
			<haxe_doc>* A Boolean value that indicates whether kerning is enabled
	 * (`true`) or disabled(`false`). Kerning adjusts the
	 * pixels between certain character pairs to improve readability, and should
	 * be used only when necessary, such as with headings in large fonts. Kerning
	 * is supported for embedded fonts only.
	 *
	 * Certain fonts such as Verdana and monospaced fonts, such as Courier
	 * New, do not support kerning.
	 *
	 * The default value is `null`, which means that kerning is not
	 * enabled.</haxe_doc>
		</kerning>
		<leading public="1">
			<t path="Null"><x path="Int"/></t>
			<haxe_doc>* An integer representing the amount of vertical space(called
	 * _leading_) between lines. The default value is `null`,
	 * which indicates that the amount of leading used is 0.</haxe_doc>
		</leading>
		<leftMargin public="1">
			<t path="Null"><x path="Int"/></t>
			<haxe_doc>* The left margin of the paragraph, in pixels. The default value is
	 * `null`, which indicates that the left margin is 0 pixels.</haxe_doc>
		</leftMargin>
		<letterSpacing public="1">
			<t path="Null"><x path="Float"/></t>
			<haxe_doc>* A number representing the amount of space that is uniformly distributed
	 * between all characters. The value specifies the number of pixels that are
	 * added to the advance after each character. The default value is
	 * `null`, which means that 0 pixels of letter spacing is used.
	 * You can use decimal values such as `1.75`.</haxe_doc>
		</letterSpacing>
		<rightMargin public="1">
			<t path="Null"><x path="Int"/></t>
			<haxe_doc>* The right margin of the paragraph, in pixels. The default value is
	 * `null`, which indicates that the right margin is 0 pixels.</haxe_doc>
		</rightMargin>
		<size public="1">
			<t path="Null"><x path="Int"/></t>
			<haxe_doc>* The size in pixels of text in this text format. The default value is
	 * `null`, which means that a size of 12 is used.</haxe_doc>
		</size>
		<tabStops public="1">
			<c path="Array"><x path="Int"/></c>
			<haxe_doc>* Specifies custom tab stops as an array of non-negative integers. Each tab
	 * stop is specified in pixels. If custom tab stops are not specified
	 * (`null`), the default tab stop is 4(average character width).</haxe_doc>
		</tabStops>
		<target public="1">
			<c path="String"/>
			<haxe_doc>* Indicates the target window where the hyperlink is displayed. If the
	 * target window is an empty string, the text is displayed in the default
	 * target window `_self`. You can choose a custom name or one of
	 * the following four names: `_self` specifies the current frame
	 * in the current window, `_blank` specifies a new window,
	 * `_parent` specifies the parent of the current frame, and
	 * `_top` specifies the top-level frame in the current window. If
	 * the `TextFormat.url` property is an empty string or
	 * `null`, you can get or set this property, but the property will
	 * have no effect.</haxe_doc>
		</target>
		<underline public="1">
			<t path="Null"><x path="Bool"/></t>
			<haxe_doc><![CDATA[* Indicates whether the text that uses this text format is underlined
	 * (`true`) or not(`false`). This underlining is
	 * similar to that produced by the `<U>` tag, but the latter is
	 * not true underlining, because it does not skip descenders correctly. The
	 * default value is `null`, which indicates that underlining is
	 * not used.]]></haxe_doc>
		</underline>
		<url public="1">
			<c path="String"/>
			<haxe_doc>* Indicates the target URL for the text in this text format. If the
	 * `url` property is an empty string, the text does not have a
	 * hyperlink. The default value is `null`, which indicates that
	 * the text does not have a hyperlink.
	 *
	 * **Note:** The text with the assigned text format must be set with
	 * the `htmlText` property for the hyperlink to work.</haxe_doc>
		</url>
		<clone public="1" set="method"><f a=""><c path="openfl.text.TextFormat"/></f></clone>
		<new public="1" set="method">
			<f a="?font:?size:?color:?bold:?italic:?underline:?url:?target:?align:?leftMargin:?rightMargin:?indent:?leading" v="null:null:null:null:null:null:null:null:null:null:null:null:null">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="String"/>
				<c path="String"/>
				<x path="openfl.text.TextFormatAlign"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ leading : null, indent : null, rightMargin : null, leftMargin : null, align : null, target : null, url : null, underline : null, italic : null, bold : null, color : null, size : null, font : null }</e></m></meta>
			<haxe_doc>* Creates a TextFormat object with the specified properties. You can then
	 * change the properties of the TextFormat object to change the formatting of
	 * text fields.
	 *
	 * Any parameter may be set to `null` to indicate that it is
	 * not defined. All of the parameters are optional; any omitted parameters
	 * are treated as `null`.
	 * 
	 * @param font        The name of a font for text as a string.
	 * @param size        An integer that indicates the size in pixels.
	 * @param color       The color of text using this text format. A number
	 *                    containing three 8-bit RGB components; for example,
	 *                    0xFF0000 is red, and 0x00FF00 is green.
	 * @param bold        A Boolean value that indicates whether the text is
	 *                    boldface.
	 * @param italic      A Boolean value that indicates whether the text is
	 *                    italicized.
	 * @param underline   A Boolean value that indicates whether the text is
	 *                    underlined.
	 * @param url         The URL to which the text in this text format
	 *                    hyperlinks. If `url` is an empty string, the
	 *                    text does not have a hyperlink.
	 * @param target      The target window where the hyperlink is displayed. If
	 *                    the target window is an empty string, the text is
	 *                    displayed in the default target window
	 *                    `_self`. If the `url` parameter
	 *                    is set to an empty string or to the value
	 *                    `null`, you can get or set this property,
	 *                    but the property will have no effect.
	 * @param align       The alignment of the paragraph, as a TextFormatAlign
	 *                    value.
	 * @param leftMargin  Indicates the left margin of the paragraph, in pixels.
	 * @param rightMargin Indicates the right margin of the paragraph, in pixels.
	 * @param indent      An integer that indicates the indentation from the left
	 *                    margin to the first character in the paragraph.
	 * @param leading     A number that indicates the amount of leading vertical
	 *                    space between lines.</haxe_doc>
		</new>
		<haxe_doc>* The TextFormat class represents character formatting information. Use the
 * TextFormat class to create specific text formatting for text fields. You
 * can apply text formatting to both static and dynamic text fields. The
 * properties of the TextFormat class apply to device and embedded fonts.
 * However, for embedded fonts, bold and italic text actually require specific
 * fonts. If you want to display bold or italic text with an embedded font,
 * you need to embed the bold and italic variations of that font.
 *
 *  You must use the constructor `new TextFormat()` to create a
 * TextFormat object before setting its properties. When you apply a
 * TextFormat object to a text field using the
 * `TextField.defaultTextFormat` property or the
 * `TextField.setTextFormat()` method, only its defined properties
 * are applied. Use the `TextField.defaultTextFormat` property to
 * apply formatting BEFORE you add text to the `TextField`, and the
 * `setTextFormat()` method to add formatting AFTER you add text to
 * the `TextField`. The TextFormat properties are `null`
 * by default because if you don't provide values for the properties, Flash
 * Player uses its own default formatting. The default formatting that Flash
 * Player uses for each property(if property's value is `null`) is
 * as follows:
 *
 * The default formatting for each property is also described in each
 * property description.</haxe_doc>
	</class>
	<abstract path="openfl.text.TextFormatAlign" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFormatAlign.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The TextFormatAlign class provides values for text alignment in the
 * TextFormat class.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.text._TextFormatAlign.TextFormatAlign_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFormatAlign.hx" private="1" module="openfl.text.TextFormatAlign">
	<CENTER public="1" get="inline" set="null" expr="cast 0" line="14" static="1">
		<x path="openfl.text.TextFormatAlign"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Constant; centers the text in the text field. Use the syntax
	 * `TextFormatAlign.CENTER`.</haxe_doc>
	</CENTER>
	<END public="1" get="inline" set="null" expr="cast 1" line="16" static="1">
		<x path="openfl.text.TextFormatAlign"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</END>
	<JUSTIFY public="1" get="inline" set="null" expr="cast 2" line="22" static="1">
		<x path="openfl.text.TextFormatAlign"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Constant; justifies text within the text field. Use the syntax
	 * `TextFormatAlign.JUSTIFY`.</haxe_doc>
	</JUSTIFY>
	<LEFT public="1" get="inline" set="null" expr="cast 3" line="28" static="1">
		<x path="openfl.text.TextFormatAlign"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Constant; aligns text to the left within the text field. Use the syntax
	 * `TextFormatAlign.LEFT`.</haxe_doc>
	</LEFT>
	<RIGHT public="1" get="inline" set="null" expr="cast 4" line="34" static="1">
		<x path="openfl.text.TextFormatAlign"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Constant; aligns text to the right within the text field. Use the syntax
	 * `TextFormatAlign.RIGHT`.</haxe_doc>
	</RIGHT>
	<START public="1" get="inline" set="null" expr="cast 5" line="36" static="1">
		<x path="openfl.text.TextFormatAlign"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</START>
	<fromString set="method" line="38" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.text.TextFormatAlign"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="54" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.text._TextFormatAlign.TextFormatAlign_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextFormatAlign.hx" private="1" module="openfl.text.TextFormatAlign">
		<CENTER public="1" get="inline" set="null" expr="cast 0" line="14" static="1">
			<x path="openfl.text.TextFormatAlign"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Constant; centers the text in the text field. Use the syntax
	 * `TextFormatAlign.CENTER`.</haxe_doc>
		</CENTER>
		<END public="1" get="inline" set="null" expr="cast 1" line="16" static="1">
			<x path="openfl.text.TextFormatAlign"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</END>
		<JUSTIFY public="1" get="inline" set="null" expr="cast 2" line="22" static="1">
			<x path="openfl.text.TextFormatAlign"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Constant; justifies text within the text field. Use the syntax
	 * `TextFormatAlign.JUSTIFY`.</haxe_doc>
		</JUSTIFY>
		<LEFT public="1" get="inline" set="null" expr="cast 3" line="28" static="1">
			<x path="openfl.text.TextFormatAlign"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Constant; aligns text to the left within the text field. Use the syntax
	 * `TextFormatAlign.LEFT`.</haxe_doc>
		</LEFT>
		<RIGHT public="1" get="inline" set="null" expr="cast 4" line="34" static="1">
			<x path="openfl.text.TextFormatAlign"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Constant; aligns text to the right within the text field. Use the syntax
	 * `TextFormatAlign.RIGHT`.</haxe_doc>
		</RIGHT>
		<START public="1" get="inline" set="null" expr="cast 5" line="36" static="1">
			<x path="openfl.text.TextFormatAlign"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</START>
		<fromString set="method" line="38" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.text.TextFormatAlign"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="54" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.text.TextLineMetrics" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/text/TextLineMetrics.hx" extern="1">
		<ascent public="1">
			<x path="Float"/>
			<haxe_doc>* The ascent value of the text is the length from the baseline to the top of
	 * the line height in pixels.</haxe_doc>
		</ascent>
		<descent public="1">
			<x path="Float"/>
			<haxe_doc>* The descent value of the text is the length from the baseline to the
	 * bottom depth of the line in pixels.</haxe_doc>
		</descent>
		<height public="1">
			<x path="Float"/>
			<haxe_doc>* The height value of the text of the selected lines (not necessarily the
	 * complete text) in pixels. The height of the text line does not include the
	 * gutter height.</haxe_doc>
		</height>
		<leading public="1">
			<x path="Float"/>
			<haxe_doc>* The leading value is the measurement of the vertical distance between the
	 * lines of text.</haxe_doc>
		</leading>
		<width public="1">
			<x path="Float"/>
			<haxe_doc>* The width value is the width of the text of the selected lines (not 
	 * necessarily the complete text) in pixels. The width of the text line is
	 * not the same as the width of the text field. The width of the text line is
	 * relative to the text field width, minus the gutter width of 4 pixels 
	 * (2 pixels on each side).</haxe_doc>
		</width>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>* The x value is the left position of the first character in pixels. This
	 * value includes the margin, indent (if any), and gutter widths.</haxe_doc>
		</x>
		<new public="1" set="method">
			<f a="x:width:height:ascent:descent:leading">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Creates a TextLineMetrics object. The TextLineMetrics object contains
	 * information about the text metrics of a line of text in a text field.
	 * Objects of this class are returned by the 
	 * flash.text.TextField.getLineMetrics() method.
	 *
	 * @param x           The left position of the first character in pixels.
	 * @param width       The width of the text of the selected lines (not 
	 *                    necessarily the complete text) in pixels.
	 * @param height      The height of the text of the selected lines (not
	 *                    necessarily the complete text) in pixels.
	 * @param ascent      The length from the baseline to the top of the line
	 *                    height in pixels.
	 * @param descent     The length from the baseline to the bottom depth of
	 *                    the line in pixels.
	 * @param leading     The measurement of the vertical distance between the
	 *                    lines of text.</haxe_doc>
		</new>
		<haxe_doc>* The TextLineMetrics class contains information about the text position and
 * measurements of a line of text within a text field. All measurements are in
 * pixels. Objects of this class are returned by the 
 * `flash.text.TextField.getLineMetrics()` method.</haxe_doc>
	</class>
	<class path="openfl.ui.GameInput" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/GameInput.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<isSupported public="1" set="null" static="1"><x path="Bool"/></isSupported>
		<numDevices public="1" set="null" static="1"><x path="Int"/></numDevices>
		<getDeviceAt public="1" set="method" static="1"><f a="index">
	<x path="Int"/>
	<c path="openfl.ui.GameInputDevice"/>
</f></getDeviceAt>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.ui.GameInputControl" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/GameInputControl.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<device public="1" set="null">
			<c path="openfl.ui.GameInputDevice"/>
			<haxe_doc>* Returns the GameInputDevice object that contains this control.</haxe_doc>
		</device>
		<id public="1" set="null">
			<c path="String"/>
			<haxe_doc>* Returns the id of this control.</haxe_doc>
		</id>
		<maxValue public="1" set="null">
			<x path="Float"/>
			<haxe_doc>* Returns the maximum value for this control.</haxe_doc>
		</maxValue>
		<minValue public="1" set="null">
			<x path="Float"/>
			<haxe_doc>* Returns the minimum value for this control.</haxe_doc>
		</minValue>
		<value public="1" set="null">
			<x path="Float"/>
			<haxe_doc>* Returns the value for this control.</haxe_doc>
		</value>
		<new set="method">
			<f a="device:id:minValue:maxValue:?value" v="::::0">
				<c path="openfl.ui.GameInputDevice"/>
				<c path="String"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ value : 0 }</e></m></meta>
		</new>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="openfl.ui.GameInputDevice" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/GameInputDevice.hx" extern="1">
		<MAX_BUFFER_SIZE public="1" static="1"><unknown/></MAX_BUFFER_SIZE>
		<enabled public="1">
			<x path="Bool"/>
			<haxe_doc>* Enables or disables this device.</haxe_doc>
		</enabled>
		<id public="1" set="null">
			<c path="String"/>
			<haxe_doc>* Returns the ID of this device.</haxe_doc>
		</id>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>* Returns the name of this device.</haxe_doc>
		</name>
		<numControls public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>* Returns the number of controls on this device.</haxe_doc>
		</numControls>
		<sampleInterval public="1">
			<x path="Int"/>
			<haxe_doc>* Specifies the rate (in milliseconds) at which to retrieve control values.</haxe_doc>
		</sampleInterval>
		<getCachedSamples public="1" set="method">
			<f a="data:?append" v=":false">
				<x path="openfl.utils.ByteArray"/>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ append : false }</e></m></meta>
			<haxe_doc>* Writes cached sample values to the ByteArray.
	 * @param	data
	 * @param	append
	 * @return</haxe_doc>
		</getCachedSamples>
		<getControlAt public="1" set="method">
			<f a="i">
				<x path="Int"/>
				<c path="openfl.ui.GameInputControl"/>
			</f>
			<haxe_doc>* Retrieves a specific control from a device.
	 * @param	i
	 * @return</haxe_doc>
		</getControlAt>
		<startCachingSamples public="1" set="method">
			<f a="numSamples:controls">
				<x path="Int"/>
				<x path="openfl.Vector"><c path="String"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>* Requests this device to start keeping a cache of sampled values.
	 * @param	numSamples
	 * @param	controls</haxe_doc>
		</startCachingSamples>
		<stopCachingSamples public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Stops sample caching.</haxe_doc>
		</stopCachingSamples>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="openfl.ui.KeyLocation" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/KeyLocation.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.ui._KeyLocation.KeyLocation_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/KeyLocation.hx" private="1" module="openfl.ui.KeyLocation" extern="1">
	<LEFT public="1" get="inline" set="null" expr="cast 1" line="10" static="1">
		<x path="openfl.ui.KeyLocation"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<NUM_PAD public="1" get="inline" set="null" expr="cast 3" line="11" static="1">
		<x path="openfl.ui.KeyLocation"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_PAD>
	<RIGHT public="1" get="inline" set="null" expr="cast 2" line="12" static="1">
		<x path="openfl.ui.KeyLocation"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<STANDARD public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="openfl.ui.KeyLocation"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STANDARD>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.ui._KeyLocation.KeyLocation_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/KeyLocation.hx" private="1" module="openfl.ui.KeyLocation" extern="1">
		<LEFT public="1" get="inline" set="null" expr="cast 1" line="10" static="1">
			<x path="openfl.ui.KeyLocation"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<NUM_PAD public="1" get="inline" set="null" expr="cast 3" line="11" static="1">
			<x path="openfl.ui.KeyLocation"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_PAD>
		<RIGHT public="1" get="inline" set="null" expr="cast 2" line="12" static="1">
			<x path="openfl.ui.KeyLocation"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<STANDARD public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="openfl.ui.KeyLocation"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STANDARD>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.ui.Keyboard" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/Keyboard.hx" extern="1">
		<NUMBER_0 public="1" get="inline" set="null" expr="48" line="19" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>48</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 0 key(48).</haxe_doc>
		</NUMBER_0>
		<NUMBER_1 public="1" get="inline" set="null" expr="49" line="24" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>49</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 1 key(49).</haxe_doc>
		</NUMBER_1>
		<NUMBER_2 public="1" get="inline" set="null" expr="50" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>50</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 2 key(50).</haxe_doc>
		</NUMBER_2>
		<NUMBER_3 public="1" get="inline" set="null" expr="51" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>51</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 3 key(51).</haxe_doc>
		</NUMBER_3>
		<NUMBER_4 public="1" get="inline" set="null" expr="52" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>52</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 4 key(52).</haxe_doc>
		</NUMBER_4>
		<NUMBER_5 public="1" get="inline" set="null" expr="53" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>53</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 5 key(53).</haxe_doc>
		</NUMBER_5>
		<NUMBER_6 public="1" get="inline" set="null" expr="54" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>54</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 6 key(54).</haxe_doc>
		</NUMBER_6>
		<NUMBER_7 public="1" get="inline" set="null" expr="55" line="54" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>55</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 7 key(55).</haxe_doc>
		</NUMBER_7>
		<NUMBER_8 public="1" get="inline" set="null" expr="56" line="59" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>56</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 8 key(56).</haxe_doc>
		</NUMBER_8>
		<NUMBER_9 public="1" get="inline" set="null" expr="57" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>57</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the 9 key(57).</haxe_doc>
		</NUMBER_9>
		<A public="1" get="inline" set="null" expr="65" line="69" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>65</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the A key(65).</haxe_doc>
		</A>
		<B public="1" get="inline" set="null" expr="66" line="74" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>66</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the B key(66).</haxe_doc>
		</B>
		<C public="1" get="inline" set="null" expr="67" line="79" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>67</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the C key(67).</haxe_doc>
		</C>
		<D public="1" get="inline" set="null" expr="68" line="84" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>68</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the D key(68).</haxe_doc>
		</D>
		<E public="1" get="inline" set="null" expr="69" line="89" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>69</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the E key(69).</haxe_doc>
		</E>
		<F public="1" get="inline" set="null" expr="70" line="94" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>70</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F key(70).</haxe_doc>
		</F>
		<G public="1" get="inline" set="null" expr="71" line="99" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>71</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the G key(71).</haxe_doc>
		</G>
		<H public="1" get="inline" set="null" expr="72" line="104" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>72</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the H key(72).</haxe_doc>
		</H>
		<I public="1" get="inline" set="null" expr="73" line="109" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>73</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the I key(73).</haxe_doc>
		</I>
		<J public="1" get="inline" set="null" expr="74" line="114" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>74</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the J key(74).</haxe_doc>
		</J>
		<K public="1" get="inline" set="null" expr="75" line="119" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>75</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the K key(75).</haxe_doc>
		</K>
		<L public="1" get="inline" set="null" expr="76" line="124" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>76</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the L key(76).</haxe_doc>
		</L>
		<M public="1" get="inline" set="null" expr="77" line="129" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>77</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the M key(77).</haxe_doc>
		</M>
		<N public="1" get="inline" set="null" expr="78" line="134" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>78</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the N key(78).</haxe_doc>
		</N>
		<O public="1" get="inline" set="null" expr="79" line="139" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>79</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the O key(79).</haxe_doc>
		</O>
		<P public="1" get="inline" set="null" expr="80" line="144" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>80</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the P key(80).</haxe_doc>
		</P>
		<Q public="1" get="inline" set="null" expr="81" line="149" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>81</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Q key(81).</haxe_doc>
		</Q>
		<R public="1" get="inline" set="null" expr="82" line="154" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>82</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the R key(82).</haxe_doc>
		</R>
		<S public="1" get="inline" set="null" expr="83" line="159" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>83</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the S key(83).</haxe_doc>
		</S>
		<T public="1" get="inline" set="null" expr="84" line="164" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>84</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the T key(84).</haxe_doc>
		</T>
		<U public="1" get="inline" set="null" expr="85" line="169" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>85</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the U key(85).</haxe_doc>
		</U>
		<V public="1" get="inline" set="null" expr="86" line="174" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>86</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the V key(85).</haxe_doc>
		</V>
		<W public="1" get="inline" set="null" expr="87" line="179" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>87</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the W key(87).</haxe_doc>
		</W>
		<X public="1" get="inline" set="null" expr="88" line="184" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>88</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the X key(88).</haxe_doc>
		</X>
		<Y public="1" get="inline" set="null" expr="89" line="189" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>89</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Y key(89).</haxe_doc>
		</Y>
		<Z public="1" get="inline" set="null" expr="90" line="194" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>90</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Z key(90).</haxe_doc>
		</Z>
		<NUMPAD_0 public="1" get="inline" set="null" expr="96" line="200" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>96</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 0 key on the
	 * number pad(96).</haxe_doc>
		</NUMPAD_0>
		<NUMPAD_1 public="1" get="inline" set="null" expr="97" line="206" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>97</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 1 key on the
	 * number pad(97).</haxe_doc>
		</NUMPAD_1>
		<NUMPAD_2 public="1" get="inline" set="null" expr="98" line="212" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>98</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 2 key on the
	 * number pad(98).</haxe_doc>
		</NUMPAD_2>
		<NUMPAD_3 public="1" get="inline" set="null" expr="99" line="218" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>99</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 3 key on the
	 * number pad(99).</haxe_doc>
		</NUMPAD_3>
		<NUMPAD_4 public="1" get="inline" set="null" expr="100" line="224" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>100</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 4 key on the
	 * number pad(100).</haxe_doc>
		</NUMPAD_4>
		<NUMPAD_5 public="1" get="inline" set="null" expr="101" line="230" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>101</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 5 key on the
	 * number pad(101).</haxe_doc>
		</NUMPAD_5>
		<NUMPAD_6 public="1" get="inline" set="null" expr="102" line="236" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>102</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 6 key on the
	 * number pad(102).</haxe_doc>
		</NUMPAD_6>
		<NUMPAD_7 public="1" get="inline" set="null" expr="103" line="242" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>103</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 7 key on the
	 * number pad(103).</haxe_doc>
		</NUMPAD_7>
		<NUMPAD_8 public="1" get="inline" set="null" expr="104" line="248" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>104</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 8 key on the
	 * number pad(104).</haxe_doc>
		</NUMPAD_8>
		<NUMPAD_9 public="1" get="inline" set="null" expr="105" line="254" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>105</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the number 9 key on the
	 * number pad(105).</haxe_doc>
		</NUMPAD_9>
		<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="106" line="260" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>106</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the multiplication key on
	 * the number pad(106).</haxe_doc>
		</NUMPAD_MULTIPLY>
		<NUMPAD_ADD public="1" get="inline" set="null" expr="107" line="266" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>107</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the addition key on the
	 * number pad(107).</haxe_doc>
		</NUMPAD_ADD>
		<NUMPAD_ENTER public="1" get="inline" set="null" expr="108" line="272" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>108</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Enter key on the
	 * number pad(108).</haxe_doc>
		</NUMPAD_ENTER>
		<NUMPAD_SUBTRACT public="1" get="inline" set="null" expr="109" line="278" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>109</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the subtraction key on the
	 * number pad(109).</haxe_doc>
		</NUMPAD_SUBTRACT>
		<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="110" line="284" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>110</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the decimal key on the
	 * number pad(110).</haxe_doc>
		</NUMPAD_DECIMAL>
		<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="111" line="290" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>111</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the division key on the
	 * number pad(111).</haxe_doc>
		</NUMPAD_DIVIDE>
		<F1 public="1" get="inline" set="null" expr="112" line="295" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>112</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F1 key(112).</haxe_doc>
		</F1>
		<F2 public="1" get="inline" set="null" expr="113" line="300" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>113</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F2 key(113).</haxe_doc>
		</F2>
		<F3 public="1" get="inline" set="null" expr="114" line="305" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>114</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F3 key(114).</haxe_doc>
		</F3>
		<F4 public="1" get="inline" set="null" expr="115" line="310" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>115</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F4 key(115).</haxe_doc>
		</F4>
		<F5 public="1" get="inline" set="null" expr="116" line="315" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>116</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F5 key(116).</haxe_doc>
		</F5>
		<F6 public="1" get="inline" set="null" expr="117" line="320" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>117</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F6 key(117).</haxe_doc>
		</F6>
		<F7 public="1" get="inline" set="null" expr="118" line="325" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>118</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F7 key(118).</haxe_doc>
		</F7>
		<F8 public="1" get="inline" set="null" expr="119" line="330" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>119</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F8 key(119).</haxe_doc>
		</F8>
		<F9 public="1" get="inline" set="null" expr="120" line="335" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>120</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F9 key(120).</haxe_doc>
		</F9>
		<F10 public="1" get="inline" set="null" expr="121" line="340" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>121</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F10 key(121).</haxe_doc>
		</F10>
		<F11 public="1" get="inline" set="null" expr="122" line="345" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>122</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F11 key(122).</haxe_doc>
		</F11>
		<F12 public="1" get="inline" set="null" expr="123" line="350" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>123</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F12 key(123).</haxe_doc>
		</F12>
		<F13 public="1" get="inline" set="null" expr="124" line="355" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>124</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F13 key(124).</haxe_doc>
		</F13>
		<F14 public="1" get="inline" set="null" expr="125" line="360" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>125</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F14 key(125).</haxe_doc>
		</F14>
		<F15 public="1" get="inline" set="null" expr="126" line="365" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>126</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the F15 key(126).</haxe_doc>
		</F15>
		<BACKSPACE public="1" get="inline" set="null" expr="8" line="370" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Backspace key(8).</haxe_doc>
		</BACKSPACE>
		<TAB public="1" get="inline" set="null" expr="9" line="375" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Tab key(9).</haxe_doc>
		</TAB>
		<ALTERNATE public="1" get="inline" set="null" expr="18" line="381" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>18</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Alternate(Option) key
	 * (18).</haxe_doc>
		</ALTERNATE>
		<ENTER public="1" get="inline" set="null" expr="13" line="386" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>13</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Enter key(13).</haxe_doc>
		</ENTER>
		<COMMAND public="1" get="inline" set="null" expr="15" line="392" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>15</e></m></meta>
			<haxe_doc>* Constant associated with the Mac command key(15). This constant is
	 * currently only used for setting menu key equivalents.</haxe_doc>
		</COMMAND>
		<SHIFT public="1" get="inline" set="null" expr="16" line="397" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>16</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Shift key(16).</haxe_doc>
		</SHIFT>
		<CONTROL public="1" get="inline" set="null" expr="17" line="402" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>17</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Control key(17).</haxe_doc>
		</CONTROL>
		<BREAK public="1" get="inline" set="null" expr="19" line="404" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>19</e></m></meta>
		</BREAK>
		<CAPS_LOCK public="1" get="inline" set="null" expr="20" line="409" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>20</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Caps Lock key(20).</haxe_doc>
		</CAPS_LOCK>
		<NUMPAD public="1" get="inline" set="null" expr="21" line="415" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>21</e></m></meta>
			<haxe_doc>* Constant associated with the pseudo-key code for the the number pad(21).
	 * Use to set numpad modifier on key equivalents</haxe_doc>
		</NUMPAD>
		<ESCAPE public="1" get="inline" set="null" expr="27" line="420" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>27</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Escape key(27).</haxe_doc>
		</ESCAPE>
		<SPACE public="1" get="inline" set="null" expr="32" line="425" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Spacebar(32).</haxe_doc>
		</SPACE>
		<PAGE_UP public="1" get="inline" set="null" expr="33" line="430" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Page Up key(33).</haxe_doc>
		</PAGE_UP>
		<PAGE_DOWN public="1" get="inline" set="null" expr="34" line="435" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Page Down key(34).</haxe_doc>
		</PAGE_DOWN>
		<END public="1" get="inline" set="null" expr="35" line="440" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the End key(35).</haxe_doc>
		</END>
		<HOME public="1" get="inline" set="null" expr="36" line="445" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Home key(36).</haxe_doc>
		</HOME>
		<LEFT public="1" get="inline" set="null" expr="37" line="450" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>37</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Left Arrow key(37).</haxe_doc>
		</LEFT>
		<RIGHT public="1" get="inline" set="null" expr="39" line="455" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>39</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Right Arrow key(39).</haxe_doc>
		</RIGHT>
		<UP public="1" get="inline" set="null" expr="38" line="460" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>38</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Up Arrow key(38).</haxe_doc>
		</UP>
		<DOWN public="1" get="inline" set="null" expr="40" line="465" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>40</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Down Arrow key(40).</haxe_doc>
		</DOWN>
		<INSERT public="1" get="inline" set="null" expr="45" line="470" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>45</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Insert key(45).</haxe_doc>
		</INSERT>
		<DELETE public="1" get="inline" set="null" expr="46" line="475" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>46</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the Delete key(46).</haxe_doc>
		</DELETE>
		<NUMLOCK public="1" get="inline" set="null" expr="144" line="477" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>144</e></m></meta>
		</NUMLOCK>
		<SEMICOLON public="1" get="inline" set="null" expr="186" line="482" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>186</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the ; key(186).</haxe_doc>
		</SEMICOLON>
		<EQUAL public="1" get="inline" set="null" expr="187" line="487" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>187</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the = key(187).</haxe_doc>
		</EQUAL>
		<COMMA public="1" get="inline" set="null" expr="188" line="492" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>188</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the , key(188).</haxe_doc>
		</COMMA>
		<MINUS public="1" get="inline" set="null" expr="189" line="497" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>189</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the - key(189).</haxe_doc>
		</MINUS>
		<PERIOD public="1" get="inline" set="null" expr="190" line="502" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>190</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the . key(190).</haxe_doc>
		</PERIOD>
		<SLASH public="1" get="inline" set="null" expr="191" line="507" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>191</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the / key(191).</haxe_doc>
		</SLASH>
		<BACKQUOTE public="1" get="inline" set="null" expr="192" line="512" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>192</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the ` key(192).</haxe_doc>
		</BACKQUOTE>
		<LEFTBRACKET public="1" get="inline" set="null" expr="219" line="517" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>219</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the [ key(219).</haxe_doc>
		</LEFTBRACKET>
		<BACKSLASH public="1" get="inline" set="null" expr="220" line="522" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>220</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the \ key(220).</haxe_doc>
		</BACKSLASH>
		<RIGHTBRACKET public="1" get="inline" set="null" expr="221" line="527" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>221</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the ] key(221).</haxe_doc>
		</RIGHTBRACKET>
		<QUOTE public="1" get="inline" set="null" expr="222" line="532" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>222</e></m></meta>
			<haxe_doc>* Constant associated with the key code value for the ' key(222).</haxe_doc>
		</QUOTE>
		<capsLock public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the Caps Lock key is activated(`true`) or
	 * not(`false`).</haxe_doc>
		</capsLock>
		<numLock public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Specifies whether the Num Lock key is activated(`true`) or not
	 * (`false`).</haxe_doc>
		</numLock>
		<isAccessible public="1" set="method" static="1">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>* Specifies whether the last key pressed is accessible by other SWF files.
	 * By default, security restrictions prevent code from a SWF file in one
	 * domain from accessing a keystroke generated from a SWF file in another
	 * domain.
	 * 
	 * @return The value `true` if the last key pressed can be
	 *         accessed. If access is not permitted, this method returns
	 *         `false`.</haxe_doc>
		</isAccessible>
		<haxe_doc>* The Keyboard class is used to build an interface that can be controlled by
 * a user with a standard keyboard. You can use the methods and properties of
 * the Keyboard class without using a constructor. The properties of the
 * Keyboard class are constants representing the keys that are most commonly
 * used to control games.</haxe_doc>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.ui.Mouse" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/Mouse.hx" extern="1">
		<cursor public="1" static="1"><x path="openfl.ui.MouseCursor"/></cursor>
		<supportsCursor public="1" set="null" static="1"><x path="Bool"/></supportsCursor>
		<supportsNativeCursor public="1" set="null" static="1"><x path="Bool"/></supportsNativeCursor>
		<hide public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Hides the pointer. The pointer is visible by default.
	 *
	 * **Note:** You need to call `Mouse.hide()` only once,
	 * regardless of the number of previous calls to
	 * `Mouse.show()`.
	 *</haxe_doc>
		</hide>
		<registerCursor public="1" set="method" static="1">
			<f a="name:cursor">
				<c path="String"/>
				<c path="flash.ui.MouseCursorData"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash10_2</e></m>
			</meta>
		</registerCursor>
		<show public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Displays the pointer. The pointer is visible by default.
	 *
	 * **Note:** You need to call `Mouse.show()` only once,
	 * regardless of the number of previous calls to
	 * `Mouse.hide()`.
	 *</haxe_doc>
		</show>
		<unregisterCursor public="1" set="method" static="1">
			<f a="name">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":require"><e>flash11</e></m>
			</meta>
		</unregisterCursor>
		<haxe_doc><![CDATA[* The methods of the Mouse class are used to hide and show the mouse pointer,
 * or to set the pointer to a specific style. The Mouse class is a top-level
 * class whose properties and methods you can access without using a
 * constructor. <ph outputclass="flashonly">The pointer is visible by default,
 * but you can hide it and implement a custom pointer.]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<abstract path="openfl.ui.MouseCursor" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/MouseCursor.hx">
		<from>
			<icast><c path="String"/></icast>
			<icast field="fromLimeCursor"><t path="lime.ui._MouseCursor.LimeMouseCursor"/></icast>
		</from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.ui._MouseCursor.MouseCursor_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/MouseCursor.hx" private="1" module="openfl.ui.MouseCursor">
	<ARROW public="1" get="inline" set="null" expr="cast &quot;arrow&quot;" line="9" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "arrow"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ARROW>
	<AUTO public="1" get="inline" set="null" expr="cast &quot;auto&quot;" line="10" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "auto"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUTO>
	<BUTTON public="1" get="inline" set="null" expr="cast &quot;button&quot;" line="11" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "button"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUTTON>
	<HAND public="1" get="inline" set="null" expr="cast &quot;hand&quot;" line="12" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "hand"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HAND>
	<IBEAM public="1" get="inline" set="null" expr="cast &quot;ibeam&quot;" line="13" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "ibeam"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IBEAM>
	<__CROSSHAIR get="inline" set="null" expr="cast &quot;crosshair&quot;" line="15" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "crosshair"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</__CROSSHAIR>
	<__CUSTOM get="inline" set="null" expr="cast &quot;custom&quot;" line="16" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "custom"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</__CUSTOM>
	<__MOVE get="inline" set="null" expr="cast &quot;move&quot;" line="17" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "move"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</__MOVE>
	<__RESIZE_NESW get="inline" set="null" expr="cast &quot;resize_nesw&quot;" line="18" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "resize_nesw"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</__RESIZE_NESW>
	<__RESIZE_NS get="inline" set="null" expr="cast &quot;resize_ns&quot;" line="19" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "resize_ns"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</__RESIZE_NS>
	<__RESIZE_NWSE get="inline" set="null" expr="cast &quot;resize_nwse&quot;" line="20" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "resize_nwse"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</__RESIZE_NWSE>
	<__RESIZE_WE get="inline" set="null" expr="cast &quot;resize_we&quot;" line="21" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "resize_we"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</__RESIZE_WE>
	<__WAIT get="inline" set="null" expr="cast &quot;wait&quot;" line="22" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "wait"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</__WAIT>
	<__WAIT_ARROW get="inline" set="null" expr="cast &quot;waitarrow&quot;" line="23" static="1">
		<x path="openfl.ui.MouseCursor"/>
		<meta>
			<m n=":value"><e>cast "waitarrow"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</__WAIT_ARROW>
	<fromLimeCursor set="method" line="25" static="1">
		<f a="cursor">
			<t path="lime.ui._MouseCursor.LimeMouseCursor"/>
			<x path="openfl.ui.MouseCursor"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromLimeCursor>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.ui._MouseCursor.MouseCursor_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/MouseCursor.hx" private="1" module="openfl.ui.MouseCursor">
		<ARROW public="1" get="inline" set="null" expr="cast &quot;arrow&quot;" line="9" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "arrow"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ARROW>
		<AUTO public="1" get="inline" set="null" expr="cast &quot;auto&quot;" line="10" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "auto"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUTO>
		<BUTTON public="1" get="inline" set="null" expr="cast &quot;button&quot;" line="11" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "button"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUTTON>
		<HAND public="1" get="inline" set="null" expr="cast &quot;hand&quot;" line="12" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "hand"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HAND>
		<IBEAM public="1" get="inline" set="null" expr="cast &quot;ibeam&quot;" line="13" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "ibeam"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IBEAM>
		<__CROSSHAIR get="inline" set="null" expr="cast &quot;crosshair&quot;" line="15" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "crosshair"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</__CROSSHAIR>
		<__CUSTOM get="inline" set="null" expr="cast &quot;custom&quot;" line="16" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "custom"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</__CUSTOM>
		<__MOVE get="inline" set="null" expr="cast &quot;move&quot;" line="17" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "move"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</__MOVE>
		<__RESIZE_NESW get="inline" set="null" expr="cast &quot;resize_nesw&quot;" line="18" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "resize_nesw"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</__RESIZE_NESW>
		<__RESIZE_NS get="inline" set="null" expr="cast &quot;resize_ns&quot;" line="19" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "resize_ns"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</__RESIZE_NS>
		<__RESIZE_NWSE get="inline" set="null" expr="cast &quot;resize_nwse&quot;" line="20" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "resize_nwse"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</__RESIZE_NWSE>
		<__RESIZE_WE get="inline" set="null" expr="cast &quot;resize_we&quot;" line="21" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "resize_we"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</__RESIZE_WE>
		<__WAIT get="inline" set="null" expr="cast &quot;wait&quot;" line="22" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "wait"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</__WAIT>
		<__WAIT_ARROW get="inline" set="null" expr="cast &quot;waitarrow&quot;" line="23" static="1">
			<x path="openfl.ui.MouseCursor"/>
			<meta>
				<m n=":value"><e>cast "waitarrow"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</__WAIT_ARROW>
		<fromLimeCursor set="method" line="25" static="1">
			<f a="cursor">
				<t path="lime.ui._MouseCursor.LimeMouseCursor"/>
				<x path="openfl.ui.MouseCursor"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromLimeCursor>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.ui.Multitouch" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/Multitouch.hx" extern="1">
		<inputMode public="1" get="null" set="null" static="1">
			<x path="openfl.ui.MultitouchInputMode"/>
			<haxe_doc>* Identifies the multi-touch mode for touch and gesture event handling. Use
	 * this property to manage whether or not events are dispatched as touch
	 * events with multiple points of contact and specific events for different
	 * gestures(such as rotation and pan), or only a single point of contact
	 * (such as tap), or none at all(contact is handled as a mouse event). To
	 * set this property, use values from the flash.ui.MultitouchInputMode class.
	 * 
	 * @default gesture</haxe_doc>
		</inputMode>
		<mapTouchToMouse public="1" static="1">
			<x path="Bool"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</mapTouchToMouse>
		<maxTouchPoints public="1" set="null" static="1">
			<x path="Int"/>
			<haxe_doc>* The maximum number of concurrent touch points supported by the current
	 * environment.</haxe_doc>
		</maxTouchPoints>
		<supportedGestures public="1" set="null" static="1">
			<x path="openfl.Vector"><c path="String"/></x>
			<haxe_doc>* A Vector array(a typed array of string values) of multi-touch contact
	 * types supported in the current environment. The array of strings can be
	 * used as event types to register event listeners. Possible values are
	 * constants from the GestureEvent, PressAndTapGestureEvent, and
	 * TransformGestureEvent classes(such as `GESTURE_PAN`).
	 *
	 * If the Flash runtime is in an environment that does not support any
	 * multi-touch gestures, the value is `null`.
	 *
	 * **Note:** For Mac OS 10.5.3 and later,
	 * `Multitouch.supportedGestures` returns non-null values
	 * (possibly indicating incorrectly that gesture events are supported) even
	 * if the current hardware does not support gesture input.
	 *
	 * Use this property to test for multi-touch gesture support. Then, use
	 * event handlers for the available multi-touch gestures. For those gestures
	 * that are not supported in the current evironment, you'll need to create
	 * alternative event handling.</haxe_doc>
		</supportedGestures>
		<supportsGestureEvents public="1" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the current environment supports gesture input, such as
	 * rotating two fingers around a touch screen. Gesture events are listed in
	 * the TransformGestureEvent, PressAndTapGestureEvent, and GestureEvent
	 * classes.
	 *
	 * **Note:** For Mac OS 10.5.3 and later, this value is always
	 * `true`. `Multitouch.supportsGestureEvent` returns
	 * `true` even if the hardware does not support gesture
	 * events.</haxe_doc>
		</supportsGestureEvents>
		<supportsTouchEvents public="1" get="null" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* Indicates whether the current environment supports basic touch input, such
	 * as a single finger tap. Touch events are listed in the TouchEvent class.</haxe_doc>
		</supportsTouchEvents>
		<haxe_doc>* The Multitouch class manages and provides information about the current
 * environment's support for handling contact from user input devices,
 * including contact that has two or more touch points(such as a user's
 * fingers on a touch screen). When a user interacts with a device such as a
 * mobile phone or tablet with a touch screen, the user typically touches the
 * screen with his or her fingers or a pointing device. While there is a broad
 * range of pointing devices, such as a mouse or a stylus, many of these
 * devices only have a single point of contact with an application. For
 * pointing devices with a single point of contact, user interaction events
 * can be handled as a mouse event, or using a basic set of touch events
 * (called "touch point" events). However, for pointing devices that have
 * several points of contact and perform complex movement, such as the human
 * hand, Flash runtimes support an additional set of event handling API called
 * gesture events. The API for handling user interaction with these gesture
 * events includes the following classes:
 *
 * 
 * 
 *  * flash.events.TouchEvent
 *  * flash.events.GestureEvent
 *  * flash.events.GesturePhase
 *  * flash.events.TransformGestureEvent
 *  * flash.events.PressAndTapGestureEvent
 * 
 * 
 *
 * Use the listed classes to write code that handles touch events. Use the
 * Multitouch class to determine the current environment's support for touch
 * interaction, and to manage the support of touch interaction if the current
 * environment supports touch input.
 *
 * You cannot create a Multitouch object directly from ActionScript code.
 * If you call `new Multitouch()`, an exception is thrown.
 *
 * **Note:** The Multitouch feature is not supported for SWF files
 * embedded in HTML running on Mac OS.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<abstract path="openfl.ui.MultitouchInputMode" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/MultitouchInputMode.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<haxe_doc>* The MultitouchInputMode class provides values for the
 * `inputMode` property in the flash.ui.Multitouch class. These
 * values set the type of touch events the Flash runtime dispatches when the
 * user interacts with a touch-enabled device.</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.ui._MultitouchInputMode.MultitouchInputMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/MultitouchInputMode.hx" private="1" module="openfl.ui.MultitouchInputMode">
	<GESTURE public="1" get="inline" set="null" expr="cast 0" line="18" static="1">
		<x path="openfl.ui.MultitouchInputMode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that TransformGestureEvent, PressAndTapGestureEvent, and
	 * GestureEvent events are dispatched for the related user interaction
	 * supported by the current environment, and other touch events(such as a
	 * simple tap) are interpreted as mouse events.</haxe_doc>
	</GESTURE>
	<NONE public="1" get="inline" set="null" expr="cast 1" line="20" static="1">
		<x path="openfl.ui.MultitouchInputMode"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<TOUCH_POINT public="1" get="inline" set="null" expr="cast 2" line="26" static="1">
		<x path="openfl.ui.MultitouchInputMode"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Specifies that all user contact with a touch-enabled device is interpreted
	 * as a type of mouse event.</haxe_doc>
	</TOUCH_POINT>
	<fromString set="method" line="28" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.ui.MultitouchInputMode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="41" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.ui._MultitouchInputMode.MultitouchInputMode_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/ui/MultitouchInputMode.hx" private="1" module="openfl.ui.MultitouchInputMode">
		<GESTURE public="1" get="inline" set="null" expr="cast 0" line="18" static="1">
			<x path="openfl.ui.MultitouchInputMode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that TransformGestureEvent, PressAndTapGestureEvent, and
	 * GestureEvent events are dispatched for the related user interaction
	 * supported by the current environment, and other touch events(such as a
	 * simple tap) are interpreted as mouse events.</haxe_doc>
		</GESTURE>
		<NONE public="1" get="inline" set="null" expr="cast 1" line="20" static="1">
			<x path="openfl.ui.MultitouchInputMode"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<TOUCH_POINT public="1" get="inline" set="null" expr="cast 2" line="26" static="1">
			<x path="openfl.ui.MultitouchInputMode"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Specifies that all user contact with a touch-enabled device is interpreted
	 * as a type of mouse event.</haxe_doc>
		</TOUCH_POINT>
		<fromString set="method" line="28" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.ui.MultitouchInputMode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="41" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.utils.AGALMiniAssembler" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/utils/AGALMiniAssembler.hx" extern="1">
		<agalcode public="1" set="null"><x path="openfl.utils.ByteArray"/></agalcode>
		<error public="1" set="null"><c path="String"/></error>
		<verbose public="1"><x path="Bool"/></verbose>
		<assemble2 public="1" set="method"><f a="context3D:version:vertexSource:fragmentSource">
	<c path="openfl.display3D.Context3D"/>
	<x path="Int"/>
	<c path="String"/>
	<c path="String"/>
	<c path="openfl.display3D.Program3D"/>
</f></assemble2>
		<assemble public="1" set="method">
			<f a="mode:source:?version:?ignoreLimits" v="::1:false">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="openfl.utils.ByteArray"/>
			</f>
			<meta><m n=":value"><e>{ ignoreLimits : false, version : 1 }</e></m></meta>
		</assemble>
		<new public="1" set="method">
			<f a="?debugging" v="false">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ debugging : false }</e></m></meta>
		</new>
	</class>
	<class path="openfl.utils.AssetLibrary" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/utils/AssetLibrary.hx" extern="1">
		<extends path="lime.utils.AssetLibrary"/>
		<fromBytes public="1" set="method" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="openfl.utils.ByteArray"/>
				<c path="String"/>
				<c path="openfl.utils.AssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromBytes>
		<fromFile public="1" set="method" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="openfl.utils.AssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromFile>
		<fromManifest public="1" set="method" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="openfl.utils.AssetLibrary"/>
</f></fromManifest>
		<loadFromBytes public="1" set="method" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="openfl.utils.ByteArray"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="openfl.utils.AssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromBytes>
		<loadFromFile public="1" set="method" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="openfl.utils.AssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromFile>
		<loadFromManifest public="1" set="method" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="lime.app.Future"><c path="openfl.utils.AssetLibrary"/></c>
</f></loadFromManifest>
		<getMovieClip public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="openfl.display.MovieClip"/>
</f></getMovieClip>
		<loadMovieClip public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="openfl.display.MovieClip"/></c>
</f></loadMovieClip>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<abstract path="openfl.utils.AssetType" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/utils/AssetType.hx">
		<this><c path="String"/></this>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="openfl.utils._AssetType.AssetType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/utils/AssetType.hx" private="1" module="openfl.utils.AssetType" extern="1">
	<BINARY public="1" get="inline" set="null" expr="cast &quot;BINARY&quot;" line="6" static="1">
		<x path="openfl.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "BINARY"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BINARY>
	<FONT public="1" get="inline" set="null" expr="cast &quot;FONT&quot;" line="7" static="1">
		<x path="openfl.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "FONT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONT>
	<IMAGE public="1" get="inline" set="null" expr="cast &quot;IMAGE&quot;" line="8" static="1">
		<x path="openfl.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "IMAGE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IMAGE>
	<MOVIE_CLIP public="1" get="inline" set="null" expr="cast &quot;MOVIE_CLIP&quot;" line="9" static="1">
		<x path="openfl.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "MOVIE_CLIP"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOVIE_CLIP>
	<MUSIC public="1" get="inline" set="null" expr="cast &quot;MUSIC&quot;" line="10" static="1">
		<x path="openfl.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "MUSIC"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUSIC>
	<SOUND public="1" get="inline" set="null" expr="cast &quot;SOUND&quot;" line="11" static="1">
		<x path="openfl.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "SOUND"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOUND>
	<TEMPLATE public="1" get="inline" set="null" expr="cast &quot;TEMPLATE&quot;" line="12" static="1">
		<x path="openfl.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "TEMPLATE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEMPLATE>
	<TEXT public="1" get="inline" set="null" expr="cast &quot;TEXT&quot;" line="13" static="1">
		<x path="openfl.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "TEXT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.utils._AssetType.AssetType_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/utils/AssetType.hx" private="1" module="openfl.utils.AssetType" extern="1">
		<BINARY public="1" get="inline" set="null" expr="cast &quot;BINARY&quot;" line="6" static="1">
			<x path="openfl.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "BINARY"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BINARY>
		<FONT public="1" get="inline" set="null" expr="cast &quot;FONT&quot;" line="7" static="1">
			<x path="openfl.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "FONT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONT>
		<IMAGE public="1" get="inline" set="null" expr="cast &quot;IMAGE&quot;" line="8" static="1">
			<x path="openfl.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "IMAGE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IMAGE>
		<MOVIE_CLIP public="1" get="inline" set="null" expr="cast &quot;MOVIE_CLIP&quot;" line="9" static="1">
			<x path="openfl.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "MOVIE_CLIP"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOVIE_CLIP>
		<MUSIC public="1" get="inline" set="null" expr="cast &quot;MUSIC&quot;" line="10" static="1">
			<x path="openfl.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "MUSIC"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUSIC>
		<SOUND public="1" get="inline" set="null" expr="cast &quot;SOUND&quot;" line="11" static="1">
			<x path="openfl.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "SOUND"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOUND>
		<TEMPLATE public="1" get="inline" set="null" expr="cast &quot;TEMPLATE&quot;" line="12" static="1">
			<x path="openfl.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "TEMPLATE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEMPLATE>
		<TEXT public="1" get="inline" set="null" expr="cast &quot;TEXT&quot;" line="13" static="1">
			<x path="openfl.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "TEXT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.utils.Assets" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/utils/Assets.hx" extern="1">
		<cache public="1" static="1"><c path="openfl.utils.IAssetCache"/></cache>
		<addEventListener public="1" set="method" static="1">
			<f a="type:listener:?useCapture:?priority:?useWeakReference" v="::false:0:false">
				<c path="String"/>
				<d/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ useWeakReference : false, priority : 0, useCapture : false }</e></m></meta>
		</addEventListener>
		<dispatchEvent public="1" set="method" static="1"><f a="event">
	<c path="openfl.events.Event"/>
	<x path="Bool"/>
</f></dispatchEvent>
		<exists public="1" set="method" static="1">
			<f a="id:?type" v=":null">
				<c path="String"/>
				<x path="openfl.utils.AssetType"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
			<haxe_doc>* Returns whether a specific asset exists
	 * @param	id 		The ID or asset path for the asset
	 * @param	type	The asset type to match, or null to match any type
	 * @return		Whether the requested asset ID and type exists</haxe_doc>
		</exists>
		<getBitmapData public="1" set="method" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="openfl.display.BitmapData"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded bitmap
	 * @usage		var bitmap = new Bitmap (Assets.getBitmapData ("image.png"));
	 * @param	id		The ID or asset path for the bitmap
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @return		A new BitmapData object</haxe_doc>
		</getBitmapData>
		<getBytes public="1" set="method" static="1">
			<f a="id">
				<c path="String"/>
				<x path="openfl.utils.ByteArray"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded binary asset
	 * @usage		var bytes = Assets.getBytes ("file.zip");
	 * @param	id		The ID or asset path for the asset
	 * @return		A new ByteArray object</haxe_doc>
		</getBytes>
		<getFont public="1" set="method" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="openfl.text.Font"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded font
	 * @usage		var fontName = Assets.getFont ("font.ttf").fontName;
	 * @param	id		The ID or asset path for the font
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @return		A new Font object</haxe_doc>
		</getFont>
		<getLibrary public="1" set="method" static="1"><f a="name">
	<c path="String"/>
	<t path="lime.utils._AssetLibrary.LimeAssetLibrary"/>
</f></getLibrary>
		<getMovieClip public="1" set="method" static="1">
			<f a="id">
				<c path="String"/>
				<c path="openfl.display.MovieClip"/>
			</f>
			<haxe_doc>* Gets an instance of an included MovieClip
	 * @usage		var movieClip = Assets.getMovieClip ("library:BouncingBall");
	 * @param	id		The ID for the MovieClip
	 * @return		A new MovieClip object</haxe_doc>
		</getMovieClip>
		<getPath public="1" set="method" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets the file path (if available) for an asset
	 * @usage		var path = Assets.getPath ("file.txt");
	 * @param	id		The ID or asset path for the asset
	 * @return		The path to the asset, or null if it does not exist</haxe_doc>
		</getPath>
		<getSound public="1" set="method" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="openfl.media.Sound"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded sound
	 * @usage		var sound = Assets.getSound ("sound.wav");
	 * @param	id		The ID or asset path for the sound
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @return		A new Sound object</haxe_doc>
		</getSound>
		<getText public="1" set="method" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded text asset
	 * @usage		var text = Assets.getText ("text.txt");
	 * @param	id		The ID or asset path for the asset
	 * @return		A new String object</haxe_doc>
		</getText>
		<hasEventListener public="1" set="method" static="1"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasEventListener>
		<hasLibrary public="1" set="method" static="1"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasLibrary>
		<isLocal public="1" set="method" static="1">
			<f a="id:?type:?useCache" v=":null:true">
				<c path="String"/>
				<x path="openfl.utils.AssetType"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true, type : null }</e></m></meta>
			<haxe_doc>* Returns whether an asset is "local", and therefore can be loaded synchronously
	 * @param	id 		The ID or asset path for the asset
	 * @param	type	The asset type to match, or null to match any type
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @return	Whether the asset is local</haxe_doc>
		</isLocal>
		<list public="1" set="method" static="1">
			<f a="?type" v="null">
				<x path="openfl.utils.AssetType"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
			<haxe_doc>* Returns a list of all embedded assets (by type)
	 * @param	type	The asset type to match, or null to match any type
	 * @return	An array of asset ID values</haxe_doc>
		</list>
		<loadBitmapData public="1" set="method" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="openfl.display.BitmapData"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc><![CDATA[* Loads an included bitmap asset asynchronously
	 * @usage	Assets.loadBitmapData ("image.png").onComplete (handleImage);
	 * @param	id 		The ID or asset path for the asset
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @param	handler		(Deprecated) A callback function when the load is completed
	 * @return		Returns a Future<BitmapData>]]></haxe_doc>
		</loadBitmapData>
		<loadBytes public="1" set="method" static="1">
			<f a="id">
				<c path="String"/>
				<c path="lime.app.Future"><x path="openfl.utils.ByteArray"/></c>
			</f>
			<haxe_doc><![CDATA[* Loads an included byte asset asynchronously
	 * @usage	Assets.loadBytes ("file.zip").onComplete (handleBytes);
	 * @param	id 		The ID or asset path for the asset
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @param	handler		(Deprecated) A callback function when the load is completed
	 * @return		Returns a Future<ByteArray>]]></haxe_doc>
		</loadBytes>
		<loadFont public="1" set="method" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="openfl.text.Font"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc><![CDATA[* Loads an included font asset asynchronously
	 * @usage	Assets.loadFont ("font.ttf").onComplete (handleFont);
	 * @param	id 		The ID or asset path for the asset
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @param	handler		(Deprecated) A callback function when the load is completed
	 * @return		Returns a Future<Font>]]></haxe_doc>
		</loadFont>
		<loadLibrary public="1" set="method" static="1">
			<f a="name">
				<c path="String"/>
				<c path="lime.app.Future"><t path="lime.utils._AssetLibrary.LimeAssetLibrary"/></c>
			</f>
			<haxe_doc><![CDATA[* Load an included AssetLibrary
	 * @param	name		The name of the AssetLibrary to load
	 * @param	handler		(Deprecated) A callback function when the load is completed
	 * @return		Returns a Future<AssetLibrary>]]></haxe_doc>
		</loadLibrary>
		<loadMusic public="1" set="method" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="openfl.media.Sound"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc><![CDATA[* Loads an included music asset asynchronously
	 * @usage	Assets.loadMusic ("music.ogg").onComplete (handleMusic);
	 * @param	id 		The ID or asset path for the asset
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @param	handler		(Deprecated) A callback function when the load is completed
	 * @return		Returns a Future<Sound>]]></haxe_doc>
		</loadMusic>
		<loadMovieClip public="1" set="method" static="1">
			<f a="id">
				<c path="String"/>
				<c path="lime.app.Future"><c path="openfl.display.MovieClip"/></c>
			</f>
			<haxe_doc><![CDATA[* Loads an included MovieClip asset asynchronously
	 * @usage	Assets.loadMovieClip ("library:BouncingBall").onComplete (handleMovieClip);
	 * @param	id 		The ID for the asset
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @param	handler		(Deprecated) A callback function when the load is completed
	 * @return		Returns a Future<MovieClip>]]></haxe_doc>
		</loadMovieClip>
		<loadSound public="1" set="method" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="openfl.media.Sound"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc><![CDATA[* Loads an included sound asset asynchronously
	 * @usage	Assets.loadSound ("sound.wav").onComplete (handleSound);
	 * @param	id 		The ID or asset path for the asset
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @param	handler		(Deprecated) A callback function when the load is completed
	 * @return		Returns a Future<Sound>]]></haxe_doc>
		</loadSound>
		<loadText public="1" set="method" static="1">
			<f a="id">
				<c path="String"/>
				<c path="lime.app.Future"><c path="String"/></c>
			</f>
			<haxe_doc><![CDATA[* Loads an included text asset asynchronously
	 * @usage	Assets.loadText ("text.txt").onComplete (handleString);
	 * @param	id 		The ID or asset path for the asset
	 * @param	useCache		(Optional) Whether to allow use of the asset cache (Default: true)
	 * @param	handler		(Deprecated) A callback function when the load is completed
	 * @return		Returns a Future<String>]]></haxe_doc>
		</loadText>
		<registerLibrary public="1" set="method" static="1">
			<f a="name:library">
				<c path="String"/>
				<c path="openfl.utils.AssetLibrary"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Registers a new AssetLibrary with the Assets class
	 * @param	name		The name (prefix) to use for the library
	 * @param	library		An AssetLibrary instance to register</haxe_doc>
		</registerLibrary>
		<removeEventListener public="1" set="method" static="1">
			<f a="type:listener:?capture" v="::false">
				<c path="String"/>
				<d/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ capture : false }</e></m></meta>
		</removeEventListener>
		<unloadLibrary public="1" set="method" static="1"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></unloadLibrary>
		<haxe_doc><![CDATA[* The Assets class provides a cross-platform interface to access 
 * embedded images, fonts, sounds and other resource files.
 * 
 * The contents are populated automatically when an application
 * is compiled using the OpenFL command-line tools, based on the
 * contents of the *.xml project file.
 * 
 * For most platforms, the assets are included in the same directory
 * or package as the application, and the paths are handled
 * automatically. For web content, the assets are preloaded before
 * the start of the rest of the application. You can customize the 
 * preloader by extending the `NMEPreloader` class,
 * and specifying a custom preloader using <window preloader="" />
 * in the project file.]]></haxe_doc>
	</class>
	<abstract path="openfl.utils.ByteArray" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/ByteArray.hx">
		<from>
			<icast><c path="openfl.utils.ByteArrayData"/></icast>
			<icast field="fromArrayBuffer"><x path="lime.utils.ArrayBuffer"/></icast>
			<icast field="fromBytes"><c path="haxe.io.Bytes"/></icast>
			<icast field="fromBytesData"><t path="haxe.io.BytesData"/></icast>
			<icast field="fromLimeBytes"><t path="lime.utils._Bytes.LimeBytes"/></icast>
		</from>
		<this><c path="openfl.utils.ByteArrayData"/></this>
		<to>
			<icast><c path="openfl.utils.ByteArrayData"/></icast>
			<icast field="toArrayBuffer"><x path="lime.utils.ArrayBuffer"/></icast>
			<icast field="toBytePointer"><x path="lime.utils.BytePointer"/></icast>
			<icast field="toDataPointer"><x path="lime.utils.DataPointer"/></icast>
			<icast field="toBytes"><c path="haxe.io.Bytes"/></icast>
			<icast field="toLimeBytes"><x path="lime.utils.Bytes"/></icast>
		</to>
		<meta>
			<m n=":access"><e>haxe.io.Bytes</e></m>
			<m n=":access"><e>openfl.utils.ByteArrayData</e></m>
			<m n=":forward">
				<e>bytesAvailable</e>
				<e>endian</e>
				<e>objectEncoding</e>
				<e>position</e>
				<e>clear</e>
				<e>compress</e>
				<e>deflate</e>
				<e>inflate</e>
				<e>readBoolean</e>
				<e>readByte</e>
				<e>readBytes</e>
				<e>readDouble</e>
				<e>readFloat</e>
				<e>readInt</e>
				<e>readMultiByte</e>
				<e>readShort</e>
				<e>readUnsignedByte</e>
				<e>readUnsignedInt</e>
				<e>readUnsignedShort</e>
				<e>readUTF</e>
				<e>readUTFBytes</e>
				<e>toString</e>
				<e>uncompress</e>
				<e>writeBoolean</e>
				<e>writeByte</e>
				<e>writeBytes</e>
				<e>writeDouble</e>
				<e>writeFloat</e>
				<e>writeInt</e>
				<e>writeMultiByte</e>
				<e>writeShort</e>
				<e>writeUnsignedInt</e>
				<e>writeUTF</e>
				<e>writeUTFBytes</e>
			</m>
		</meta>
		<impl><class path="openfl.utils._ByteArray.ByteArray_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/ByteArray.hx" private="1" module="openfl.utils.ByteArray">
	<defaultObjectEncoding public="1" static="1"><x path="UInt"/></defaultObjectEncoding>
	<__bytePointer expr="new BytePointer()" line="28" static="1">
		<x path="lime.utils.BytePointer"/>
		<meta><m n=":value"><e>new BytePointer()</e></m></meta>
	</__bytePointer>
	<length public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" get="inline" set="null" line="33" static="1">
		<f a="?length" v="0">
			<x path="Int"/>
			<x path="openfl.utils.ByteArray"/>
		</f>
		<meta>
			<m n=":value"><e>{ length : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</_new>
	<get get="inline" set="null" line="45" static="1">
		<f a="this:index">
			<c path="openfl.utils.ByteArrayData"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
		</meta>
	</get>
	<set get="inline" set="null" line="58" static="1">
		<f a="this:index:value">
			<c path="openfl.utils.ByteArrayData"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
		</meta>
	</set>
	<fromArrayBuffer public="1" set="method" line="72" static="1">
		<f a="buffer">
			<x path="lime.utils.ArrayBuffer"/>
			<x path="openfl.utils.ByteArray"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromArrayBuffer>
	<fromBytes public="1" set="method" line="89" static="1">
		<f a="bytes">
			<c path="haxe.io.Bytes"/>
			<x path="openfl.utils.ByteArray"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromBytes>
	<fromBytesData public="1" set="method" line="118" static="1">
		<f a="bytesData">
			<t path="haxe.io.BytesData"/>
			<x path="openfl.utils.ByteArray"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesData>
	<fromFile public="1" set="method" line="133" static="1"><f a="path">
	<c path="String"/>
	<x path="openfl.utils.ByteArray"/>
</f></fromFile>
	<loadFromBytes public="1" set="method" line="140" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><x path="openfl.utils.ByteArray"/></c>
</f></loadFromBytes>
	<loadFromFile public="1" set="method" line="152" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><x path="openfl.utils.ByteArray"/></c>
</f></loadFromFile>
	<fromLimeBytes public="1" set="method" line="164" static="1">
		<f a="bytes">
			<t path="lime.utils._Bytes.LimeBytes"/>
			<x path="openfl.utils.ByteArray"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromLimeBytes>
	<toArrayBuffer public="1" set="method" line="171" static="1">
		<f a="byteArray">
			<x path="openfl.utils.ByteArray"/>
			<x path="lime.utils.ArrayBuffer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toArrayBuffer>
	<toBytePointer set="method" line="186" static="1">
		<f a="byteArray">
			<x path="openfl.utils.ByteArray"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toBytePointer>
	<toDataPointer set="method" line="197" static="1">
		<f a="byteArray">
			<x path="openfl.utils.ByteArray"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toDataPointer>
	<toBytes set="method" line="208" static="1">
		<f a="byteArray">
			<x path="openfl.utils.ByteArray"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toBytes>
	<toLimeBytes set="method" line="236" static="1">
		<f a="byteArray">
			<x path="openfl.utils.ByteArray"/>
			<t path="lime.utils._Bytes.LimeBytes"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toLimeBytes>
	<get_length set="method" line="250" static="1">
		<f a="this">
			<c path="openfl.utils.ByteArrayData"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_length>
	<set_length set="method" line="261" static="1">
		<f a="this:value">
			<c path="openfl.utils.ByteArrayData"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_length>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":access"><e>openfl.utils.ByteArrayData</e></m>
		<m n=":access"><e>haxe.io.Bytes</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.utils._ByteArray.ByteArray_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/ByteArray.hx" private="1" module="openfl.utils.ByteArray">
		<defaultObjectEncoding public="1" static="1"><x path="UInt"/></defaultObjectEncoding>
		<__bytePointer expr="new BytePointer()" line="28" static="1">
			<x path="lime.utils.BytePointer"/>
			<meta><m n=":value"><e>new BytePointer()</e></m></meta>
		</__bytePointer>
		<length public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" get="inline" set="null" line="33" static="1">
			<f a="?length" v="0">
				<x path="Int"/>
				<x path="openfl.utils.ByteArray"/>
			</f>
			<meta>
				<m n=":value"><e>{ length : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</_new>
		<get get="inline" set="null" line="45" static="1">
			<f a="this:index">
				<c path="openfl.utils.ByteArrayData"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
			</meta>
		</get>
		<set get="inline" set="null" line="58" static="1">
			<f a="this:index:value">
				<c path="openfl.utils.ByteArrayData"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
			</meta>
		</set>
		<fromArrayBuffer public="1" set="method" line="72" static="1">
			<f a="buffer">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="openfl.utils.ByteArray"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromArrayBuffer>
		<fromBytes public="1" set="method" line="89" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="openfl.utils.ByteArray"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromBytes>
		<fromBytesData public="1" set="method" line="118" static="1">
			<f a="bytesData">
				<t path="haxe.io.BytesData"/>
				<x path="openfl.utils.ByteArray"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesData>
		<fromFile public="1" set="method" line="133" static="1"><f a="path">
	<c path="String"/>
	<x path="openfl.utils.ByteArray"/>
</f></fromFile>
		<loadFromBytes public="1" set="method" line="140" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><x path="openfl.utils.ByteArray"/></c>
</f></loadFromBytes>
		<loadFromFile public="1" set="method" line="152" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><x path="openfl.utils.ByteArray"/></c>
</f></loadFromFile>
		<fromLimeBytes public="1" set="method" line="164" static="1">
			<f a="bytes">
				<t path="lime.utils._Bytes.LimeBytes"/>
				<x path="openfl.utils.ByteArray"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromLimeBytes>
		<toArrayBuffer public="1" set="method" line="171" static="1">
			<f a="byteArray">
				<x path="openfl.utils.ByteArray"/>
				<x path="lime.utils.ArrayBuffer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toArrayBuffer>
		<toBytePointer set="method" line="186" static="1">
			<f a="byteArray">
				<x path="openfl.utils.ByteArray"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toBytePointer>
		<toDataPointer set="method" line="197" static="1">
			<f a="byteArray">
				<x path="openfl.utils.ByteArray"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toDataPointer>
		<toBytes set="method" line="208" static="1">
			<f a="byteArray">
				<x path="openfl.utils.ByteArray"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toBytes>
		<toLimeBytes set="method" line="236" static="1">
			<f a="byteArray">
				<x path="openfl.utils.ByteArray"/>
				<t path="lime.utils._Bytes.LimeBytes"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toLimeBytes>
		<get_length set="method" line="250" static="1">
			<f a="this">
				<c path="openfl.utils.ByteArrayData"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_length>
		<set_length set="method" line="261" static="1">
			<f a="this:value">
				<c path="openfl.utils.ByteArrayData"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_length>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":access"><e>openfl.utils.ByteArrayData</e></m>
			<m n=":access"><e>haxe.io.Bytes</e></m>
		</meta>
	</class>
	<abstract path="openfl.utils.CompressionAlgorithm" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/CompressionAlgorithm.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.utils._CompressionAlgorithm.CompressionAlgorithm_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/CompressionAlgorithm.hx" private="1" module="openfl.utils.CompressionAlgorithm">
	<DEFLATE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="openfl.utils.CompressionAlgorithm"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFLATE>
	<LZMA public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
		<x path="openfl.utils.CompressionAlgorithm"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LZMA>
	<ZLIB public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
		<x path="openfl.utils.CompressionAlgorithm"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ZLIB>
	<fromString set="method" line="11" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.utils.CompressionAlgorithm"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString set="method" line="24" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.utils._CompressionAlgorithm.CompressionAlgorithm_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/CompressionAlgorithm.hx" private="1" module="openfl.utils.CompressionAlgorithm">
		<DEFLATE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="openfl.utils.CompressionAlgorithm"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFLATE>
		<LZMA public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
			<x path="openfl.utils.CompressionAlgorithm"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LZMA>
		<ZLIB public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
			<x path="openfl.utils.CompressionAlgorithm"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ZLIB>
		<fromString set="method" line="11" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.utils.CompressionAlgorithm"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString set="method" line="24" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="openfl.utils.Dictionary" params="K:V" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Dictionary.hx">
		<from>
			<icast field="fromStringMap"><c path="haxe.ds.StringMap"><c path="fromStringMap.V"/></c></icast>
			<icast field="fromIntMap"><c path="haxe.ds.IntMap"><c path="fromIntMap.V"/></c></icast>
			<icast field="fromFloatMap"><c path="openfl.utils._Dictionary.FloatMap">
	<c path="fromFloatMap.K"/>
	<c path="fromFloatMap.V"/>
</c></icast>
			<icast field="fromObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="fromObjectMap.K"/>
	<c path="fromObjectMap.V"/>
</c></icast>
			<icast field="fromUtilsObjectMap"><c path="openfl.utils._Dictionary.UtilsObjectMap">
	<c path="fromUtilsObjectMap.K"/>
	<c path="fromUtilsObjectMap.V"/>
</c></icast>
			<icast field="fromClassMap"><c path="openfl.utils._Dictionary.ClassMap">
	<c path="fromClassMap.K"/>
	<c path="fromClassMap.V"/>
</c></icast>
		</from>
		<this><c path="haxe.IMap">
	<c path="openfl.utils.Dictionary.K"/>
	<c path="openfl.utils.Dictionary.V"/>
</c></this>
		<to>
			<icast field="toStringMap"><c path="haxe.ds.StringMap"><c path="toStringMap.V"/></c></icast>
			<icast field="toIntMap"><c path="haxe.ds.IntMap"><c path="toIntMap.V"/></c></icast>
			<icast field="toFloatMap"><c path="openfl.utils._Dictionary.FloatMap">
	<c path="toFloatMap.K"/>
	<c path="toFloatMap.V"/>
</c></icast>
			<icast field="toEnumValueMapMap"><c path="haxe.ds.EnumValueMap">
	<c path="toEnumValueMapMap.K"/>
	<c path="toEnumValueMapMap.V"/>
</c></icast>
			<icast field="toObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="toObjectMap.K"/>
	<c path="toObjectMap.V"/>
</c></icast>
			<icast field="toUtilsObjectMap"><c path="openfl.utils._Dictionary.UtilsObjectMap">
	<c path="toUtilsObjectMap.K"/>
	<c path="toUtilsObjectMap.V"/>
</c></icast>
			<icast field="toClassMap"><c path="openfl.utils._Dictionary.ClassMap">
	<c path="toClassMap.K"/>
	<c path="toClassMap.V"/>
</c></icast>
		</to>
		<meta><m n=":multiType"><e>K</e></m></meta>
		<impl><class path="openfl.utils._Dictionary.Dictionary_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Dictionary.hx" private="1" module="openfl.utils.Dictionary">
	<_new public="1" set="method" static="1">
		<f a="?weakKeys" v="false">
			<x path="Bool"/>
			<x path="openfl.utils.Dictionary">
				<c path="openfl.utils.Dictionary.K"/>
				<c path="openfl.utils.Dictionary.V"/>
			</x>
		</f>
		<meta>
			<m n=":value"><e>{ weakKeys : false }</e></m>
			<m n=":extern"/>
			<m n=":impl"/>
		</meta>
	</_new>
	<exists public="1" get="inline" set="null" line="21" static="1">
		<f a="this:key">
			<c path="haxe.IMap">
				<c path="openfl.utils.Dictionary.K"/>
				<c path="openfl.utils.Dictionary.V"/>
			</c>
			<c path="openfl.utils.Dictionary.K"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</exists>
	<get public="1" get="inline" set="null" line="28" static="1">
		<f a="this:key">
			<c path="haxe.IMap">
				<c path="openfl.utils.Dictionary.K"/>
				<c path="openfl.utils.Dictionary.V"/>
			</c>
			<c path="openfl.utils.Dictionary.K"/>
			<c path="openfl.utils.Dictionary.V"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<remove public="1" get="inline" set="null" line="35" static="1">
		<f a="this:key">
			<c path="haxe.IMap">
				<c path="openfl.utils.Dictionary.K"/>
				<c path="openfl.utils.Dictionary.V"/>
			</c>
			<c path="openfl.utils.Dictionary.K"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</remove>
	<set public="1" get="inline" set="null" line="42" static="1">
		<f a="this:key:value">
			<c path="haxe.IMap">
				<c path="openfl.utils.Dictionary.K"/>
				<c path="openfl.utils.Dictionary.V"/>
			</c>
			<c path="openfl.utils.Dictionary.K"/>
			<c path="openfl.utils.Dictionary.V"/>
			<c path="openfl.utils.Dictionary.V"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
	<iterator public="1" get="inline" set="null" line="50" static="1">
		<f a="this">
			<c path="haxe.IMap">
				<c path="openfl.utils.Dictionary.K"/>
				<c path="openfl.utils.Dictionary.V"/>
			</c>
			<t path="Iterator"><c path="openfl.utils.Dictionary.K"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</iterator>
	<each public="1" get="inline" set="null" line="57" static="1">
		<f a="this">
			<c path="haxe.IMap">
				<c path="openfl.utils.Dictionary.K"/>
				<c path="openfl.utils.Dictionary.V"/>
			</c>
			<t path="Iterator"><c path="openfl.utils.Dictionary.V"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</each>
	<toStringMap params="K:V" set="method" line="64" static="1">
		<f a="t:weakKeys">
			<c path="haxe.IMap">
				<c path="toStringMap.K"/>
				<c path="toStringMap.V"/>
			</c>
			<x path="Bool"/>
			<c path="haxe.ds.StringMap"><c path="toStringMap.V"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toStringMap>
	<toIntMap params="K:V" set="method" line="71" static="1">
		<f a="t:weakKeys">
			<c path="haxe.IMap">
				<c path="toIntMap.K"/>
				<c path="toIntMap.V"/>
			</c>
			<x path="Bool"/>
			<c path="haxe.ds.IntMap"><c path="toIntMap.V"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toIntMap>
	<toFloatMap params="K:V" set="method" line="78" static="1">
		<f a="t:weakKeys">
			<c path="haxe.IMap">
				<c path="toFloatMap.K"/>
				<c path="toFloatMap.V"/>
			</c>
			<x path="Bool"/>
			<c path="openfl.utils._Dictionary.FloatMap">
				<c path="toFloatMap.K"/>
				<c path="toFloatMap.V"/>
			</c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toFloatMap>
	<toEnumValueMapMap params="K:V" set="method" line="85" static="1">
		<f a="t:weakKeys">
			<c path="haxe.IMap">
				<c path="toEnumValueMapMap.K"/>
				<c path="toEnumValueMapMap.V"/>
			</c>
			<x path="Bool"/>
			<c path="haxe.ds.EnumValueMap">
				<c path="toEnumValueMapMap.K"/>
				<c path="toEnumValueMapMap.V"/>
			</c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toEnumValueMapMap>
	<toObjectMap params="K:V" set="method" line="92" static="1">
		<f a="t:weakKeys">
			<c path="haxe.IMap">
				<c path="toObjectMap.K"/>
				<c path="toObjectMap.V"/>
			</c>
			<x path="Bool"/>
			<c path="haxe.ds.ObjectMap">
				<c path="toObjectMap.K"/>
				<c path="toObjectMap.V"/>
			</c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toObjectMap>
	<toUtilsObjectMap params="K:V" set="method" line="99" static="1">
		<f a="t:weakKeys">
			<c path="haxe.IMap">
				<c path="toUtilsObjectMap.K"/>
				<c path="toUtilsObjectMap.V"/>
			</c>
			<x path="Bool"/>
			<c path="openfl.utils._Dictionary.UtilsObjectMap">
				<c path="toUtilsObjectMap.K"/>
				<c path="toUtilsObjectMap.V"/>
			</c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toUtilsObjectMap>
	<toClassMap params="K:V" set="method" line="106" static="1">
		<f a="t:weakKeys">
			<c path="haxe.IMap">
				<c path="toClassMap.K"/>
				<c path="toClassMap.V"/>
			</c>
			<x path="Bool"/>
			<c path="openfl.utils._Dictionary.ClassMap">
				<c path="toClassMap.K"/>
				<c path="toClassMap.V"/>
			</c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toClassMap>
	<fromStringMap params="V" get="inline" set="null" line="113" static="1">
		<f a="map">
			<c path="haxe.ds.StringMap"><c path="fromStringMap.V"/></c>
			<x path="openfl.utils.Dictionary">
				<c path="String"/>
				<c path="fromStringMap.V"/>
			</x>
		</f>
		<meta><m n=":from"/></meta>
	</fromStringMap>
	<fromIntMap params="V" get="inline" set="null" line="120" static="1">
		<f a="map">
			<c path="haxe.ds.IntMap"><c path="fromIntMap.V"/></c>
			<x path="openfl.utils.Dictionary">
				<x path="Int"/>
				<c path="fromIntMap.V"/>
			</x>
		</f>
		<meta><m n=":from"/></meta>
	</fromIntMap>
	<fromFloatMap params="K:V" get="inline" set="null" line="127" static="1">
		<f a="map">
			<c path="openfl.utils._Dictionary.FloatMap">
				<c path="fromFloatMap.K"/>
				<c path="fromFloatMap.V"/>
			</c>
			<x path="openfl.utils.Dictionary">
				<c path="fromFloatMap.K"/>
				<c path="fromFloatMap.V"/>
			</x>
		</f>
		<meta><m n=":from"/></meta>
	</fromFloatMap>
	<fromObjectMap params="K:V" get="inline" set="null" line="134" static="1">
		<f a="map">
			<c path="haxe.ds.ObjectMap">
				<c path="fromObjectMap.K"/>
				<c path="fromObjectMap.V"/>
			</c>
			<x path="openfl.utils.Dictionary">
				<c path="fromObjectMap.K"/>
				<c path="fromObjectMap.V"/>
			</x>
		</f>
		<meta><m n=":from"/></meta>
	</fromObjectMap>
	<fromUtilsObjectMap params="K:V" get="inline" set="null" line="141" static="1">
		<f a="map">
			<c path="openfl.utils._Dictionary.UtilsObjectMap">
				<c path="fromUtilsObjectMap.K"/>
				<c path="fromUtilsObjectMap.V"/>
			</c>
			<x path="openfl.utils.Dictionary">
				<c path="fromUtilsObjectMap.K"/>
				<c path="fromUtilsObjectMap.V"/>
			</x>
		</f>
		<meta><m n=":from"/></meta>
	</fromUtilsObjectMap>
	<fromClassMap params="K:V" get="inline" set="null" line="148" static="1">
		<f a="map">
			<c path="openfl.utils._Dictionary.ClassMap">
				<c path="fromClassMap.K"/>
				<c path="fromClassMap.V"/>
			</c>
			<x path="openfl.utils.Dictionary">
				<c path="fromClassMap.K"/>
				<c path="fromClassMap.V"/>
			</x>
		</f>
		<meta><m n=":from"/></meta>
	</fromClassMap>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="openfl.utils._Dictionary.Dictionary_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Dictionary.hx" private="1" module="openfl.utils.Dictionary">
		<_new public="1" set="method" static="1">
			<f a="?weakKeys" v="false">
				<x path="Bool"/>
				<x path="openfl.utils.Dictionary">
					<c path="openfl.utils.Dictionary.K"/>
					<c path="openfl.utils.Dictionary.V"/>
				</x>
			</f>
			<meta>
				<m n=":value"><e>{ weakKeys : false }</e></m>
				<m n=":extern"/>
				<m n=":impl"/>
			</meta>
		</_new>
		<exists public="1" get="inline" set="null" line="21" static="1">
			<f a="this:key">
				<c path="haxe.IMap">
					<c path="openfl.utils.Dictionary.K"/>
					<c path="openfl.utils.Dictionary.V"/>
				</c>
				<c path="openfl.utils.Dictionary.K"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</exists>
		<get public="1" get="inline" set="null" line="28" static="1">
			<f a="this:key">
				<c path="haxe.IMap">
					<c path="openfl.utils.Dictionary.K"/>
					<c path="openfl.utils.Dictionary.V"/>
				</c>
				<c path="openfl.utils.Dictionary.K"/>
				<c path="openfl.utils.Dictionary.V"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<remove public="1" get="inline" set="null" line="35" static="1">
			<f a="this:key">
				<c path="haxe.IMap">
					<c path="openfl.utils.Dictionary.K"/>
					<c path="openfl.utils.Dictionary.V"/>
				</c>
				<c path="openfl.utils.Dictionary.K"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</remove>
		<set public="1" get="inline" set="null" line="42" static="1">
			<f a="this:key:value">
				<c path="haxe.IMap">
					<c path="openfl.utils.Dictionary.K"/>
					<c path="openfl.utils.Dictionary.V"/>
				</c>
				<c path="openfl.utils.Dictionary.K"/>
				<c path="openfl.utils.Dictionary.V"/>
				<c path="openfl.utils.Dictionary.V"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
		<iterator public="1" get="inline" set="null" line="50" static="1">
			<f a="this">
				<c path="haxe.IMap">
					<c path="openfl.utils.Dictionary.K"/>
					<c path="openfl.utils.Dictionary.V"/>
				</c>
				<t path="Iterator"><c path="openfl.utils.Dictionary.K"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</iterator>
		<each public="1" get="inline" set="null" line="57" static="1">
			<f a="this">
				<c path="haxe.IMap">
					<c path="openfl.utils.Dictionary.K"/>
					<c path="openfl.utils.Dictionary.V"/>
				</c>
				<t path="Iterator"><c path="openfl.utils.Dictionary.V"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</each>
		<toStringMap params="K:V" set="method" line="64" static="1">
			<f a="t:weakKeys">
				<c path="haxe.IMap">
					<c path="toStringMap.K"/>
					<c path="toStringMap.V"/>
				</c>
				<x path="Bool"/>
				<c path="haxe.ds.StringMap"><c path="toStringMap.V"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toStringMap>
		<toIntMap params="K:V" set="method" line="71" static="1">
			<f a="t:weakKeys">
				<c path="haxe.IMap">
					<c path="toIntMap.K"/>
					<c path="toIntMap.V"/>
				</c>
				<x path="Bool"/>
				<c path="haxe.ds.IntMap"><c path="toIntMap.V"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toIntMap>
		<toFloatMap params="K:V" set="method" line="78" static="1">
			<f a="t:weakKeys">
				<c path="haxe.IMap">
					<c path="toFloatMap.K"/>
					<c path="toFloatMap.V"/>
				</c>
				<x path="Bool"/>
				<c path="openfl.utils._Dictionary.FloatMap">
					<c path="toFloatMap.K"/>
					<c path="toFloatMap.V"/>
				</c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toFloatMap>
		<toEnumValueMapMap params="K:V" set="method" line="85" static="1">
			<f a="t:weakKeys">
				<c path="haxe.IMap">
					<c path="toEnumValueMapMap.K"/>
					<c path="toEnumValueMapMap.V"/>
				</c>
				<x path="Bool"/>
				<c path="haxe.ds.EnumValueMap">
					<c path="toEnumValueMapMap.K"/>
					<c path="toEnumValueMapMap.V"/>
				</c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toEnumValueMapMap>
		<toObjectMap params="K:V" set="method" line="92" static="1">
			<f a="t:weakKeys">
				<c path="haxe.IMap">
					<c path="toObjectMap.K"/>
					<c path="toObjectMap.V"/>
				</c>
				<x path="Bool"/>
				<c path="haxe.ds.ObjectMap">
					<c path="toObjectMap.K"/>
					<c path="toObjectMap.V"/>
				</c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toObjectMap>
		<toUtilsObjectMap params="K:V" set="method" line="99" static="1">
			<f a="t:weakKeys">
				<c path="haxe.IMap">
					<c path="toUtilsObjectMap.K"/>
					<c path="toUtilsObjectMap.V"/>
				</c>
				<x path="Bool"/>
				<c path="openfl.utils._Dictionary.UtilsObjectMap">
					<c path="toUtilsObjectMap.K"/>
					<c path="toUtilsObjectMap.V"/>
				</c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toUtilsObjectMap>
		<toClassMap params="K:V" set="method" line="106" static="1">
			<f a="t:weakKeys">
				<c path="haxe.IMap">
					<c path="toClassMap.K"/>
					<c path="toClassMap.V"/>
				</c>
				<x path="Bool"/>
				<c path="openfl.utils._Dictionary.ClassMap">
					<c path="toClassMap.K"/>
					<c path="toClassMap.V"/>
				</c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toClassMap>
		<fromStringMap params="V" get="inline" set="null" line="113" static="1">
			<f a="map">
				<c path="haxe.ds.StringMap"><c path="fromStringMap.V"/></c>
				<x path="openfl.utils.Dictionary">
					<c path="String"/>
					<c path="fromStringMap.V"/>
				</x>
			</f>
			<meta><m n=":from"/></meta>
		</fromStringMap>
		<fromIntMap params="V" get="inline" set="null" line="120" static="1">
			<f a="map">
				<c path="haxe.ds.IntMap"><c path="fromIntMap.V"/></c>
				<x path="openfl.utils.Dictionary">
					<x path="Int"/>
					<c path="fromIntMap.V"/>
				</x>
			</f>
			<meta><m n=":from"/></meta>
		</fromIntMap>
		<fromFloatMap params="K:V" get="inline" set="null" line="127" static="1">
			<f a="map">
				<c path="openfl.utils._Dictionary.FloatMap">
					<c path="fromFloatMap.K"/>
					<c path="fromFloatMap.V"/>
				</c>
				<x path="openfl.utils.Dictionary">
					<c path="fromFloatMap.K"/>
					<c path="fromFloatMap.V"/>
				</x>
			</f>
			<meta><m n=":from"/></meta>
		</fromFloatMap>
		<fromObjectMap params="K:V" get="inline" set="null" line="134" static="1">
			<f a="map">
				<c path="haxe.ds.ObjectMap">
					<c path="fromObjectMap.K"/>
					<c path="fromObjectMap.V"/>
				</c>
				<x path="openfl.utils.Dictionary">
					<c path="fromObjectMap.K"/>
					<c path="fromObjectMap.V"/>
				</x>
			</f>
			<meta><m n=":from"/></meta>
		</fromObjectMap>
		<fromUtilsObjectMap params="K:V" get="inline" set="null" line="141" static="1">
			<f a="map">
				<c path="openfl.utils._Dictionary.UtilsObjectMap">
					<c path="fromUtilsObjectMap.K"/>
					<c path="fromUtilsObjectMap.V"/>
				</c>
				<x path="openfl.utils.Dictionary">
					<c path="fromUtilsObjectMap.K"/>
					<c path="fromUtilsObjectMap.V"/>
				</x>
			</f>
			<meta><m n=":from"/></meta>
		</fromUtilsObjectMap>
		<fromClassMap params="K:V" get="inline" set="null" line="148" static="1">
			<f a="map">
				<c path="openfl.utils._Dictionary.ClassMap">
					<c path="fromClassMap.K"/>
					<c path="fromClassMap.V"/>
				</c>
				<x path="openfl.utils.Dictionary">
					<c path="fromClassMap.K"/>
					<c path="fromClassMap.V"/>
				</x>
			</f>
			<meta><m n=":from"/></meta>
		</fromClassMap>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.utils._Dictionary.ClassMap" params="K:V" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Dictionary.hx" private="1" module="openfl.utils.Dictionary">
		<implements path="haxe.IMap">
			<c path="openfl.utils._Dictionary.ClassMap.K"/>
			<c path="openfl.utils._Dictionary.ClassMap.V"/>
		</implements>
		<types><x path="Map">
	<c path="String"/>
	<c path="openfl.utils._Dictionary.ClassMap.K"/>
</x></types>
		<values><x path="Map">
	<c path="String"/>
	<c path="openfl.utils._Dictionary.ClassMap.V"/>
</x></values>
		<exists public="1" set="method" line="190"><f a="key">
	<c path="openfl.utils._Dictionary.ClassMap.K"/>
	<x path="Bool"/>
</f></exists>
		<get public="1" set="method" line="197"><f a="key">
	<c path="openfl.utils._Dictionary.ClassMap.K"/>
	<t path="Null"><c path="openfl.utils._Dictionary.ClassMap.V"/></t>
</f></get>
		<keys public="1" set="method" line="204"><f a=""><t path="Iterator"><c path="openfl.utils._Dictionary.ClassMap.K"/></t></f></keys>
		<iterator public="1" set="method" line="211"><f a=""><t path="Iterator"><c path="openfl.utils._Dictionary.ClassMap.V"/></t></f></iterator>
		<remove public="1" set="method" line="218"><f a="key">
	<c path="openfl.utils._Dictionary.ClassMap.K"/>
	<x path="Bool"/>
</f></remove>
		<set public="1" set="method" line="226"><f a="key:value">
	<c path="openfl.utils._Dictionary.ClassMap.K"/>
	<c path="openfl.utils._Dictionary.ClassMap.V"/>
	<x path="Void"/>
</f></set>
		<toString public="1" set="method" line="236"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="171"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="openfl.utils._Dictionary.FloatMap" params="K:V" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Dictionary.hx" private="1" module="openfl.utils.Dictionary">
		<implements path="haxe.IMap">
			<c path="openfl.utils._Dictionary.FloatMap.K"/>
			<c path="openfl.utils._Dictionary.FloatMap.V"/>
		</implements>
		<floatKeys><c path="Array"><c path="openfl.utils._Dictionary.FloatMap.K"/></c></floatKeys>
		<values><c path="Array"><c path="openfl.utils._Dictionary.FloatMap.V"/></c></values>
		<exists public="1" set="method" line="278"><f a="key">
	<c path="openfl.utils._Dictionary.FloatMap.K"/>
	<x path="Bool"/>
</f></exists>
		<get public="1" set="method" line="285"><f a="key">
	<c path="openfl.utils._Dictionary.FloatMap.K"/>
	<t path="Null"><c path="openfl.utils._Dictionary.FloatMap.V"/></t>
</f></get>
		<keys public="1" set="method" line="293"><f a=""><t path="Iterator"><c path="openfl.utils._Dictionary.FloatMap.K"/></t></f></keys>
		<iterator public="1" set="method" line="300"><f a=""><t path="Iterator"><c path="openfl.utils._Dictionary.FloatMap.V"/></t></f></iterator>
		<remove public="1" set="method" line="307"><f a="key">
	<c path="openfl.utils._Dictionary.FloatMap.K"/>
	<x path="Bool"/>
</f></remove>
		<set public="1" set="method" line="324"><f a="key:value">
	<c path="openfl.utils._Dictionary.FloatMap.K"/>
	<c path="openfl.utils._Dictionary.FloatMap.V"/>
	<x path="Void"/>
</f></set>
		<indexOf set="method" line="335">
			<f a="key">
				<c path="openfl.utils._Dictionary.FloatMap.K"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Binary search through floatKeys array, which is sorted, to find an index of a given key. If the array
	* doesn't contain such key -1 is returned.</haxe_doc>
		</indexOf>
		<insertSorted set="method" line="386">
			<f a="key:value">
				<c path="openfl.utils._Dictionary.FloatMap.K"/>
				<c path="openfl.utils._Dictionary.FloatMap.V"/>
				<x path="Void"/>
			</f>
			<haxe_doc>*	Insert the key at a proper index in the array and return the index. The array must will remain sorted. 
	*   The keys are unique so if the key already existis in the array it isn't added but it's index is returned.</haxe_doc>
		</insertSorted>
		<toString public="1" set="method" line="441"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="259"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="openfl.utils._Dictionary.UtilsObjectMap" params="K:V" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Dictionary.hx" private="1" module="openfl.utils.Dictionary">
		<implements path="haxe.IMap">
			<c path="openfl.utils._Dictionary.UtilsObjectMap.K"/>
			<c path="openfl.utils._Dictionary.UtilsObjectMap.V"/>
		</implements>
		<map><c path="haxe.ds.ObjectMap">
	<a/>
	<c path="openfl.utils._Dictionary.UtilsObjectMap.V"/>
</c></map>
		<exists public="1" set="method" line="481"><f a="key">
	<c path="openfl.utils._Dictionary.UtilsObjectMap.K"/>
	<x path="Bool"/>
</f></exists>
		<get public="1" set="method" line="488"><f a="key">
	<c path="openfl.utils._Dictionary.UtilsObjectMap.K"/>
	<t path="Null"><c path="openfl.utils._Dictionary.UtilsObjectMap.V"/></t>
</f></get>
		<keys public="1" set="method" line="495"><f a=""><t path="Iterator"><c path="openfl.utils._Dictionary.UtilsObjectMap.K"/></t></f></keys>
		<iterator public="1" set="method" line="502"><f a=""><t path="Iterator"><c path="openfl.utils._Dictionary.UtilsObjectMap.V"/></t></f></iterator>
		<remove public="1" set="method" line="509"><f a="key">
	<c path="openfl.utils._Dictionary.UtilsObjectMap.K"/>
	<x path="Bool"/>
</f></remove>
		<set public="1" set="method" line="516"><f a="key:value">
	<c path="openfl.utils._Dictionary.UtilsObjectMap.K"/>
	<c path="openfl.utils._Dictionary.UtilsObjectMap.V"/>
	<x path="Void"/>
</f></set>
		<toString public="1" set="method" line="523"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="463"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<abstract path="openfl.utils.Endian" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Endian.hx">
		<from>
			<icast field="fromLimeEndian"><t path="lime.system._Endian.LimeEndian"/></icast>
			<icast field="fromString"><c path="String"/></icast>
		</from>
		<this><t path="Null"><x path="Int"/></t></this>
		<to>
			<icast field="toLimeEndian"><e path="lime.system.Endian"/></icast>
			<icast field="toString"><c path="String"/></icast>
		</to>
		<haxe_doc><![CDATA[* The Endian class contains values that denote the byte order used to
 * represent multibyte numbers. The byte order is either bigEndian(most
 * significant byte first) or littleEndian(least significant byte first).
 *
 * Content in Flash Player or Adobe<sup>®</sup> AIR™ can interface with
 * a server by using the binary protocol of that server, directly. Some
 * servers use the bigEndian byte order and some servers use the littleEndian
 * byte order. Most servers on the Internet use the bigEndian byte order
 * because "network byte order" is bigEndian. The littleEndian byte order is
 * popular because the Intel x86 architecture uses it. Use the endian byte
 * order that matches the protocol of the server that is sending or receiving
 * data.]]></haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.utils._Endian.Endian_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Endian.hx" private="1" module="openfl.utils.Endian">
	<BIG_ENDIAN public="1" get="inline" set="null" expr="cast 0" line="24" static="1">
		<x path="openfl.utils.Endian"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BIG_ENDIAN>
	<LITTLE_ENDIAN public="1" get="inline" set="null" expr="cast 1" line="25" static="1">
		<x path="openfl.utils.Endian"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LITTLE_ENDIAN>
	<fromLimeEndian set="method" line="28" static="1">
		<f a="value">
			<t path="lime.system._Endian.LimeEndian"/>
			<x path="openfl.utils.Endian"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromLimeEndian>
	<fromString set="method" line="41" static="1">
		<f a="value">
			<c path="String"/>
			<x path="openfl.utils.Endian"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toLimeEndian set="method" line="54" static="1">
		<f a="value">
			<x path="Int"/>
			<t path="lime.system._Endian.LimeEndian"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toLimeEndian>
	<toString set="method" line="67" static="1">
		<f a="value">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="openfl.utils._Endian.Endian_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Endian.hx" private="1" module="openfl.utils.Endian">
		<BIG_ENDIAN public="1" get="inline" set="null" expr="cast 0" line="24" static="1">
			<x path="openfl.utils.Endian"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BIG_ENDIAN>
		<LITTLE_ENDIAN public="1" get="inline" set="null" expr="cast 1" line="25" static="1">
			<x path="openfl.utils.Endian"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LITTLE_ENDIAN>
		<fromLimeEndian set="method" line="28" static="1">
			<f a="value">
				<t path="lime.system._Endian.LimeEndian"/>
				<x path="openfl.utils.Endian"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromLimeEndian>
		<fromString set="method" line="41" static="1">
			<f a="value">
				<c path="String"/>
				<x path="openfl.utils.Endian"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toLimeEndian set="method" line="54" static="1">
			<f a="value">
				<x path="Int"/>
				<t path="lime.system._Endian.LimeEndian"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toLimeEndian>
		<toString set="method" line="67" static="1">
			<f a="value">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="openfl.utils.IAssetCache" params="" file="/home/joshua/Development/Haxe/openfl/externs/extras/openfl/utils/IAssetCache.hx" interface="1">
		<get_enabled public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</get_enabled>
		<set_enabled public="1" set="method">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":compilerGenerated"/></meta>
		</set_enabled>
		<enabled public="1" get="accessor" set="accessor"><x path="Bool"/></enabled>
		<clear public="1" set="method">
			<f a="?prefix" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ prefix : null }</e></m></meta>
		</clear>
		<getBitmapData public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="openfl.display.BitmapData"/>
</f></getBitmapData>
		<getFont public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="openfl.text.Font"/>
</f></getFont>
		<getSound public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="openfl.media.Sound"/>
</f></getSound>
		<hasBitmapData public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></hasBitmapData>
		<hasFont public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></hasFont>
		<hasSound public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></hasSound>
		<removeBitmapData public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></removeBitmapData>
		<removeFont public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></removeFont>
		<removeSound public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></removeSound>
		<setBitmapData public="1" set="method"><f a="id:bitmapData">
	<c path="String"/>
	<c path="openfl.display.BitmapData"/>
	<x path="Void"/>
</f></setBitmapData>
		<setFont public="1" set="method"><f a="id:font">
	<c path="String"/>
	<c path="openfl.text.Font"/>
	<x path="Void"/>
</f></setFont>
		<setSound public="1" set="method"><f a="id:sound">
	<c path="String"/>
	<c path="openfl.media.Sound"/>
	<x path="Void"/>
</f></setSound>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<abstract path="openfl.utils.Object" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Object.hx">
		<from><icast><t path="openfl.utils.ObjectType"/></icast></from>
		<this><t path="openfl.utils.ObjectType"/></this>
		<to><icast field="toString"><c path="String"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="openfl.utils._Object.Object_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Object.hx" private="1" module="openfl.utils.Object">
	<_new public="1" get="inline" set="null" line="7" static="1">
		<f a=""><x path="openfl.utils.Object"/></f>
		<meta><m n=":impl"/></meta>
	</_new>
	<hasOwnProperty public="1" get="inline" set="null" line="14" static="1">
		<f a="this:name">
			<t path="openfl.utils.ObjectType"/>
			<c path="String"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</hasOwnProperty>
	<isPrototypeOf public="1" get="inline" set="null" line="21" static="1">
		<f a="this:theClass">
			<t path="openfl.utils.ObjectType"/>
			<x path="Class"><d/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isPrototypeOf>
	<iterator public="1" set="method" line="37" static="1">
		<f a="this">
			<t path="openfl.utils.ObjectType"/>
			<t path="Iterator"><c path="String"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</iterator>
	<propertyIsEnumerable public="1" get="inline" set="null" line="46" static="1">
		<f a="this:name">
			<t path="openfl.utils.ObjectType"/>
			<c path="String"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</propertyIsEnumerable>
	<toLocaleString public="1" get="inline" set="null" line="53" static="1">
		<f a="this">
			<t path="openfl.utils.ObjectType"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toLocaleString>
	<toString public="1" get="inline" set="null" line="60" static="1">
		<f a="this">
			<t path="openfl.utils.ObjectType"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<valueOf public="1" get="inline" set="null" line="67" static="1">
		<f a="this">
			<t path="openfl.utils.ObjectType"/>
			<x path="openfl.utils.Object"/>
		</f>
		<meta><m n=":impl"/></meta>
	</valueOf>
	<__get public="1" get="inline" set="null" line="74" static="1">
		<f a="this:key">
			<t path="openfl.utils.ObjectType"/>
			<c path="String"/>
			<d/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="81" static="1">
		<f a="this:key:value">
			<t path="openfl.utils.ObjectType"/>
			<c path="String"/>
			<d/>
			<d/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</__set>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="openfl.utils._Object.Object_Impl_" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Object.hx" private="1" module="openfl.utils.Object">
		<_new public="1" get="inline" set="null" line="7" static="1">
			<f a=""><x path="openfl.utils.Object"/></f>
			<meta><m n=":impl"/></meta>
		</_new>
		<hasOwnProperty public="1" get="inline" set="null" line="14" static="1">
			<f a="this:name">
				<t path="openfl.utils.ObjectType"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</hasOwnProperty>
		<isPrototypeOf public="1" get="inline" set="null" line="21" static="1">
			<f a="this:theClass">
				<t path="openfl.utils.ObjectType"/>
				<x path="Class"><d/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isPrototypeOf>
		<iterator public="1" set="method" line="37" static="1">
			<f a="this">
				<t path="openfl.utils.ObjectType"/>
				<t path="Iterator"><c path="String"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</iterator>
		<propertyIsEnumerable public="1" get="inline" set="null" line="46" static="1">
			<f a="this:name">
				<t path="openfl.utils.ObjectType"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</propertyIsEnumerable>
		<toLocaleString public="1" get="inline" set="null" line="53" static="1">
			<f a="this">
				<t path="openfl.utils.ObjectType"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toLocaleString>
		<toString public="1" get="inline" set="null" line="60" static="1">
			<f a="this">
				<t path="openfl.utils.ObjectType"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<valueOf public="1" get="inline" set="null" line="67" static="1">
			<f a="this">
				<t path="openfl.utils.ObjectType"/>
				<x path="openfl.utils.Object"/>
			</f>
			<meta><m n=":impl"/></meta>
		</valueOf>
		<__get public="1" get="inline" set="null" line="74" static="1">
			<f a="this:key">
				<t path="openfl.utils.ObjectType"/>
				<c path="String"/>
				<d/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="81" static="1">
			<f a="this:key:value">
				<t path="openfl.utils.ObjectType"/>
				<c path="String"/>
				<d/>
				<d/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__set>
		<meta><m n=":final"/></meta>
	</class>
	<class path="openfl.utils._Object.Iterator_" params="T" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Object.hx" private="1" module="openfl.utils.Object" interface="1">
		<hasNext public="1" set="method"><f a=""><x path="Bool"/></f></hasNext>
		<next public="1" set="method"><f a=""><c path="openfl.utils._Object.Iterator_.T"/></f></next>
		<meta>
			<m n=":keep"/>
			<m n=":native"><e>"haxe.lang.Iterator"</e></m>
		</meta>
	</class>
	<class path="openfl.utils._Object.Iterable_" params="T" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Object.hx" private="1" module="openfl.utils.Object" interface="1">
		<iterator public="1" set="method"><f a=""><c path="openfl.utils._Object.Iterator_"><c path="openfl.utils._Object.Iterable_.T"/></c></f></iterator>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":native"><e>"haxe.lang.Iterable"</e></m>
		</meta>
	</class>
	<typedef path="openfl.utils.ObjectType" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Object.hx" module="openfl.utils.Object"><t path="flash.utils.Object"/></typedef>
	<class path="openfl.utils.Timer" params="" file="/home/joshua/Development/Haxe/openfl/externs/core/openfl/openfl/utils/Timer.hx" extern="1">
		<extends path="openfl.events.EventDispatcher"/>
		<currentCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The total number of times the timer has fired since it started at zero. If
	 * the timer has been reset, only the fires since the reset are counted.</haxe_doc>
		</currentCount>
		<delay public="1" get="null" set="null">
			<x path="Float"/>
			<haxe_doc>* The delay, in milliseconds, between timer events. If you set the delay
	 * interval while the timer is running, the timer will restart at the same
	 * `repeatCount` iteration.
	 *
	 * **Note:** A `delay` lower than 20 milliseconds is not
	 * recommended. Timer frequency is limited to 60 frames per second, meaning a
	 * delay lower than 16.6 milliseconds causes runtime problems.
	 * 
	 * @throws Error Throws an exception if the delay specified is negative or
	 *               not a finite number.</haxe_doc>
		</delay>
		<repeatCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The total number of times the timer is set to run. If the repeat count is
	 * set to 0, the timer continues forever or until the `stop()`
	 * method is invoked or the program stops. If the repeat count is nonzero,
	 * the timer runs the specified number of times. If `repeatCount`
	 * is set to a total that is the same or less then `currentCount`
	 * the timer stops and will not fire again.</haxe_doc>
		</repeatCount>
		<running public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>* The timer's current state; `true` if the timer is running,
	 * otherwise `false`.</haxe_doc>
		</running>
		<reset public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Stops the timer, if it is running, and sets the `currentCount`
	 * property back to 0, like the reset button of a stopwatch. Then, when
	 * `start()` is called, the timer instance runs for the specified
	 * number of repetitions, as set by the `repeatCount` value.
	 *</haxe_doc>
		</reset>
		<start public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Starts the timer, if it is not already running.
	 *</haxe_doc>
		</start>
		<stop public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Stops the timer. When `start()` is called after
	 * `stop()`, the timer instance runs for the _remaining_
	 * number of repetitions, as set by the `repeatCount` property.
	 *</haxe_doc>
		</stop>
		<new public="1" set="method">
			<f a="delay:?repeatCount" v=":0">
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ repeatCount : 0 }</e></m></meta>
			<haxe_doc>* Constructs a new Timer object with the specified `delay` and
	 * `repeatCount` states.
	 *
	 * The timer does not start automatically; you must call the
	 * `start()` method to start it.
	 * 
	 * @param delay       The delay between timer events, in milliseconds. A
	 *                    `delay` lower than 20 milliseconds is not
	 *                    recommended. Timer frequency is limited to 60 frames
	 *                    per second, meaning a delay lower than 16.6
	 *                    milliseconds causes runtime problems.
	 * @param repeatCount Specifies the number of repetitions. If zero, the timer
	 *                    repeats infinitely. If nonzero, the timer runs the
	 *                    specified number of times and then stops.
	 * @throws Error if the delay specified is negative or not a finite number</haxe_doc>
		</new>
		<haxe_doc>* The Timer class is the interface to timers, which let you run code on a
 * specified time sequence. Use the `start()` method to start a
 * timer. Add an event listener for the `timer` event to set up
 * code to be run on the timer interval.
 *
 * You can create Timer objects to run once or repeat at specified
 * intervals to execute code on a schedule. Depending on the SWF file's
 * framerate or the runtime environment(available memory and other factors),
 * the runtime may dispatch events at slightly offset intervals. For example,
 * if a SWF file is set to play at 10 frames per second(fps), which is 100
 * millisecond intervals, but your timer is set to fire an event at 80
 * milliseconds, the event will be dispatched close to the 100 millisecond
 * interval. Memory-intensive scripts may also offset the events.
 * 
 * @event timer         Dispatched whenever a Timer object reaches an interval
 *                      specified according to the `Timer.delay`
 *                      property.
 * @event timerComplete Dispatched whenever it has completed the number of
 *                      requests set by `Timer.repeatCount`.</haxe_doc>
	</class>
</haxe>